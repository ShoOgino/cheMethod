  @Test
  public void testGetNotValidProject() throws Exception {
    // MountPoint mountPoint = pm.getProjectsRoot(workspace).getVirtualFile().getMountPoint();
    vfsProvider.getVirtualFileSystem().getRoot().createFolder("not_project");
    // to refresh
    projectRegistry.initProjects();
    ContainerResponse response =
        launcher.service(
            GET,
            "http://localhost:8080/api/project/not_project",
            "http://localhost:8080/api",
            null,
            null,
            null);
    assertEquals(response.getStatus(), 200, "Error: " + response.getEntity());
    ProjectConfigDto badProject = (ProjectConfigDto) response.getEntity();
    assertNotNull(badProject);
    assertEquals(badProject.getName(), "not_project");
    assertNotNull(badProject.getProblems());
    assertTrue(badProject.getProblems().size() > 0);
    assertEquals(11, badProject.getProblems().get(0).getCode());
    validateProjectLinks(badProject);
  }

