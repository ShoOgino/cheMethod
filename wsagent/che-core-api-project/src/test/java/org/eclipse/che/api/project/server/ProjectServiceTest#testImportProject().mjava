  @Test
  public void testImportProject() throws Exception {
    ByteArrayOutputStream bout = new ByteArrayOutputStream();
    ZipOutputStream zipOut = new ZipOutputStream(bout);
    zipOut.putNextEntry(new ZipEntry("folder1/"));
    zipOut.putNextEntry(new ZipEntry("folder1/file1.txt"));
    zipOut.write("to be or not to be".getBytes(Charset.defaultCharset()));
    zipOut.close();
    final InputStream zip = new ByteArrayInputStream(bout.toByteArray());
    final String importType = "_123_";
    registerImporter(importType, zip);

    final String myType = "chuck_project_type";

    final ProjectConfigDto newProjectConfig =
        DtoFactory.getInstance()
            .createDto(ProjectConfigDto.class)
            .withPath("/new_project")
            .withName("new_project")
            .withDescription("import test")
            .withType(myType);
    projects.add(newProjectConfig);

    Map<String, List<String>> headers = new HashMap<>();
    headers.put("Content-Type", singletonList(APPLICATION_JSON));

    String json =
        "{\n" + "            \"location\": null,\n" + "            \"type\": \"%s\"\n" + "}";

    byte[] b = format(json, importType).getBytes(Charset.defaultCharset());
    ContainerResponse response =
        launcher.service(
            POST,
            "http://localhost:8080/api/project/import/new_project",
            "http://localhost:8080/api",
            headers,
            b,
            null);
    assertEquals(response.getStatus(), 204);

    RegisteredProject newProject = pm.getProject("new_project");
    assertNotNull(newProject);

    // assertNotNull(newProject.getConfig());
  }

