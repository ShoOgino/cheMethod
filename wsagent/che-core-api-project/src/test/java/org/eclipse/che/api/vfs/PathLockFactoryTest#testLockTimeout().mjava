  public void testLockTimeout() throws Exception {
    final CountDownLatch starter = new CountDownLatch(1);
    Runnable task =
        new Runnable() {
          @Override
          public void run() {
            PathLockFactory.PathLock exclusiveLock = pathLockFactory.getLock(path, true);
            try {
              exclusiveLock.acquire();
              starter.countDown();
              Thread.sleep(2000); // get lock and sleep
            } catch (InterruptedException ignored) {
            } finally {
              exclusiveLock.release();
            }
          }
        };
    new Thread(task).start();
    starter.await(); // wait while child thread acquire exclusive lock
    PathLockFactory.PathLock timeoutExclusiveLock = pathLockFactory.getLock(path, true);
    try {
      // Wait lock timeout is much less then sleep time of child thread.
      // Here we must be failed to get exclusive permit.
      timeoutExclusiveLock.acquire(100);
      fail();
    } catch (RuntimeException e) {
      // OK
    }
  }

