  @Before
  public void setUp() throws Exception {

    super.setUp();

    new File(root, "/fromFolder").mkdir();
    new File(root, "/normal").mkdir();
    new File(root, "/normal/module").mkdir();

    List<ProjectConfig> projects = new ArrayList<>();
    projects.add(
        DtoFactory.newDto(ProjectConfigDto.class)
            .withPath("/normal")
            .withName("project1Name")
            .withType("primary1"));

    projects.add(
        DtoFactory.newDto(ProjectConfigDto.class)
            .withPath("/fromConfig")
            .withName("")
            .withType("primary1"));

    projects.add(
        DtoFactory.newDto(ProjectConfigDto.class)
            .withPath("/normal/module")
            .withName("project1Name")
            .withType("primary1"));

    workspaceHolder = new TestWorkspaceHolder(projects);
    ProjectTypeRegistry projectTypeRegistry = new ProjectTypeRegistry(new HashSet<>());
    projectTypeRegistry.registerProjectType(new PT1());
    projectTypeRegistry.registerProjectType(new PT3());

    ProjectHandlerRegistry projectHandlerRegistry = new ProjectHandlerRegistry(new HashSet<>());

    projectRegistry =
        new ProjectRegistry(
            workspaceHolder,
            vfsProvider,
            projectTypeRegistry,
            projectHandlerRegistry,
            eventService);
    projectRegistry.initProjects();

    pm =
        new ProjectManager(
            vfsProvider,
            projectTypeRegistry,
            mock(WorkspaceSyncCommunication.class),
            projectRegistry,
            projectHandlerRegistry,
            null,
            fileWatcherNotificationHandler,
            workspaceHolder,
            fileWatcherManager);
    pm.initWatcher();
  }

