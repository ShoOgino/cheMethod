    @Test
    public void shouldReturnListWithCorrectEventBecauseHeadFileIsProperlyModified() throws Exception {
        VirtualFileSystem vfs = mock(VirtualFileSystem.class);
        VirtualFile file = mock(VirtualFile.class);

        when(virtualFileSystemProvider.getVirtualFileSystem()).thenReturn(vfs);
        when(vfs.getRoot()).thenReturn(file);
        when(file.getChild(any())).thenReturn(file);
        when(file.getContentAsString()).thenReturn(HEAD_FILE_CONTENT);

        addEvent(HEAD_FILE_NAME, File.separator + PROJECT_NAME + File.separator + HEAD_FILE_PATH, MODIFIED, FILE);

        Optional<HiEvent<GitBranchCheckoutEventDto>> optional = gitCheckoutHiVfsEventDetector.detect(root);
        assertTrue(optional.isPresent());

        HiEvent<GitBranchCheckoutEventDto> hiEvent = optional.get();
        assertEquals(GIT_OPERATIONS_CHANNEL, hiEvent.getChannel());
        assertEquals(TEST_VALUE, hiEvent.getDto().getBranchName());
    }

