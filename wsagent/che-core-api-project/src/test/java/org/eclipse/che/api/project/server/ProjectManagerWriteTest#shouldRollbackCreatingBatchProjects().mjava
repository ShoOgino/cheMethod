    @Test
    public void shouldRollbackCreatingBatchProjects() throws Exception {
        // we should rollback operation of creating batch projects when we have not source code for at least one project
        // For example: two projects were success created, but we could not get source code for third configuration
        // At this use case we should rollback the operation and clean up all created projects

        final String projectPath1 = "/testProject1";
        final String projectPath2 = "/testProject2";
        final String projectPath3 = "/testProject3";
        final String importType1 = "importType1";
        final String importType2 = "importType2";

        final String [] paths1 = {"folder1/", "folder1/file1.txt"};
        final List<String> children1 = new ArrayList<>(Arrays.asList(paths1));
        registerImporter(importType1, prepareZipArchiveBasedOn(children1));

        final String [] paths2 = {"folder2/", "folder2/file2.txt"};
        final List<String> children2 = new ArrayList<>(Arrays.asList(paths2));
        registerImporter(importType2, prepareZipArchiveBasedOn(children2));

        final SourceStorageDto source1 = DtoFactory.newDto(SourceStorageDto.class).withLocation("someLocation").withType(importType1);
        final NewProjectConfigDto config1 = createProjectConfigObject("testProject1", projectPath1, BaseProjectType.ID, source1);

        final SourceStorageDto source2 = DtoFactory.newDto(SourceStorageDto.class).withLocation("someLocation").withType(importType2);
        final NewProjectConfigDto config2 = createProjectConfigObject("testProject2", projectPath2, BaseProjectType.ID, source2);

        final SourceStorageDto source = DtoFactory.newDto(SourceStorageDto.class).withLocation("someLocation").withType("importType");
        final NewProjectConfigDto config3 = createProjectConfigObject("testProject3", projectPath3, BaseProjectType.ID, source);

        final List<NewProjectConfig> configs = new ArrayList<>(2);
        configs.add(config1); //will be success created
        configs.add(config2); //will be success created
        configs.add(config3); //we be failed - we have not registered importer - source code will not be imported

        try {
            pm.createBatchProjects(configs, false);
            fail("We should rollback operation of creating batch projects when we could not get source code for at least one project");
        } catch (Exception e) {
            assertEquals(0, projectRegistry.getProjects().size());

            assertNull(projectRegistry.getProject(projectPath1));
            assertNull(pm.getProjectsRoot().getChild(projectPath1));

            assertNull(projectRegistry.getProject(projectPath2));
            assertNull(pm.getProjectsRoot().getChild(projectPath2));

            assertNull(projectRegistry.getProject(projectPath3));
            assertNull(pm.getProjectsRoot().getChild(projectPath3));
        }
    }

