    @Test
    public void testCreateBatchProjectsByImportingSourceCode() throws Exception {
        final String projectPath1 = "/testProject1";
        final String projectPath2 = "/testProject2";
        final String importType1 = "importType1";
        final String importType2 = "importType2";

        final String [] paths1 = {"folder1/", "folder1/file1.txt"};
        final List<String> children1 = new ArrayList<>(Arrays.asList(paths1));
        registerImporter(importType1, prepareZipArchiveBasedOn(children1));

        final String [] paths2 = {"folder2/", "folder2/file2.txt"};
        final List<String> children2 = new ArrayList<>(Arrays.asList(paths2));
        registerImporter(importType2, prepareZipArchiveBasedOn(children2));

        final SourceStorageDto source1 = DtoFactory.newDto(SourceStorageDto.class).withLocation("someLocation").withType(importType1);
        final NewProjectConfigDto config1 = createProjectConfigObject("testProject1", projectPath1, BaseProjectType.ID, source1);

        final SourceStorageDto source2 = DtoFactory.newDto(SourceStorageDto.class).withLocation("someLocation").withType(importType2);
        final NewProjectConfigDto config2 = createProjectConfigObject("testProject2", projectPath2, BaseProjectType.ID, source2);

        final List<NewProjectConfig> configs = new ArrayList<>(2);
        configs.add(config1);
        configs.add(config2);

        pm.createBatchProjects(configs, false);

        final RegisteredProject project1 = projectRegistry.getProject(projectPath1);
        final FolderEntry projectFolder1 = project1.getBaseFolder();
        checkProjectExist(projectPath1);
        checkChildrenFor(projectFolder1, children1);

        final RegisteredProject project2 = projectRegistry.getProject(projectPath2);
        final FolderEntry projectFolder2 = project2.getBaseFolder();
        checkProjectExist(projectPath2);
        checkChildrenFor(projectFolder2, children2);
    }

