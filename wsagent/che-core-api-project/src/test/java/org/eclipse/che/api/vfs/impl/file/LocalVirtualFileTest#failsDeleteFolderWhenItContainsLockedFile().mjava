  @Test
  public void failsDeleteFolderWhenItContainsLockedFile() throws Exception {
    VirtualFile folder = getRoot().createFolder(generateFolderName());
    folder.setProperty("property1", "value1");
    Path folderPath = folder.getPath();
    VirtualFile file = folder.createFile(generateFileName(), DEFAULT_CONTENT);
    file.setProperty("property2", "value2");
    Path filePath = file.getPath();
    file.lock(0);

    try {
      folder.delete();
      thrown.expect(ForbiddenException.class);
    } catch (ForbiddenException e) {
      assertionHelper.assertThatIoFileExists(folderPath);
      assertionHelper.assertThatMetadataIoFileHasContent(
          folder.getPath(), serializeVirtualFileMetadata(ImmutableMap.of("property1", "value1")));
      assertionHelper.assertThatIoFileHasContent(filePath, DEFAULT_CONTENT_BYTES);
      assertionHelper.assertThatMetadataIoFileHasContent(
          file.getPath(), serializeVirtualFileMetadata(ImmutableMap.of("property2", "value2")));
    }
  }

