  @Test
  public void testMoveFolderWithRename() throws Exception {
    RegisteredProject myProject = pm.getProject("my_project");
    myProject.getBaseFolder().createFolder("a/b/c");
    ((FolderEntry) myProject.getBaseFolder().getChild("a/b"))
        .createFile("test.txt", "to be or not no be".getBytes(Charset.defaultCharset()));

    // new name for folder
    final String renamedFolder = "renamedFolder";

    Map<String, List<String>> headers = new HashMap<>();
    headers.put(CONTENT_TYPE, singletonList(APPLICATION_JSON));

    MoveOptions descriptor = DtoFactory.getInstance().createDto(MoveOptions.class);
    descriptor.setName(renamedFolder);
    descriptor.setOverWrite(false);

    ContainerResponse response =
        launcher.service(
            POST,
            "http://localhost:8080/api/project/copy/my_project/a/b?to=/my_project/a/b/c",
            "http://localhost:8080/api",
            headers,
            DtoFactory.getInstance().toJson(descriptor).getBytes(Charset.defaultCharset()),
            null);
    assertEquals(response.getStatus(), 201, "Error: " + response.getEntity());
    assertEquals(
        response.getHttpHeaders().getFirst("Location"),
        URI.create(
            format(
                "http://localhost:8080/api/project/children/my_project/a/b/c/%s", renamedFolder)));
    assertNotNull(myProject.getBaseFolder().getChild(format("a/b/c/%s/test.txt", renamedFolder)));
  }

