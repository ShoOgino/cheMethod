  @Test
  public void watchesTreeDeletion() throws Exception {
    List<String> allFilesAndDirs = fileWatcherTestTree.createTree("", 7, 5);
    Thread.sleep(100);

    FileWatcherNotificationHandler notificationListener = aNotificationListener();
    fileTreeWatcher = new FileTreeWatcher(testDirectory, newHashSet(), notificationListener);
    fileTreeWatcher.startup();
    Thread.sleep(5000);

    assertTrue(fileWatcherTestTree.delete(""));

    Thread.sleep(5000);

    verify(notificationListener, never()).errorOccurred(eq(testDirectory), any(Throwable.class));
    verify(notificationListener, never())
        .handleFileWatcherEvent(eq(CREATED), eq(testDirectory), anyString(), anyBoolean());
    verify(notificationListener, never())
        .handleFileWatcherEvent(eq(MODIFIED), eq(testDirectory), anyString(), anyBoolean());

    ArgumentCaptor<String> deletedEvents = ArgumentCaptor.forClass(String.class);
    verify(notificationListener, times(allFilesAndDirs.size()))
        .handleFileWatcherEvent(
            eq(DELETED), eq(testDirectory), deletedEvents.capture(), anyBoolean());
    assertThatCollectionsContainsSameItemsOrFailWithDiff(
        deletedEvents.getAllValues(), allFilesAndDirs);
  }

