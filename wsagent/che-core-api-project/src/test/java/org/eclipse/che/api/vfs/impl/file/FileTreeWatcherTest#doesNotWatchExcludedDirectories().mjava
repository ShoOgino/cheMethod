  @Test
  public void doesNotWatchExcludedDirectories() throws Exception {
    fileWatcherTestTree.createDirectory("", "excluded");

    FileWatcherNotificationHandler notificationHandler = aNotificationHandler();
    PathMatcher excludeMatcher = FileSystems.getDefault().getPathMatcher("glob:excluded");
    fileWatcher =
        new FileTreeWatcher(testDirectory, newHashSet(excludeMatcher), notificationHandler);
    fileWatcher.startup();

    Thread.sleep(500);

    String directory = fileWatcherTestTree.createDirectory("");
    String file = fileWatcherTestTree.createFile("");
    fileWatcherTestTree.createDirectory("excluded");
    fileWatcherTestTree.createFile("excluded");

    Set<String> created = newHashSet(directory, file);

    Thread.sleep(5000);

    verify(notificationHandler, never()).errorOccurred(eq(testDirectory), any(Throwable.class));
    verify(notificationHandler, never())
        .handleFileWatcherEvent(eq(DELETED), eq(testDirectory), anyString(), anyBoolean());
    verify(notificationHandler, never())
        .handleFileWatcherEvent(eq(MODIFIED), eq(testDirectory), anyString(), anyBoolean());

    ArgumentCaptor<String> createdEvents = ArgumentCaptor.forClass(String.class);
    verify(notificationHandler, times(2))
        .handleFileWatcherEvent(
            eq(CREATED), eq(testDirectory), createdEvents.capture(), anyBoolean());
    assertEquals(newHashSet(created), newHashSet(createdEvents.getAllValues()));
  }

