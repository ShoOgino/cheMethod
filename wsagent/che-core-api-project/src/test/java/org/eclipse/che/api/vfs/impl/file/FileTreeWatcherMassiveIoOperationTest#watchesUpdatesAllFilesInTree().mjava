  @Test
  public void watchesUpdatesAllFilesInTree() throws Exception {
    fileWatcherTestTree.createTree("", 7, 5);
    Thread.sleep(100);

    FileWatcherNotificationHandler notificationListener = aNotificationListener();
    fileTreeWatcher = new FileTreeWatcher(testDirectory, newHashSet(), notificationListener);
    fileTreeWatcher.startup();
    Thread.sleep(5000);

    List<String> updated = fileWatcherTestTree.findAllFilesInTree("");

    for (String file : updated) {
      fileWatcherTestTree.updateFile(file);
    }

    Thread.sleep(5000);

    verify(notificationListener, never()).errorOccurred(eq(testDirectory), any(Throwable.class));
    verify(notificationListener, never())
        .handleFileWatcherEvent(eq(CREATED), eq(testDirectory), anyString(), anyBoolean());
    verify(notificationListener, never())
        .handleFileWatcherEvent(eq(DELETED), eq(testDirectory), anyString(), anyBoolean());

    ArgumentCaptor<String> updatedEvents = ArgumentCaptor.forClass(String.class);
    verify(notificationListener, times(updated.size()))
        .handleFileWatcherEvent(
            eq(MODIFIED), eq(testDirectory), updatedEvents.capture(), anyBoolean());
    assertThatCollectionsContainsSameItemsOrFailWithDiff(updatedEvents.getAllValues(), updated);
  }

