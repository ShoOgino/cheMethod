  /**
   * Adds links for working with a project. Operations which are supported:
   *
   * <p>get tree
   *
   * <p>get children
   *
   * <p>update project
   *
   * <p>delete
   *
   * @param projectConfig information about project
   * @param serviceContext context of {@link ProjectService}
   * @return node with injected project's links
   */
  public ProjectConfigDto injectProjectLinks(
      ProjectConfigDto projectConfig, ServiceContext serviceContext) {
    final UriBuilder uriBuilder = getUriBuilder(serviceContext);
    final List<Link> links = new ArrayList<>();
    final String relPath = projectConfig.getPath().substring(1);

    links.add(
        createLink(
            PUT,
            tuneUrl(
                uriBuilder
                    .clone()
                    .path(ProjectService.class)
                    .path(ProjectService.class, "updateProject")
                    .build(new String[] {relPath}, false)),
            APPLICATION_JSON,
            APPLICATION_JSON,
            LINK_REL_UPDATE_PROJECT));
    links.add(
        createLink(
            GET,
            tuneUrl(
                uriBuilder
                    .clone()
                    .path(ProjectService.class)
                    .path(ProjectService.class, "getChildren")
                    .build(new String[] {relPath}, false)),
            APPLICATION_JSON,
            LINK_REL_CHILDREN));
    links.add(
        createLink(
            GET,
            tuneUrl(
                uriBuilder
                    .clone()
                    .path(ProjectService.class)
                    .path(ProjectService.class, "getTree")
                    .build(new String[] {relPath}, false)),
            APPLICATION_JSON,
            LINK_REL_TREE));
    links.add(
        createLink(
            DELETE,
            tuneUrl(
                uriBuilder
                    .clone()
                    .path(ProjectService.class)
                    .path(ProjectService.class, "delete")
                    .build(new String[] {relPath}, false)),
            LINK_REL_DELETE));

    return projectConfig.withLinks(links);
  }

