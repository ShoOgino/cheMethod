  private boolean addExcludes(List<String> pathsToExclude) {
    Map<Path, Set<Path>> groupedExcludes = groupExcludes(pathsToExclude);
    if (pathsToExclude.isEmpty()) {
      return false;
    }

    groupedExcludes
        .keySet()
        .forEach(
            projectPath -> {
              excludes.putIfAbsent(projectPath, new HashSet<>());

              Set<Path> projectExcludes = excludes.get(projectPath);
              Set<Path> excludesForAdding = groupedExcludes.get(projectPath);

              excludesForAdding.removeIf(projectExcludes::contains);
              projectExcludes.addAll(excludesForAdding);

              writeExcludesToIgnoreFile(projectPath, excludesForAdding);
            });

    notifyAboutIgnoreFileChanges();
    return true;
  }

