    /**
     * Cancels registration of operations identified by parameter. Identifier
     * is unique and generated during registration phase. If there left no
     * operation sets registered for a path it is also removed.
     *
     * @param id
     *         identifier
     *
     * @return path that corresponds to operations set identified by parameter
     */
    Path unRegister(int id) {
        Path dir = null;
        for (Entry<Path, Set<FileWatcherOperation>> entry : operations.entrySet()) {
            Path path = entry.getKey();
            Set<FileWatcherOperation> operationsSet = entry.getValue();
            Predicate<FileWatcherOperation> predicate = it -> Objects.equals(id, it.getId());

            if (operationsSet.removeIf(predicate)) {
                dir = isDirectory(path) ? path : path.getParent();
            }

            if (operationsSet.isEmpty()) {
                operations.remove(path);
            }
        }

        return dir;
    }

