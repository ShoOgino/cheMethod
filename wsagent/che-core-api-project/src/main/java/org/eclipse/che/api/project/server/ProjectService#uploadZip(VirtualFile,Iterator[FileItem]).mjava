  private static Response uploadZip(VirtualFile parent, Iterator<FileItem> formData)
      throws ForbiddenException, ConflictException, ServerException {
    try {
      FileItem contentItem = null;
      boolean overwrite = false;
      boolean skipFirstLevel = false;
      while (formData.hasNext()) {
        FileItem item = formData.next();
        if (!item.isFormField()) {
          if (contentItem == null) {
            contentItem = item;
          } else {
            throw new ServerException(
                "More then one upload file is found but only one should be. ");
          }
        } else if ("overwrite".equals(item.getFieldName())) {
          overwrite = Boolean.parseBoolean(item.getString().trim());
        } else if ("skipFirstLevel".equals(item.getFieldName())) {
          skipFirstLevel = Boolean.parseBoolean(item.getString().trim());
        }
      }
      if (contentItem == null) {
        throw new ServerException("Cannot find file for upload. ");
      }
      try {
        importZip(parent, contentItem.getInputStream(), overwrite, skipFirstLevel);
      } catch (IOException ioe) {
        throw new ServerException(ioe.getMessage(), ioe);
      }
      return Response.ok("", MediaType.TEXT_HTML).build();
    } catch (ForbiddenException | ConflictException | ServerException e) {
      HtmlErrorFormatter.sendErrorAsHTML(e);
      // never thrown
      throw e;
    }
  }

