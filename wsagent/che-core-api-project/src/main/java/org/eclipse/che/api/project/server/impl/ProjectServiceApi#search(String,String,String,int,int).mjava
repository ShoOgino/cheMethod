  public ProjectSearchResponseDto search(
      String wsPath, String name, String text, int maxItems, int skipCount)
      throws NotFoundException, ForbiddenException, ConflictException, ServerException {
    if (skipCount < 0) {
      throw new ConflictException(String.format("Invalid 'skipCount' parameter: %d.", skipCount));
    }
    wsPath = absolutize(wsPath);

    QueryExpression expr =
        new QueryExpression()
            .setPath(wsPath)
            .setName(name)
            .setText(text)
            .setMaxItems(maxItems)
            .setSkipCount(skipCount)
            .setIncludePositions(true);

    SearchResult result = searcher.search(expr);
    List<SearchResultEntry> searchResultEntries = result.getResults();
    return DtoFactory.newDto(ProjectSearchResponseDto.class)
        .withTotalHits(result.getTotalHits())
        .withItemReferences(prepareResults(searchResultEntries));
  }

