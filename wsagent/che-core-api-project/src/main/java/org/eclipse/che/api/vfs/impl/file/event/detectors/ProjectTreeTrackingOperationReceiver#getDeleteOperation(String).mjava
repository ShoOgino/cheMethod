    private Consumer<String> getDeleteOperation(String endpointId) {
        return it -> {
            timer.add(it);
            new Timer().schedule(new TimerTask() {
                @Override
                public void run() {
                    if (timer.contains(it)) {
                        timer.remove(it);
                        ProjectTreeStateUpdateDto params = newDto(ProjectTreeStateUpdateDto.class).withPath(it).withType(DELETED);
                        transmitter.transmitNotification(endpointId, OUTGOING_METHOD, params);
                    }

                }
            }, 1_000L);
        };
    }

