  public Set<RegisteredProject> doImport(
      Set<? extends NewProjectConfig> newProjectConfigs,
      boolean rewrite,
      BiConsumer<String, String> consumer)
      throws ServerException, ForbiddenException, UnauthorizedException, ConflictException,
          NotFoundException, BadRequestException {
    for (NewProjectConfig projectConfig : newProjectConfigs) {
      String wsPath = projectConfig.getPath();
      if (isNullOrEmpty(wsPath)) {
        throw new BadRequestException("Path for new project should be defined");
      }

      if (projectConfigRegistry.getOrNull(wsPath) != null && !rewrite) {
        throw new ConflictException("Project already registered: " + wsPath);
      }
    }

    Set<RegisteredProject> importedProjects = new HashSet<>();

    for (NewProjectConfig projectConfig : newProjectConfigs) {
      try {
        RegisteredProject project = doImport(projectConfig, rewrite, consumer);
        importedProjects.add(project);
      } catch (ServerException
          | ForbiddenException
          | UnauthorizedException
          | ConflictException
          | NotFoundException e) {
        for (RegisteredProject importedProject : importedProjects) {
          String path = importedProject.getPath();
          fsManager.delete(path);
          projectConfigRegistry.remove(path);
        }

        throw e;
      }
    }
    return importedProjects;
  }

