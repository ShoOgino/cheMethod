    @POST
    @Path("/import/{path:.*}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "Import resource",
                  notes = "Import resource. JSON with a designated importer and project location is sent. It is possible to import from " +
                          "VCS or ZIP")
    @ApiResponses({@ApiResponse(code = 204, message = ""),
                   @ApiResponse(code = 401, message = "User not authorized to call this operation"),
                   @ApiResponse(code = 403, message = "Forbidden operation"),
                   @ApiResponse(code = 409, message = "Resource already exists"),
                   @ApiResponse(code = 500, message = "Unsupported source type")})
    public void importProject(@ApiParam(value = "Path in the project", required = true)
                              @PathParam("path") String path,
                              @ApiParam(value = "Force rewrite existing project", allowableValues = "true,false")
                              @QueryParam("force") boolean force,
                              SourceStorageDto sourceStorage) throws ConflictException,
                                                                     ForbiddenException,
                                                                     UnauthorizedException,
                                                                     IOException,
                                                                     ServerException,
                                                                     NotFoundException,
                                                                     BadRequestException {

        final int delayBetweenMessages = 300;

        final ProjectImportOutputWSLineConsumer wsLineConsumer =
                new ProjectImportOutputWSLineConsumer(path, delayBetweenMessages);

        final ProjectImportOutputJsonRpcLineConsumer rpcLineConsumer =
                new ProjectImportOutputJsonRpcLineConsumer(path, transmitter, projectImportHandlerRegistrar, delayBetweenMessages);

        projectManager.importProject(path, sourceStorage, force, () -> new CompositeLineConsumer(wsLineConsumer, rpcLineConsumer));
    }

