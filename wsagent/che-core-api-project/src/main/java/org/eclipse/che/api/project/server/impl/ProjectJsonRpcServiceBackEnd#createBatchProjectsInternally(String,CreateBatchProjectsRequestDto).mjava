  private List<ProjectConfigDto> createBatchProjectsInternally(
      String endpointId, CreateBatchProjectsRequestDto createProjectsRequest)
      throws ForbiddenException, BadRequestException, ConflictException, NotFoundException,
          ServerException, UnauthorizedException {

    List<NewProjectConfigDto> newProjectConfigs = createProjectsRequest.getNewProjectConfigs();
    projectManager.doImport(
        new HashSet<>(newProjectConfigs),
        createProjectsRequest.isRewrite(),
        getImportConsumer(endpointId));

    Set<RegisteredProject> registeredProjects = new HashSet<>(newProjectConfigs.size());

    for (NewProjectConfigDto projectConfig : newProjectConfigs) {
      registeredProjects.add(projectManager.update(projectConfig));
    }

    registeredProjects
        .stream()
        .map(RegisteredProject::getPath)
        .map(ProjectCreatedEvent::new)
        .forEach(eventService::publish);

    return registeredProjects.stream().map(ProjectDtoConverter::asDto).collect(toList());
  }

