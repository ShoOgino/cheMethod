  private synchronized void release(Path path, int permits) {
    Node node = tail;
    while (node != null) {
      Node prev = node.prev;
      if (prev == null) {
        break;
      }
      if (prev.path.equals(path)) {
        if (prev.threadDeep == 1) {
          // If last recursive lock.
          prev.permits += permits;
          if (prev.permits >= maxThreads) {
            // remove
            node.prev = prev.prev;
            prev.prev = null;
          }
        } else {
          --prev.threadDeep;
        }
      }
      node = node.prev;
    }
    notifyAll();
    //System.err.printf(">>>>> release: %s : %d%n", path, permits);
  }

