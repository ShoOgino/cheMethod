    /**
     * Registers a directory for tracking of corresponding entry creation,
     * modification or deletion events. Each call of this method increase
     * by one registration counter that corresponds to each folder being
     * watched. Any event related to such directory entry is passed further to
     * the specific handler only if registration counter related to the
     * directory is above zero, otherwise registration watch key is canceled
     * and no further directory watching is being performed.
     *
     * @param dir
     *         directory
     */
    public void register(Path dir) {
        LOG.debug("Registering directory '{}'", dir);
        if (keys.values().contains(dir)) {
            int previous = registrations.get(dir);
            LOG.debug("Directory is already being watched, increasing watch counter, previous value: {}", previous);
            registrations.put(dir, previous + 1);
        } else {
            try {
                LOG.debug("Starting watching directory '{}'", dir);
                WatchKey watchKey = dir.register(service, eventKinds, eventModifiers);
                keys.put(watchKey, dir);
                registrations.put(dir, 1);
            } catch (IOException e) {
                LOG.error("Can't register dir {} in file watch service", dir, e);
            }
        }
    }

