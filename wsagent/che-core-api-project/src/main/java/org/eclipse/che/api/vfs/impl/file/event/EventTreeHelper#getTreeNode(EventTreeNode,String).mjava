    /**
     * Get a tree node according to a relative path starting from a predefined tree node.
     *
     * @param root node where relative path starts
     * @param relativePath relative path
     *
     * @return node if node with such path exists otherwise {@code null}
     */
    public static Optional<EventTreeNode> getTreeNode(EventTreeNode root, String relativePath) {
        Optional<EventTreeNode> current = Optional.of(root);

        if (relativePath.startsWith(separator)) {
            relativePath = relativePath.substring(1);
        }

        if (relativePath.endsWith(separator)) {
            relativePath = relativePath.substring(0, relativePath.length() - 1);
        }

        for (String segment : relativePath.split(separator)) {
            if (current.isPresent()) {
                current = current.get().getChild(segment);
            }
        }

        return current;
    }

