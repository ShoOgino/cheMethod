    /**
     * Either root folder or config can be null, in this case Project is configured with problem.
     *
     * @param folder
     *         root local folder or null
     * @param config
     *         project configuration in workspace
     * @param updated
     *         if this object was updated, i.e. no more synchronized with workspace master
     * @param detected
     *         if this project was detected, initialized when "parent" project initialized
     * @param projectTypeRegistry
     *         project type registry
     * @throws ServerException
     *         when path for project is undefined
     */
    RegisteredProject(FolderEntry folder,
                      ProjectConfig config,
                      boolean updated,
                      boolean detected,
                      ProjectTypeRegistry projectTypeRegistry) throws ServerException {
        problems = new ArrayList<>();
        attributes = new HashMap<>();

        Path path;
        if (folder != null) {
            path = folder.getPath();
        } else if (config != null) {
            path = Path.of(config.getPath());
        } else {
            throw new ServerException("Invalid Project Configuration. Path undefined.");
        }

        this.folder = folder;
        this.config = config == null ? new NewProjectConfigImpl(path) : config;
        this.updated = updated;
        this.detected = detected;

        if (folder == null || folder.isFile()) {
            problems.add(new Problem(10, "No project folder on file system " + this.config.getPath()));
        }

        if (config == null) {
            problems.add(new Problem(11, "No project configured in workspace " + this.config.getPath()));
        }


        // 1. init project types
        this.types = new ProjectTypes(this.config.getPath(), this.config.getType(), this.config.getMixins(), projectTypeRegistry, problems);

        // 2. init transient (implicit, like git) project types.
        types.addTransient(folder);

        // 3. initialize attributes
        initAttributes();
    }

