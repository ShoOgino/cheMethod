  private List<TreeElement> getTree(FolderEntry folder, int depth, boolean includeFiles)
      throws ServerException, NotFoundException {
    if (depth == 0) {
      return null;
    }

    final List<? extends VirtualFileEntry> children;

    if (includeFiles) {
      children = folder.getChildFoldersFiles();
    } else {
      children = folder.getChildFolders();
    }

    final List<TreeElement> nodes = new ArrayList<>(children.size());
    for (VirtualFileEntry child : children) {
      if (child.isFolder()) {
        nodes.add(
            newDto(TreeElement.class)
                .withNode(injectFolderLinks(asDto((FolderEntry) child)))
                .withChildren(getTree((FolderEntry) child, depth - 1, includeFiles)));
      } else {
        nodes.add(newDto(TreeElement.class).withNode(injectFileLinks(asDto((FileEntry) child))));
      }
    }

    return vcsStatusInjector.injectVcsStatusTreeElements(nodes);
  }

