    private void transmit() {
        if (state == State.SUSPENDED) {
            return;
        }

        final Optional<String> commonSubstring = trees.stream()
                                                      .flatMap(EventTreeNode::stream)
                                                      .filter(EventTreeNode::modificationOccurred)
                                                      .map(EventTreeNode::getPath)
                                                      .reduce(ProjectTreeChangesDetector::findLongestPrefix);
        if (commonSubstring.isPresent()) {
            final String s = commonSubstring.get();
            final String path = s.substring(0, s.lastIndexOf('/'));
            transmit(path, FileWatcherEventType.MODIFIED);
        }

        trees.clear();
    }

