    @GET
    @Path("/estimate/{path:.*}")
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "Estimates if the folder supposed to be project of certain type",
                  response = Map.class)
    @ApiResponses({@ApiResponse(code = 200, message = "OK"),
                   @ApiResponse(code = 404, message = "Project with specified path doesn't exist in workspace"),
                   @ApiResponse(code = 403, message = "Access to requested project is forbidden"),
                   @ApiResponse(code = 500, message = "Server error")})
    public SourceEstimation estimateProject(@ApiParam(value = "Path to requested project", required = true)
                                            @PathParam("path") String path,
                                            @ApiParam(value = "Project Type ID to estimate against", required = true)
                                            @QueryParam("type") String projectType) throws NotFoundException,
                                                                                           ForbiddenException,
                                                                                           ServerException,
                                                                                           ConflictException {
        final ProjectTypeResolution resolution = projectManager.estimateProject(path, projectType);

        final HashMap<String, List<String>> attributes = new HashMap<>();
        for (Map.Entry<String, Value> attr : resolution.getProvidedAttributes().entrySet()) {
            attributes.put(attr.getKey(), attr.getValue().getList());
        }

        return DtoFactory.newDto(SourceEstimation.class)
                         .withType(projectType)
                         .withMatched(resolution.matched())
                         .withResolution(resolution.getResolution())
                         .withAttributes(attributes);
    }

