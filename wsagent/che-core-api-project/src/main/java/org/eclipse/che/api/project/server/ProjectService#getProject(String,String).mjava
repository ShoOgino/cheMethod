    @GET
    @Path("/{path:.*}")
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "Gets project by ID of workspace and project's path",
            response = ProjectConfigDto.class)
    @ApiResponses({@ApiResponse(code = 200, message = "OK"),
                   @ApiResponse(code = 404, message = "Project with specified path doesn't exist in workspace"),
                   @ApiResponse(code = 403, message = "Access to requested project is forbidden"),
                   @ApiResponse(code = 500, message = "Server error")})
    public ProjectConfigDto getProject(@ApiParam(value = "ID of workspace to get projects", required = true)
                                       @PathParam("ws-id") String workspace,
                                       @ApiParam(value = "Path to requested project", required = true)
                                       @PathParam("path") String path) throws NotFoundException,
                                                                              ForbiddenException,
                                                                              ServerException,
                                                                              ConflictException {
        return toProjectConfig(projectManager.getProject(path), workspace, getServiceContext().getServiceUriBuilder());
    }

