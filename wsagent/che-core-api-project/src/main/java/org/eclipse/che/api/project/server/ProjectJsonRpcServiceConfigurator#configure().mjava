  @PostConstruct
  private void configure() {
    handlers
        .newConfiguration()
        .methodName(PROJECT_GET)
        .paramsAsDto(GetRequestDto.class)
        .resultAsDto(GetResponseDto.class)
        .withFunction(service::get);

    handlers
        .newConfiguration()
        .methodName(PROJECT_CREATE)
        .paramsAsDto(CreateRequestDto.class)
        .resultAsDto(CreateResponseDto.class)
        .withFunction(service::create);

    handlers
        .newConfiguration()
        .methodName(PROJECT_UPDATE)
        .paramsAsDto(UpdateRequestDto.class)
        .resultAsDto(UpdateResponseDto.class)
        .withFunction(service::update);

    handlers
        .newConfiguration()
        .methodName(PROJECT_DELETE)
        .paramsAsDto(DeleteRequestDto.class)
        .resultAsDto(DeleteResponseDto.class)
        .withFunction(service::delete);

    handlers
        .newConfiguration()
        .methodName(PROJECT_RECOGNIZE)
        .paramsAsDto(RecognizeRequestDto.class)
        .resultAsDto(RecognizeResponseDto.class)
        .withFunction(service::recognize);

    handlers
        .newConfiguration()
        .methodName(PROJECT_VERIFY)
        .paramsAsDto(VerifyRequestDto.class)
        .resultAsDto(VerifyResponseDto.class)
        .withFunction(service::verify);

    handlers
        .newConfiguration()
        .methodName(PROJECT_IMPORT)
        .paramsAsDto(ImportRequestDto.class)
        .resultAsDto(ImportResponseDto.class)
        .withBiFunction(service::doImport);
  }

