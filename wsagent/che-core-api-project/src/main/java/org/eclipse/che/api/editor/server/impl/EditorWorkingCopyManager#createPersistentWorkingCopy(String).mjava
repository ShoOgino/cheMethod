  private void createPersistentWorkingCopy(String originalFilePath)
      throws ServerException, ForbiddenException, ConflictException {
    try {
      EditorWorkingCopy workingCopy = workingCopiesStorage.get(originalFilePath);
      if (workingCopy == null) {
        throw new ServerException("Can not create recovery file for " + originalFilePath);
      }

      byte[] content = workingCopy.getContentAsBytes();
      String projectPath = workingCopy.getProjectPath();
      String workingCopyStoragePath = projectPath + WORKING_COPIES_DIR;

      if (fsManager.existsAsDir(projectPath)) {
        if (!fsManager.existsAsDir(workingCopyStoragePath)) {
          fsManager.createDir(workingCopyStoragePath);
        }
      } else {
        throw new ServerException("No project directory exists " + projectPath);
      }

      if (fsManager.existsAsFile(originalFilePath)) {
        String workingCopyFilePath =
            workingCopyStoragePath + separator + toWorkingCopyPath(originalFilePath);
        fsManager.update(workingCopyFilePath, new ByteArrayInputStream(content));
      } else {
        fsManager.createFile(workingCopy.getPath(), new ByteArrayInputStream(content));
      }

    } catch (ConflictException | NotFoundException e) {
      LOG.error(e.getLocalizedMessage());
      throw new ServerException("Can not create recovery file for " + originalFilePath);
    }
  }

