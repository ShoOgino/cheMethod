  @GET
  @Path("/resolve/{path:.*}")
  @Produces(MediaType.APPLICATION_JSON)
  public List<SourceEstimation> resolveSources(
      @ApiParam(value = "Path to requested project", required = true) @PathParam("path")
          String path)
      throws NotFoundException, ForbiddenException, ServerException, ConflictException {
    List<SourceEstimation> estimations = new ArrayList<>();
    for (ProjectTypeResolution resolution : projectManager.resolveSources(path, false)) {
      if (resolution.matched()) {
        final HashMap<String, List<String>> attributes = new HashMap<>();
        for (Map.Entry<String, Value> attr : resolution.getProvidedAttributes().entrySet()) {
          attributes.put(attr.getKey(), attr.getValue().getList());
        }
        estimations.add(
            DtoFactory.newDto(SourceEstimation.class)
                .withType(resolution.getType())
                .withMatched(resolution.matched())
                .withAttributes(attributes));
      }
    }

    return estimations;
  }

