  private void removeExcludes(Path projectPath, Set<Path> pathsToExclude) {
    Path ignoreFilePath = projectPath.resolve(FILE_WATCHER_IGNORE_FILE_PATH);
    if (!exists(ignoreFilePath)) {
      return;
    }

    Set<String> excludesToRemove = prepareToWrite(projectPath, pathsToExclude);
    try (Stream<String> lines = lines(ignoreFilePath)) {
      Set<String> excludesToWrite =
          lines
              .map(String::trim)
              .filter(line -> !line.isEmpty())
              .filter(line -> !excludesToRemove.contains(line))
              .collect(toSet());

      write(ignoreFilePath, excludesToWrite, UTF_8);
    } catch (IOException e) {
      String errorMessage = "Can not remove paths from File Watcher excludes ";

      LOG.error(errorMessage + e.getLocalizedMessage());

      throw new JsonRpcException(500, errorMessage);
    }
  }

