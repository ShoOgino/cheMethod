  public BaseProjectImportOutputLineConsumer(String projectName, int delayBetweenMessages) {
    this.projectName = projectName;
    lineToSendQueue = new ArrayBlockingQueue<>(1024);
    executor =
        Executors.newSingleThreadScheduledExecutor(
            new ThreadFactoryBuilder()
                .setNameFormat(BaseProjectImportOutputLineConsumer.class.getSimpleName() + "-%d")
                .setDaemon(true)
                .setUncaughtExceptionHandler(LoggingUncaughtExceptionHandler.getInstance())
                .build());
    executor.scheduleAtFixedRate(
        () -> {
          String lineToSend = null;
          while (!lineToSendQueue.isEmpty()) {
            lineToSend = lineToSendQueue.poll();
          }
          if (lineToSend == null) {
            return;
          }
          sendOutputLine(lineToSend);
        },
        0,
        delayBetweenMessages,
        TimeUnit.MILLISECONDS);
  }

