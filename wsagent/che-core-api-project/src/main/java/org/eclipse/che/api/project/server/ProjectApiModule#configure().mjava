    @Override
    protected void configure() {
        Multibinder<ProjectImporter> projectImportersMultibinder = Multibinder.newSetBinder(binder(), ProjectImporter.class);
        projectImportersMultibinder.addBinding().to(ZipProjectImporter.class);

        Multibinder.newSetBinder(binder(), ProjectTypeDef.class).addBinding().to(BaseProjectType.class);

        Multibinder<ProjectHandler> projectHandlersMultibinder = Multibinder.newSetBinder(binder(), ProjectHandler.class);
        projectHandlersMultibinder.addBinding().to(CreateBaseProjectTypeHandler.class);
        projectHandlersMultibinder.addBinding().to(InitBaseProjectTypeHandler.class);

        bind(ProjectRegistry.class).asEagerSingleton();
        bind(ProjectService.class);
        bind(ProjectTypeService.class);
        bind(ProjectImportersService.class);

        bind(WorkspaceProjectsSyncer.class).to(WorkspaceHolder.class);

        // configure VFS
        Multibinder<VirtualFileFilter> filtersMultibinder = Multibinder.newSetBinder(binder(),
                                                                                     VirtualFileFilter.class,
                                                                                     Names.named("vfs.index_filter"));
        filtersMultibinder.addBinding().to(MediaTypeFilter.class);

        Multibinder<PathMatcher> pathMatcherMultibinder = Multibinder.newSetBinder(binder(),
                                                                                   PathMatcher.class,
                                                                                   Names.named("vfs.index_filter_matcher"));

        bind(SearcherProvider.class).to(FSLuceneSearcherProvider.class);
        bind(VirtualFileSystemProvider.class).to(LocalVirtualFileSystemProvider.class);

        bind(FileWatcherNotificationHandler.class).to(DefaultFileWatcherNotificationHandler.class);

        configureVfsEvent();
    }

