    public ProjectImportOutputWSLineConsumer(String projectName, String workspaceId, int delayBetweenMessages) {
        this.projectName = projectName;
        this.workspaceId = workspaceId;
        lineToSendQueue = new ArrayBlockingQueue<>(1024);
        executor = Executors.newSingleThreadScheduledExecutor(
                new ThreadFactoryBuilder().setNameFormat(ProjectImportOutputWSLineConsumer.class.getSimpleName()+"-%d").setDaemon(true).build());
        executor.scheduleAtFixedRate(new Runnable() {
            @Override
            public void run() {
                String lineToSend = null;
                while (!lineToSendQueue.isEmpty()) {
                    lineToSend = lineToSendQueue.poll();
                }
                if (lineToSend == null) {
                    return;
                }
                sendMessage(lineToSend);
            }
        }, 0, delayBetweenMessages, TimeUnit.MILLISECONDS);
        lineCounter = new AtomicInteger(1);
    }

