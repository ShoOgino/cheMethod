  @Inject
  public ProjectManager(
      VirtualFileSystemProvider vfsProvider,
      ProjectTypeRegistry projectTypeRegistry,
      ProjectRegistry projectRegistry,
      ProjectHandlerRegistry handlers,
      ProjectImporterRegistry importers,
      FileWatcherNotificationHandler fileWatcherNotificationHandler,
      FileTreeWatcher fileTreeWatcher,
      WorkspaceProjectsSyncer workspaceProjectsHolder,
      FileWatcherManager fileWatcherManager)
      throws ServerException {
    this.vfs = vfsProvider.getVirtualFileSystem();
    this.projectTypeRegistry = projectTypeRegistry;
    this.projectRegistry = projectRegistry;
    this.handlers = handlers;
    this.importers = importers;
    this.fileWatchNotifier = fileWatcherNotificationHandler;
    this.fileWatcher = fileTreeWatcher;
    this.workspaceProjectsHolder = workspaceProjectsHolder;
    this.fileWatcherManager = fileWatcherManager;

    executor =
        Executors.newFixedThreadPool(
            1 + Runtime.getRuntime().availableProcessors(),
            new ThreadFactoryBuilder()
                .setNameFormat("ProjectService-IndexingThread-")
                .setUncaughtExceptionHandler(LoggingUncaughtExceptionHandler.getInstance())
                .setDaemon(true)
                .build());
  }

