    /**
     * Handles event passed form file watcher system. Path parameter is expected
     * to be passed in a normal operation system file system form and is
     * transformed into internal virtual file system format before further
     * processing.
     *
     * @param path
     *         path that the event is originated from
     * @param kind
     *         kind of event (e.g. created, modified, removed)
     */
    void handle(Path path, WatchEvent.Kind<?> kind) {
        Path dir = path.getParent();
        String internalPath = toInternalPath(root.toPath(), path);
        Set<FileWatcherOperation> dirOperations = operations.get(dir);
        Set<FileWatcherOperation> itemOperations = operations.get(path);

        if (dirOperations != null) {
            dirOperations.stream()
                         .map(it -> it.get(kind))
                         .filter(Optional::isPresent)
                         .map(Optional::get)
                         .forEach(it -> it.accept(internalPath));
        }

        if (itemOperations != null) {
            itemOperations.stream()
                          .map(it -> it.get(kind))
                          .filter(Optional::isPresent)
                          .map(Optional::get)
                          .forEach(it -> it.accept(internalPath));
        }
    }

