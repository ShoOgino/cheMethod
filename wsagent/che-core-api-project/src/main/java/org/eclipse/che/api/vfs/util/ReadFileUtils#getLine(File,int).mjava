    /**
     * Read given file and return {@link Line} by given offset
     * @param file
     * @param offset
     * @return
     * @throws IOException
     */
    public static Line getLine(File file, int offset) throws IOException {
        if (file.length() < offset) {
            throw new IOException("File is not long enough");
        }
        try (LineNumberReader r = new LineNumberReader(new FileReader(file))) {

            int count = 0;
            int read = 0;
            int startPosition = 0;
            while (read != -1 && count < offset) {
                read = r.read();
                final char[] chars = toChars(read);
                if (lineSeparator().equals(new String(chars))) {
                    startPosition = count;
                }
                count++;
            }

            if (count == offset) {
                int lineNumber = r.getLineNumber();
                String s = r.readLine();
                int t = offset + s.length();
                int len = t - startPosition;
                r.close();

                RandomAccessFile randomAccessFile = new RandomAccessFile(file, "r");
                if (lineNumber > 0) { //skip previous new line symbol
                    startPosition++;
                    len--;
                }
                byte [] chars = new byte[len];
                randomAccessFile.seek(startPosition);
                randomAccessFile.read(chars, 0, len);
                return new Line(lineNumber, new String(chars));
            } else {
                throw new IOException("File is not long enough");
            }
        }

    }

