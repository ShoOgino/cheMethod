    /**
     * Create project:
     * - take project config
     *
     * @param projectConfig
     *         project configuration
     * @param options
     *         options for generator
     *
     * @return new project
     *
     * @throws ConflictException
     * @throws ForbiddenException
     * @throws ServerException
     * @throws NotFoundException
     */
    public RegisteredProject createProject(ProjectConfig projectConfig, Map<String, String> options) throws ConflictException,
                                                                                                            ForbiddenException,
                                                                                                            ServerException,
                                                                                                            NotFoundException {
        projectTreeChangesDetector.suspend();
        try {
            // path and primary type is mandatory
            if (projectConfig.getPath() == null) {
                throw new ConflictException("Path for new project should be defined ");
            }

            if (projectConfig.getType() == null) {
                throw new ConflictException("Project Type is not defined " + projectConfig.getPath());
            }

            final String path = ProjectRegistry.absolutizePath(projectConfig.getPath());
            if (projectRegistry.getProject(path) != null) {
                throw new ConflictException("Project config already exists for " + path);
            }

            return doCreateProject(projectConfig, options);
        } finally {
            projectTreeChangesDetector.resume();
        }
    }

