    private boolean addExcludesToIgnoreFile(List<String> pathsToExclude) {
        boolean isRemoved = pathsToExclude.removeIf(location -> {
            Path pathToExclude = toNormalPath(root, location);
            return excludes.values().stream()
                           .flatMap(Collection::stream)
                           .anyMatch(path -> path.equals(pathToExclude));
        });

        if (pathsToExclude.isEmpty()) {
            return false;
        }

        Map<Path, Set<String>> excludesToWrite = groupExcludes(pathsToExclude);
        excludesToWrite.keySet()
                       .forEach(ignoreFilePath -> writeExcludesToIgnoreFile(ignoreFilePath, excludesToWrite.get(ignoreFilePath)));
        return !isRemoved;
    }

