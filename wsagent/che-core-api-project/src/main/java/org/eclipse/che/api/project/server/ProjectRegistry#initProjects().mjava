    @PostConstruct
    public void initProjects() throws ConflictException, NotFoundException, ServerException, ForbiddenException {
        //final Workspace workspace = workspaceHolder.getWorkspace();

        List<? extends ProjectConfig> projectConfigs = workspaceHolder.getProjects();

        // take all the projects from ws's config
        for (ProjectConfig projectConfig : projectConfigs) {
            final String path = projectConfig.getPath();
            final VirtualFile vf = vfs.getRoot().getChild(Path.of(path));
            final FolderEntry projectFolder = ((vf == null) ? null : new FolderEntry(vf, this));
            // need that to make "problematic" project and not break the workspace
            try {
                putProject(projectConfig, projectFolder, false, false);
            } catch (ProjectTypeConstraintException e) {
                //in case bad config
                projects.put(path, new RegisteredProject(projectFolder, false, false, projectTypeRegistry, new Problem(12, e.getMessage())));
            } catch (NotFoundException e) {
                //in case project type not found
                projects.put(path, new RegisteredProject(projectFolder, false, false, projectTypeRegistry, new Problem(13, e.getMessage())));
            } catch (ValueStorageException e) {
                //in case can't calculate Attributes
                projects.put(path, new RegisteredProject(projectFolder, false, false, projectTypeRegistry, new Problem(14, e.getMessage())));
            }
        }

        initUnconfiguredFolders();

        initialized = true;

        for (RegisteredProject project : projects.values()) {
            // only for projects with sources
            if(project.getBaseFolder() != null) {
                fireInitHandlers(project);
            }
        }
    }

