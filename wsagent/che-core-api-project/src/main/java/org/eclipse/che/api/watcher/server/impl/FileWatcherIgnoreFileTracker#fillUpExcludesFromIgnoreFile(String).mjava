  private void fillUpExcludesFromIgnoreFile(String ignoreFileLocation) {
    if (isNullOrEmpty(ignoreFileLocation)) {
      return;
    }

    Path ignoreFilePath = pathTransformer.transform(ignoreFileLocation);
    if (!exists(ignoreFilePath)) {
      return;
    }

    Path projectPath = ignoreFilePath.getParent().getParent();
    excludes.remove(projectPath);

    try (Stream<String> lines = lines(ignoreFilePath)) {
      Set<Path> projectExcludes =
          lines
              .map(String::trim)
              .filter(line -> !line.isEmpty())
              .map(line -> "/".equals(line) ? projectPath : projectPath.resolve(line))
              .filter(excludePath -> exists(excludePath))
              .collect(toSet());

      if (!projectExcludes.isEmpty()) {
        excludes.put(projectPath, projectExcludes);
      }
    } catch (IOException e) {
      LOG.error(
          format(
              "Can not fill up file watcher excludes from file %s, the reason is: %s",
              ignoreFileLocation, e.getLocalizedMessage()));
    }
  }

