  // TODO temporary solution, further need to make a generalized exception mapper for all json rpc
  // service
  private <Request, Response> Response perform(
      Function<Request, Response> function, Request request) {
    try {
      return function.apply(request);
    } catch (ServerException e) {
      throw new JsonRpcException(SERVER_ERROR, e.getMessage());
    } catch (ConflictException e) {
      throw new JsonRpcException(CONFLICT, e.getMessage());
    } catch (ForbiddenException e) {
      throw new JsonRpcException(FORBIDDEN, e.getMessage());
    } catch (BadRequestException e) {
      throw new JsonRpcException(BAD_REQUEST, e.getMessage());
    } catch (NotFoundException e) {
      throw new JsonRpcException(NOT_FOUND, e.getMessage());
    } catch (UnauthorizedException e) {
      throw new JsonRpcException(UNAUTHORIZED, e.getMessage());
    }
  }

