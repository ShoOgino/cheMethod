  static FileItemParsed parseDir(Iterator<FileItem> iterator) throws ServerException {
    List<FileItem> fileItems = new LinkedList<>();
    iterator.forEachRemaining(fileItems::add);

    List<FileItem> fileContents =
        fileItems.stream().filter(it -> !it.isFormField()).collect(Collectors.toList());

    if (fileContents.size() > 1) {
      throw new ServerException("Expected no more than one file to upload");
    }

    if (fileContents.size() < 1) {
      throw new ServerException("Can't find file for upload");
    }

    FileItem content = fileContents.iterator().next();

    InputStream inputStream;
    try {
      inputStream = content.getInputStream();
    } catch (IOException e) {
      throw new ServerException(e);
    }

    return new FileItemParsed() {
      @Override
      public String getName() {
        throw new UnsupportedOperationException("Not supported for directories");
      }

      @Override
      public InputStream getContent() {
        return inputStream;
      }

      @Override
      public boolean getOverwrite() {
        throw new UnsupportedOperationException("Not supported for directories");
      }
    };
  }

