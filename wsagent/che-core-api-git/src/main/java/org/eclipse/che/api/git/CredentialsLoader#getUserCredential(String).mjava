    /**
     * Searches for CredentialsProvider instances and if needed instance exists, it return
     * given credentials, else null;
     *
     * @param url
     *         given URL
     * @return credentials from provider
     * @throws GitException
     *         when it is not possible to store credentials
     */
    public UserCredential getUserCredential(String url) throws GitException {
        for (CredentialsProvider cp : credentialsProviders.values()) {
            if (url != null && cp.canProvideCredentials(url)) {
                UserCredential commandCredentials = cp.getUserCredential();
                if (commandCredentials != null && !commandCredentials.getProviderId().equals(cp.getId())) {
                    throw new GitException(
                            "Provider " + cp.getId() + " returned credential with wrong id " + commandCredentials.getProviderId());
                }
                LOG.debug("Url {} user {}", url, commandCredentials);
                return commandCredentials;
            }
        }

        return null;
    }

