  private Consumer<String> fsEventConsumer() {
    return it -> {
      try {
        String content =
            vfsProvider.getVirtualFileSystem().getRoot().getChild(Path.of(it)).getContentAsString();
        Type type = content.contains("ref:") ? BRANCH : REVISION;
        String name = type == REVISION ? content : PATTERN.split(content)[1];

        //Update project attributes with new git values
        projectRegistry.setProjectType(it.split("/")[1], GitProjectType.TYPE_ID, true);

        endpointIds.forEach(transmitConsumer(type, name));

      } catch (ServerException | ForbiddenException e) {
        LOG.error("Error trying to read {} file and broadcast it", it, e);
      } catch (NotFoundException | ConflictException e) {
        LOG.error("Error trying to update project attributes", it, e);
      }
    };
  }

