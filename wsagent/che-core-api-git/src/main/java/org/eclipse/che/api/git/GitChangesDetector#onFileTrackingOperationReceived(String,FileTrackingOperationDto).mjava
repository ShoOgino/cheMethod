  private void onFileTrackingOperationReceived(
      String endpointId, FileTrackingOperationDto operation) {
    FileTrackingOperationDto.Type type = operation.getType();
    String path = operation.getPath();
    String oldPath = operation.getOldPath();

    switch (type) {
      case START:
        {
          String key = path + endpointId;
          if (watchIdRegistry.containsKey(key)) {
            return;
          }
          int id =
              manager.registerByPath(
                  path,
                  createConsumer(endpointId, path),
                  modifyConsumer(endpointId, path),
                  deleteConsumer(endpointId, path));
          watchIdRegistry.put(key, id);

          break;
        }
      case STOP:
        {
          Integer id = watchIdRegistry.remove(path + endpointId);
          if (id != null) {
            manager.unRegisterByPath(id);
          }

          break;
        }
      case MOVE:
        {
          Integer oldId = watchIdRegistry.remove(oldPath + endpointId);
          if (oldId != null) {
            manager.unRegisterByPath(oldId);
          }

          int newId =
              manager.registerByPath(
                  path,
                  createConsumer(endpointId, path),
                  modifyConsumer(endpointId, path),
                  deleteConsumer(endpointId, path));
          watchIdRegistry.put(path + endpointId, newId);

          break;
        }
      default:
        break;
    }
  }

