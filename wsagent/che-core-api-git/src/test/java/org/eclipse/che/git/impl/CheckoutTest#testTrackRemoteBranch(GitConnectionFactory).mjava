  @Test(
      dataProvider = "GitConnectionFactory",
      dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
  public void testTrackRemoteBranch(GitConnectionFactory connectionFactory)
      throws GitException, IOException, UnauthorizedException {
    // given
    GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
    addFile(connection, "README.txt", org.eclipse.che.git.impl.GitTestUtil.CONTENT);
    connection.add(AddParams.create(singletonList("README.txt")));
    connection.commit(CommitParams.create("Initial add"));

    // when
    // create branch additional branch and make a commit
    connection.branchCreate(FIRST_BRANCH_NAME, null);
    connection.checkout(CheckoutParams.create(FIRST_BRANCH_NAME));
    addFile(connection, "newfile", "new file content");
    connection.add(AddParams.create(singletonList(".")));
    connection.commit(CommitParams.create("Commit message"));
    connection.checkout(CheckoutParams.create("master"));

    // check existence of 2 branches
    assertEquals(connection.branchList(null).size(), 2);

    // when
    connection.checkout(
        CheckoutParams.create(SECOND_BRANCH_NAME)
            .withCreateNew(true)
            .withTrackBranch(FIRST_BRANCH_NAME));
    // then
    assertEquals(connection.branchList(null).size(), 3);
    assertTrue(new File(repository, "newfile").exists());
  }

