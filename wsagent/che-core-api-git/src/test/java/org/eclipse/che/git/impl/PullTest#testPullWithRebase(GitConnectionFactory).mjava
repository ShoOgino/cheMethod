  @Test(
      dataProvider = "GitConnectionFactory",
      dataProviderClass = GitConnectionFactoryProvider.class)
  public void testPullWithRebase(GitConnectionFactory connectionFactory)
      throws IOException, ServerException, URISyntaxException, UnauthorizedException {
    // given
    GitConnection remote = connectToInitializedGitRepository(connectionFactory, remoteRepo);
    addFile(remote, "file", "file content");
    remote.add(AddParams.create(singletonList(".")));
    remote.commit(CommitParams.create("First commit common"));
    GitConnection local = connectionFactory.getConnection(repository.getAbsolutePath());
    local.clone(CloneParams.create(remote.getWorkingDir().getAbsolutePath()));
    addFile(local, "local file", "file content");
    local.add(AddParams.create(singletonList(".")));
    local.commit(CommitParams.create("Second commit local"));
    addFile(remote, "remote file", "file content");
    remote.add(AddParams.create(singletonList(".")));
    remote.commit(CommitParams.create("Second commit remote"));

    // when
    local.pull(PullParams.create("origin").withRebase(true));
    List<Revision> commits = local.log(LogParams.create()).getCommits();

    // then
    assertTrue("Second commit local".equals(commits.get(0).getMessage()));
    assertTrue("Second commit remote".equals(commits.get(1).getMessage()));
    assertTrue("First commit common".equals(commits.get(2).getMessage()));
  }

