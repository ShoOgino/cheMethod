  @Test(
    dataProvider = "GitConnectionFactory",
    dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class
  )
  public void testSimplePush(GitConnectionFactory connectionFactory)
      throws IOException, ServerException, URISyntaxException, UnauthorizedException {
    // given
    GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
    GitConnection remoteConnection = connectionFactory.getConnection(remoteRepo.getAbsolutePath());
    remoteConnection.clone(
        CloneParams.create(connection.getWorkingDir().getAbsolutePath())
            .withWorkingDir(remoteConnection.getWorkingDir().getAbsolutePath()));
    addFile(remoteConnection, "newfile", "content");
    remoteConnection.add(AddParams.create(singletonList(".")));
    remoteConnection.commit(CommitParams.create("Fake commit"));
    // when
    remoteConnection.push(
        PushParams.create("origin")
            .withRefSpec(singletonList("refs/heads/master:refs/heads/test"))
            .withTimeout(-1));
    // then
    // check branches in origin repository
    assertEquals(connection.branchList(null).size(), 1);
    // checkout test branch
    connection.checkout(CheckoutParams.create("test"));
    assertTrue(new File(connection.getWorkingDir(), "newfile").exists());
  }

