  @Test(
    dataProvider = "GitConnectionFactory",
    dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class
  )
  public void testConflictsIfSameLineWasChangedInLaterCommits(
      GitConnectionFactory connectionFactory) throws Exception {
    //given
    GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
    //first commit
    File file = addFile(connection, "test-revert", "blabla\n");
    connection.add(AddParams.create(AddRequest.DEFAULT_PATTERN));
    connection.commit(CommitParams.create("add test-revert file"));
    //second commit
    try (PrintWriter pw = new PrintWriter(file)) {
      pw.append("one more bla\n");
    }
    connection.add(AddParams.create(AddRequest.DEFAULT_PATTERN));
    Revision revision = connection.commit(CommitParams.create("add one more bla"));
    //third commit changing the same line
    try (PrintWriter pw = new PrintWriter(file)) {
      pw.append("add smth one the same line");
    }
    connection.add(AddParams.create(AddRequest.DEFAULT_PATTERN));
    connection.commit(CommitParams.create("change the same line"));

    //when
    //revert second commit
    RevertResult result = connection.revert(revision.getId());

    //then
    assertNull(result.getNewHead());
    assertTrue(result.getRevertedCommits().isEmpty());

    Map<String, RevertStatus> conflictsMap = new HashMap<>();
    conflictsMap.put("test-revert", RevertStatus.FAILED);
    assertEquals(result.getConflicts(), conflictsMap);
  }

