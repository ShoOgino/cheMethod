    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
    public void testPushWhenLocalRepositoryIsNotSynchronisedWithRemote(GitConnectionFactory connectionFactory)
            throws IOException, ServerException, URISyntaxException, UnauthorizedException {
        //given
        GitConnection remoteConnection = connectToGitRepositoryWithContent(connectionFactory, repository);
        GitConnection localConnection = connectionFactory.getConnection(remoteRepo.getAbsolutePath());
        localConnection.clone(newDto(CloneRequest.class).withRemoteUri(remoteConnection.getWorkingDir().getAbsolutePath()));
        addFile(remoteConnection, "newfile", "content");
        remoteConnection.add(newDto(AddRequest.class).withFilepattern(singletonList(".")));
        remoteConnection.commit(newDto(CommitRequest.class).withMessage("Fake commit"));

        //when
        String errorMessage = "";
        try {
            localConnection.push(newDto(PushRequest.class).withRemote("origin").withTimeout(-1));
        } catch (GitException exception) {
            errorMessage = exception.getMessage();
        }

        //then
        assertTrue(errorMessage.contains("master -> master"));
        assertTrue(errorMessage.contains(remoteConnection.getWorkingDir().getAbsolutePath()));
    }

