  @Test(
      dataProvider = "GitConnectionFactory",
      dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
  public void shouldDeleteNotFullyMergedBranchWithForce(GitConnectionFactory connectionFactory)
      throws GitException, IOException, UnauthorizedException {
    // given
    GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
    addFile(connection, "README.txt", org.eclipse.che.git.impl.GitTestUtil.CONTENT);
    connection.add(AddParams.create(singletonList("README.txt")));
    connection.commit(CommitParams.create("Initial addd"));
    // create new branch and make a commit
    connection.checkout(CheckoutParams.create("newbranch").withCreateNew(true));
    addFile(connection, "newfile", "new file content");
    connection.add(AddParams.create(singletonList(".")));
    connection.commit(CommitParams.create("second commit"));
    connection.checkout(CheckoutParams.create("master"));

    // when
    connection.branchDelete("newbranch", true);

    // then
    assertTrue(
        Sets.symmetricDifference(
                Sets.newHashSet(connection.branchList(LIST_LOCAL)),
                Sets.newHashSet(
                    newDto(Branch.class)
                        .withName("refs/heads/master")
                        .withDisplayName("master")
                        .withActive(true)
                        .withRemote(false)))
            .isEmpty());
  }

