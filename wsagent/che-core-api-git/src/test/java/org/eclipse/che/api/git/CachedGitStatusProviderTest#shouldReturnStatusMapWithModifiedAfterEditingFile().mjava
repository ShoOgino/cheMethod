  @Test
  public void shouldReturnStatusMapWithModifiedAfterEditingFile() throws Exception {
    // given
    OngoingStubbing<Status> whenStatusCalled =
        lenient().when(gitConnection.status(singletonList(NORMALIZED_PATH + "1")));
    Status status = newDto(Status.class);
    status.setModified(new ArrayList<>(singletonList(NORMALIZED_PATH + "1")));
    // Fill the cached status map with actual status, second call will check file changes.
    whenStatusCalled.thenReturn(newDto(Status.class));
    gitStatusProvider.getStatus(NORMALIZED_PATH, singletonList(NORMALIZED_PATH + "1"));

    // when
    // Make a pause to have time difference in the last modified time value of the file
    Thread.sleep(1000);
    // Edit existing file
    Files.write(projectPath.resolve(NORMALIZED_PATH + "1"), "content".getBytes());
    whenStatusCalled.thenReturn(status);
    Map<String, VcsStatus> statusMap =
        gitStatusProvider.getStatus(NORMALIZED_PATH, singletonList(NORMALIZED_PATH + "1"));

    // then
    assertTrue(statusMap.get(PATH + "1") == MODIFIED);
  }

