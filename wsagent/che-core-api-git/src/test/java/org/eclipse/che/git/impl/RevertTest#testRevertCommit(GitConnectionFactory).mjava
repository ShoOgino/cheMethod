  @Test(
      dataProvider = "GitConnectionFactory",
      dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
  public void testRevertCommit(GitConnectionFactory connectionFactory) throws Exception {
    // given
    GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
    // first commit
    File file = addFile(connection, "test-revert", "blabla\n");
    connection.add(AddParams.create(AddRequest.DEFAULT_PATTERN));
    connection.commit(CommitParams.create("add test-revert file"));
    // second commit
    try (PrintWriter pw = new PrintWriter(file)) {
      pw.append("one more bla\n");
    }
    connection.add(AddParams.create(AddRequest.DEFAULT_PATTERN));
    Revision revision = connection.commit(CommitParams.create("add one more bla\n"));

    // when
    RevertResult result = connection.revert(revision.getId());

    // then
    assertFalse(result.getNewHead().isEmpty());
    assertTrue(result.getConflicts().isEmpty());
    assertEquals(result.getRevertedCommits().get(0), revision.getId());
    assertEquals(connection.log(LogParams.create()).getCommits().size(), 3);
  }

