    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = GitConnectionFactoryProvider.class)
    public void testPullWithRefSpec(GitConnectionFactory connectionFactory)
            throws ServerException, URISyntaxException, IOException, UnauthorizedException {
        //given
        //create new repository clone of default
        GitConnection connection = connectToGitRepositoryWithContent(connectionFactory, repository);
        GitConnection connection2 = connectionFactory.getConnection(remoteRepo.getAbsolutePath());

        connection2.clone(newDto(CloneRequest.class).withRemoteUri(connection.getWorkingDir().getAbsolutePath()));
        //add new branch
        connection.checkout(newDto(CheckoutRequest.class).withName("b1").withCreateNew(true));
        addFile(connection, "newfile1", "new file1 content");
        connection.add(newDto(AddRequest.class).withFilepattern(Arrays.asList(".")));
        connection.commit(newDto(CommitRequest.class).withMessage("Test commit"));
        int branchesBefore = connection2.branchList(newDto(BranchListRequest.class)).size();
        //when
        connection2.pull(newDto(PullRequest.class)
                                 .withRemote("origin")
                                 .withRefSpec("refs/heads/b1:refs/heads/b1")
                                 .withTimeout(-1));
        int branchesAfter = connection2.branchList(newDto(BranchListRequest.class).withListMode(BranchListRequest.LIST_LOCAL)).size();
        assertEquals(branchesAfter, branchesBefore + 1);
    }

