  /**
   * Generates and uploads new public key for specified host. Removes the key when an exception is
   * happen at uploading the key
   *
   * @param userId the id of the user who will be the owner of the ssh pair
   * @param host host to generate the key
   */
  public Promise<Void> generateSshKey(String userId, String host) {
    SshKeyUploader sshKeyUploader = sshKeyUploaderRegistry.getUploader(host);
    if (sshKeyUploader == null) {
      return promiseProvider.reject("Can not find ssh keys uploader for " + host);
    }

    return promiseProvider.create(
        callback ->
            sshKeyUploader.uploadKey(
                userId,
                new AsyncCallback<Void>() {
                  @Override
                  public void onSuccess(Void result) {
                    callback.onSuccess(result);
                  }

                  @Override
                  public void onFailure(Throwable exception) {
                    callback.onFailure(exception);

                    removeSshKey(host);
                  }
                }));
  }

