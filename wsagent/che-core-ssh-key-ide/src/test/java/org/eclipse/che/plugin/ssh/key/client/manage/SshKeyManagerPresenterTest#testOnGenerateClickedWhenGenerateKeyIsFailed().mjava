  @Test
  public void testOnGenerateClickedWhenGenerateKeyIsFailed() throws OperationException {
    when(dialogFactory.createInputDialog(
            nullable(String.class),
            nullable(String.class),
            nullable(InputCallback.class),
            nullable(CancelCallback.class)))
        .thenReturn(inputDialog);

    presenter.onGenerateClicked();

    verify(dialogFactory)
        .createInputDialog(
            nullable(String.class), nullable(String.class),
            inputCallbackCaptor.capture(), cancelCallbackCaptor.capture());
    InputCallback inputCallback = inputCallbackCaptor.getValue();
    inputCallback.accepted(GITHUB_HOST);

    verify(sshPairDTOPromise).catchError(operationErrorCapture.capture());
    operationErrorCapture.getValue().apply(JsPromiseError.create(""));

    verify(service).generatePair(eq(SshKeyManagerPresenter.VCS_SSH_SERVICE), eq(GITHUB_HOST));
    verify(service, never()).getPairs(eq(SshKeyManagerPresenter.VCS_SSH_SERVICE));
    verify(view, never()).setPairs((List<SshPairDto>) anyObject());
    verify(notificationManager)
        .notify(
            nullable(String.class),
            nullable(String.class),
            any(StatusNotification.Status.class),
            (DisplayMode) anyObject());
  }

