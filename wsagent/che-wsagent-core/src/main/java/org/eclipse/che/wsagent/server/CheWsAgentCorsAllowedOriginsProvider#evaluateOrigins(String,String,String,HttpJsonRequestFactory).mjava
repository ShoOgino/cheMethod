  private String evaluateOrigins(
      String apiExternal,
      String apiInternal,
      String allowedOrigins,
      HttpJsonRequestFactory httpJsonRequestFactory)
      throws ApiException, IOException {
    if (allowedOrigins != null) {
      return allowedOrigins;
    }

    final UriBuilder builder =
        UriBuilder.fromUri(apiInternal)
            .path(WorkspaceService.class)
            .path(WorkspaceService.class, "getByKey")
            .queryParam("includeInternalServers", "true");

    String href = builder.build(System.getenv("CHE_WORKSPACE_ID")).toString();
    WorkspaceDto workspaceDto =
        httpJsonRequestFactory.fromUrl(href).useGetMethod().request().asDto(WorkspaceDto.class);

    String ideUrl = getIdeUrl(workspaceDto);
    if (ideUrl != null) {
      return UriBuilder.fromUri(ideUrl).replacePath(null).build().toString();
    }
    return UriBuilder.fromUri(apiExternal).replacePath(null).build().toString();
  }

