    @BeforeMethod
    public void setUp() throws Exception {
        when(completableFuture.get()).thenReturn(initializeResult);
        when(initializeResult.getCapabilities()).thenReturn(serverCapabilities);

        when(languageServerLauncher.getLanguageId()).thenReturn("id");
        when(languageServerLauncher.isAbleToLaunch()).thenReturn(true);
        when(languageDescription.getLanguageId()).thenReturn("id");
        when(languageDescription.getFileExtensions()).thenReturn(Collections.singletonList("txt"));
        when(languageDescription.getMimeType()).thenReturn("plain/text");

        when(languageServer.getTextDocumentService()).thenReturn(mock(TextDocumentService.class));
        when(languageServer.initialize(any(InitializeParams.class))).thenReturn(completableFuture);

        registry = spy(new LanguageServerRegistryImpl(Collections.singleton(languageServerLauncher),
                        Collections.singleton(languageDescription), null, initializer));

        when(initializer.initialize(any(LanguageDescription.class), any(LanguageServerLauncher.class), anyString()))
                        .thenAnswer(invocation -> {
                            Object[] arguments = invocation.getArguments();
                            registry.onServerInitialized(languageServer, serverCapabilities, languageDescription, (String) arguments[2]);
                            return languageServer;
                        });

        doReturn(PROJECT_PATH).when(registry).extractProjectPath(FILE_PATH);
    }

