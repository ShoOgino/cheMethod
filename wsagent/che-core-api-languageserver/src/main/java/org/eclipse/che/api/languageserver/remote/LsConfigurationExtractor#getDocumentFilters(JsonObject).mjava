  private List<DocumentFilter> getDocumentFilters(JsonObject jsonObject) {
    if (!jsonObject.has("documentFilters")) {
      return emptyList();
    }
    JsonArray documentFiltersJsonArray = jsonObject.get("documentFilters").getAsJsonArray();

    int size = documentFiltersJsonArray.size();
    List<DocumentFilter> documentFilters = new ArrayList<>(size);
    for (int i = 0; i < size; i++) {
      JsonObject documentFilterJsonObject = documentFiltersJsonArray.get(i).getAsJsonObject();

      String pathRegex;
      if (documentFilterJsonObject.has("pathRegex")) {
        pathRegex = documentFilterJsonObject.get("pathRegex").getAsString();
      } else {
        pathRegex = null;
      }

      String languageId;
      if (documentFilterJsonObject.has("languageId")) {
        languageId = documentFilterJsonObject.get("languageId").getAsString();
      } else {
        languageId = null;
      }

      String schema;
      if (documentFilterJsonObject.has("scheme")) {
        schema = documentFilterJsonObject.get("scheme").getAsString();
      } else {
        schema = null;
      }

      DocumentFilter documentFilter = new DocumentFilter(languageId, pathRegex, schema);
      documentFilters.add(documentFilter);
    }

    return unmodifiableList(documentFilters);
  }

