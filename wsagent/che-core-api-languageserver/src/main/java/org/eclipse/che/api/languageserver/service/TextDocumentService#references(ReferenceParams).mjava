    private List<LocationDto> references(ReferenceParams referenceParams) {
        try {
            referenceParams.getTextDocument().setUri(prefixURI(referenceParams.getTextDocument().getUri()));
            LanguageServer server = getServer(referenceParams.getTextDocument().getUri());
            if (server == null) {
                return Collections.emptyList();
            }

            List<? extends Location> locations = server.getTextDocumentService().references(referenceParams).get();
            locations.forEach(o -> o.setUri(removePrefixUri(o.getUri())));
            return locations.stream().map(LocationDto::new).collect(Collectors.toList());
        } catch (ExecutionException | InterruptedException | LanguageServerException e) {
            throw new JsonRpcException(-27000, e.getMessage());

        }
    }

