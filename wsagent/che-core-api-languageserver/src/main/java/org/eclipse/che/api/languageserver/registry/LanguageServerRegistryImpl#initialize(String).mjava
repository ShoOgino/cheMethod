    public ServerCapabilities initialize(String fileUri) throws LanguageServerException {
        String projectPath = extractProjectPath(fileUri);
        if (projectPath == null) {
            return null;
        }
        List<LanguageServerLauncher> launchers = findLaunchers(projectPath, fileUri);
        // launchers is the set of things we need to have initialized

        for (LanguageServerLauncher launcher : new ArrayList<>(launchers)) {
            synchronized (initializedServers) {
                List<LanguageServerLauncher> servers = launchedServers.get(projectPath);

                if (servers == null) {
                    servers = new ArrayList<>();
                    launchedServers.put(projectPath, servers);
                }
                List<LanguageServerLauncher> servers2 = servers;
                if (!servers2.contains(launcher)) {
                    servers2.add(launcher);
                    String id = String.valueOf(serverId.incrementAndGet());
                    initializer.initialize(launcher, new CheLanguageClient(eventService, id), projectPath).thenAccept(pair -> {
                        synchronized (initializedServers) {
                            List<InitializedLanguageServer> initialized = initializedServers.get(projectPath);
                            if (initialized == null) {
                                initialized = new ArrayList<>();
                                initializedServers.put(projectPath, initialized);
                            }
                            initialized.add(new InitializedLanguageServer(id, pair.first, pair.second, launcher));
                            launchers.remove(launcher);
                            initializedServers.notifyAll();
                        }
                    }).exceptionally(t -> {
                        eventService.publish(new MessageParams(MessageType.Error, "Failed to initialized LS "+launcher.getDescription().getId()+": "+t.getMessage()));
                        LOG.error("Error launching language server " + launcher, t);
                        synchronized (initializedServers) {
                            launchers.remove(launcher);
                            servers2.remove(launcher);
                            initializedServers.notifyAll();
                        }
                        return null;
                    });
                }
            }
        }

        // now wait for all launchers to arrive at initialized
        // eventually, all launchers will either fail or succeed, regardless of
        // which request thread started them. Thus the loop below will
        // end.
        synchronized (initializedServers) {
            List<InitializedLanguageServer> initForProject = initializedServers.get(projectPath);
            if (initForProject != null) {
                for (InitializedLanguageServer initialized : initForProject) {
                    launchers.remove(initialized.getLauncher());
                }
            }
            while (!launchers.isEmpty()) {
                try {
                    initializedServers.wait();
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                    return null;
                }
            }
        }
        return getCapabilities(fileUri);
    }

