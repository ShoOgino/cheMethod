  /**
   * Temporary solution, in future need to provide some service that can watch for LS process and
   * notify user in case in some reason it stopped. For now we just check it once start it before
   * connect to it. Ask with delay in 5 seconds this delay chose empirical in normal state should be
   * enough for start or fail process. If after 5 seconds process not alive we notify client about
   * problem.
   *
   * @param languageServerProcess
   * @throws LanguageServerException
   */
  private void waitCheckProcess(Process languageServerProcess) throws LanguageServerException {
    long endTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(20);

    try {
      while (!languageServerProcess.isAlive() && System.currentTimeMillis() < endTime) {
        TimeUnit.MILLISECONDS.sleep(10);
      }
    } catch (InterruptedException e) {
      Thread.currentThread().interrupt();
    }
    if (!languageServerProcess.isAlive()) {
      final String error;
      try {
        error = IoUtil.readStream(languageServerProcess.getErrorStream());
      } catch (IOException e) {
        LOGGER.error(e.getMessage());
        throw new LanguageServerException("Can't start language server process");
      }
      LOGGER.error("Can't start language server process. Got error: {}", error);
      throw new LanguageServerException(error);
    }
  }

