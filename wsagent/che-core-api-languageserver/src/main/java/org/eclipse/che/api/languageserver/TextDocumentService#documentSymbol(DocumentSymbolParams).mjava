  private List<SymbolInformationDto> documentSymbol(DocumentSymbolParams documentSymbolParams) {
    String wsPath = documentSymbolParams.getTextDocument().getUri();
    String uri = prefixURI(wsPath);
    documentSymbolParams.getTextDocument().setUri(uri);
    List<SymbolInformationDto> result = new ArrayList<>();
    Set<ExtendedLanguageServer> servers = findServer.byPath(wsPath);

    OperationUtil.doInParallel(
        servers,
        new LSOperation<ExtendedLanguageServer, List<Either<SymbolInformation, DocumentSymbol>>>() {

          @Override
          public boolean canDo(ExtendedLanguageServer element) {
            return truish(element.getCapabilities().getDocumentSymbolProvider());
          }

          @Override
          public CompletableFuture<List<Either<SymbolInformation, DocumentSymbol>>> start(
              ExtendedLanguageServer element) {
            return element.getTextDocumentService().documentSymbol(documentSymbolParams);
          }

          @Override
          public boolean handleResult(
              ExtendedLanguageServer element,
              List<Either<SymbolInformation, DocumentSymbol>> locations) {
            locations.forEach(
                o -> {
                  // minimal fix for https://github.com/eclipse/che/issues/11139 when updating
                  // lsp4j
                  if (o.isLeft()) {
                    SymbolInformation si = o.getLeft();
                    si.getLocation().setUri(removePrefixUri(si.getLocation().getUri()));
                    result.add(new SymbolInformationDto(si));
                  } else {
                    result.addAll(convertDocumentSymbol(o.getRight()));
                  }
                });
            return true;
          }

          private Collection<? extends SymbolInformationDto> convertDocumentSymbol(
              DocumentSymbol symbol) {
            ArrayList<SymbolInformationDto> result = new ArrayList<>();
            result.add(
                new SymbolInformationDto(
                    new SymbolInformation(
                        symbol.getName(), symbol.getKind(), new Location(uri, symbol.getRange()))));
            for (DocumentSymbol child : symbol.getChildren()) {
              result.addAll(convertDocumentSymbol(child));
            }
            return result;
          }
        },
        10000);
    return result;
  }

