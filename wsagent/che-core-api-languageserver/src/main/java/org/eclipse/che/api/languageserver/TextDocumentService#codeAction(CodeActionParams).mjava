  private List<CommandDto> codeAction(CodeActionParams params) {
    String wsPath = params.getTextDocument().getUri();
    List<CommandDto> result = new ArrayList<>();
    Set<ExtendedLanguageServer> servers = findServer.byPath(wsPath);
    LSOperation<ExtendedLanguageServer, List<Either<Command, CodeAction>>> op =
        new LSOperation<ExtendedLanguageServer, List<Either<Command, CodeAction>>>() {

          @Override
          public boolean canDo(ExtendedLanguageServer server) {
            return isImplemented(server.getCapabilities().getCodeActionProvider());
          }

          @Override
          public CompletableFuture<List<Either<Command, CodeAction>>> start(
              ExtendedLanguageServer element) {
            CodeActionParams clonedParams = lsParamsCloner.clone(params);
            URI uri = languageServerPathTransformer.toFsURI(element.getId(), wsPath);
            clonedParams.getTextDocument().setUri(uri.toString());

            return element.getTextDocumentService().codeAction(clonedParams);
          }

          @Override
          public boolean handleResult(
              ExtendedLanguageServer element, List<Either<Command, CodeAction>> res) {
            for (Either<Command, CodeAction> cmd : res) {
              if (cmd.isLeft()) {
                result.add(new CommandDto(cmd.getLeft()));
              } else {
                // see https://github.com/eclipse/che/issues/11140
                LOG.warn("Ignoring code action: {}", cmd.getRight());
              }
            }
            return false;
          }
        };
    OperationUtil.doInParallel(servers, op, 10000);
    return result;
  }

