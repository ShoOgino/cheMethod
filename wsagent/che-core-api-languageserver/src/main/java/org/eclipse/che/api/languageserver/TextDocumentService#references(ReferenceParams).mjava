  private List<LocationDto> references(ReferenceParams referenceParams) {
    String wsPath = referenceParams.getTextDocument().getUri();
    String uri = prefixURI(wsPath);
    referenceParams.getTextDocument().setUri(uri);
    List<LocationDto> result = new ArrayList<>();
    Set<ExtendedLanguageServer> servers = findServer.byPath(wsPath);
    OperationUtil.doInParallel(
        servers,
        new LSOperation<ExtendedLanguageServer, List<? extends Location>>() {

          @Override
          public boolean canDo(ExtendedLanguageServer element) {
            return truish(element.getCapabilities().getReferencesProvider());
          }

          @Override
          public CompletableFuture<List<? extends Location>> start(ExtendedLanguageServer element) {
            return element.getTextDocumentService().references(referenceParams);
          }

          @Override
          public boolean handleResult(
              ExtendedLanguageServer element, List<? extends Location> locations) {
            locations.forEach(
                o -> {
                  o.setUri(removePrefixUri(o.getUri()));
                  result.add(new LocationDto(o));
                });
            return true;
          }
        },
        30000);
    return result;
  }

