    @POST
    @Path("symbol")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public List<? extends SymbolInformationDto> documentSymbol(ExtendedWorkspaceSymbolParams workspaceSymbolParams)
            throws ExecutionException,
                   InterruptedException,
                   LanguageServerException {
        LanguageServer server = getServer(TextDocumentService.prefixURI(workspaceSymbolParams.getFileUri()));
        if (server == null) {
            return emptyList();
        }

        List<? extends SymbolInformation> informations = server.getWorkspaceService().symbol(workspaceSymbolParams).get();
        informations.forEach(o -> {
            Location location = o.getLocation();
            location.setUri(TextDocumentService.removePrefixUri(location.getUri()));
        });
        return informations.stream().map(o -> new SymbolInformationDto(o)).collect(Collectors.toList());
    }

