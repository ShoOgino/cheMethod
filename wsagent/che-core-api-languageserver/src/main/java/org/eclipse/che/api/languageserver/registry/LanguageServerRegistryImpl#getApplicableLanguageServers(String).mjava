  public List<Collection<InitializedLanguageServer>> getApplicableLanguageServers(String fileUri)
      throws LanguageServerException {
    String projectPath = extractProjectPath(fileUri);
    LanguageDescription language = findLanguage(fileUri);
    if (projectPath == null || language == null) {
      return Collections.emptyList();
    }

    Map<Integer, List<InitializedLanguageServer>> result = new HashMap<>();

    List<InitializedLanguageServer> servers = null;
    synchronized (initializedServers) {
      List<InitializedLanguageServer> list = initializedServers.get(projectPath);
      if (list == null) {
        return Collections.emptyList();
      }
      servers = new ArrayList<InitializedLanguageServer>(list);
    }
    for (InitializedLanguageServer server : servers) {
      int score =
          matchScore(server.getLauncher().getDescription(), fileUri, language.getLanguageId());
      if (score > 0) {
        List<InitializedLanguageServer> list = result.get(score);
        if (list == null) {
          list = new ArrayList<>();
          result.put(score, list);
        }
        list.add(server);
      }
    }
    // sort lists highest score first
    return result
        .entrySet()
        .stream()
        .sorted((left, right) -> right.getKey() - left.getKey())
        .map(entry -> entry.getValue())
        .collect(Collectors.toList());
  }

