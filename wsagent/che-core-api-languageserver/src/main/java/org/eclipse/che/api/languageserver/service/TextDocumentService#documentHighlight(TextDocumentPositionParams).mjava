    private List<DocumentHighlightDto> documentHighlight(TextDocumentPositionParams textDocumentPositionParams) {
        try {
            textDocumentPositionParams.getTextDocument().setUri(prefixURI(textDocumentPositionParams.getTextDocument().getUri()));
            LanguageServer server = getServer(textDocumentPositionParams.getTextDocument().getUri());
            if (server != null) {
                List<? extends DocumentHighlight> result = server.getTextDocumentService().documentHighlight(textDocumentPositionParams).get();
                return result.stream().map(DocumentHighlightDto::new).collect(Collectors.toList());
            }
            return null;
        } catch (LanguageServerException | InterruptedException | ExecutionException e) {
            throw new JsonRpcException(-27000, e.getMessage());
        }
    }

