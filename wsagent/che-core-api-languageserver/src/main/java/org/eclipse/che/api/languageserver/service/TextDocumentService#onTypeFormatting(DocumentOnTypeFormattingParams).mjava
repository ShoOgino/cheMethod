  private List<TextEditDto> onTypeFormatting(
      DocumentOnTypeFormattingParams documentOnTypeFormattingParams) {
    try {
      String uri = prefixURI(documentOnTypeFormattingParams.getTextDocument().getUri());
      documentOnTypeFormattingParams.getTextDocument().setUri(uri);
      InitializedLanguageServer server =
          languageServerRegistry
              .getApplicableLanguageServers(uri)
              .stream()
              .flatMap(Collection::stream)
              .filter(
                  s ->
                      s.getInitializeResult()
                              .getCapabilities()
                              .getDocumentOnTypeFormattingProvider()
                          != null)
              .findFirst()
              .get();
      return server == null
          ? Collections.emptyList()
          : server
              .getServer()
              .getTextDocumentService()
              .onTypeFormatting(documentOnTypeFormattingParams)
              .get()
              .stream()
              .map(TextEditDto::new)
              .collect(Collectors.toList());
    } catch (InterruptedException | ExecutionException | LanguageServerException e) {
      throw new JsonRpcException(-27000, e.getMessage());
    }
  }

