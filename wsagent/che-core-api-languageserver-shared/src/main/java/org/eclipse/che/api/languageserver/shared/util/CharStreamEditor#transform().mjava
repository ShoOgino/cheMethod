  public List<TextEdit> transform() {
    List<TextEdit> inverse = new ArrayList<>();

    Iterator<TextEdit> editIterator = edits.iterator();
    ch = source.get();
    while (editIterator.hasNext()) {
      TextEdit edit = editIterator.next();

      advanceTo(edit.getRange().getStart(), sink);
      Position undoStart = new Position(currentWriteLine, currentWriteChar);
      for (int i = 0; i < edit.getNewText().length(); i++) {
        sink.accept((int) edit.getNewText().charAt(i));
      }
      StringBuilder replaced = new StringBuilder();
      advanceTo(edit.getRange().getEnd(), forStringBuilder(replaced));
      Position undoEnd = new Position(currentWriteLine, currentWriteChar);
      inverse.add(new TextEdit(new Range(undoStart, undoEnd), replaced.toString()));
    }
    // all edits have been processed. Copy the rest of the chars.
    while (ch >= 0) {
      sink.accept(ch);
      ch = source.get();
    }
    return inverse;
  }

