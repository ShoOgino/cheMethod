    /**
     * @param branchName
     *         current repository branch name
     * @param statusCommand
     *         Jgit status command
     * @param format
     *         the output format for the status
     * @throws GitException
     *         when any error occurs
     */
    public JGitStatusImpl(String branchName, StatusCommand statusCommand, StatusFormat format) throws GitException {
        this.branchName = branchName;
        this.format = format;

        org.eclipse.jgit.api.Status gitStatus;
        try {
            gitStatus = statusCommand.call();
        } catch (GitAPIException exception) {
            throw new GitException(exception.getMessage(), exception);
        }

        clean = gitStatus.isClean();
        added = new ArrayList<>(gitStatus.getAdded());
        changed = new ArrayList<>(gitStatus.getChanged());
        removed = new ArrayList<>(gitStatus.getRemoved());
        missing = new ArrayList<>(gitStatus.getMissing());
        modified = new ArrayList<>(gitStatus.getModified());
        untracked = new ArrayList<>(gitStatus.getUntracked());
        untrackedFolders = new ArrayList<>(gitStatus.getUntrackedFolders());
        conflicting = new ArrayList<>(gitStatus.getConflicting());
    }

