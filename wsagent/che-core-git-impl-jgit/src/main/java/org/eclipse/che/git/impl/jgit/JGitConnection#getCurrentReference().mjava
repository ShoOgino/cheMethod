  /**
   * Get the current reference on the current directory
   *
   * @return reference object with branch, tag or commit id
   * @throws GitException if any exception occurs
   */
  public Reference getCurrentReference() throws GitException {
    try {
      String reference = Repository.shortenRefName(repository.exactRef(HEAD).getLeaf().getName());
      if (HEAD.equals(reference)) {
        reference = repository.resolve(HEAD).getName();
        try (RevWalk revWalk = new RevWalk(repository)) {
          for (Tag tag : tagList(null)) {
            String tagName = tag.getName();
            if (revWalk.parseCommit(repository.resolve(tagName)).getName().equals(reference)) {
              return new Reference(tagName, TAG) {};
            }
          }
        }
        return new Reference(reference, COMMIT) {};
      }
      return new Reference(reference, BRANCH) {};
    } catch (IOException exception) {
      throw new GitException(exception.getMessage(), exception);
    }
  }

