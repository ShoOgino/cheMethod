  @Override
  public List<Remote> remoteList(String remoteName, boolean verbose) throws GitException {
    StoredConfig config = repository.getConfig();
    Set<String> remoteNames =
        new HashSet<>(config.getSubsections(ConfigConstants.CONFIG_KEY_REMOTE));

    if (remoteName != null && remoteNames.contains(remoteName)) {
      remoteNames.clear();
      remoteNames.add(remoteName);
    }

    List<Remote> result = new ArrayList<>(remoteNames.size());
    for (String remote : remoteNames) {
      try {
        List<URIish> uris = new RemoteConfig(config, remote).getURIs();
        result.add(
            newDto(Remote.class)
                .withName(remote)
                .withUrl(uris.isEmpty() ? null : uris.get(0).toString()));
      } catch (URISyntaxException exception) {
        throw new GitException(exception.getMessage(), exception);
      }
    }
    return result;
  }

