    /**
     * Method for generate exception message. The default logic return message from the error.
     * It also check if the type of the message is for SSL or in case that the error
     * start with "file name to long" then it raise the relevant message
     *
     * @param error
     *         throwable error
     * @return exception message
     */
    private String generateExceptionMessage(Throwable error) {
        String message = error.getMessage();
        while (error.getCause() != null) {
            //if e caused by an SSLHandshakeException - replace thrown message with a hardcoded message
            if (error.getCause() instanceof SSLHandshakeException) {
                message = "The system is not configured to trust the security certificate provided by the Git server";
                break;
            } else if (error.getCause() instanceof IOException) {
                // Security fix - error message should not include complete local file path on the target system
                // Error message for example - File name too long (path /xx/xx/xx/xx/xx/xx/xx/xx /, working dir /xx/xx/xx)
                if (message != null && message.startsWith(FILE_NAME_TOO_LONG_ERROR_PREFIX)) {
                    try {
                        String repoPath = repository.getWorkTree().getCanonicalPath();
                        int startIndex = message.indexOf(repoPath);
                        int endIndex = message.indexOf(",");
                        if (startIndex > -1 && endIndex > -1) {
                            message = FILE_NAME_TOO_LONG_ERROR_PREFIX + " " + message.substring(startIndex + repoPath.length(), endIndex);
                        }
                        break;
                    } catch (IOException e) {
                        //Hide exception as it is only needed for this message generation
                    }
                }
            }
            error = error.getCause();
        }
        return message;
    }

