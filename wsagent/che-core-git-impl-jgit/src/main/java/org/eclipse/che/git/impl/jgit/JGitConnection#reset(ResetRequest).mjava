    @Override
    public void reset(ResetRequest request) throws GitException {
        try {
            ResetCommand resetCommand = getGit().reset();
            resetCommand.setRef(request.getCommit());
            List<String> patterns = request.getFilePattern();
            patterns.stream().forEach(resetCommand::addPath);

            if (request.getType() != null && patterns.isEmpty()) {
                switch (request.getType()) {
                    case HARD:
                        resetCommand.setMode(ResetType.HARD);
                        break;
                    case KEEP:
                        resetCommand.setMode(ResetType.KEEP);
                        break;
                    case MERGE:
                        resetCommand.setMode(ResetType.MERGE);
                        break;
                    case MIXED:
                        resetCommand.setMode(ResetType.MIXED);
                        break;
                    case SOFT:
                        resetCommand.setMode(ResetType.SOFT);
                        break;
                }
            }

            resetCommand.call();
        } catch (GitAPIException exception) {
            throw new GitException(exception.getMessage(), exception);
        }
    }

