    /**
     * Show changes between specified revision and empty tree.
     *
     * @param commitId
     *            id of commit
     * @param formatter
     *            diff formatter
     * @return list of diff entries
     * @throws IOException
     *             if any i/o errors occurs
     */
    private List<DiffEntry> emptyToCommit(String commitId, DiffFormatter formatter) throws IOException {
        ObjectId commit = repository.resolve(commitId);
        checkArgument(commit != null, "Invalid commit id " + commitId);
        RevTree tree;
        try (RevWalk revWalkA = new RevWalk(repository)) {
            tree = revWalkA.parseTree(commit);
        }

        List<DiffEntry> diff;
        try (ObjectReader reader = repository.newObjectReader()) {
            CanonicalTreeParser iterator = new CanonicalTreeParser();
            iterator.reset(reader, tree);
            diff = formatter.scan(new EmptyTreeIterator(), iterator);
        }
        return diff;
    }

