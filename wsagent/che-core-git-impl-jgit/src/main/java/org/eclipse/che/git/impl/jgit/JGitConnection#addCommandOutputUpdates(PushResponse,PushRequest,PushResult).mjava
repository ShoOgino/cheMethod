    private PushResponse addCommandOutputUpdates(PushResponse pushResponseDto, final PushRequest request,
                                                 final PushResult result) throws GitException {
        String commandOutput = result.getMessages();
        final Collection<RemoteRefUpdate> refUpdates = result.getRemoteUpdates();
        final List<Map<String, String>> updates = new ArrayList<>();
        final String currentBranch = getCurrentBranch();

        for (RemoteRefUpdate remoteRefUpdate : refUpdates) {
            final String remoteRefName = remoteRefUpdate.getRemoteName();
            // check status only for branch given in the URL or tags - (handle special "refs/for" case)
            String shortenRefFor = remoteRefName.startsWith("refs/for/") ?
                    remoteRefName.substring("refs/for/".length()) :
                    remoteRefName;
            if (currentBranch.equals(Repository.shortenRefName(remoteRefName)) || currentBranch.equals(shortenRefFor)
                    || remoteRefName.startsWith(Constants.R_TAGS)) {
                Map<String, String> update = new HashMap<>();
                RemoteRefUpdate.Status status = remoteRefUpdate.getStatus();
                if (status != RemoteRefUpdate.Status.UP_TO_DATE || !remoteRefName.startsWith(Constants.R_TAGS)) {
                    update.put(KEY_COMMIT_MESSAGE, remoteRefUpdate.getMessage());
                    update.put(KEY_RESULT, status.name());
                    TrackingRefUpdate refUpdate = remoteRefUpdate.getTrackingRefUpdate();
                    if (refUpdate != null) {
                        update.put(KEY_REMOTENAME, Repository.shortenRefName(refUpdate.getLocalName()));
                        update.put(KEY_LOCALNAME, Repository.shortenRefName(refUpdate.getRemoteName()));
                    } else {
                        update.put(KEY_REMOTENAME, Repository.shortenRefName(remoteRefUpdate.getSrcRef()));
                        update.put(KEY_LOCALNAME, Repository.shortenRefName(remoteRefUpdate.getRemoteName()));
                    }
                    updates.add(update);
                }
                if (status != RemoteRefUpdate.Status.OK) {
                    commandOutput = buildPushFailedMessage(request, remoteRefUpdate, currentBranch);
                }
            }
        }
        return pushResponseDto.withCommandOutput(commandOutput).withUpdates(updates);
    }

