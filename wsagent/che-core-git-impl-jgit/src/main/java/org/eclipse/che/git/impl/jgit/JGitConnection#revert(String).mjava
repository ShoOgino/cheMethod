  @Override
  public RevertResult revert(String commit) throws GitException {
    RevCommit revCommit;

    RevertCommand revertCommand = getGit().revert();
    try {
      revertCommand.include(this.repository.resolve(commit));
      revCommit = revertCommand.call();
    } catch (IOException | GitAPIException exception) {
      throw new GitException(exception.getMessage(), exception);
    }

    List<Ref> jGitRevertedCommits = revertCommand.getRevertedRefs();
    List<String> revertedCommits = new ArrayList<>();
    if (jGitRevertedCommits != null) {
      for (Ref ref : jGitRevertedCommits) {
        revertedCommits.add(ref.getObjectId().name());
      }
    }
    String newHead = null;
    if (revCommit != null) {
      newHead = revCommit.getId().getName();
    }
    return newDto(RevertResult.class)
        .withRevertedCommits(revertedCommits)
        .withConflicts(revertCommand.getUnmergedPaths())
        .withNewHead(newHead);
  }

