    @Override
    public ShowFileContentResponse showFileContent(String file, String version) throws GitException {
        String content;
        ObjectId revision;
        try {
            revision = getRepository().resolve(version);
            try (RevWalk revWalk = new RevWalk(getRepository())) {
                RevCommit revCommit = revWalk.parseCommit(revision);
                RevTree tree = revCommit.getTree();

                try (TreeWalk treeWalk = new TreeWalk(getRepository())) {
                    treeWalk.addTree(tree);
                    treeWalk.setRecursive(true);
                    treeWalk.setFilter(PathFilter.create(file));
                    if (!treeWalk.next()) {
                        throw new GitException("fatal: Path '" + file + "' does not exist in '" + version + "'" + lineSeparator());
                    }
                    ObjectId objectId = treeWalk.getObjectId(0);
                    ObjectLoader loader = repository.open(objectId);
                    content = new String(loader.getBytes());
                }
            }
        } catch (IOException exception) {
            throw new GitException(exception.getMessage());
        }
        return newDto(ShowFileContentResponse.class).withContent(content);
    }

