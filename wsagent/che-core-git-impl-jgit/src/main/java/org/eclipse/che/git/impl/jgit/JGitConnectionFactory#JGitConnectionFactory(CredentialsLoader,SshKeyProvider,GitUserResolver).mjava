  @Inject
  public JGitConnectionFactory(
      CredentialsLoader credentialsLoader,
      SshKeyProvider sshKeyProvider,
      GitUserResolver userResolver)
      throws GitException {
    this.credentialsLoader = credentialsLoader;
    this.sshKeyProvider = sshKeyProvider;
    this.userResolver = userResolver;

    UserAgent.set(USER_AGENT);
    // Install the all-trusting trust manager
    try {
      SSLContext sslContext = SSLContext.getInstance("SSL");
      // Create a trust manager that does not validate certificate chains
      TrustManager[] trustAllCerts =
          new TrustManager[] {
            new X509TrustManager() {
              public java.security.cert.X509Certificate[] getAcceptedIssuers() {
                return null;
              }

              public void checkClientTrusted(
                  java.security.cert.X509Certificate[] certs, String authType) {}

              public void checkServerTrusted(
                  java.security.cert.X509Certificate[] certs, String authType) {}
            }
          };
      sslContext.init(null, trustAllCerts, new java.security.SecureRandom());
      HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());
    } catch (NoSuchAlgorithmException | KeyManagementException e) {
      throw new GitException(e);
    }
  }

