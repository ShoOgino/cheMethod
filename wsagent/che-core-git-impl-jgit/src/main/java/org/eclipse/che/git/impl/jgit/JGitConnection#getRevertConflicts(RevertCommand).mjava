  private Map<String, RevertResult.RevertStatus> getRevertConflicts(RevertCommand revertCommand) {
    Map<String, RevertResult.RevertStatus> conflicts = new HashMap<>();
    if (revertCommand.getFailingResult() != null) {
      Map<String, MergeFailureReason> failingPaths =
          revertCommand.getFailingResult().getFailingPaths();
      if (failingPaths != null && !failingPaths.isEmpty()) {
        failingPaths
            .entrySet()
            .forEach(
                failure ->
                    conflicts.put(
                        failure.getKey(),
                        getRevertStatusFromMergeFailureReason(failure.getValue())));
      }
    }
    List<String> unmergedPaths = revertCommand.getUnmergedPaths();
    if (unmergedPaths != null && !unmergedPaths.isEmpty()) {
      unmergedPaths
          .stream()
          .filter(unmergedPath -> !conflicts.containsKey(unmergedPath))
          .forEach(unmergedPath -> conflicts.put(unmergedPath, RevertResult.RevertStatus.FAILED));
    }
    return conflicts;
  }

