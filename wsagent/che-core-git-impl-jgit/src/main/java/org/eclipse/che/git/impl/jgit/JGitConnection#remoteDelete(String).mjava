  @Override
  public void remoteDelete(String name) throws GitException {
    StoredConfig config = repository.getConfig();
    Set<String> remoteNames = config.getSubsections(ConfigConstants.CONFIG_KEY_REMOTE);
    if (!remoteNames.contains(name)) {
      throw new GitException("error: Could not remove config section 'remote." + name + "'");
    }

    config.unsetSection(ConfigConstants.CONFIG_REMOTE_SECTION, name);
    Set<String> branches = config.getSubsections(ConfigConstants.CONFIG_BRANCH_SECTION);

    for (String branch : branches) {
      String r =
          config.getString(
              ConfigConstants.CONFIG_BRANCH_SECTION, branch, ConfigConstants.CONFIG_KEY_REMOTE);
      if (name.equals(r)) {
        config.unset(
            ConfigConstants.CONFIG_BRANCH_SECTION, branch, ConfigConstants.CONFIG_KEY_REMOTE);
        config.unset(
            ConfigConstants.CONFIG_BRANCH_SECTION, branch, ConfigConstants.CONFIG_KEY_MERGE);
        List<Branch> remoteBranches = branchList(LIST_REMOTE);
        for (Branch remoteBranch : remoteBranches) {
          if (remoteBranch.getDisplayName().startsWith(name)) {
            branchDelete(remoteBranch.getName(), true);
          }
        }
      }
    }

    try {
      config.save();
    } catch (IOException exception) {
      throw new GitException(exception.getMessage(), exception);
    }
  }

