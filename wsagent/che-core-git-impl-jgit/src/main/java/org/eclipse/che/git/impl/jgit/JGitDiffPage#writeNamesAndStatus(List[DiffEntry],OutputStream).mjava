  private void writeNamesAndStatus(List<DiffEntry> diff, OutputStream out)
      throws IOException, GitException {
    PrintWriter writer = new PrintWriter(out);
    int diffSize = diff.size();

    Status status =
        gitConnection.status(diff.stream().map(DiffEntry::getNewPath).collect(Collectors.toList()));

    for (DiffEntry de : diff) {
      switch (de.getChangeType()) {
        case ADD:
          writer.print(
              (status.getUntracked().contains(de.getNewPath()) ? "U" : "A")
                  + "\t"
                  + de.getNewPath()
                  + (diffSize != diff.indexOf(de) + 1 ? lineSeparator() : ""));
          break;
        case DELETE:
          writer.print(
              "D\t" + de.getOldPath() + (diffSize != diff.indexOf(de) + 1 ? lineSeparator() : ""));
          break;
        case MODIFY:
          writer.print(
              "M\t" + de.getNewPath() + (diffSize != diff.indexOf(de) + 1 ? lineSeparator() : ""));
          break;
        case COPY:
          writer.print(
              "C\t"
                  + de.getOldPath()
                  + '\t'
                  + de.getNewPath()
                  + (diffSize != diff.indexOf(de) + 1 ? lineSeparator() : ""));
          break;
        case RENAME:
          writer.print(
              "R\t"
                  + de.getOldPath()
                  + '\t'
                  + de.getNewPath()
                  + (diffSize != diff.indexOf(de) + 1 ? lineSeparator() : ""));
          break;
      }
    }
    writer.flush();
  }

