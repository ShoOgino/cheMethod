  /**
   * @param reference current reference
   * @param statusCommand Jgit status command
   * @throws GitException when any error occurs
   */
  JGitStatusImpl(Reference reference, StatusCommand statusCommand) throws GitException {
    this.reference = reference;
    this.refName = reference.getName();
    this.branchName = reference.getType() == BRANCH ? refName : HEAD;

    org.eclipse.jgit.api.Status gitStatus;
    try {
      gitStatus = statusCommand.call();
    } catch (GitAPIException exception) {
      throw new GitException(exception.getMessage(), exception);
    }

    clean = gitStatus.isClean();
    added = new ArrayList<>(gitStatus.getAdded());
    changed = new ArrayList<>(gitStatus.getChanged());
    removed = new ArrayList<>(gitStatus.getRemoved());
    missing = new ArrayList<>(gitStatus.getMissing());
    modified = new ArrayList<>(gitStatus.getModified());
    untracked = new ArrayList<>(gitStatus.getUntracked());
    untrackedFolders = new ArrayList<>(gitStatus.getUntrackedFolders());
    conflicting = new ArrayList<>(gitStatus.getConflicting());
  }

