  /**
   * Execute the Java test cases and return the test result.
   *
   * <pre>
   *     Required request parameters.
   *     <em>projectPath</em> : Relative path to the project directory.
   *     <em>testFramework</em> : Name of the test framework where the tests should be run on. This should match with
   *                     the name returned by {@link TestRunner#getName()} implementation.
   * </pre>
   *
   * @param uriInfo JAX-RS implementation of UrlInfo with set of query parameters.
   * @return the test result of test case
   * @throws Exception when the test runner failed to execute test cases.
   */
  @Deprecated
  @GET
  @Path("run")
  @Produces(MediaType.APPLICATION_JSON)
  @ApiOperation(
    value = "Execute Java tests and return results",
    notes = "The GET parameters are passed to the test framework implementation."
  )
  @ApiResponses({
    @ApiResponse(code = 200, message = "OK"),
    @ApiResponse(code = 500, message = "Server error")
  })
  public TestResult run(@Context UriInfo uriInfo) throws Exception {
    try {
      Map<String, String> queryParameters = getMap(uriInfo.getQueryParameters());
      String projectPath = queryParameters.get("projectPath");
      String absoluteProjectPath = ResourcesPlugin.getPathToWorkspace() + projectPath;
      queryParameters.put("absoluteProjectPath", absoluteProjectPath);
      String testFramework = queryParameters.get("testFramework");
      TestRunner runner = frameworkRegistry.getTestRunner(testFramework);
      if (runner == null) {
        throw new WebApplicationException("No test frameworks found: " + testFramework);
      }
      TestResult result = frameworkRegistry.getTestRunner(testFramework).execute(queryParameters);
      return result;
    } catch (Throwable e) {
      throw translateException(e);
    }
  }

