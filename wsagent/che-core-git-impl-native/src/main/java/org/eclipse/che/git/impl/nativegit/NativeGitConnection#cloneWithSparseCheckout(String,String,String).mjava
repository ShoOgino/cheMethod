    @Override
    public void cloneWithSparseCheckout(String directory, String remoteUrl, String branch) throws GitException, UnauthorizedException {
        /*
        Does following sequence of Git commands:
        $ git init
        $ git remote add origin <URL>
        $ git config core.sparsecheckout true
        $ echo keepDirectory >> .git/info/sparse-checkout
        $ git pull origin master
        */
        init(newDto(InitRequest.class).withBare(false));
        remoteAdd(newDto(RemoteAddRequest.class).withName("origin").withUrl(remoteUrl));
        getConfig().add("core.sparsecheckout", "true");
        try {
            Files.write(Paths.get(getWorkingDir() + "/.git/info/sparse-checkout"),
                        (directory.startsWith("/") ? directory : "/" + directory).getBytes());
        } catch (IOException exception) {
            throw new GitException(exception.getMessage(), exception);
        }
        try {
            fetch(newDto(FetchRequest.class).withRemote("origin"));
        } catch (GitException exception) {
            throw new GitException(
                    String.format("Unable to fetch remote branch %s. Make sure it exists and can be accessed.", branch), exception);
        }
        try {
            checkout(newDto(CheckoutRequest.class).withName(branch));
        } catch (GitException exception) {
            throw new GitException(
                    String.format("Unable to checkout branch %s. Make sure it exists and can be accessed.", branch), exception);
        }
    }

