    private void writeDTOClass(String indent, PrintWriter out, Class<? extends Object> clazz, Set<Class<? extends Object>> classes) {

        out.println(indent + String.format("public static class %1$s extends %2$s implements JsonSerializable {",
                                           dtoName(clazz), clazz.getSimpleName()));

        out.println();

        out.println(indent + INDENT + String.format("public %1$s() {", dtoName(clazz)));
        out.println(indent + INDENT + "}");
        out.println();


        writeCopyConstructor(indent + INDENT, out, clazz, classes);
        out.println();

        writeToJson(indent + INDENT, out, clazz);
        out.println();

        writeEnvSpecificToJson(indent, out);

        out.println(indent + INDENT + "public String toJson() {");
        out.println(indent + INDENT + INDENT + "return toJsonElement().toString();");
        out.println(indent + INDENT + "}");
        out.println();
        out.println(String.format(indent + INDENT + "public static %1$s fromJson(String json) {", dtoName(clazz)));
        out.println(indent + INDENT + INDENT + "if (json == null) {");
        out.println(indent + INDENT + INDENT + INDENT + "return null;");
        out.println(indent + INDENT + INDENT + "}");

        out.println(indent + INDENT + INDENT + String.format("return fromJson(%1$s);", json.parse("json")));
        out.println(indent + INDENT + "}");

        out.println(String.format(indent + INDENT + "public static %1$s fromJson(%2$s jsonVal) {", dtoName(clazz),
                                  json.element()));

        out.println(indent + INDENT + INDENT + "if (jsonVal == null) {");
        out.println(indent + INDENT + INDENT + INDENT + "return null;");
        out.println(indent + INDENT + INDENT + "}");
        out.println(indent + INDENT + INDENT
                    + String.format("%1$s json= %2$s;", json.object(), json.objectValue("jsonVal")));

        out.println(indent + INDENT + INDENT + String.format("%1$s result= new %1$s();", dtoName(clazz)));
        FromJsonGenerator fromJsonGenerator = new FromJsonGenerator(json);
        for (Method m : clazz.getMethods()) {
            if (isSetter(clazz, m)) {
                fromJsonGenerator.generateFromJson(indent + INDENT + INDENT, out, m, "result", "json");
            }
        }
        out.println(indent + INDENT + INDENT + "return result;");

        out.println(indent + INDENT + "}");

        out.println(indent + "}");
    }

