  @Test
  public void shouldExecuteJUnit4TestClassWithDifferentStatuses() throws InterruptedException {
    // given
    String expectedResultAfterFirstLaunch =
        "Default Suite\n"
            + "org.eclipse.che.tests.AppOneTest\n"
            + "shouldBeIgnoredOfAppOne\n"
            + "shouldSuccessOfAppOne\n"
            + "shouldFailOfAppOne\n"
            + "org.eclipse.che.suite.Junit4TestSuite\n"
            + "org.eclipse.che.tests.AppAnotherTest\n"
            + "shouldFailOfAppAnother\n"
            + "shouldSuccessOfAppAnother\n"
            + "org.eclipse.che.tests.AppAnotherTest\n"
            + "shouldFailOfAppAnother\n"
            + "shouldSuccessOfAppAnother\n"
            + "org.eclipse.che.tests.AppAnotherTest\n"
            + "shouldFailOfAppAnother\n"
            + "shouldSuccessOfAppAnother";

    String expectedExceptionForFailedTest =
        "java.lang.AssertionError\n"
            + " at org.junit.Assert.fail(Assert.java:86)\n"
            + " at org.junit.Assert.assertTrue(Assert.java:41)";

    projectExplorer.quickRevealToItemWithJavaScript(PATH_TO_JUNIT4_TEST_CLASSES);
    projectExplorer.waitAndSelectItem(JUNIT4_PROJECT);
    // when
    menu.runCommand(
        TestMenuCommandsConstants.Run.RUN_MENU,
        TestMenuCommandsConstants.Run.TEST,
        TestMenuCommandsConstants.JUNIT_TEST_DROP_DAWN_ITEM);

    // then
    notifications.waitExpectedMessageOnProgressPanelAndClose("Test runner executed successfully.");
    pluginConsole.waitFqnOfTesClassInResultTree("org.eclipse.che.tests.AppAnotherTest");
    assertTrue(pluginConsole.getTextFromResultTree().equals(expectedResultAfterFirstLaunch));
    pluginConsole.waitFqnOfTesClassInResultTree("org.eclipse.che.tests.AppOneTest");
    pluginConsole.waitMethodMarkedAsPassed("shouldSuccessOfAppOne");
    pluginConsole.waitMethodMarkedAsFailed("shouldFailOfAppOne");
    pluginConsole.waitMethodMarkedAsIgnored("shouldBeIgnoredOfAppOne");
    try {
      pluginConsole.selectMethodWithDefinedStatus(FAILED, "shouldFailOfAppAnother");
    } catch (TimeoutException ex) {
      // remove try-catch block after issue has been resolved
      fail("Known issue https://github.com/eclipse/che/issues/7338", ex);
    }
    assertTrue(pluginConsole.getTestErrorMessage().startsWith(expectedExceptionForFailedTest));
  }

