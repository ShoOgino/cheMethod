  @Test(priority = 2)
  public void checkCommandMacrosIntoPreviewUrl() {
    commandsEditor.cancelFormInEditorByEscape();
    commandsEditor.setFocusIntoTypeCommandsEditor(PREVIEW_URL_EDITOR);
    commandsEditor.setCursorToLine(1);
    commandsEditor.waitActiveEditor();
    commandsEditor.selectMacrosLinkInCommandsEditor(PREVIEW_MACROS_LINK);
    commandsEditor.typeTextIntoSearchMacroField("server.22/");
    commandsEditor.waitTextIntoSearchMacroField("server.22/");
    String[] macrosItems = {
      "${server.22/tcp.hostname}",
      "${server.22/tcp.port}",
      "${server.22/tcp.protocol}",
      "${server.22/tcp}",
      "Returns hostname of a server registered by name",
      "Returns port of a server registered by name",
      "Returns protocol of a server registered by name",
      "Returns protocol, hostname and port of an internal server"
    };
    for (String macrosItem : macrosItems) {
      commandsEditor.waitTextIntoMacrosContainer(macrosItem);
    }
    commandsEditor.enterMacroCommandByEnter("${server.22/tcp.hostname}");
    commandsEditor.waitTextIntoEditor("${server.22/tcp.hostname}");
    commandsEditor.clickOnRunButton();
    consoles.waitExpectedTextIntoPreviewUrl("ssh");
    commandsEditor.setFocusIntoTypeCommandsEditor(PREVIEW_URL_EDITOR);
    commandsEditor.setCursorToLine(1);
    commandsEditor.selectLineAndDelete();
    commandsEditor.waitActiveEditor();
    commandsEditor.selectMacrosLinkInCommandsEditor(PREVIEW_MACROS_LINK);
    commandsEditor.selectMacroCommand("${server.22/tcp}");
    commandsEditor.typeTextIntoEditor(Keys.ARROW_UP.toString());
    commandsEditor.typeTextIntoEditor(Keys.SPACE.toString());
    commandsEditor.waitMacroCommandIsSelected("${server.22/tcp.protocol}");
    commandsEditor.enterMacroCommandByDoubleClick("${server.22/tcp.protocol}");
    commandsEditor.waitTextIntoEditor("${server.22/tcp.protocol}");
    commandsEditor.clickOnRunButton();
    consoles.waitExpectedTextIntoPreviewUrl("ssh");
  }

