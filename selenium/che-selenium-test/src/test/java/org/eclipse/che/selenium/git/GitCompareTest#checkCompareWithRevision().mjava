  @Test(priority = 3, groups = UNDER_REPAIR)
  public void checkCompareWithRevision() {
    projectExplorer.waitProjectExplorer();
    projectExplorer.waitAndSelectItem(PATH_TO_APP_CONTROLLER);

    // check the 'Close' button
    menu.runCommand(GIT, COMPARE_TOP, COMPARE_WITH_REVISION);
    git.waitGitCompareRevisionFormIsOpen();
    git.clickOnCloseRevisionButton();

    // check the compare with revision
    menu.runCommand(GIT, COMPARE_TOP, COMPARE_WITH_REVISION);
    git.waitGitCompareRevisionFormIsOpen();
    git.selectRevisionIntoCompareRevisionForm(1);
    git.clickOnRevisionCompareButton();
    git.waitGitCompareFormIsOpen();
    git.waitExpTextIntoCompareLeftEditor("// <<< checking compare content >>>");
    git.waitTextNotPresentIntoCompareRightEditor("// <<< checking compare content >>>");

    // add change to file in the compare editor
    git.setFocusOnLeftGitCompareEditor();
    git.setCursorToLine(2, LEFT_COMPARE_ST);
    git.typeTextIntoGitCompareEditor("//change content from compare editor");
    git.waitExpTextIntoCompareLeftEditor("//change content from compare editor");
    git.clickOnGitCompareCloseButton();

    try {
      askDialog.confirmAndWaitClosed();
    } catch (TimeoutException ex) {
      // remove try-catch block after issue has been resolved
      fail("Known permanent failure https://github.com/eclipse/che/issues/11769");
    }

    git.waitGitCompareFormIsClosed();
    git.waitGitCompareRevisionFormIsOpen();
    git.clickOnCloseRevisionButton();

    // check the change in the editor
    projectExplorer.openItemByPath(PATH_TO_APP_CONTROLLER);
    editor.waitActive();
    editor.waitTextIntoEditor("//change content from compare editor");
  }

