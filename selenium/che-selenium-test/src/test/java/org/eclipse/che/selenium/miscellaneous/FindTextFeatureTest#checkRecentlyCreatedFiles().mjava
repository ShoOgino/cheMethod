  @Test
  public void checkRecentlyCreatedFiles() throws Exception {
    String expectedText1 =
        format(
            "1 occurrence found in 1 file (per page results) for 'Filesystem'. Total file count - 1\n"
                + "/%s/readme.con\n"
                + "(1 occurrence of 'Filesystem' found)\n"
                + "1:   Filesystem 1K-blocks Used Available Use%% Mounted on",
            PROJECT_NAME);
    String expectedText2 =
        format(
            "1 occurrence found in 1 file (per page results) for 'Feature'. Total file count - 1\n"
                + "/%s/readme.api\n"
                + "(1 occurrence of 'Feature' found)\n"
                + "1:   FindTextFeatureTest",
            PROJECT_NAME);
    String content = "FindTextFeatureTest";
    String fileNameCreatedFromAPI = "readme.api";
    String fileNameCreatedFromTerminal = "readme.con";

    projectExplorer.waitProjectExplorer();
    projectExplorer.selectItem(PROJECT_NAME);
    if (!consoles.processesMainAreaIsOpen()) {
      consoles.clickOnProcessesTab();
    }
    terminal.waitTerminalTab();
    terminal.selectTerminalTab();
    createFileInTerminal(fileNameCreatedFromTerminal);
    WaitUtils.sleepQuietly(TestTimeoutsConstants.LOAD_PAGE_TIMEOUT_SEC);
    menu.runCommand(TestMenuCommandsConstants.Edit.EDIT, TestMenuCommandsConstants.Edit.FIND);
    findText.waitFindTextMainFormIsOpen();
    findText.typeTextIntoFindField("Filesystem");
    findText.waitTextIntoFindField("Filesystem");
    findText.setAndWaitWholeWordCheckbox(false);
    findText.waitPathIntoRootField("/" + PROJECT_NAME);
    findText.clickOnSearchButtonMainForm();
    findText.waitFindInfoPanelIsOpen();
    findText.sendCommandByKeyboardInFindInfoPanel(ARROW_RIGHT.toString());
    findText.waitExpectedTextInFindInfoPanel(asList(expectedText1.split("\n")));
    findText.selectItemInFindInfoPanel(
        format("/%s/readme.con", PROJECT_NAME),
        "1:   Filesystem 1K-blocks Used Available Use% Mounted on");
    findText.sendCommandByKeyboardInFindInfoPanel(Keys.ENTER.toString());
    editor.waitActiveTabFileName(fileNameCreatedFromTerminal);
    Assert.assertEquals(editor.getPositionOfLine(), 1);

    projectExplorer.selectItem(PROJECT_NAME);
    createFileFromAPI(PROJECT_NAME, fileNameCreatedFromAPI, content);
    WaitUtils.sleepQuietly(15);
    menu.runCommand(TestMenuCommandsConstants.Edit.EDIT, TestMenuCommandsConstants.Edit.FIND);
    findText.waitFindTextMainFormIsOpen();
    findText.typeTextIntoFindField("Feature");
    findText.waitTextIntoFindField("Feature");
    findText.setAndWaitWholeWordCheckbox(false);
    findText.waitPathIntoRootField("/" + PROJECT_NAME);
    findText.clickOnSearchButtonMainForm();
    findText.waitFindInfoPanelIsOpen();
    findText.sendCommandByKeyboardInFindInfoPanel(ARROW_RIGHT.toString());
    findText.waitExpectedTextInFindInfoPanel(asList(expectedText2.split("\n")));
    findText.selectItemInFindInfoPanel(
        format("/%s/readme.api", PROJECT_NAME), "1:   FindTextFeatureTest");
    findText.sendCommandByKeyboardInFindInfoPanel(Keys.ENTER.toString());
    editor.waitActiveTabFileName(fileNameCreatedFromAPI);
    Assert.assertEquals(editor.getPositionOfLine(), 1);
    editor.closeAllTabsByContextMenu();
  }

