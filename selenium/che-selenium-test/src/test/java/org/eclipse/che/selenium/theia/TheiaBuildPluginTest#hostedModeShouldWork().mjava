  @Test(priority = 1)
  public void hostedModeShouldWork() {
    final String projectName = "hello-world";
    final String hostedSearchSequence = ">hosted";
    final String editedSourceFile = "hello-world-backend.ts";
    final String expectedHelloWorldNotification = "Hello World!";
    final String expectedAlohaWorldNotification = "Aloha World!";
    final String suggestionForSelection = "Hosted Plugin: Start Instance";
    final String helloWorldProposal = "Hello World";
    final String helloWorldSearchSequence = ">Hello";
    final String expectedInstanceRunningMessage = "Hosted instance is running at:";
    final String parentWindow = seleniumWebDriver.getWindowHandle();
    final String expectedPluginFolderMessage =
        "Plugin folder is set to: file:///projects/hello-world";
    final String expectedStartingServerMessage = "Starting hosted instance server ...";
    final String editedSourceLine = "theia.window.showInformationMessage('Aloha World!');";
    final String expectedTextAfterDeleting =
        "context.subscriptions.push(theia.commands.registerCommand(informationMessageTestCommand, (...args: any[]) => {\n"
            + " \n"
            + "    }));";

    // run hosted mode
    theiaProjectTree.waitItem(projectName);
    theiaProjectTree.clickOnItem(projectName);
    theiaProjectTree.waitItemSelected(projectName);
    theiaIde.pressKeyCombination(Keys.LEFT_CONTROL, Keys.LEFT_SHIFT, "p");
    theiaProposalForm.waitForm();
    theiaProposalForm.enterTextToSearchField(hostedSearchSequence);
    theiaProposalForm.clickOnProposal(suggestionForSelection);
    hostedPluginSelectPathForm.waitForm();
    hostedPluginSelectPathForm.clickOnProjectItem(projectName);
    hostedPluginSelectPathForm.waitProjectItemSelected(projectName);
    hostedPluginSelectPathForm.clickOnOpenButton();
    hostedPluginSelectPathForm.waitFormClosed();
    waitNotificationEqualsTo(expectedPluginFolderMessage, parentWindow);
    waitNotificationEqualsTo(expectedStartingServerMessage, parentWindow);
    waitNotificationContains(expectedInstanceRunningMessage, parentWindow);

    // check hosted mode availability
    switchToNonParentWindow(parentWindow);
    waitDevelopmentHostTitle();
    theiaProjectTree.clickOnFilesTab();
    theiaProjectTree.waitProjectAreaOpened();
    theiaProjectTree.waitOpenWorkspaceButton();

    // check plugin output
    theiaIde.pressKeyCombination(Keys.LEFT_CONTROL, Keys.LEFT_SHIFT, "p");
    theiaProposalForm.waitSearchField();
    theiaProposalForm.enterTextToSearchField(helloWorldSearchSequence);
    theiaProposalForm.clickOnProposal(helloWorldProposal);
    theiaIde.waitNotificationEqualsTo(expectedHelloWorldNotification);
    theiaIde.waitNotificationDisappearance(expectedHelloWorldNotification);

    // check editing of the source code
    switchToParentWindow(parentWindow);
    theiaProjectTree.waitProjectAreaOpened();
    theiaProjectTree.waitItem(projectName);
    theiaProjectTree.expandPathAndOpenFile(projectName + "/src", editedSourceFile);
    theiaEditor.waitEditorTab(editedSourceFile);
    theiaEditor.waitTabSelecting(editedSourceFile);
    theiaEditor.waitActiveEditor();
    theiaEditor.selectLineText(14);
    seleniumWebDriverHelper.pressDelete();
    theiaEditor.waitEditorText(expectedTextAfterDeleting);
    theiaEditor.enterTextByTypingEachChar(editedSourceLine);
    theiaEditor.waitEditorText(editedSourceLine);
    theiaEditor.waitTabSavedStatus(editedSourceFile);

    // check applying of the changes in hosted mode window
    switchToNonParentWindow(parentWindow);
    waitDevelopmentHostTitle();
    seleniumWebDriver.navigate().refresh();
    waitDevelopmentHostTitle();
    theiaProjectTree.waitProjectAreaOpened();
    theiaProjectTree.waitOpenWorkspaceButton();
    theiaIde.pressKeyCombination(Keys.LEFT_CONTROL, Keys.LEFT_SHIFT, "p");
    theiaProposalForm.waitSearchField();
    theiaProposalForm.enterTextToSearchField(helloWorldSearchSequence);
    theiaProposalForm.clickOnProposal(helloWorldProposal);
    theiaIde.waitNotificationEqualsTo(expectedAlohaWorldNotification);
    theiaIde.waitNotificationDisappearance(expectedAlohaWorldNotification);
  }

