  private void checkStackButtons(
      List<NewWorkspace.Stack> expectedQuickStartStacks,
      List<NewWorkspace.Stack> expectedSingleMachineStacks,
      List<NewWorkspace.Stack> expectedMultiMachineStacks,
      List<String> expectedQuickStartStacksOrder,
      List<String> expectedQuickStartStacksReverseOrder) {

    newWorkspace.waitPageLoad();
    newWorkspace.waitQuickStartButton();
    newWorkspace.waitStacks(expectedQuickStartStacks);
    newWorkspace.waitStacksCount(expectedQuickStartStacks.size());

    // single machine stacks
    newWorkspace.clickOnSingleMachineButton();
    newWorkspace.waitStacks(expectedSingleMachineStacks);
    newWorkspace.waitStacksCount(expectedSingleMachineStacks.size());

    // multi-machine stacks
    newWorkspace.clickOnMultiMachineButton();
    newWorkspace.waitStacks(expectedMultiMachineStacks);
    newWorkspace.waitStacksCount(expectedMultiMachineStacks.size());

    // check that only expected stacks are displayed and no duplicates are presented and also checks
    // "All" stacks
    newWorkspace.clickOnAllButton();
    newWorkspace.waitStacks(expectedSingleMachineStacks);
    newWorkspace.waitStacks(expectedMultiMachineStacks);
    newWorkspace.waitStacksCount(
        expectedSingleMachineStacks.size() + expectedMultiMachineStacks.size());

    // quick start stacks
    newWorkspace.clickOnQuickStartButton();
    newWorkspace.waitStacksOrder(expectedQuickStartStacksOrder);
    newWorkspace.clickNameButton();
    newWorkspace.waitStacksOrder(expectedQuickStartStacksReverseOrder);

    newWorkspace.clickNameButton();
    newWorkspace.waitStacksOrder(expectedQuickStartStacksOrder);
  }

