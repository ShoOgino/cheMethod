  @Test
  public void checkSplitEditorWindow() {
    createProject(PROJECT_NAME);
    projectExplorer.selectItem(PROJECT_NAME);
    projectExplorer.quickExpandWithJavaScript();
    projectExplorer.openItemByPath(PATH_JAVA_FILE);
    loader.waitOnClosed();
    editor.waitActiveEditor();
    editor.openContextMenuForTabByName(NAME_JAVA_CLASS);
    editor.runActionForTabFromContextMenu(TabAction.SPIT_HORISONTALLY);
    editor.selectTabByIndexEditorWindowAndOpenMenu(0, NAME_JAVA_CLASS);
    editor.runActionForTabFromContextMenu(TabAction.SPLIT_VERTICALLY);
    editor.selectTabByIndexEditorWindow(1, NAME_JAVA_CLASS);
    editor.waitActiveEditor();
    editor.typeTextIntoEditor(Keys.ENTER.toString());
    editor.typeTextIntoEditor(Keys.UP.toString());
    editor.typeTextIntoEditor(TEXT);
    editor.waitTextIntoEditor(TEXT);
    editor.selectTabByIndexEditorWindow(0, NAME_JAVA_CLASS);
    editor.waitActiveEditor();
    editor.waitTextIntoEditor(TEXT);
    editor.selectTabByIndexEditorWindow(2, NAME_JAVA_CLASS);
    editor.waitActiveEditor();
    editor.waitTextIntoEditor(TEXT);
    editor.selectTabByIndexEditorWindow(2, NAME_JAVA_CLASS);
    editor.waitActiveEditor();
    editor.waitTextIntoEditor(TEXT);
    editor.setCursorToLine(1);
    editor.deleteCurrentLine();
    editor.selectTabByIndexEditorWindow(0, NAME_JAVA_CLASS);
    editor.waitActiveEditor();
    editor.waitTextNotPresentIntoEditor(TEXT);
    editor.selectTabByIndexEditorWindow(1, NAME_JAVA_CLASS);
    editor.waitActiveEditor();
    editor.waitTextNotPresentIntoEditor(TEXT);
  }

