  @Test(
      description =
          "add additional try/catch block for workaround problem in https://github.com/eclipse/che/issues/2877")
  public void generateEffectivePomTest() throws Exception {
    ide.open(workspace);
    consoles.waitJDTLSProjectResolveFinishedMessage(PROJECT_NAME);
    URL mainEffectivePomPath = GenerateEffectivePomTest.class.getResource("main");
    URL jarModuleEffectivePomPath = GenerateEffectivePomTest.class.getResource("jar-module");
    URL warModuleEffectivePomPath = GenerateEffectivePomTest.class.getResource("war-module");

    List<String> expectedMainEffectivePom =
        Files.readAllLines(Paths.get(mainEffectivePomPath.toURI()), Charset.forName("UTF-8"));
    List<String> expectedJarEffectivePom =
        Files.readAllLines(Paths.get(jarModuleEffectivePomPath.toURI()), Charset.forName("UTF-8"));
    List<String> expectedWarEffectivePom =
        Files.readAllLines(Paths.get(warModuleEffectivePomPath.toURI()), Charset.forName("UTF-8"));

    projectExplorer.waitItem(PROJECT_NAME);
    loader.waitOnClosed();
    Assert.assertTrue(
        checkCurrentEffectivePom(
            PROJECT_NAME, expectedMainEffectivePom, "qa-multimodule [effective pom]"),
        "Check Effective Pom for multi-module project");
    editor.closeAllTabsByContextMenu();
    Assert.assertTrue(
        checkCurrentEffectivePom(
            JAR_MODULE_PATH, expectedJarEffectivePom, "my-lib [effective pom]"),
        "Check Effective Pom for jar maven module");
    editor.closeAllTabsByContextMenu();
    Assert.assertTrue(
        checkCurrentEffectivePom(
            WAR_MODULE_PATH, expectedWarEffectivePom, "my-webapp [effective pom]"),
        "Check Effective Pom for war maven module");
  }

