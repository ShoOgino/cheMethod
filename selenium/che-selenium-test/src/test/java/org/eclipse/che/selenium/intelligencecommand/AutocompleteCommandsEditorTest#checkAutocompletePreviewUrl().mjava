  @Test(priority = 2)
  public void checkAutocompletePreviewUrl() {
    commandsEditor.typeTextIntoEditor(Keys.ESCAPE.toString());
    commandsEditor.setFocusIntoTypeCommandsEditor(PREVIEW_URL_EDITOR);
    commandsEditor.setCursorToLine(1);
    commandsEditor.deleteAllContent();
    commandsEditor.typeTextIntoEditor("port.80");
    commandsEditor.launchAutocompleteAndWaitContainer();
    String[] autocompleteItems = {
      "${server.port.8000/tcp}",
      "${server.port.8000}",
      "${server.port.8080/tcp}",
      "${server.port.8080}"
    };
    for (String autocompleteItem : autocompleteItems) {
      commandsEditor.waitTextIntoAutocompleteContainer(autocompleteItem);
    }
    commandsEditor.selectAutocompleteProposal("80/tcp}");
    commandsEditor.waitTextIntoDescriptionMacrosForm(
        "Returns external address of the server running on port 8080/tcp");
    commandsEditor.closeAutocomplete();
    commandsEditor.waitActiveEditor();
    commandsEditor.deleteAllContent();
    commandsEditor.typeTextIntoEditor("80.host");
    commandsEditor.launchAutocompleteAndWaitContainer();
    commandsEditor.selectItemIntoAutocompleteAndPasteByDoubleClick("${server.80");
    commandsEditor.waitTextIntoEditor("${server.8080.hostname}");
    commandsEditor.typeTextIntoEditor(Keys.ENTER.toString());
    commandsEditor.waitActiveEditor();
    commandsEditor.typeTextIntoEditor("8080.pro");
    commandsEditor.launchAutocomplete();
    commandsEditor.waitTextIntoEditor("${server.8080.protocol}");
    commandsEditor.clickOnRunButton();
    consoles.waitExpectedTextIntoConsole(BUILD_SUCCESS);
    consoles.waitExpectedTextIntoPreviewUrl("tomcat8 http");
  }

