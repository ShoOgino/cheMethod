  private void createCommand(String commandName, String command) {
    commandsExplorer.openCommandsExplorer();
    commandsExplorer.waitCommandExplorerIsOpened();
    loader.waitOnClosed();
    commandsExplorer.clickAddCommandButton(
        TestIntelligentCommandsConstants.CommandsGoals.COMMON_GOAL);
    loader.waitOnClosed();
    commandsExplorer.chooseCommandTypeInContextMenu(
        TestIntelligentCommandsConstants.CommandsTypes.CUSTOM_TYPE);
    loader.waitOnClosed();
    commandsExplorer.waitCommandInExplorerByName(
        TestIntelligentCommandsConstants.CommandsDefaultNames.CUSTOM_NAME);
    commandsEditor.waitActiveEditor();
    commandsEditor.waitTabFileWithSavedStatus(
        TestIntelligentCommandsConstants.CommandsDefaultNames.CUSTOM_NAME);
    commandsEditor.clickOnCancelCommandEditorButton();
    commandsEditor.waitTabIsNotPresent(
        TestIntelligentCommandsConstants.CommandsDefaultNames.CUSTOM_NAME);

    commandsExplorer.waitCommandExplorerIsOpened();
    commandsExplorer.selectCommandByName(
        TestIntelligentCommandsConstants.CommandsDefaultNames.CUSTOM_NAME);
    editor.waitActiveEditor();
    commandsEditor.typeTextIntoNameCommandField(commandName);
    commandsEditor.waitTextIntoNameCommandField(commandName);
    commandsEditor.waitTabCommandWithUnsavedStatus(
        TestIntelligentCommandsConstants.CommandsDefaultNames.CUSTOM_NAME);

    commandsEditor.setCursorToLine(1);
    commandsEditor.deleteAllContent();
    commandsEditor.typeTextIntoEditor(command);
    commandsEditor.waitTextIntoEditor(command);
    commandsEditor.clickOnSaveButtonInTheEditCommand();
    loader.waitOnClosed();

    projectExplorer.clickOnProjectExplorerTabInTheLeftPanel();
  }

