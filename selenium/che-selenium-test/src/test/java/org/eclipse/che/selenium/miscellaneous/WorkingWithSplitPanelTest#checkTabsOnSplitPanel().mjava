  @Test(priority = 2)
  public void checkTabsOnSplitPanel() {
    // check tabs on split panels
    multiSplitPanel.selectSplitPanel(2);
    menu.runCommand(
        TestMenuCommandsConstants.Git.GIT, TestMenuCommandsConstants.Git.INITIALIZE_REPOSITORY);
    askDialog.confirmAndWaitClosed();
    loader.waitOnClosed();
    menu.runCommand(TestMenuCommandsConstants.Git.GIT, TestMenuCommandsConstants.Git.STATUS);
    multiSplitPanel.waitTabProcessIsPresent(2, "Git status");
    multiSplitPanel.waitTabProcessIsPresent(2, "Git init");
    multiSplitPanel.waitMesageIntoSplitGitPanel(
        2, " On branch master\n" + " Changes not staged for commit");
    multiSplitPanel.clickOnIconMultiSplitPanel(2);
    multiSplitPanel.waitSplitPanelMenuIsOpen();
    multiSplitPanel.selectCommandSplitPane("Git status");
    multiSplitPanel.waitTabNameProcessIsFocused("Git status");
    multiSplitPanel.waitSplitPanelMenuIsClosed();
    multiSplitPanel.closeProcessByTabName("Git status");
    multiSplitPanel.waitTabProcessIsNotPresent(2, "Git status");
    multiSplitPanel.clickOnIconMultiSplitPanel(2);
    multiSplitPanel.waitSplitPanelMenuIsOpen();
    multiSplitPanel.waitProcessIsNotPresentIntoPaneMenu("Git status");
    multiSplitPanel.closeProcessIntoPaneMenu("Git init");
    multiSplitPanel.waitSplitPanelMenuIsClosed();
    multiSplitPanel.waitTabProcessIsNotPresent(2, "Git init");
    menu.runCommand(TestMenuCommandsConstants.Git.GIT, TestMenuCommandsConstants.Git.ADD_TO_INDEX);
    git.confirmAddToIndexForm();
    multiSplitPanel.waitTabProcessIsPresent(2, "Git add to index");
  }

