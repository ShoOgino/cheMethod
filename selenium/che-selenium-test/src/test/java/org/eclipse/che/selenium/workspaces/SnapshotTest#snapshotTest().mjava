  @Test
  public void snapshotTest() throws Exception {
    projectExplorer.waitProjectExplorer();
    loader.waitOnClosed();
    menu.runCommand(TestMenuCommandsConstants.Run.RUN_MENU, TestMenuCommandsConstants.Run.TERMINAL);
    terminal.waitTerminalConsole();
    consoles.selectProcessByTabName("Terminal");
    terminal.typeIntoTerminal(USER_DIRECTORY);
    terminal.waitExpectedTextIntoTerminal(USER_DIRECTORY);
    terminal.typeIntoTerminal(Keys.ENTER.toString());
    terminal.typeIntoTerminal(CREATE_TEXT_FILE);
    terminal.waitExpectedTextIntoTerminal(CREATE_TEXT_FILE);
    terminal.typeIntoTerminal(Keys.ENTER.toString());
    consoles.closeTerminalIntoConsoles();
    menu.runCommand(
        TestMenuCommandsConstants.Workspace.WORKSPACE,
        TestMenuCommandsConstants.Workspace.STOP_WORKSPACE);
    toastLoader.waitExpectedTextInToastLoader("Stopping the workspace");
    toastLoader.waitExpectedTextInToastLoader("Workspace is not running", 60);
    toastLoader.clickOnStartButton();
    toastLoader.waitExpectedTextInToastLoader("Starting workspace runtime.", 20);
    projectExplorer.waitProjectExplorer();
    terminal.waitTerminalTab();
    consoles.selectProcessByTabName("Terminal");
    terminal.typeIntoTerminal(USER_DIRECTORY);
    terminal.waitExpectedTextIntoTerminal(USER_DIRECTORY);
    terminal.typeIntoTerminal(Keys.ENTER.toString());
    terminal.typeIntoTerminal(LS_COMMAND);
    terminal.waitExpectedTextIntoTerminal(LS_COMMAND);
    terminal.typeIntoTerminal(Keys.ENTER.toString());
    WaitUtils.sleepQuietly(3);
    Assert.assertTrue(terminal.getVisibleTextFromTerminal().contains(FILE_NAME));
  }

