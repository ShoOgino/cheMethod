  @Test
  public void organizeImportsTest() throws Exception {
    projectExplorer.waitItem(PROJECT_NAME);
    notificationsPopupPanel.waitProgressPopupPanelClose();
    projectExplorer.quickExpandWithJavaScript();
    projectExplorer.openItemByPath(PATH_TO_CLASS_IN_SPRING_PACKAGE);
    loader.waitOnClosed();
    editor.waitActive();
    editor.setCursorToLine(15);
    editor.deleteCurrentLine();
    editor.waitMarkerInPosition(ERROR_MARKER, 24);
    editor.waitMarkerInPosition(ERROR_MARKER, 36);
    loader.waitOnClosed();
    menu.runCommand(
        TestMenuCommandsConstants.Assistant.ASSISTANT,
        TestMenuCommandsConstants.Assistant.ORGANIZE_IMPORTS);
    loader.waitOnClosed();
    editor.waitAllMarkersDisappear(ERROR_MARKER);
    Assert.assertTrue(
        editor.checkWhatTextLinePresentOnce(
            "import org.springframework.web.servlet.ModelAndView;"));

    editor.setCursorToLine(20);
    editor.typeTextIntoEditorWithoutDelayForSaving(
        "import org.springframework.web.servlet.ModelAndView;");
    loader.waitOnClosed();
    editor.goToCursorPositionVisible(20, 8);
    editor.launchPropositionAssistPanel();
    editor.enterTextIntoFixErrorPropByEnter("Organize imports");
    loader.waitOnClosed();

    try {
      Assert.assertTrue(
          editor.checkWhatTextLinePresentOnce(
              "import org.springframework.web.servlet.ModelAndView;"));
    } catch (org.openqa.selenium.StaleElementReferenceException ex) {
      editor.selectTabByName("AppController");
      Assert.assertTrue(
          editor.checkWhatTextLinePresentOnce(
              "import org.springframework.web.servlet.ModelAndView;"));
    }
    editor.goToCursorPositionVisible(29, 23);
    menu.runCommand(
        TestMenuCommandsConstants.Assistant.ASSISTANT,
        TestMenuCommandsConstants.Assistant.QUICK_FIX);
    editor.waitPropositionAssistContainer();
    loader.waitOnClosed();
    createNewStructure();
    editor.setCursorToLine(35);
    editor.typeTextIntoEditor(CALL_TEST_TEXT);
    editor.waitMarkerInPosition(ERROR_MARKER, 36);
    editor.waitMarkerInPosition(ERROR_MARKER, 37);

    menu.runCommand(
        TestMenuCommandsConstants.Assistant.ASSISTANT,
        TestMenuCommandsConstants.Assistant.ORGANIZE_IMPORTS);

    loader.waitOnClosed();
    organizeImports.waitOrganizeImportsDialog();
    organizeImports.selectImport(NAME_OF_A_PACKAGE);
    organizeImports.clickOnNextButton();
    organizeImports.selectImport(NAME_OF_LIST_PACKAGE);
    organizeImports.clickOnBackButton();
    organizeImports.selectImport(NAME_OF_B_PACKAGE);
    organizeImports.clickOnNextButton();
    organizeImports.clickOnFinishButton();
    editor.waitAllMarkersDisappear(ERROR_MARKER);
    loader.waitOnClosed();

    projectExplorer.waitItem(PATH_TO_CLASS_IN_SPRING_PACKAGE);
    projectExplorer.openItemByPath(PATH_TO_CLASS_IN_SPRING_PACKAGE);
    loader.waitOnClosed();

    Assert.assertTrue(editor.checkWhatTextLinePresentOnce("import b.TestClass;"));
    Assert.assertTrue(editor.checkWhatTextLinePresentOnce("import java.util.ArrayList;"));
    Assert.assertTrue(editor.checkWhatTextLinePresentOnce("import java.util.List;"));
  }

