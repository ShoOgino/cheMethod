  @Test
  public void pushChangesTest() throws Exception {
    gitHubClientService.hardResetHeadToCommit(
        REPO_NAME, DEFAULT_COMMIT_SSH, gitHubUsername, gitHubPassword);

    // Clone project
    projectExplorer.waitProjectExplorer();
    menu.runCommand(
        TestMenuCommandsConstants.Workspace.WORKSPACE,
        TestMenuCommandsConstants.Workspace.IMPORT_PROJECT);
    importProject.waitAndTypeImporterAsGitInfo(
        "git@github.com:" + gitHubUsername + "/pushChangesTest.git", PROJECT_NAME);
    projectWizard.waitCreateProjectWizardForm();
    projectWizard.selectTypeProject(Wizard.TypeProject.MAVEN);
    loader.waitOnClosed();
    projectWizard.clickSaveButton();
    loader.waitOnClosed();
    projectWizard.waitCreateProjectWizardFormIsClosed();
    projectExplorer.waitProjectExplorer();
    projectExplorer.waitItem(PROJECT_NAME);

    // Create new file and push it.
    git.createNewFileAndPushItToGitHub(PROJECT_NAME, "new.html");
    consoles.waitProcessInProcessConsoleTree("Git push", LOADER_TIMEOUT_SEC);
    git.waitGitStatusBarWithMess("Successfully pushed");
    git.waitGitStatusBarWithMess("to git@github.com:" + gitHubUsername + "/pushChangesTest.git");
    events.clickEventLogBtn();
    loader.waitOnClosed();
    events.waitExpectedMessage(PUSH_MSG);

    // Change contents index.jsp
    projectExplorer.quickExpandWithJavaScript();
    projectExplorer.openItemByPath(PROJECT_NAME + "/my-webapp/src/main/webapp/index.jsp");
    editor.waitActiveEditor();
    editor.typeTextIntoEditor(NEW_CONTENT_JSP);
    editor.waitTabFileWithSavedStatus("index.jsp");
    loader.waitOnClosed();
    editor.closeFileByNameWithSaving("index.jsp");
    editor.waitWhileFileIsClosed("index.jsp");

    // Edit GreetingController.java
    projectExplorer.openItemByVisibleNameInExplorer("GreetingController.java");
    editor.waitActiveEditor();
    editor.typeTextIntoEditor(Keys.DOWN.toString());
    editor.typeTextIntoEditor(NEW_CONTENT_JAVA);
    editor.waitTextIntoEditor(NEW_CONTENT_JAVA);
    editor.waitTabFileWithSavedStatus("GreetingController");
    loader.waitOnClosed();
    editor.closeFileByNameWithSaving("GreetingController");
    editor.waitWhileFileIsClosed("GreetingController");

    // Commit changes
    projectExplorer.selectVisibleItem("GreetingController.java");
    menu.runCommand(GIT, COMMIT);
    git.waitAndRunCommit(COMMIT_MESSAGE);
    loader.waitOnClosed();
    git.waitGitStatusBarWithMess(TestGitConstants.COMMIT_MESSAGE_SUCCESS);
    events.clickEventLogBtn();
    events.waitExpectedMessage(TestGitConstants.COMMIT_MESSAGE_SUCCESS);

    // Push changes
    menu.runCommand(GIT, REMOTES_TOP, PUSH);
    loader.waitOnClosed();
    git.waitPushFormToOpen();
    git.clickPush();
    git.waitPushFormToClose();
    consoles.waitProcessInProcessConsoleTree("Git push", LOADER_TIMEOUT_SEC);
    git.waitGitStatusBarWithMess("Successfully pushed");
    git.waitGitStatusBarWithMess("to git@github.com:" + gitHubUsername + "/pushChangesTest.git");
    events.clickEventLogBtn();
    events.waitExpectedMessage(PUSH_MSG);

    // Call Push again
    menu.runCommand(GIT, REMOTES_TOP, PUSH);
    loader.waitOnClosed();
    git.waitPushFormToOpen();
    git.clickPush();
    git.waitPushFormToClose();
    notifications.waitExpectedMessageOnProgressPanelAndClosed(PUSH_NOTHING);
    git.waitGitStatusBarWithMess(PUSH_NOTHING);
    events.clickEventLogBtn();
    events.waitExpectedMessage(PUSH_MSG);
    events.clearAllMessages();

    // Soft reset
    gitHubClientService.hardResetHeadToCommit(
        REPO_NAME, DEFAULT_COMMIT_SSH, gitHubUsername, gitHubPassword);
    menu.runCommand(TestMenuCommandsConstants.Git.GIT, TestMenuCommandsConstants.Git.RESET);
    git.waitResetWindowOpen();
    git.selectCommitResetWindow(3);
    git.selectSoftReset();
    git.clickResetBtn();
    git.waitResetWindowClose();

    // Commit changes and push directly from commit window
    projectExplorer.selectItem(PROJECT_NAME);
    menu.runCommand(GIT, COMMIT);
    git.waitAndRunCommitWithPush(COMMIT_MESSAGE, "origin/master");
    loader.waitOnClosed();
    git.waitGitStatusBarWithMess(TestGitConstants.COMMIT_MESSAGE_SUCCESS);
    events.clickEventLogBtn();
    events.waitExpectedMessage(TestGitConstants.COMMIT_MESSAGE_SUCCESS);
    events.waitExpectedMessage(PUSH_MSG);

    // Amend commit
    projectExplorer.selectVisibleItem("GreetingController.java");
    menu.runCommand(GIT, COMMIT);
    git.waitAndRunAmendCommitMessage(COMMIT_MESSAGE);
    loader.waitOnClosed();
    git.waitGitStatusBarWithMess(TestGitConstants.COMMIT_MESSAGE_SUCCESS);
    events.clickEventLogBtn();
    events.waitExpectedMessage(TestGitConstants.COMMIT_MESSAGE_SUCCESS);

    // Force push
    menu.runCommand(GIT, REMOTES_TOP, PUSH);
    loader.waitOnClosed();
    git.waitPushFormToOpen();
    git.selectForcePushCheckBox();
    git.clickPush();
    git.waitPushFormToClose();
    consoles.waitProcessInProcessConsoleTree("Git push", LOADER_TIMEOUT_SEC);
    git.waitGitStatusBarWithMess("Successfully pushed");
    git.waitGitStatusBarWithMess("to git@github.com:" + gitHubUsername + "/pushChangesTest.git");
    events.clickEventLogBtn();
    events.waitExpectedMessage(PUSH_MSG);
  }

