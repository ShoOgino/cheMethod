  @Test(priority = 1)
  public void checkCodeValidation() {
    projectExplorer.openItemByPath(PATH_TO_CPP_FILE);
    editor.waitActive();

    // make error in code and check error marker with message
    editor.waitAllMarkersInvisibility(ERROR);
    editor.goToCursorPositionVisible(14, 1);
    editor.typeTextIntoEditor("c");
    editor.waitMarkerInPosition(ERROR, 14);
    editor.moveCursorToText("cint");
    editor.waitTextInHoverPopup("unknown type name 'cint'");

    // restore content and check error marker invisibility
    editor.goToCursorPositionVisible(14, 1);
    editor.typeTextIntoEditor(Keys.DELETE.toString());
    editor.waitAllMarkersInvisibility(ERROR);

    // comment line by Ctrl+'/' buttons
    projectExplorer.openItemByPath(PROJECT_NAME + "/hello.cpp");
    editor.waitActive();

    editor.goToPosition(21, 1);
    editor.launchCommentCodeFeature();
    editor.waitTextIntoEditor("//  return 0;");

    // uncomment line by Ctrl+'/' buttons
    editor.launchCommentCodeFeature();
    editor.waitTextIntoEditor("  return 0;");

    // check Signature Help feature
    editor.selectTabByName(CPP_FILE_NAME);
    editor.goToPosition(17, 1);
    editor.deleteCurrentLineAndInsertNew();
    editor.typeTextIntoEditor("  std::abs(");

    editor.waitSignaturesContainer();
    editor.waitProposalIntoSignaturesContainer("abs(int __x) -> int");
    editor.closeSignaturesContainer();
    editor.waitSignaturesContainerIsClosed();

    editor.deleteCurrentLineAndInsertNew();
  }

