  @Test
  public void commitTest() throws Exception {
    ide.open(testWorkspace);

    loader.waitOnClosed();

    projectExplorer.waitProjectExplorer();
    menu.runCommand(WORKSPACE, IMPORT_PROJECT);
    subversion.waitAndTypeImporterAsSvnInfo(
        svnRepo1UrlProvider.get(),
        PROJECT_NAME,
        svnUsernameProvider.get(),
        svnPasswordProvider.get());
    importProjectFromLocation.waitMainFormIsClosed();
    wizard.waitOpenProjectConfigForm();
    wizard.clickSaveButton();
    wizard.waitCloseProjectConfigForm();

    loader.waitOnClosed();
    projectExplorer.waitItem(PROJECT_NAME);

    projectExplorer.quickExpandWithJavaScript();
    projectExplorer.selectItem(COMMIT_FOLDER_PATH + "/" + COMMIT_TEST_FILE);
    projectExplorer.openItemByPath(COMMIT_FOLDER_PATH + "/" + COMMIT_TEST_FILE);
    editor.waitActiveEditor();
    editor.typeTextIntoEditor("changes for commit");
    menu.runAndWaitCommand(SUBVERSION, SVN_STATUS);
    loader.waitOnClosed();
    menu.runAndWaitCommand(SUBVERSION, SVN_COMMIT);
    subversion.waitSvnCommitFormOpened();
    subversion.typeSvnCommitMessage(COMMIT_MESSAGE);
    subversion.clickSvnCommitButtonCommit();
    subversion.waitSvnCommitFormClosed();

    projectExplorer.selectItem(COMMIT_FOLDER_PATH + "/" + COMMIT_TEST_FILE);
    menu.runAndWaitCommand(SUBVERSION, SVN_DELETE);
    loader.waitOnClosed();
    projectExplorer.selectItem(COMMIT_FOLDER_PATH);
    menu.runCommand(TestMenuCommandsConstants.Project.PROJECT, NEW, FILE);
    askForValueDialog.waitFormToOpen();
    askForValueDialog.typeAndWaitText(COMMIT_TEST_FILE);
    askForValueDialog.clickOkBtn();
    projectExplorer.selectItem(COMMIT_FOLDER_PATH + "/" + COMMIT_TEST_FILE);
    menu.runAndWaitCommand(SUBVERSION, SVN_ADD);
    loader.waitOnClosed();
    menu.runAndWaitCommand(SUBVERSION, SVN_COMMIT);
    subversion.waitSvnCommitFormOpened();
    subversion.typeSvnCommitMessage("clean up for commit test");
    subversion.clickSvnCommitButtonCommit();
    subversion.waitSvnCommitFormClosed();
  }

