  @Test(priority = 1)
  public void checkWebJavaPetclinicProjectCommands() {
    By textOnPreviewPage = By.xpath("//h2[text()='Welcome']");
    String tomcatIsRunning = "$TOMCAT_HOME/bin/catalina.sh";

    projectExplorer.openItemByPath(WEB_JAVA_PROJECT);

    // Select the db machine and perform 'show databases' command
    consoles.executeCommandFromProcessesArea(
        DB_MACHINE_NAME, COMMON_GOAL, "show databases", "information_schema");

    // Build and deploy the web application
    consoles.executeCommandFromProcessesArea(
        DEV_MACHINE_NAME, BUILD_GOAL, BUILD_COMMAND_ITEM.getItem(WEB_JAVA_PROJECT), BUILD_SUCCESS);

    consoles.executeCommandFromProcessesArea(
        DEV_MACHINE_NAME,
        RUN_GOAL,
        BUILD_AND_DEPLOY_COMMAND_ITEM.getItem(WEB_JAVA_PROJECT),
        "Server startup in");

    // Run the application
    consoles.checkWebElementVisibilityAtPreviewPage(textOnPreviewPage);

    // execute 'stop tomcat' command and check that tomcat process is not running
    projectExplorer.invokeCommandWithContextMenu(
        RUN_GOAL,
        WEB_JAVA_PROJECT,
        STOP_TOMCAT_COMMAND_ITEM.getItem(WEB_JAVA_PROJECT),
        DEV_MACHINE_NAME);
    consoles.selectProcessInProcessConsoleTreeByName("Terminal");
    terminal.typeIntoTerminal("ps ax");
    terminal.typeIntoTerminal(ENTER.toString());
    terminal.waitExpectedTextNotPresentTerminal(tomcatIsRunning);

    consoles.executeCommandFromProcessesArea(
        DEV_MACHINE_NAME,
        DEBUG_GOAL,
        DEBUG_COMMAND_ITEM.getItem(WEB_JAVA_PROJECT),
        LISTENING_AT_ADDRESS_8000);
  }

