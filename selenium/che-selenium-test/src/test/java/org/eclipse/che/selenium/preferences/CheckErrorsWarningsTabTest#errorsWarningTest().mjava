  @Test
  public void errorsWarningTest() throws Exception {
    List<String> expectedErrorsWarningsList = getTextInListFromFile("errors-warnings");
    String embedCode = getTextInStringFromFile("embed-code");
    projectExplorer.waitItem(PROJECT_NAME);
    notificationsPopupPanel.waitProgressPopupPanelClose();
    projectExplorer.quickExpandWithJavaScript();
    projectExplorer.openItemByVisibleNameInExplorer("AppController.java");
    editor.waitActiveEditor();
    loader.waitOnClosed();
    editor.waitActiveEditor();
    editor.deleteAllContent();
    editor.typeTextIntoEditorWithoutDelayForSaving(embedCode);
    loader.waitOnClosed();
    editor.removeLineAndAllAfterIt(104);

    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    preferences.waitPreferencesForm();
    preferences.waitMenuInCollapsedDropdown(Preferences.DropDownJavaCompilerMenu.ERRORS_WARNINGS);
    preferences.selectDroppedMenuByName(Preferences.DropDownJavaCompilerMenu.ERRORS_WARNINGS);
    preferences.getItemsFromErrorWarningsWidget();
    Assert.assertEquals(preferences.getItemsFromErrorWarningsWidget(), expectedErrorsWarningsList);

    preferences.clickOnCloseBtn();
    consoles.closeProcessesArea();
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.WARNING);
    Assert.assertEquals(editor.getQuantityMarkers(WARNING_MARKER_OVERVIEW), 13);
    Assert.assertEquals(editor.getQuantityMarkers(WARNING_MARKER), 22);

    editor.waitAnnotationsAreNotPresent(ERROR_MARKER_OVERVIEW);
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.ERROR);
    Assert.assertEquals(editor.getQuantityMarkers(ERROR_MARKER_OVERVIEW), 13);
    Assert.assertEquals(editor.getQuantityMarkers(ERROR_MARKER), 22);
    editor.waitAnnotationsAreNotPresent(WARNING_MARKER_OVERVIEW);
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.IGNORE);
    editor.waitAnnotationsAreNotPresent(ERROR_MARKER_OVERVIEW);
    editor.waitAnnotationsAreNotPresent(WARNING_MARKER_OVERVIEW);
  }

