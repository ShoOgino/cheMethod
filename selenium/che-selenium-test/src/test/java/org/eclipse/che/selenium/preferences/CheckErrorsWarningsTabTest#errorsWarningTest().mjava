  @Test
  public void errorsWarningTest() throws Exception {
    final String expectedTabTitle = "AppController";
    final URL errorsWarningFilePath = getClass().getResource("errors-warnings");
    final List<String> expectedErrorsWarningsList = readFile(errorsWarningFilePath);

    // open file
    projectExplorer.quickRevealToItemWithJavaScript(PATH_TO_CLASS_IN_SPRING_PACKAGE);
    projectExplorer.openItemByPath(PATH_TO_CLASS_IN_SPRING_PACKAGE);
    editor.waitTabIsPresent(expectedTabTitle);
    editor.waitTabSelection(0, expectedTabTitle);
    editor.waitActive();

    // check markers default settings
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    preferences.waitPreferencesForm();
    preferences.waitMenuInCollapsedDropdown(Preferences.DropDownJavaCompilerMenu.ERRORS_WARNINGS);
    preferences.selectDroppedMenuByName(Preferences.DropDownJavaCompilerMenu.ERRORS_WARNINGS);
    assertEquals(preferences.getItemsFromErrorWarningsWidget(), expectedErrorsWarningsList);
    preferences.close();
    consoles.closeProcessesArea();

    // change and check markers settings for displaying warnings
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.WARNING);
    editor.waitAnnotationsAreNotPresent(ERROR_OVERVIEW);
    waitWarningMarkersQuantity();

    // change and check markers settings for displaying errors
    editor.waitAnnotationsAreNotPresent(ERROR_OVERVIEW);
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.ERROR);
    waitErrorMarkersQuantity();

    // change and check markers settings for ignoring all markers
    editor.waitAnnotationsAreNotPresent(WARNING_OVERVIEW);
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.IGNORE);
    editor.waitAnnotationsAreNotPresent(ERROR_OVERVIEW);
    editor.waitAnnotationsAreNotPresent(WARNING_OVERVIEW);
  }

