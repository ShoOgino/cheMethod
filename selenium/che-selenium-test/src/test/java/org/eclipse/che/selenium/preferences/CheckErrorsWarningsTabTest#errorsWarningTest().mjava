  @Test
  public void errorsWarningTest() throws Exception {
    final URL errorsWarningFilePath = getClass().getResource("errors-warnings");
    final URL embedCodeFilePath = getClass().getResource("embed-code");

    List<String> expectedErrorsWarningsList = readFile(errorsWarningFilePath);
    String embedCode = readFileToString(embedCodeFilePath);
    projectExplorer.waitItem(PROJECT_NAME);
    notificationsPopupPanel.waitProgressPopupPanelClose();
    projectExplorer.quickExpandWithJavaScript();
    projectExplorer.openItemByVisibleNameInExplorer("AppController.java");
    editor.waitActive();
    loader.waitOnClosed();
    editor.waitActive();
    editor.deleteAllContent();
    editor.typeTextIntoEditorWithoutDelayForSaving(embedCode);
    loader.waitOnClosed();
    editor.removeLineAndAllAfterIt(105);

    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    preferences.waitPreferencesForm();
    preferences.waitMenuInCollapsedDropdown(Preferences.DropDownJavaCompilerMenu.ERRORS_WARNINGS);
    preferences.selectDroppedMenuByName(Preferences.DropDownJavaCompilerMenu.ERRORS_WARNINGS);
    preferences.getItemsFromErrorWarningsWidget();
    assertEquals(preferences.getItemsFromErrorWarningsWidget(), expectedErrorsWarningsList);

    preferences.close();
    consoles.closeProcessesArea();
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.WARNING);
    editor.waitAnnotationsAreNotPresent(ERROR_OVERVIEW);
    assertTrue(editor.getMarkersQuantity(WARNING_OVERVIEW) >= 12);
    assertEquals(editor.getMarkersQuantity(WARNING), 22);

    editor.waitAnnotationsAreNotPresent(ERROR_OVERVIEW);
    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.ERROR);
    assertEquals(editor.getMarkersQuantity(ERROR_OVERVIEW), 12);
    assertEquals(editor.getMarkersQuantity(ERROR), 22);
    editor.waitAnnotationsAreNotPresent(WARNING_OVERVIEW);
    assertTrue(editor.getMarkersQuantity(ERROR_OVERVIEW) >= 12);
    assertEquals(editor.getMarkersQuantity(ERROR), 22);

    menu.runCommand(TestMenuCommandsConstants.Profile.PROFILE_MENU, PREFERENCES);
    changeAllSettingsInErrorsWarningsTab(Preferences.DropDownValueForErrorWaitingWidget.IGNORE);
    editor.waitAnnotationsAreNotPresent(ERROR_OVERVIEW);
    editor.waitAnnotationsAreNotPresent(WARNING_OVERVIEW);
  }

