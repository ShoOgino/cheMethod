  @Test(priority = 1)
  public void testFoldersStructureAfterRename() {
    projectExplorer.expandPathInProjectExplorer(PROJECT_NAME + "/src/main/java/");
    projectExplorer.selectItem(PROJECT_NAME + "/src/main/java/org/eclipse/qa/examples");
    menu.runCommand(
        TestMenuCommandsConstants.Assistant.ASSISTANT,
        TestMenuCommandsConstants.Assistant.Refactoring.REFACTORING,
        TestMenuCommandsConstants.Assistant.Refactoring.RENAME);
    refactor.waitRenamePackageFormIsOpen();
    refactor.setAndWaitStateUpdateReferencesCheckbox(true);
    loader.waitOnClosed();
    refactor.typeAndWaitNewName("org.eclipse.de");
    refactor.sendKeysIntoField("v.exam");
    refactor.sendKeysIntoField("pl");
    refactor.sendKeysIntoField("es");
    refactor.sendKeysIntoField("");
    refactor.waitTextIntoNewNameField(NEW_NAME_PACKAGE);
    refactor.clickOkButtonRefactorForm();
    projectExplorer.selectItem(PROJECT_NAME);
    menu.runCommand(TestMenuCommandsConstants.Git.GIT, TestMenuCommandsConstants.Git.COMMIT);
    git.waitCommitMainFormIsOpened();
    git.waitItemCheckBoxToBeSelectedInCommitWindow(
        "src/main",
        "java/org/eclipse/dev/examples",
        "AppController.java",
        "webapp",
        "WEB-INF",
        "jsp",
        "guess_num.jsp",
        "web.xml",
        "spring-servlet.xml",
        "index.jsp",
        "pom.xml");
    git.clickOnCancelBtnComitForm();
    git.waitCommitFormClosed();
  }

