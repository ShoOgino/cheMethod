  @Test
  public void factoryWithDirectUrlWithSpecificBranch() throws Exception {
    try {
      testFactoryWithSpecificBranch.authenticateAndOpen();
    } catch (NoSuchElementException ex) {
      // remove try-catch block after issue has been resolved
      fail("https://github.com/eclipse/che/issues/8671");
    }

    projectExplorer.waitProjectExplorer();
    notificationsPopupPanel.waitProgressPopupPanelClose();
    events.clickEventLogBtn();

    events.waitExpectedMessage("Project gitPullTest imported", UPDATING_PROJECT_TIMEOUT_SEC);
    events.waitExpectedMessage(
        "Successfully configured and cloned source code of gitPullTest.",
        UPDATING_PROJECT_TIMEOUT_SEC);
    events.waitExpectedMessage(
        "Project: gitPullTest | cloned from: gitPullTest | remote branch: refs/remotes/origin/contrib-12092015 | local branch: contrib-12092015",
        UPDATING_PROJECT_TIMEOUT_SEC);

    projectExplorer.selectItem("gitPullTest");
    pullRequestPanel.waitOpenPanel();

    projectExplorer.expandPathInProjectExplorer("gitPullTest/my-lib");
    projectExplorer.waitItem("gitPullTest/my-lib/pom.xml");

    String wsId =
        workspaceServiceClient
            .getByName(seleniumWebDriver.getWorkspaceNameFromBrowserUrl(), testUser.getName())
            .getId();

    List<String> visibleItems = projectExplorer.getNamesOfAllOpenItems();
    assertTrue(
        visibleItems.containsAll(
            ImmutableList.of("gitPullTest", "my-lib", "my-webapp", "src", "pom.xml")));

    String projectType = testProjectServiceClient.getFirstProject(wsId).getType();
    assertTrue(projectType.equals("blank"));
  }

