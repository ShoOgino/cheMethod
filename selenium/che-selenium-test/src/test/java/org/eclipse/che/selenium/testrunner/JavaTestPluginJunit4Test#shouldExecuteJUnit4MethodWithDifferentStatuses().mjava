  @Test(priority = 1)
  public void shouldExecuteJUnit4MethodWithDifferentStatuses() throws InterruptedException {
    // given
    projectExplorer.openItemByPath(PATH_TO_JUNIT4_ANOTHER_TEST);
    editor.waitActiveEditor();

    editor.setCursorToDefinedLineAndChar(27, 5);

    // when
    menu.runCommand(RUN_MENU, TEST, TEST_DROP_DAWN_ITEM);
    notifications.waitExpectedMessageOnProgressPanelAndClosed("Test runner executed successfully.");

    // then
    pluginConsole.waitFqnOfTesClassInResultTree("org.eclipse.che.examples.AppAnotherTest");
    pluginConsole.waitMethodMarkedAsPassed("shouldSuccessOfAppAnother");
    assertTrue(pluginConsole.getAllNamesOfMethodsMarkedDefinedStatus(PASSED).size() == 1);
    // then

    editor.setCursorToDefinedLineAndChar(32, 5);
    menu.runCommand(RUN_MENU, TEST, TEST_DROP_DAWN_ITEM);
    notifications.waitExpectedMessageOnProgressPanelAndClosed("Test runner executed successfully.");
    pluginConsole.waitMethodMarkedAsFailed("shouldFailOfAppAnother");
    assertTrue(pluginConsole.getAllNamesOfMethodsMarkedDefinedStatus(FAILED).size() == 1);
    String testErrorMessage = pluginConsole.getTestErrorMessage();
    assertTrue(
        testErrorMessage.startsWith(APP_TEST_ANOTHER_FAIL_OUTPUT_TEMPLATE),
        "Actual message was: " + testErrorMessage);

    editor.setCursorToDefinedLineAndChar(38, 5);
    menu.runCommand(RUN_MENU, TEST, TEST_DROP_DAWN_ITEM);
    notifications.waitExpectedMessageOnProgressPanelAndClosed("Test runner executed successfully.");
    pluginConsole.waitMethodMarkedAsIgnored("shouldBeIgnoredOfAppAnother");
    assertTrue(pluginConsole.getAllNamesOfMethodsMarkedDefinedStatus(IGNORED).size() == 1);
  }

