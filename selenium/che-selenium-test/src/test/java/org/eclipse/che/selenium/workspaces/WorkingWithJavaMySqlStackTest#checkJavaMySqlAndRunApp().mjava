  @Test
  public void checkJavaMySqlAndRunApp() {
    // create workspace and project
    dashboard.open();
    navigationBar.waitNavigationBar();
    navigationBar.clickOnMenu(NavigationBar.MenuItem.WORKSPACES);
    dashboardWorkspace.waitToolbarTitleName("Workspaces");
    dashboardWorkspace.clickOnNewWorkspaceBtn();

    createWorkspace.waitToolbar();
    loader.waitOnClosed();
    createWorkspace.selectStack(TestStacksConstants.JAVA_MYSQL.getId());
    createWorkspace.typeWorkspaceName(WORKSPACE);
    projectSourcePage.clickAddOrImportProjectButton();
    projectSourcePage.selectSample(PROJECT_NAME);
    projectSourcePage.clickAdd();

    createWorkspace.clickCreate();
    loader.waitOnClosed();
    seleniumWebDriver.switchFromDashboardIframeToIde(60);

    // expand the project
    currentWindow = seleniumWebDriver.getWindowHandle();
    loader.waitOnClosed();
    projectExplorer.waitProjectExplorer();
    projectExplorer.waitItem(PROJECT_NAME, 600);
    projectExplorer.expandPathInProjectExplorer(
        PROJECT_NAME + "/src/main/java/org.springframework.samples.petclinic");
    projectExplorer.expandPathInProjectExplorer(
        PROJECT_NAME + "/src/test/java/org.springframework.samples.petclinic", 2);
    projectExplorer.openItemByPath(
        PROJECT_NAME + "/src/test/java/org/springframework/samples/petclinic/model");
    projectExplorer.openItemByPath(
        PROJECT_NAME
            + "/src/test/java/org/springframework/samples/petclinic/model/OwnerTests.java");
    editor.waitActiveEditor();
    projectExplorer.openItemByPath(
        PROJECT_NAME + "/src/main/java/org/springframework/samples/petclinic/service");
    projectExplorer.openItemByPath(
        PROJECT_NAME
            + "/src/main/java/org/springframework/samples/petclinic/service/ClinicService.java");
    editor.waitActiveEditor();

    // select the db machine and perform 'show databases'
    projectExplorer.invokeCommandWithContextMenu(
        ProjectExplorer.CommandsGoal.COMMON, PROJECT_NAME, "show databases", "db");
    loader.waitOnClosed();
    for (String text : infoDataBases) {
      consoles.waitExpectedTextIntoConsole(text);
    }

    // build and deploy the web application
    projectExplorer.invokeCommandWithContextMenu(
        ProjectExplorer.CommandsGoal.RUN, PROJECT_NAME, "build and deploy", "dev-machine");
    loader.waitOnClosed();
    consoles.waitTabNameProcessIsPresent(PROCESS_NAME);
    consoles.waitProcessInProcessConsoleTree(PROCESS_NAME);
    consoles.waitExpectedTextIntoConsole(TestBuildConstants.BUILD_SUCCESS, 150);
    consoles.waitExpectedTextIntoConsole("Server startup in", 200);
    consoles.waitPreviewUrlIsPresent();

    // run the application
    loader.waitOnClosed();
    consoles.clickOnPreviewUrl();
    seleniumWebDriver.switchToNoneCurrentWindow(currentWindow);
    checkWebJavaPetclinicAppl();
    seleniumWebDriver.close();
    seleniumWebDriver.switchTo().window(currentWindow);
    seleniumWebDriver.switchFromDashboardIframeToIde();
    consoles.waitProcessInProcessConsoleTree(PROCESS_NAME);
    consoles.waitTabNameProcessIsPresent(PROCESS_NAME);
    consoles.closeProcessByTabName(PROCESS_NAME);
    askDialog.acceptDialogWithText(MSG_CLOSE_PROCESS);
    consoles.waitProcessIsNotPresentInProcessConsoleTree(PROCESS_NAME);
    consoles.waitTabNameProcessIsNotPresent(PROCESS_NAME);
    consoles.selectProcessByTabName("Terminal");
    loader.waitOnClosed();
    terminal.typeIntoTerminal("ps ax | grep tomcat8");
    terminal.typeIntoTerminal(Keys.ENTER.toString());
    terminal.waitExpectedTextNotPresentTerminal("catalina.startup.Bootstrap start");
  }

