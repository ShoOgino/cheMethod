  @Test
  public void checkJavaMySqlAndRunApp() {
    String currentWindow;

    // create a workspace from the Java-MySql stack with the web-java-petclinic project
    dashboard.open();
    navigationBar.waitNavigationBar();
    navigationBar.clickOnMenu(WORKSPACES);
    dashboardWorkspace.waitToolbarTitleName("Workspaces");
    dashboardWorkspace.clickOnNewWorkspaceBtn();
    createWorkspace.waitToolbar();
    createWorkspace.selectStack(JAVA_MYSQL.getId());
    createWorkspace.typeWorkspaceName(WORKSPACE);
    projectSourcePage.clickAddOrImportProjectButton();
    projectSourcePage.selectSample(PROJECT_NAME);
    projectSourcePage.clickAdd();
    createWorkspace.clickCreate();

    seleniumWebDriver.switchFromDashboardIframeToIde(LOADER_TIMEOUT_SEC);
    currentWindow = seleniumWebDriver.getWindowHandle();
    projectExplorer.waitProjectExplorer();
    projectExplorer.waitItem(PROJECT_NAME, APPLICATION_START_TIMEOUT_SEC);
    loader.waitOnClosed();
    projectExplorer.selectItem(PROJECT_NAME);

    // Select the db machine and perform 'show databases'
    projectExplorer.invokeCommandWithContextMenu(COMMON, PROJECT_NAME, "show databases", "db");
    consoles.waitTabNameProcessIsPresent("db");
    for (String text : infoDataBases) {
      consoles.waitExpectedTextIntoConsole(text);
    }

    // Build and deploy the web application
    projectExplorer.selectItem(PROJECT_NAME);
    consoles.startCommandFromProcessesArea("dev-machine", RUN, BUILD_AND_DEPLOY_PROCESS);
    consoles.waitTabNameProcessIsPresent(BUILD_AND_DEPLOY_PROCESS);
    consoles.waitProcessInProcessConsoleTree(BUILD_AND_DEPLOY_PROCESS);
    try {
      consoles.waitExpectedTextIntoConsole("[INFO] Building petclinic ", ELEMENT_TIMEOUT_SEC);
    } catch (TimeoutException ex) {
      // Remove try-catch block after issue has been resolved
      fail("Known issue https://github.com/eclipse/che/issues/6483", ex);
    }
    consoles.waitExpectedTextIntoConsole(BUILD_SUCCESS, UPDATING_PROJECT_TIMEOUT_SEC);
    consoles.waitExpectedTextIntoConsole("Server startup in", PREPARING_WS_TIMEOUT_SEC);
    consoles.waitPreviewUrlIsPresent();

    // Run the application
    consoles.clickOnPreviewUrl();
    seleniumWebDriver.switchToNoneCurrentWindow(currentWindow);
    checkWebJavaPetclinicAppl();
    seleniumWebDriver.close();
    seleniumWebDriver.switchTo().window(currentWindow);
    seleniumWebDriver.switchFromDashboardIframeToIde();

    // Close terminal tab for 'build and deploy' process
    consoles.waitProcessInProcessConsoleTree(BUILD_AND_DEPLOY_PROCESS);
    consoles.waitTabNameProcessIsPresent(BUILD_AND_DEPLOY_PROCESS);
    consoles.closeProcessByTabName(BUILD_AND_DEPLOY_PROCESS);
    askDialog.acceptDialogWithText(MSG_CLOSE_PROCESS);
    consoles.waitProcessIsNotPresentInProcessConsoleTree(BUILD_AND_DEPLOY_PROCESS);
    consoles.waitTabNameProcessIsNotPresent(BUILD_AND_DEPLOY_PROCESS);

    // Check that tomcat is not running
    consoles.selectProcessByTabName("Terminal");
    loader.waitOnClosed();
    terminal.typeIntoTerminal("ps ax | grep tomcat8");
    terminal.typeIntoTerminal(ENTER.toString());
    terminal.waitExpectedTextNotPresentTerminal("catalina.startup.Bootstrap start");
  }

