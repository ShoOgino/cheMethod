  /**
   * Waits until {@code expectedText} is present in javadoc's body.
   *
   * <p>Note! Sometimes javadoc displays with delays, in this case empty frame displaying first, and
   * method waits {@code expectedText} in this empty frame even if javadoc with {@code expectedText}
   * was loaded successfully. That's why frame switching is used in the wait logic.
   *
   * @param expectedText visible text which should be present in javadoc
   */
  private void waitTextInJavaDoc(String expectedText) {
    webDriverWaitFactory
        .get()
        .until(
            (ExpectedCondition<Boolean>)
                driver -> {
                  waitAvailabilityAndSwitchToJavaDocFrame();

                  if (waitAndCheckTextPresenceInJavaDoc(expectedText)) {
                    return true;
                  }

                  seleniumWebDriver.switchTo().parentFrame();
                  return false;
                });
  }

