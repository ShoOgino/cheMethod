  @Inject
  public KeycloakAdminConsoleClient(
      DockerUtil dockerUtil,
      TestUserFactory<TestUserImpl> testUserFactory,
      TestUserFactory<DefaultTestUser> defaultTestUserFactory,
      ProcessAgent processAgent,
      @Named("che.infrastructure") String cheInfrastructure)
      throws ProcessAgentException {
    this.dockerUtil = dockerUtil;
    this.testUserFactory = testUserFactory;
    this.defaultTestUserFactory = defaultTestUserFactory;
    this.processAgent = processAgent;
    this.cheInfrastructure = cheInfrastructure;

    // obtain id of keycloak docker container
    switch (cheInfrastructure) {
      case OPENSHIFT_INFRASTRUCTURE:
        this.keycloakContainerId =
            processAgent.execute("echo $(docker ps | grep 'keycloak_keycloak-' | cut -d ' ' -f1)");
        break;

      case DOCKER_INFRASTRUCTURE:
      default:
        this.keycloakContainerId =
            processAgent.execute("echo $(docker ps | grep che_keycloak | cut -d ' ' -f1)");
        break;
    }

    if (keycloakContainerId.trim().isEmpty()) {
      throw new RuntimeException(
          "Keycloak container is not found. Make sure that correct value is set for `CHE_INFRASTRUCTURE`.");
    }
  }

