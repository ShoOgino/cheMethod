  private String doCreateUser(String username, String email, String password) throws IOException {
    String authPartOfCommand =
        format(
            "--no-config --server http://localhost:8080/auth --user %s --password %s --realm master",
            adminTestUserProvider.get().getName(), adminTestUserProvider.get().getPassword());

    String createUserCommand =
        format(
            "create users -r che -s username=%s -s enabled=true %s 2>&1",
            username, authPartOfCommand);
    String response = executor.execute(createUserCommand);
    if (!response.contains("Created new user with id ")) {
      throw new IOException("Test user creation error: " + response);
    }

    String userId = extractUserId(response);

    try {
      String setTestUsersPermanentPasswordCommand =
          format(
              "set-password -r che --username %s --new-password %s %s 2>&1",
              username, password, authPartOfCommand);
      executor.execute(setTestUsersPermanentPasswordCommand);

      String setEmailCommand =
          format("update users/%s -r che --set email=%s %s 2>&1", userId, email, authPartOfCommand);
      executor.execute(setEmailCommand);

      String addUserRoleToUserCommand =
          format(
              "add-roles -r che --uusername %s --rolename user %s 2>&1",
              username, authPartOfCommand);
      executor.execute(addUserRoleToUserCommand);

      String addReadTokenRoleToUserCommand =
          format(
              "add-roles -r che --uusername %s --cclientid broker --rolename read-token %s 2>&1",
              username, authPartOfCommand);
      executor.execute(addReadTokenRoleToUserCommand);
    } catch (IOException e) {
      // clean up user
      delete(userId, username);
      throw e;
    }

    return userId;
  }

