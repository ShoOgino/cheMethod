  public void generateAndUploadSshKeyOnGithub(String githubUsername, String githubPassword)
      throws Exception {
    waitMenuInCollapsedDropdown(Preferences.DropDownSshKeysMenu.VCS);
    selectDroppedMenuByName(Preferences.DropDownSshKeysMenu.VCS);

    loader.waitOnClosed();

    // delete github keu if it exists
    if (isSshKeyIsPresent(GITHUB_COM)) {
      deleteSshKeyByHost(GITHUB_COM);
    }

    String ideWin = seleniumWebDriver.getWindowHandle();

    // regenerate key and upload it on the gitHub
    clickOnGenerateAndUploadToGitHub();

    loader.waitOnClosed();

    // check if github key has been uploaded without authorization on github.com
    if (isSshKeyIsPresent(GITHUB_COM)) {
      clickOnCloseBtn();
      waitPreferencesFormIsClosed();
      return;
    }

    // login to github
    askDialog.waitFormToOpen(25);
    askDialog.clickOkBtn();
    askDialog.waitFormToClose();
    seleniumWebDriver.switchToNoneCurrentWindow(ideWin);

    gitHub.waitAuthorizationPageOpened();
    gitHub.typeLogin(githubUsername);
    gitHub.typePass(githubPassword);
    gitHub.clickOnSignInButton();

    loader.waitOnClosed();

    // authorize on github.com
    if (seleniumWebDriver.getWindowHandles().size() > 1) {
      loader.waitOnClosed();
      gitHub.waitAuthorizeBtn();
      gitHub.clickOnAuthorizeBtn();
      seleniumWebDriver.switchTo().window(ideWin);
    }

    seleniumWebDriver.switchTo().window(ideWin);
    loader.waitOnClosed();
    waitSshKeyIsPresent(GITHUB_COM);
    loader.waitOnClosed();
    clickOnCloseBtn();
    waitPreferencesFormIsClosed();
  }

