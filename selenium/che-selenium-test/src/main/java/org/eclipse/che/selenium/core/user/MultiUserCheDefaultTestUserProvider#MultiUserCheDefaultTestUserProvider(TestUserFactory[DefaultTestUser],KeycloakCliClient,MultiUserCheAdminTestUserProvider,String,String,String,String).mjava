  @Inject
  public MultiUserCheDefaultTestUserProvider(
      TestUserFactory<DefaultTestUser> defaultTestUserFactory,
      KeycloakCliClient keycloakCliClient,
      MultiUserCheAdminTestUserProvider adminTestUserProvider,
      @Named("che.testuser.name") String name,
      @Named("che.testuser.email") String email,
      @Named("che.testuser.password") String password,
      @Named("che.testuser.offline_token") String offlineToken) {
    this.keycloakCliClient = keycloakCliClient;
    if (email == null || email.trim().isEmpty() || password == null || password.trim().isEmpty()) {
      DefaultTestUser testUser;
      Boolean isNewUser;
      try {
        testUser = keycloakCliClient.createDefaultUser(this);
        isNewUser = true;
      } catch (IOException e) {
        LOG.warn(
            "Default test user credentials isn't set and it's impossible to create it from tests because of error. "
                + "Is going to use admin test user as a default test user.",
            e);

        isNewUser = false;

        AdminTestUser adminTestUser = adminTestUserProvider.get();
        testUser =
            defaultTestUserFactory.create(
                adminTestUser.getName(),
                adminTestUser.getEmail(),
                adminTestUser.getPassword(),
                adminTestUser.getOfflineToken(),
                adminTestUserProvider);
      }

      this.defaultTestUser = testUser;
      this.isNewUser = isNewUser;
    } else {
      this.defaultTestUser =
          defaultTestUserFactory.create(name, email, password, offlineToken, this);
      this.isNewUser = false;

      LOG.info(
          "User name='{}', id='{}' is being used as default user",
          defaultTestUser.getName(),
          defaultTestUser.getId());
    }
  }

