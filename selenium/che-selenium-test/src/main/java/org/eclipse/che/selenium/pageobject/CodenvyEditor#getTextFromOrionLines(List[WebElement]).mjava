  /**
   * Auxiliary method for reading text from Orion editor.
   *
   * @param lines List of WebElements that contain text (mostly <div> tags after
   *     ORION_ACTIVE_EDITOR_CONTAINER_XPATH locator)
   * @return the normalized text
   */
  private String getTextFromOrionLines(List<WebElement> lines) {
    StringBuilder stringBuilder = new StringBuilder();
    try {
      for (WebElement line : lines) {
        List<WebElement> elements = line.findElements(By.tagName("span"));
        elements.remove(elements.size() - 1);
        for (WebElement elem : elements) {
          stringBuilder.append(elem.getText());
        }
        stringBuilder.append("\n");
      }
      stringBuilder.deleteCharAt(stringBuilder.length() - 1);
    }
    // If an editor do not attached to the DOM (we will have state element exception). We wait attaching 2 second and try to read text again.
    catch (WebDriverException ex) {
      WaitUtils.sleepQuietly(2);
      stringBuilder.setLength(0);
      for (WebElement line : lines) {
        List<WebElement> elements = line.findElements(By.tagName("span"));
        elements.remove(elements.size() - 1);
        for (WebElement elem : elements) {
          stringBuilder.append(elem.getText());
        }
        stringBuilder.append("\n");
      }
      stringBuilder.deleteCharAt(stringBuilder.length() - 1);
    }

    return stringBuilder.toString();
  }

