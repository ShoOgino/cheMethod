  private Object instantiate(Class<?> type, Map<Class<?>, Object> container, Injector injector)
      throws Exception {
    Object obj;

    Optional<Constructor<?>> constructor = findConstructor(type);
    if (!constructor.isPresent()) {
      // interface? get instance from a guice container
      obj = injector.getInstance(type);

    } else {
      Class<?>[] parameterTypes = constructor.get().getParameterTypes();
      Object[] params = new Object[parameterTypes.length];

      for (int i = 0; i < parameterTypes.length; i++) {
        Object pt = container.get(parameterTypes[i]);
        if (pt == null) {
          pt = instantiate(parameterTypes[i], container, injector);
        }
        params[i] = pt;
      }

      obj = constructor.get().newInstance(params);
    }

    container.put(obj.getClass(), obj);
    return obj;
  }

