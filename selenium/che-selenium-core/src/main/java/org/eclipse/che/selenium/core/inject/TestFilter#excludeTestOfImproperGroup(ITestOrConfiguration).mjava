  /**
   * This method disable the test which belongs to test group which is being excluded or doesn't
   * comply current infrastructure, or doesn't support Singleuser/Multiuser type of Eclipse Che.
   *
   * @param annotation annotation of test method which reflects {@link org.testng.annotations.Test}
   *     annotation attributes.
   */
  public void excludeTestOfImproperGroup(ITestOrConfiguration annotation) {
    if (annotation.getGroups().length == 0) {
      return;
    }

    List<String> groups = new ArrayList<>(Arrays.asList(annotation.getGroups()));

    // exclude test with group from excludedGroups
    if (excludedGroups != null
        && Arrays.stream(excludedGroups.split(",")).anyMatch(groups::contains)) {
      annotation.setEnabled(false);
      return;
    }

    // exclude test which doesn't comply multiuser flag
    if (isMultiuser
        && groups.contains(TestGroup.SINGLEUSER)
        && !groups.contains(TestGroup.MULTIUSER)) {
      annotation.setEnabled(false);
      return;
    }

    // exclude test which doesn't comply singleuser flag
    if (!isMultiuser
        && groups.contains(TestGroup.MULTIUSER)
        && !groups.contains(TestGroup.SINGLEUSER)) {
      annotation.setEnabled(false);
      return;
    }

    // exclude test which doesn't support current infrastructure
    groups.remove(TestGroup.SINGLEUSER);
    groups.remove(TestGroup.MULTIUSER);
    groups.remove(TestGroup.GITHUB);
    groups.remove(TestGroup.UNDER_REPAIR);
    groups.remove(TestGroup.FLAKY);
    if (!groups.isEmpty() && !groups.contains(infrastructure.toString().toLowerCase())) {
      annotation.setEnabled(false);
    }
  }

