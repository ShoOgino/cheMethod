    @Override
    public VirtualFile copyTo(VirtualFile parent, String name, boolean overWrite) throws ForbiddenException, ConflictException, ServerException {
        checkExist();
        MemoryVirtualFile theParent = ((MemoryVirtualFile) parent);
        theParent.checkExist();
        // setting copy name accordingly
        String nameToCopy = ("".equals(String.valueOf(name).trim()) || null == name) ? this.getName() : name;

        if (isRoot()) {
            throw new ServerException("Unable copy root folder. ");
        }
        if (!parent.isFolder()) {
            throw new ForbiddenException(String.format("Unable create copy of '%s'. Item '%s' specified as parent is not a folder.",
                                                       getPath(), parent.getPath()));
        }
        if (!theParent.hasPermission(BasicPermissions.WRITE.value(), true)) {
            throw new ForbiddenException(String.format("Unable copy item '%s' to '%s'. Operation not permitted. ",
                                                       getPath(), parent.getPath()));
        }

        VirtualFile copy = doCopy(parent, nameToCopy, overWrite);
        mountPoint.putItem((MemoryVirtualFile) copy);
        SearcherProvider searcherProvider = mountPoint.getSearcherProvider();
        if (searcherProvider != null) {
            try {
                searcherProvider.getSearcher(mountPoint, true).add(parent);
            } catch (ServerException e) {
                LOG.error(e.getMessage(), e);
            }
        }
        mountPoint.getEventService().publish(new CreateEvent(mountPoint.getWorkspaceId(), copy.getPath(), copy.isFolder()));
        return copy;
    }

