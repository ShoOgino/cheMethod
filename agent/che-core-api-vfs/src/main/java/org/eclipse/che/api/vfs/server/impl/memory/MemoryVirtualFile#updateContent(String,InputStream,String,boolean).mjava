    private VirtualFile updateContent(String mediaType, InputStream content, String lockToken, boolean updateMediaType)
            throws ForbiddenException, ServerException {
        checkExist();

        if (!isFile()) {
            throw new ForbiddenException(String.format("We were unable to update the content. Item '%s' is not a file. ", getPath()));
        }
        if (mountPoint.acceptPath(getVirtualFilePath())) {
            // Don't check permissions when update file ".codenvy/misc.xml". Dirty huck :( but seems simplest solution for now.
            // Need to work with 'misc.xml' independently to user.
            if (!hasPermission(BasicPermissions.WRITE.value(), true)) {
                throw new ForbiddenException(String.format("We were unable to update item '%s'." +
                                                           " You do not have the correct permissions to complete this operation.",
                                                           getPath()));
            }
        }
        if (isFile() && !validateLockTokenIfLocked(lockToken)) {
            throw new ForbiddenException(
                    String.format("We were unable to update the content of file '%s'. The file is locked. ", getPath()));
        }

        try {
            this.content = ByteStreams.toByteArray(content);
        } catch (IOException e) {
            throw new ServerException(String.format("We were unable to set the content of '%s'. ", getPath()));
        }

        if (updateMediaType) {
            setMediaType(mediaType);
        }

        SearcherProvider searcherProvider = mountPoint.getSearcherProvider();
        if (searcherProvider != null) {
            try {
                searcherProvider.getSearcher(mountPoint, true).update(this);
            } catch (ServerException e) {
                LOG.error(e.getMessage(), e);
            }
        }
        lastModificationDate = System.currentTimeMillis();
        mountPoint.getEventService().publish(new UpdateContentEvent(mountPoint.getWorkspaceId(), getPath()));
        return this;
    }

