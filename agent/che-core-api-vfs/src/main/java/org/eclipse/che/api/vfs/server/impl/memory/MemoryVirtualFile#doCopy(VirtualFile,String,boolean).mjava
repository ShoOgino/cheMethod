    private VirtualFile doCopy(VirtualFile parent, String targetName, boolean overWrite) throws ConflictException {

        String nameToCopy = ("".equals(String.valueOf(targetName).trim()) || null == targetName) ? this.getName() : targetName;

        if (overWrite) {
            doOverWrite(parent, targetName);
        }

        VirtualFile virtualFile;
        if (isFile()) {
            virtualFile = newFile((MemoryVirtualFile) parent, nameToCopy, Arrays.copyOf(content, content.length));
        } else {
            virtualFile = newFolder((MemoryVirtualFile) parent, nameToCopy);
            LazyIterator<VirtualFile> children = getChildren(VirtualFileFilter.ALL);
            while (children.hasNext()) {
                ((MemoryVirtualFile)children.next()).doCopy(virtualFile);
            }
        }
        for (Map.Entry<String, List<String>> e : properties.entrySet()) {
            String name = e.getKey();
            List<String> value = e.getValue();
            if (value != null) {
                List<String> copy = new ArrayList<>(value);
                ((MemoryVirtualFile)virtualFile).properties.put(name, copy);
            }
        }
        if (!((MemoryVirtualFile)parent).addChild(virtualFile)) {
            throw new ConflictException(String.format("Item '%s' already exists. ", (parent.getPath() + '/' + name)));
        }
        return virtualFile;
    }

