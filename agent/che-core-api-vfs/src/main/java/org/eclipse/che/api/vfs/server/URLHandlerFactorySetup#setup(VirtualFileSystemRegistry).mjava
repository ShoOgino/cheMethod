    public synchronized static void setup(VirtualFileSystemRegistry registry) {
        try {
            new URL("ide+vfs", "", "");
        } catch (MalformedURLException mue) {
            // URL with protocol 'ide+vfs' is not supported yet. Need register URLStreamHandlerFactory.

            if (LOG.isDebugEnabled()) {
                LOG.debug("--> Try setup URLStreamHandlerFactory for protocol 'ide+vfs'. ");
            }
            try {
                // Get currently installed URLStreamHandlerFactory.
                Field factoryField = URL.class.getDeclaredField("factory");
                factoryField.setAccessible(true);
                URLStreamHandlerFactory currentFactory = (URLStreamHandlerFactory)factoryField.get(null);

                if (LOG.isDebugEnabled()) {
                    LOG.debug("--> Current instance of URLStreamHandlerFactory: "
                              + (currentFactory != null ? currentFactory.getClass().getName() : null));
                }

                //
                URLStreamHandlerFactory vfsURLFactory = new VirtualFileSystemURLHandlerFactory(currentFactory, registry);
                factoryField.set(null, vfsURLFactory);
            } catch (SecurityException | NoSuchFieldException | IllegalAccessException se) {
                throw new RuntimeException(se.getMessage(), se);
            }

            // Check 'ide+vfs' again. From now it should be possible to use such URLs.
            // At the same time we force URL to remember our protocol handler.
            // URL knows about it even if the URLStreamHandlerFactory is changed.

            try {
                new URL("ide+vfs", "", "");

                //
                if (LOG.isDebugEnabled()) {
                    LOG.debug("--> URLStreamHandlerFactory installed. ");
                }
            } catch (MalformedURLException e) {
                throw new RuntimeException(e.getMessage(), e);
            }
        }
    }

