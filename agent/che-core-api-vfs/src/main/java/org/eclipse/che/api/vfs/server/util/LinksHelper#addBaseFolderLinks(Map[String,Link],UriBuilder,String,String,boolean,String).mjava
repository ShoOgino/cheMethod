    private static void addBaseFolderLinks(Map<String, Link> links,
                                           UriBuilder baseUriBuilder,
                                           String wsName,
                                           String id,
                                           boolean isRoot,
                                           String parentId) {
        links.put(Link.REL_SELF, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "item", id), Link.REL_SELF, MediaType.APPLICATION_JSON));

        links.put(Link.REL_ACL, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "acl", id), Link.REL_ACL, MediaType.APPLICATION_JSON));

        if (!isRoot) {
            links.put(Link.REL_PARENT, //
                      createLink(createURI(baseUriBuilder.clone(), wsName, "item", parentId), Link.REL_PARENT,
                                   MediaType.APPLICATION_JSON));

            links.put(Link.REL_DELETE, //
                      createLink(createURI(baseUriBuilder.clone(), wsName, "delete", id), Link.REL_DELETE, null));

            links.put(Link.REL_COPY, //
                      createLink(createURI(baseUriBuilder.clone(), wsName, "copy", id, "parentId", "[parentId]"), Link.REL_COPY,
                                   MediaType.APPLICATION_JSON));

            links.put(Link.REL_MOVE, //
                      createLink(createURI(baseUriBuilder.clone(), wsName, "move", id, "parentId", "[parentId]"), Link.REL_MOVE,
                                   MediaType.APPLICATION_JSON));

            links.put(
                    Link.REL_RENAME, //
                    createLink(createURI(baseUriBuilder.clone(), wsName, "rename", id, "newname", "[newname]", "mediaType", "[mediaType]"),
                                 Link.REL_RENAME, MediaType.APPLICATION_JSON));
        }

        links.put(Link.REL_CHILDREN, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "children", id), Link.REL_CHILDREN, MediaType.APPLICATION_JSON));

        links.put(Link.REL_TREE, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "tree", id), Link.REL_TREE, MediaType.APPLICATION_JSON));

        links.put(Link.REL_CREATE_FOLDER, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "folder", id, "name", "[name]"), Link.REL_CREATE_FOLDER,
                               MediaType.APPLICATION_JSON));

        links.put(Link.REL_CREATE_FILE, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "file", id, "name", "[name]"), Link.REL_CREATE_FILE,
                               MediaType.APPLICATION_JSON));

        links.put(Link.REL_UPLOAD_FILE, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "uploadfile", id), Link.REL_UPLOAD_FILE, MediaType.TEXT_HTML));

        links.put(Link.REL_EXPORT, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "export", id), Link.REL_EXPORT, ExtMediaType.APPLICATION_ZIP));

        links.put(Link.REL_IMPORT, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "import", id), Link.REL_IMPORT, ExtMediaType.APPLICATION_ZIP));

        links.put(Link.REL_DOWNLOAD_ZIP, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "downloadzip", id), Link.REL_DOWNLOAD_ZIP, ExtMediaType.APPLICATION_ZIP));

        links.put(Link.REL_UPLOAD_ZIP, //
                  createLink(createURI(baseUriBuilder.clone(), wsName, "uploadzip", id), Link.REL_UPLOAD_ZIP, MediaType.TEXT_HTML));
    }

