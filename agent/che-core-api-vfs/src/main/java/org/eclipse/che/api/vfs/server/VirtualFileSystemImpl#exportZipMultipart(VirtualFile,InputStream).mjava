    // For usage from Project API.
    public static Response exportZipMultipart(VirtualFile folder, InputStream in) throws ForbiddenException, ServerException {
        final List<String> deleted = new LinkedList<>();
        final ContentStream zip = exportZip(folder, in, deleted);
        if (zip == null) {
            return Response.status(204).build();
        }
        final List<OutputItem> multipart = new LinkedList<>();
        // String name, Object entity, MediaType mediaType, String fileName
        final OutputItem updates = OutputItem.create("updates", zip.getStream(), ExtMediaType.APPLICATION_ZIP_TYPE, zip.getFileName());
        updates.getHeaders().putSingle(HttpHeaders.CONTENT_LENGTH, Long.toString(zip.getLength()));
        multipart.add(updates);

        if (!deleted.isEmpty()) {
            multipart.add(OutputItem.create("removed-paths", deleted, MediaType.APPLICATION_JSON_TYPE));
        }

        final String boundary = NameGenerator.generate(null, 8);
        return Response
                .ok(new GenericEntity<List<OutputItem>>(multipart) {
                }, "multipart/form-data; boundary=" + boundary)
                .lastModified(zip.getLastModificationDate())
                .build();
    }

