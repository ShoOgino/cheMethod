    /**
     * Executes a SQL query statement against the contents of virtual file system.
     *
     * @param query
     *         set of opaque parameters of query statement. Set of parameters that can be passed by client and how SQL statement (in case
     *         of SQL storage) created from this parameters is implementation specific
     * @param maxItems
     *         max number of items in response. If {@code -1} then no limit of max items in result set
     * @param skipCount
     *         the skip items. Must be equals or greater then {@code 0}
     * @param propertyFilter
     *         only properties which are accepted by filter should be included in response. See {@link PropertyFilter#accept(String)}
     * @return query result
     * @throws ConflictException
     *         {@code skipCount} is negative or greater then total number of items
     * @throws ServerException
     *         if any other errors occur
     * @see org.eclipse.che.api.vfs.shared.dto.VirtualFileSystemInfo#getQueryCapability()
     */
    @POST
    @Path("search")
    @Produces({MediaType.APPLICATION_JSON})
    ItemList search(MultivaluedMap<String, String> query, int maxItems, int skipCount, PropertyFilter propertyFilter)
            throws ConflictException, ServerException;

