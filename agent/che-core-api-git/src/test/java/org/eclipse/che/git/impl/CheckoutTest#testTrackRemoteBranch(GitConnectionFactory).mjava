    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
    public void testTrackRemoteBranch(GitConnectionFactory connectionFactory) throws GitException, IOException, UnauthorizedException {
        //given
        GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
        addFile(connection, "README.txt", org.eclipse.che.git.impl.GitTestUtil.CONTENT);
        connection.add(newDto(AddRequest.class).withFilepattern(ImmutableList.of("README.txt")));
        connection.commit(newDto(CommitRequest.class).withMessage("Initial add"));

        //when
        //create branch additional branch and make a commit
        connection.branchCreate(newDto(BranchCreateRequest.class).withName(FIRST_BRANCH_NAME));
        connection.checkout(newDto(CheckoutRequest.class).withName(FIRST_BRANCH_NAME));
        addFile(connection, "newfile", "new file content");
        connection.add(newDto(AddRequest.class).withFilepattern(Arrays.asList(".")));
        connection.commit(newDto(CommitRequest.class).withMessage("Commit message"));
        connection.checkout(newDto(CheckoutRequest.class).withName("master"));

        //check existence of 2 branches
        assertEquals(connection.branchList(newDto(BranchListRequest.class)).size(), 2);

        //when
        connection.checkout(newDto(CheckoutRequest.class)
                                          .withCreateNew(true)
                                          .withName(SECOND_BRANCH_NAME)
                                          .withTrackBranch(FIRST_BRANCH_NAME));
        //then
        assertEquals(connection.branchList(newDto(BranchListRequest.class)).size(), 3);
        assertTrue(new File(repository, "newfile").exists());
    }

