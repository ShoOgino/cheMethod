    private void validateProjectLinks(ProjectConfigDto project) {
        List<Link> links = project.getLinks();

        for (Link link : links) {
            switch (link.getHref()) {
                case "update project":
                    assertNotNull(link);
                    assertEquals(link.getMethod(), PUT);
                    assertEquals(link.getHref(), "http://localhost:8080/api/project/" + workspace + project.getPath());
                    assertEquals(link.getConsumes(), APPLICATION_JSON);
                    assertEquals(link.getProduces(), APPLICATION_JSON);
                    break;

                case "children":
                    assertNotNull(link);
                    assertEquals(link.getMethod(), GET);
                    assertEquals(link.getHref(), "http://localhost:8080/api/project/" + workspace + "/children" + project.getPath());
                    assertEquals(link.getProduces(), APPLICATION_JSON);
                    break;

                case "tree":
                    assertNotNull(link);
                    assertEquals(link.getMethod(), GET);
                    assertEquals(link.getHref(), "http://localhost:8080/api/project/" + workspace + "/tree" + project.getPath());
                    assertEquals(link.getProduces(), APPLICATION_JSON);
                    break;

                case "modules":
                    assertNotNull(link);
                    assertEquals(link.getMethod(), GET);
                    assertEquals(link.getHref(), "http://localhost:8080/api/project/" + workspace + "/modules" + project.getPath());
                    assertEquals(link.getProduces(), APPLICATION_JSON);
                    break;

                case "zipball sources":
                    assertNotNull(link);
                    assertEquals(link.getMethod(), GET);
                    assertEquals(link.getHref(), "http://localhost:8080/api/project/" + workspace + "/export" + project.getPath());
                    assertEquals(link.getProduces(), APPLICATION_ZIP);
                    break;

                case "delete":
                    assertNotNull(link);
                    assertEquals(link.getMethod(), DELETE);
                    assertEquals(link.getHref(), "http://localhost:8080/api/project/" + workspace + project.getPath());
                    break;
            }
        }
    }

