    @Test
    public void testUpdatePermissions() throws Exception {
        Project myProject = pm.getProject(workspace, "my_project");
        AccessControlEntry newEntry = DtoFactory.getInstance().createDto(AccessControlEntry.class)
                                                .withPermissions(singletonList("all"))
                                                .withPrincipal(DtoFactory.getInstance().createDto(Principal.class)
                                                                         .withName("other")
                                                                         .withType(Principal.Type.USER));
        AccessControlEntry newEntry2 = DtoFactory.getInstance().createDto(AccessControlEntry.class)
                                                 .withPermissions(singletonList("all"))
                                                 .withPrincipal(DtoFactory.getInstance().createDto(Principal.class)
                                                                          .withName(vfsUser).withType(Principal.Type.USER));
        //set up basic permissions
        myProject.getBaseFolder().getVirtualFile().updateACL(Arrays.asList(newEntry, newEntry2), false, null);

        HashMap<String, List<String>> headers = new HashMap<>(1);
        headers.put(CONTENT_TYPE, singletonList(APPLICATION_JSON));

        AccessControlEntry update = DtoFactory.getInstance().createDto(AccessControlEntry.class)
                                              .withPermissions(singletonList("only_custom"))
                                              .withPrincipal(DtoFactory.getInstance().createDto(Principal.class)
                                                                       .withName(vfsUser).withType(Principal.Type.USER));
        launcher.service(POST,
                         String.format("http://localhost:8080/api/project/%s/permissions/my_project", workspace),
                         "http://localhost:8080/api",
                         headers,
                         JsonHelper.toJson(singletonList(update)).getBytes(),
                         null);

        List<AccessControlEntry> acl = myProject.getBaseFolder().getVirtualFile().getACL();
        assertEquals(acl.size(), 2);
        Map<Principal, Set<String>> map = new HashMap<>(2);
        for (AccessControlEntry ace : acl) {
            map.put(ace.getPrincipal(), new HashSet<>(ace.getPermissions()));
        }
        assertNotNull(map.get(newEntry.getPrincipal()));
        assertNotNull(map.get(newEntry2.getPrincipal()));
        assertEquals(map.get(newEntry.getPrincipal()).size(), 1);
        assertEquals(map.get(newEntry2.getPrincipal()).size(), 1);
        Assert.assertTrue(map.get(newEntry.getPrincipal()).contains("all"));
        Assert.assertTrue(map.get(newEntry2.getPrincipal()).contains("only_custom"));
    }

