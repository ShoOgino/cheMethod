    @Test
    @SuppressWarnings("unchecked")
    public void testGetProjects() throws Exception {
        List<RegisteredProject> p = pm.getProjects();

        assertEquals(p.size(), 1);

        vfsProvider.getVirtualFileSystem().getRoot().createFolder("not_project");

        // to refresh
        projectRegistry.initProjects();

        ContainerResponse response =
                launcher.service(GET, "http://localhost:8080/api/project/my_ws", "http://localhost:8080/api", null, null, null);
        assertEquals(response.getStatus(), 200, "Error: " + response.getEntity());
        List<ProjectConfigDto> result = (List<ProjectConfigDto>)response.getEntity();
        assertNotNull(result);
        assertEquals(result.size(), 2);
        int good, bad;

        if (result.get(0).getName().equals("my_project")) {
            good = 0; bad = 1;
        } else {
            good = 1; bad = 0;
        }

        ProjectConfigDto projectDescriptor = result.get(good);

        assertEquals(projectDescriptor.getName(), "my_project");
        assertEquals(projectDescriptor.getDescription(), "my test project");

        assertEquals(projectDescriptor.getType(), "my_project_type");

        ProjectConfigDto badProject = result.get(bad);
        assertEquals(badProject.getName(), "not_project");
        assertNotNull(badProject.getProblems());
    }

