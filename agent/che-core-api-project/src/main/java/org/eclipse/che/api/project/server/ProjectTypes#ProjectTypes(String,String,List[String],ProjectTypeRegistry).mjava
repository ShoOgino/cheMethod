    public ProjectTypes(String projectPath,
                        String type,
                        List<String> mixinTypes,
                        ProjectTypeRegistry projectTypeRegistry) throws ProjectTypeConstraintException, NotFoundException {
        mixins = new HashMap<>();
        all = new HashMap<>();
        attributeDefs = new HashMap<>();

        this.projectTypeRegistry = projectTypeRegistry;
        this.projectPath = projectPath;

        if (type == null) {
            throw new ProjectTypeConstraintException("No primary type defined for " + projectPath);
        }

        primary = projectTypeRegistry.getProjectType(type);

        if (!primary.isPrimaryable()) {
            throw new ProjectTypeConstraintException("Project type " + primary.getId() + " is not allowable to be primary type");
        }

        all.put(primary.getId(), primary);

        List<String> mixinsFromConfig = mixinTypes;

        if (mixinsFromConfig == null) {
            mixinsFromConfig = new ArrayList<>();
        }

        for (Attribute attr : primary.getAttributes()) {
            attributeDefs.put(attr.getName(), attr);
        }

        for (String mixinFromConfig : mixinsFromConfig) {
            if (mixinFromConfig.equals(primary.getId())) {
                continue;
            }

            final ProjectTypeDef mixin = projectTypeRegistry.getProjectType(mixinFromConfig);
            if (!mixin.isMixable()) {
                throw new ProjectTypeConstraintException("Project type " + mixin + " is not allowable to be mixin. It not mixable");
            }
            if (!mixin.isPersisted()) {
                continue;
            }

            // detect duplicated attributes
            for (Attribute attr : mixin.getAttributes()) {
                if (attributeDefs.containsKey(attr.getName())) {
                    throw new ProjectTypeConstraintException(
                            "Attribute name conflict. Duplicated attributes detected " + projectPath +
                            " Attribute " + attr.getName() + " declared in " + mixin.getId() + " already declared in " +
                            attributeDefs.get(attr.getName()).getProjectType()
                    );
                }

                attributeDefs.put(attr.getName(), attr);
            }

            // Silently remove repeated items from mixins if any
            mixins.put(mixinFromConfig, mixin);
            all.put(mixinFromConfig, mixin);
        }
    }

