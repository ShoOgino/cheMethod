    private List<TreeElement> getTree(FolderEntry folder,
                                      String workspace,
                                      int depth,
                                      boolean includeFiles,
                                      UriBuilder uriBuilder) throws ServerException, NotFoundException {
        if (depth == 0) {
            return null;
        }

        final List<? extends VirtualFileEntry> children;

        if (includeFiles) {
            children = folder.getChildFoldersFiles();
        } else {
            children = folder.getChildFolders();
        }

        final List<TreeElement> nodes = new ArrayList<>(children.size());
        for (VirtualFileEntry child : children) {
            if (child.isFolder()) {
                nodes.add(DtoFactory.newDto(TreeElement.class)
                                    .withNode(DtoConverter.toItemReference((FolderEntry)child, workspace, uriBuilder.clone()))
                                    .withChildren(getTree((FolderEntry)child, workspace, depth - 1, includeFiles, uriBuilder)));
            } else {
                nodes.add(DtoFactory.newDto(TreeElement.class)
                                    .withNode(DtoConverter.toItemReference((FileEntry)child, workspace, uriBuilder.clone())));
            }
        }

        return nodes;
    }

