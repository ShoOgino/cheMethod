    @ApiOperation(value = "Delete a resource",
                  notes = "Delete resources. If you want to delete a single project, specify project name. If a folder or file needs to " +
                          "be deleted a path to the requested resource needs to be specified",
                  position = 13)
    @ApiResponses(value = {
            @ApiResponse(code = 204, message = ""),
            @ApiResponse(code = 403, message = "User not authorized to call this operation"),
            @ApiResponse(code = 404, message = "Not found"),
            @ApiResponse(code = 500, message = "Internal Server Error")})
    @DELETE
    @Path("/{path:.*}")
    public void delete(@ApiParam("Workspace ID")
                       @PathParam("ws-id") String workspace,
                       @ApiParam("Path to a resource to be deleted")
                       @PathParam("path") String path) throws NotFoundException, ForbiddenException, ConflictException, ServerException {
        try {
            filesBuffer.addToBufferRecursive(getVirtualFileEntry(workspace, path).getVirtualFile());
        } catch (NotFoundException exception) {
            LOG.warn(exception.getMessage(), exception);

            projectManager.delete(workspace, path);

            return;
        }

        projectManager.delete(workspace, path);
    }

