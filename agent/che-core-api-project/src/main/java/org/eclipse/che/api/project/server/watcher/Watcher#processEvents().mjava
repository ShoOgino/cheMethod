    /**
     * Starts process events to catch all actions related to file system and sends special event on client through web socket
     * when something changed on file system. This method is started in separated thread.
     */
    void processEvents() {
        while (true) {

            try {
                WatchKey key = watcher.take();

                Path changedDirectory = keys.get(key);

                if (changedDirectory == null) {
                    continue;
                }

                for (WatchEvent<?> event : key.pollEvents()) {
                    WatchEvent.Kind kind = event.kind();

                    if (kind == OVERFLOW) {
                        continue;
                    }

                    //noinspection unchecked
                    WatchEvent<Path> watchEvent = (WatchEvent<Path>)event;
                    Path name = watchEvent.context();
                    Path child = changedDirectory.resolve(name);

                    registerChild(kind, child);

                    sendEvents(kind, changedDirectory.toString() + '/' + name.toString());
                }

                boolean valid = key.reset();
                if (!valid) {
                    keys.remove(key);

                    if (keys.isEmpty()) {
                        break;
                    }
                }
            } catch (InterruptedException x) {
                Thread.currentThread().interrupt();
            }
        }
    }

