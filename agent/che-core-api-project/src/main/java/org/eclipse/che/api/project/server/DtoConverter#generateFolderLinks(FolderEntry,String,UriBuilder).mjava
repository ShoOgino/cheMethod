    private static List<Link> generateFolderLinks(FolderEntry folder, String workspace,  UriBuilder uriBuilder) {
        final List<Link> links = new LinkedList<>();
        final String relPath = folder.getPath().toString().substring(1);

//        links.add(LinksHelper.createLink(GET,
//                                         uriBuilder.clone().path(ProjectService.class, "exportZip").build(workspace, relPath).toString(),
//                                         ExtMediaType.APPLICATION_ZIP, LINK_REL_EXPORT_ZIP));
        links.add(LinksHelper.createLink(GET,
                                         uriBuilder.clone().path(ProjectService.class, "getChildren").build(workspace, relPath).toString(),
                                         APPLICATION_JSON, LINK_REL_CHILDREN));
        links.add(LinksHelper.createLink(GET,
                                         uriBuilder.clone().path(ProjectService.class, "getTree").build(workspace, relPath).toString(),
                                         null, APPLICATION_JSON, LINK_REL_TREE)
                 );
        links.add(LinksHelper.createLink(DELETE,
                                         uriBuilder.clone().path(ProjectService.class, "delete").build(workspace, relPath).toString(),
                                         LINK_REL_DELETE));
        return links;
    }

