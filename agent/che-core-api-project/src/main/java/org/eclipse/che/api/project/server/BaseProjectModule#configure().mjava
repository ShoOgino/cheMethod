    @Override
    protected void configure() {
        Multibinder.newSetBinder(binder(), ProjectImporter.class).addBinding().to(ZipProjectImporter.class);
        Multibinder.newSetBinder(binder(), ValueProviderFactory.class); /* empty binding */
        Multibinder.newSetBinder(binder(), ProjectHandler.class); /* empty binding */

        Multibinder<ProjectHandler> projectHandlerMultibinder = newSetBinder(binder(), ProjectHandler.class);
        projectHandlerMultibinder.addBinding().to(CreateBaseProjectTypeHandler.class);

        bind(ProjectService.class);
        bind(ProjectTypeService.class);
        bind(ProjectImportersService.class);
        bind(WatcherService.class);

        ProjectImporterInterceptor projectImporterInterceptor = new ProjectImporterInterceptor();
        requestInjection(projectImporterInterceptor);

        bindInterceptor(Matchers.subclassesOf(ProjectImporter.class), names("importSources"), projectImporterInterceptor);
    }

