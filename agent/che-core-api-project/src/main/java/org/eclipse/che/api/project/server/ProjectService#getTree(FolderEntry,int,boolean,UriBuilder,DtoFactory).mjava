    private List<TreeElement> getTree(FolderEntry folder, int depth, boolean includeFiles, UriBuilder uriBuilder, DtoFactory dtoFactory)
            throws ServerException {
        if (depth == 0) {
            return null;
        }
        final List<? extends VirtualFileEntry> children;

        if (includeFiles) {
            children = folder.getChildFoldersFiles();
        } else {
            children = folder.getChildFolders();
        }

        final List<TreeElement> nodes = new ArrayList<>(children.size());
        for (VirtualFileEntry child : children) {
            if (child.isFolder()) {
                nodes.add(dtoFactory.createDto(TreeElement.class)
                                    .withNode(DtoConverter.toItemReference((FolderEntry)child, uriBuilder.clone(), projectManager))
                                    .withChildren(getTree((FolderEntry)child, depth - 1, includeFiles, uriBuilder, dtoFactory)));
            } else { // child.isFile()
                nodes.add(dtoFactory.createDto(TreeElement.class)
                                    .withNode(DtoConverter.toItemReference((FileEntry)child, uriBuilder.clone())));
            }
        }
        return nodes;
    }

