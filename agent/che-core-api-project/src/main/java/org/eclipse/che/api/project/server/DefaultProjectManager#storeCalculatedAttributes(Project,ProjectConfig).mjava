    private void storeCalculatedAttributes(Project project, ProjectConfig projectConfig) throws ProjectTypeConstraintException,
                                                                                                ValueStorageException,
                                                                                                InvalidValueException, NotFoundException {
        final ProjectTypes types = new ProjectTypes(project, projectConfig, this);
        types.removeTransient();

        for (Map.Entry<String, List<String>> entry : projectConfig.getAttributes().entrySet()) {
            String attributeName = entry.getKey();
            List<String> attributeValue = entry.getValue();

            // Try to find definition in all the types
            Attribute attributeDefinition = null;
            for (ProjectTypeDef projectType : types.getAll().values()) {
                attributeDefinition = projectType.getAttribute(attributeName);
                if (attributeDefinition != null) {
                    break;
                }
            }

            // initialize provided attributes
            if (attributeDefinition != null && attributeDefinition.isVariable()) {
                final Variable variable = (Variable)attributeDefinition;
                final ValueProviderFactory valueProviderFactory = variable.getValueProviderFactory();

                // store calculated attribute
                if (valueProviderFactory != null) {
                    valueProviderFactory.newInstance(project.getBaseFolder()).setValues(variable.getName(), attributeValue);
                }

                if (attributeValue == null && variable.isRequired()) {
                    throw new ProjectTypeConstraintException("Required attribute value is initialized with null value " + variable.getId());
                }
            }
        }
    }

