    /**
     * Validates if Project Tye definition has  parent names which are already registered
     *
     * @param type
     * @param pass1
     * @return
     */
    private boolean isParentValid(ProjectTypeDef type, Map<String, ProjectTypeDef> pass1) {

        boolean contains = true;

        for (String parent : type.getParents()) {
            if (!pass1.keySet().contains(parent)) {
                LOG.error("Could not register Project Type: " + type.getId() + " : Unregistered parent Type: " + parent);
                contains = false;
            }
        }

        // add Base Type as a parent if not pointed
        if (type.getParents() != null && type.getParents().isEmpty() && !type.getId().equals(BASE_TYPE.getId())) {
            type.addParent(BASE_TYPE.getId());
        }

        return contains;

    }

