    /**
     * Validates incoming set of Project Type definitions
     * and forms preliminary collection of validated data to be initialized
     *
     * @param types
     */
    protected final void validate(Collection<? extends ProjectTypeDef> types) {

        Map<String, ProjectTypeDef> pass1 = new HashMap<>();

        if (!types.contains(BASE_TYPE)) {
            pass1.put(BASE_TYPE.getId(), BASE_TYPE);
        }

        for (ProjectTypeDef type : types) {

            if (isNameValid(type))
                pass1.put(type.getId(), type);

        }

        // look for parents
        for (ProjectTypeDef type : pass1.values()) {

            if (isParentValid(type, pass1))
                validatedData.put(type.getId(), type);

        }

    }

