    @ApiOperation(value = "Estimates if the folder supposed to be project of certain type",
                  response = Map.class,
                  position = 20)
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK"),
            @ApiResponse(code = 404, message = "Project with specified path doesn't exist in workspace"),
            @ApiResponse(code = 403, message = "Access to requested project is forbidden"),
            @ApiResponse(code = 500, message = "Server error")})
    @GET
    @Path("/estimate/{path:.*}")
    @Produces(MediaType.APPLICATION_JSON)
    public Map<String, List<String>> estimateProject(@ApiParam(value = "ID of workspace to estimate projects", required = true)
                                                     @PathParam("ws-id") String workspace,
                                                     @ApiParam(value = "Path to requested project", required = true)
                                                     @PathParam("path") String path,
                                                     @ApiParam(value = "Project Type ID to estimate against", required = true)
                                                     @QueryParam("type") String projectType)
            throws NotFoundException, ForbiddenException, ServerException, ConflictException {

        final HashMap<String, List<String>> attributes = new HashMap<>();

        for (Map.Entry<String, AttributeValue> attr : projectManager.estimateProject(workspace, path, projectType).entrySet()) {
            attributes.put(attr.getKey(), attr.getValue().getList());
        }

        return attributes;
    }

