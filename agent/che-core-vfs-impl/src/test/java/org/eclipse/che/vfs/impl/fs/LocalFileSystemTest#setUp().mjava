    /** @see junit.framework.TestCase#setUp() */
    @Override
    protected void setUp() throws Exception {
        super.setUp();

        // root directory for ALL virtual file systems
        root = createRootDirectory();

        final String testName = getName();
        // path to test directory
        testRootPath = '/' + testName;
        // backend for test virtual filesystem
        testFsIoRoot = WorkspaceHashLocalFSMountStrategy.calculateDirPath(root, MY_WORKSPACE_ID);
        assertTrue(new java.io.File(testFsIoRoot, testName).mkdirs());

        provider = new LocalFileSystemProvider(MY_WORKSPACE_ID, new WorkspaceHashLocalFSMountStrategy(root, root), new EventService(), null,
                                               SystemPathsFilter.ANY, virtualFileSystemRegistry);
        provider.mount(testFsIoRoot);
        mountPoint = provider.getMountPoint(true);
        ROOT_ID = mountPoint.getRoot().getId();
        virtualFileSystemRegistry.registerProvider(MY_WORKSPACE_ID, provider);

        DependencySupplierImpl dependencies = new DependencySupplierImpl();
        dependencies.addComponent(VirtualFileSystemRegistry.class, virtualFileSystemRegistry);
        dependencies.addComponent(EventListenerList.class, mountPoint.getEventService());
        ResourceBinder resources = new ResourceBinderImpl();
        ProviderBinder providers = new ApplicationProviderBinder();
        EverrestProcessor processor = new EverrestProcessor(resources, providers, dependencies, new EverrestConfiguration(), null);
        launcher = new ResourceLauncher(processor);
        ApplicationContextImpl.setCurrent(new ApplicationContextImpl(null, null, ProviderBinder.getInstance()));

        ApplicationPublisher deployer = new ApplicationPublisher(resources, providers);
        deployer.publish(new VirtualFileSystemApplication());

        // RUNTIME VARIABLES
        EnvironmentContext.getCurrent().setUser(new UserImpl("admin", "admin", null, Arrays.asList("workspace/admin", "workspace/developer")
                , false));
    }

