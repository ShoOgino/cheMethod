    public void testImportFolder() throws Exception {
        String path = SERVICE_URI + "import/" + importTestRootId;
        ContainerResponse response = launcher.service(HttpMethod.POST, path, BASE_URI, null, zipFolder, null);
        assertEquals(204, response.getStatus());
        VirtualFile parent = mountPoint.getVirtualFileById(importTestRootId);
        VirtualFile folder1 = parent.getChild("folder1");
        assertNotNull(folder1);
        VirtualFile folder2 = parent.getChild("folder2");
        assertNotNull(folder2);
        VirtualFile folder3 = parent.getChild("folder3");
        assertNotNull(folder3);
        VirtualFile file1 = folder1.getChild("file1.txt");
        assertNotNull(file1);
        assertTrue(Arrays.equals(DEFAULT_CONTENT_BYTES, readFile(file1.getPath())));
        VirtualFile file2 = folder2.getChild("file2.txt");
        assertNotNull(file2);
        assertTrue(Arrays.equals(DEFAULT_CONTENT_BYTES, readFile(file2.getPath())));
        VirtualFile file3 = folder3.getChild("file3.txt");
        assertNotNull(file3);
        assertTrue(Arrays.equals(DEFAULT_CONTENT_BYTES, readFile(file3.getPath())));

        assertEquals(6, events.size());

        List<VirtualFileEvent> _events = new ArrayList<>(events);

        for (Iterator<VirtualFileEvent> iterator = _events.iterator(); iterator.hasNext(); ) {
            VirtualFileEvent event = iterator.next();
            if (event.getPath().equals(folder1.getPath())
                || event.getPath().equals(folder2.getPath())
                || event.getPath().equals(folder3.getPath())
                || event.getPath().equals(file1.getPath())
                || event.getPath().equals(file2.getPath())
                || event.getPath().equals(file3.getPath())) {
                iterator.remove();
            } else {
                fail("Unexpected event " + event.getType() + " : " + event.getPath());
            }
        }

        assertEquals(0, _events.size());
    }

