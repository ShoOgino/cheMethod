    /**
     * Copy a VirtualFileImpl to a given location
     *
     * @param source the VirtualFileImpl instance to copy
     * @param parent the VirtualFileImpl (must be a folder) which will become
     * the parent of the source
     * @param name the name of the copy, can be left {@code null} or empty
     * {@code String} for current source name
     * @param overWrite should the destination be overwritten, set to true to
     * overwrite, false otherwise
     * @return an instance of VirtualFileImpl, which is the actual copy of
     * source under parent
     * @throws ForbiddenException
     * @throws ConflictException
     * @throws ServerException
     */
    @Beta
    public VirtualFileImpl copy(VirtualFileImpl source, VirtualFileImpl parent, String name, boolean overWrite) throws ForbiddenException, ConflictException, ServerException {
        if (source.getVirtualFilePath().equals(parent.getVirtualFilePath())) {
            throw new ForbiddenException("Item cannot be copied to itself. ");
        }
        if (!parent.isFolder()) {
            throw new ForbiddenException("Unable copy item. Item specified as parent is not a folder. ");
        }
        if (!hasPermission(parent, BasicPermissions.WRITE.value(), true)) {
            throw new ForbiddenException(String.format("Unable copy item '%s' to %s. Operation not permitted. ",
                                                       source.getPath(), parent.getPath()));
        }
        String newName = nullToEmpty(name).trim().isEmpty() ? source.getName() : name;
        final Path newPath = parent.getVirtualFilePath().newPath(newName); // TODO: change name here
        final File theFile = new File(ioRoot, toIoPath(newPath));
        final VirtualFileImpl destination
                = new VirtualFileImpl(theFile, newPath, pathToId(newPath), this);

        // checking override
        if (destination.exists()) {
            doOverWrite(overWrite, destination, newPath);
        }

        doCopy(source, destination);
        eventService.publish(new CreateEvent(workspaceId, destination.getPath(), source.isFolder()));
        return destination;
    }

