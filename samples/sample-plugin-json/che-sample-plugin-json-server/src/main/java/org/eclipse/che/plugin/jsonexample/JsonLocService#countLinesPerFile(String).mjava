    /**
     * Count LOC for all JSON files within the given project.
     *
     * @param projectPath
     *         the path to the project that contains the JSON files for which to calculate the LOC
     * @return a Map mapping the file name to their respective LOC value
     * @throws ServerException
     *         in case the server encounters an error
     * @throws NotFoundException
     *         in case the project couldn't be found
     * @throws ForbiddenException
     *         in case the operation is forbidden
     */
    @GET
    @Path("{projectPath}")
    public Map<String, String> countLinesPerFile(@PathParam("projectPath") String projectPath)
            throws ServerException, NotFoundException, ForbiddenException {

        Map<String, String> linesPerFile = new LinkedHashMap<>();
        RegisteredProject project = projectManager.getProject(projectPath);

        for (FileEntry child : project.getBaseFolder().getChildFiles()) {
            if (isJsonFile(child)) {
                linesPerFile.put(child.getName(), Integer.toString(countLines(child)));
            }
        }

        return linesPerFile;
    }

