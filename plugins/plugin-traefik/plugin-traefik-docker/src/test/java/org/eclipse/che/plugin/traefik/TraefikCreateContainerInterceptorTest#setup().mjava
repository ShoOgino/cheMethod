    @BeforeMethod
    protected void setup() throws Exception {

        this.customServerEvaluationStrategy = new CustomServerEvaluationStrategy("10.0.0.1", "127.0.0.1", TEMPLATE, "http", "8080");
        when(serverEvaluationStrategyProvider.get()).thenReturn(customServerEvaluationStrategy);
        traefikCreateContainerInterceptor.setServerEvaluationStrategyProvider(serverEvaluationStrategyProvider);
        traefikCreateContainerInterceptor.setTemplate(TEMPLATE);

        containerLabels = new HashMap<>(6);
        imageLabels = new HashMap<>(6);
        containerExposedPorts = new HashMap<>(6);
        imageExposedPorts = new HashMap<>(6);

        when(methodInvocation.getThis()).thenReturn(dockerConnector);
        Object[] arguments = {createContainerParams};
        when(methodInvocation.getArguments()).thenReturn(arguments);
        when(createContainerParams.getContainerConfig()).thenReturn(containerConfig);
        when(containerConfig.getImage()).thenReturn("IMAGE");

        when(dockerConnector.inspectImage(any(InspectImageParams.class))).thenReturn(imageInfo);

        when(containerConfig.getLabels()).thenReturn(containerLabels);
        when(imageInfo.getConfig()).thenReturn(imageInfoConfig);
        when(imageInfoConfig.getLabels()).thenReturn(imageLabels);


        when(containerConfig.getExposedPorts()).thenReturn(containerExposedPorts);
        when(imageInfoConfig.getExposedPorts()).thenReturn(imageExposedPorts);


        envContainerConfig = new String[]{"CHE_WORKSPACE_ID=work123", "CHE_MACHINE_NAME=abcd"};
        envImageConfig = new String[]{"HELLO"};
        when(containerConfig.getEnv()).thenReturn(envContainerConfig);
        when(imageInfoConfig.getEnv()).thenReturn(envImageConfig);

    }

