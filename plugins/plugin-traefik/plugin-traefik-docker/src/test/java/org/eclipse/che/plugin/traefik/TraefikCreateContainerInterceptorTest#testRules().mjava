    @Test
    public void testRules() throws Throwable {
        containerLabels.put("foo1", "bar");
        containerLabels.put("foo1/dummy", "bar");
        containerLabels.put("che:server:4401/tcp:protocol", "http");
        containerLabels.put("che:server:4401/tcp:ref", "wsagent");
        containerLabels.put("che:server:22/tcp:protocol", "ssh");
        containerLabels.put("che:server:22/tcp:ref", "ssh");
        containerLabels.put("che:server:22/tcp:path", "/api");
        containerLabels.put("che:server:4411/tcp:ref", "terminal");
        containerLabels.put("che:server:4411/tcp:protocol", "http");

        imageLabels.put("che:server:8080:protocol", "http");
        imageLabels.put("che:server:8080:ref", "tomcat8");
        imageLabels.put("che:server:8000:protocol", "http");
        imageLabels.put("che:server:8000:ref", "tomcat8-debug");
        imageLabels.put("anotherfoo1", "bar2");
        imageLabels.put("anotherfoo1/dummy", "bar2");

        containerExposedPorts.put("22/tcp", Collections.emptyMap());
        containerExposedPorts.put("4401/tcp", Collections.emptyMap());
        containerExposedPorts.put("4411/tcp", Collections.emptyMap());

        imageExposedPorts.put("7000/tcp", new ExposedPort());
        imageExposedPorts.put("8080/tcp", new ExposedPort());
        imageExposedPorts.put("8000/tcp", new ExposedPort());

        traefikCreateContainerInterceptor.invoke(methodInvocation);


        Assert.assertTrue(containerLabels.containsKey("traefik.service-wsagent.port"));
        Assert.assertEquals(containerLabels.get("traefik.service-wsagent.port"), "4401");

        Assert.assertTrue(containerLabels.containsKey("traefik.service-wsagent.frontend.entryPoints"));
        Assert.assertEquals(containerLabels.get("traefik.service-wsagent.frontend.entryPoints"), "http");

        Assert.assertTrue(containerLabels.containsKey("traefik.service-wsagent.frontend.rule"));
        Assert.assertEquals(containerLabels.get("traefik.service-wsagent.frontend.rule"), "Host:wsagent.abcd.work123.127.0.0.1.nip.io");

        Assert.assertTrue(containerLabels.containsKey("traefik.service-tomcat8.frontend.rule"));
        Assert.assertEquals(containerLabels.get("traefik.service-tomcat8.frontend.rule"), "Host:tomcat8.abcd.work123.127.0.0.1.nip.io");

    }

