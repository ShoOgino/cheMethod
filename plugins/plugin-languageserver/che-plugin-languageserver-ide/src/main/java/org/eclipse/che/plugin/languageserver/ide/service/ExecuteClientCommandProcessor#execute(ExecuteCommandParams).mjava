  public void execute(ExecuteCommandParams params) {
    switch (params.getCommand()) {
      case CLIENT_UPDATE_PROJECTS_CLASSPATH:
        for (Object project : params.getArguments()) {
          eventBus.fireEvent(new ProjectClasspathChangedEvent(stringValue(project)));
        }
        break;
      case CLIENT_UPDATE_PROJECT:
        updateProject(stringValue(params.getArguments()));
        break;
      case CLIENT_UPDATE_PROJECT_CONFIG:
        updateProjectConfig(stringValue(params.getArguments()));
        break;
      case CLIENT_UPDATE_ON_PROJECT_CLASSPATH_CHANGED:
        for (Object project : params.getArguments()) {
          updateProject(stringValue(project))
              .then(
                  container -> {
                    eventBus.fireEvent(
                        new ProjectClasspathChangedEvent(
                            stringValue(container.getLocation().toString())));
                  });
        }
        break;
      default:
        break;
    }
  }

