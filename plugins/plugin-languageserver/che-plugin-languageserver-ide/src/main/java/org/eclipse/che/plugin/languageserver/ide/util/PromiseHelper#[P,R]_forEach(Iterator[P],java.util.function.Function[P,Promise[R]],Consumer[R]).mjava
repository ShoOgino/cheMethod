  public <P, R> Promise<Void> forEach(
      Iterator<P> elements,
      java.util.function.Function<P, Promise<R>> promiseSource,
      Consumer<R> resultConsumer) {
    if (elements.hasNext()) {
      Promise<R> elementPromise = promiseSource.apply(elements.next());
      return elementPromise.thenPromise(
          (R r) -> {
            resultConsumer.accept(r);
            return forEach(elements, promiseSource, resultConsumer);
          });
    } else {
      return promiseProvider.resolve(null);
    }
  }

