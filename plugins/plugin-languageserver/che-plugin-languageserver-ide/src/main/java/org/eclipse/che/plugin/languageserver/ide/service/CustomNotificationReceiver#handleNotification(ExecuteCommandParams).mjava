  private void handleNotification(ExecuteCommandParams params) {
    switch (params.getCommand()) {
      case Notifications.UPDATE_PROJECTS_CLASSPATH:
        for (Object project : params.getArguments()) {
          eventBus.fireEvent(new ProjectClasspathChangedEvent(stringValue(project)));
        }
        break;
      case Notifications.UPDATE_PROJECT:
        for (Object project : params.getArguments()) {
          updateProject(stringValue(project));
        }
        break;
      case Notifications.UPDATE_PROJECT_CONFIG:
        updateProjectConfig(stringValue(params.getArguments()));
        break;
      case Notifications.UPDATE_ON_PROJECT_CLASSPATH_CHANGED:
        params
            .getArguments()
            .forEach(
                project -> {
                  updateProject(stringValue(project))
                      .then(
                          container -> {
                            eventBus.fireEvent(
                                new ProjectClasspathChangedEvent(
                                    stringValue(container.getLocation().toString())));
                          });
                });
        break;
      default:
        break;
    }
  }

