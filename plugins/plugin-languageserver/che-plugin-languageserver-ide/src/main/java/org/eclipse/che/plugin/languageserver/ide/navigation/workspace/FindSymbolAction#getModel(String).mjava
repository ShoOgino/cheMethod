    @Override
    public Promise<QuickOpenModel> getModel(final String value) {
        Promise<List<SymbolEntry>> promise;

        if (Strings.isNullOrEmpty(value) || editorAgent.getActiveEditor() == null) {
            promise = Promises.resolve(Collections.<SymbolEntry>emptyList());
        } else {
            promise = delayer.trigger(new Task<Promise<List<SymbolEntry>>>() {
                @Override
                public Promise<List<SymbolEntry>> run() {
                    return searchSymbols(value);
                }
            });
        }
        return promise.then(new Function<List<SymbolEntry>, QuickOpenModel>() {
            @Override
            public QuickOpenModel apply(List<SymbolEntry> arg) throws FunctionException {
                return new QuickOpenModel(arg);
            }
        });
    }

