  private void applyEdits(List<TextEdit> edits, Document document) {
    HandlesUndoRedo undoRedo = null;

    if (editor instanceof UndoableEditor) {
      undoRedo = ((UndoableEditor) editor).getUndoRedo();
    }
    try {
      if (undoRedo != null) {
        undoRedo.beginCompoundChange();
      }

      // #2437: apply the text edits from last to first to avoid messing up the document
      Collections.reverse(edits);
      for (TextEdit change : edits) {
        Range range = change.getRange();
        int startLine = range.getStart().getLine();
        int startCharacter = range.getStart().getCharacter();
        int endLine = range.getEnd().getLine();
        int endCharacter = range.getEnd().getCharacter();

        if (startCharacter == 0
            && startLine == 0
            && endCharacter == 0
            && endLine == document.getLineCount()) {
          endLine = document.getLineCount() - 1;
          endCharacter = document.getTextRangeForLine(endLine).getTo().getCharacter();
        }

        String newText = change.getNewText();

        document.replace(startLine, startCharacter, endLine, endCharacter, newText);
      }
    } catch (final Exception e) {
      Log.error(getClass(), e);
    } finally {
      if (undoRedo != null) {
        undoRedo.endCompoundChange();
      }
    }
  }

