    @Inject
    protected void registerFileEventHandler(final EventBus eventBus,
                                            final TextDocumentServiceClient serviceClient,
                                            final DtoFactory dtoFactory,
                                            final LanguageServerFileTypeRegister fileTypeRegister) {
        eventBus.addHandler(FileEvent.TYPE, new FileEvent.FileEventHandler() {

            @Override
            public void onFileOperation(final FileEvent event) {
                Path location = event.getFile().getLocation();
                if (location.getFileExtension() == null || !fileTypeRegister.hasLSForExtension(location.getFileExtension())) {
                    return;
                }
                final TextDocumentIdentifier documentId = dtoFactory.createDto(TextDocumentIdentifier.class);
                documentId.setUri(location.toString());
                switch (event.getOperationType()) {
                    case OPEN:
                        onOpen(event, dtoFactory, serviceClient, fileTypeRegister);
                        break;
                    case CLOSE:
                        onClose(documentId, dtoFactory, serviceClient);
                        break;
                    case SAVE:
                        onSave(documentId, dtoFactory, serviceClient);
                        break;
                }
            }
        });
    }

