  @Override
  public void actionPerformed(ActionEvent e) {
    EditorPartPresenter activeEditor = editorAgent.getActiveEditor();

    // TODO replace this
    if (!(activeEditor instanceof TextEditor)) {
      return;
    }
    TextEditor textEditor = ((TextEditor) activeEditor);
    ReferenceParams paramsDTO = dtoFactory.createDto(ReferenceParams.class);

    Position Position = dtoFactory.createDto(Position.class);
    Position.setLine(textEditor.getCursorPosition().getLine());
    Position.setCharacter(textEditor.getCursorPosition().getCharacter());

    TextDocumentIdentifier identifierDTO =
        dtoHelper.createTDI(activeEditor.getEditorInput().getFile());

    ReferenceContext contextDTO = dtoFactory.createDto(ReferenceContext.class);
    contextDTO.setIncludeDeclaration(true);

    paramsDTO.setUri(identifierDTO.getUri());
    paramsDTO.setPosition(Position);
    paramsDTO.setTextDocument(identifierDTO);
    paramsDTO.setContext(contextDTO);
    Promise<List<Location>> promise = client.references(paramsDTO);
    presenter.openLocation(promise);
  }

