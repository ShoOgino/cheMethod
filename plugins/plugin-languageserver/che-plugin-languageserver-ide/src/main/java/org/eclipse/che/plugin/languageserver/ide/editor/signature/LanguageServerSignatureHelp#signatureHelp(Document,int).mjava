  @Override
  public Promise<Optional<SignatureHelp>> signatureHelp(Document document, int offset) {
    TextDocumentPositionParams paramsDTO = helper.createTDPP(document, offset + 1);
    Promise<org.eclipse.lsp4j.SignatureHelp> promise = client.signatureHelp(paramsDTO);
    return promise
        .then(
            new Function<org.eclipse.lsp4j.SignatureHelp, Optional<SignatureHelp>>() {
              @Override
              public Optional<SignatureHelp> apply(org.eclipse.lsp4j.SignatureHelp arg)
                  throws FunctionException {
                if (arg == null) {
                  return Optional.absent();
                }

                return Optional.<SignatureHelp>of(new SignatureHelpImpl(arg));
              }
            })
        .catchError(
            new Function<PromiseError, Optional<SignatureHelp>>() {
              @Override
              public Optional<SignatureHelp> apply(PromiseError arg) throws FunctionException {
                notificationManager.notify(
                    arg.getMessage(),
                    StatusNotification.Status.FAIL,
                    StatusNotification.DisplayMode.EMERGE_MODE);
                return Optional.absent();
              }
            });
  }

