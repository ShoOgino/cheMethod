  private List<SymbolEntry> toSymbolEntries(List<SymbolInformation> types, String value) {
    List<SymbolEntry> result = new ArrayList<>();
    for (SymbolInformation element : types) {
      if (!SUPPORTED_OPEN_TYPES.contains(symbolKindHelper.from(element.getKind()))) {
        continue;
      }
      List<Match> matches = fuzzyMatches.fuzzyMatch(value, element.getName());
      if (matches != null) {
        Location location = element.getLocation();
        if (location != null && location.getUri() != null) {
          String filePath = location.getUri();
          result.add(
              new SymbolEntry(
                  element.getName(),
                  "",
                  filePath,
                  location,
                  symbolKindHelper.from(element.getKind()),
                  symbolKindHelper.getIcon(element.getKind()),
                  editorHelper,
                  matches));
        }
      }
    }
    // TODO add sorting
    return result;
  }

