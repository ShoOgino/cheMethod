    @Inject
    public LanguageServerEditorConfiguration(final LanguageServerCodeassistProcessorFactory codeAssistProcessor,
                                             final Provider<DocumentPositionMap> docPositionMapProvider,
                                             final LanguageServerAnnotationModelFactory annotationModelFactory,
                                             final LanguageServerReconcileStrategyFactory reconcileStrategyProviderFactory,
                                             final LanguageServerFormatterFactory formatterFactory,
                                             @Assisted ServerCapabilities serverCapabilities) {
        codeAssistProcessorFactory = codeAssistProcessor;
        if (serverCapabilities.isDocumentFormattingProvider() || serverCapabilities.isDocumentRangeFormattingProvider() ||
            serverCapabilities.getDocumentOnTypeFormattingProvider() != null) {
            this.formatter = formatterFactory.create(serverCapabilities);
            formatter.setTabWidth(getTabWidth());
        }
        this.serverCapabilities = serverCapabilities;
        this.annotationModel = annotationModelFactory.get(docPositionMapProvider.get());

        this.reconciler = new ReconcilerWithAutoSave(DocumentPartitioner.DEFAULT_CONTENT_TYPE, getPartitioner());
        reconciler.addReconcilingStrategy(DocumentPartitioner.DEFAULT_CONTENT_TYPE, reconcileStrategyProviderFactory.build(serverCapabilities));
    }

