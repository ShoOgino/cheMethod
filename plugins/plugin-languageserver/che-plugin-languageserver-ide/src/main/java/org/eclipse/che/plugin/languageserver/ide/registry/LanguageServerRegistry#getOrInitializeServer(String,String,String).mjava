    public Promise<ExtendedInitializeResult> getOrInitializeServer(String projectPath, String ext, String filePath) {
        final ProjectExtensionKey key = createProjectKey(projectPath, ext);
        if (projectToInitResult.containsKey(key)) {
            return Promises.resolve(projectToInitResult.get(key));
        } else {
            //call initialize service
            final MessageLoader loader = loaderFactory.newLoader("Initializing Language Server for " + ext);
            loader.show();
            client.initializeServer(filePath).then(arg -> {
                loader.hide();
            }).catchError(arg -> {
                notificationManager.notify("Initializing Language Server for " + ext, arg.getMessage(), FAIL, EMERGE_MODE);
                loader.hide();
            });
            //wait for response
            return CallbackPromiseHelper.createFromCallback(callback -> callbackMap.put(key, callback));
        }
    }

