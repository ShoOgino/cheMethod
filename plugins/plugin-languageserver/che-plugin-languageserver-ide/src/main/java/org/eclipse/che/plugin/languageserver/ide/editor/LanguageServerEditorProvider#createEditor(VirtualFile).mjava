    @Override
    public Promise<EditorPartPresenter> createEditor(VirtualFile file) {
        if (file instanceof File) {
            File resource = (File)file;

            Promise<InitializeResult> promise =
                    registry.getOrInitializeServer(resource.getRelatedProject().get().getPath(), resource.getExtension(), resource.getPath());
            final MessageLoader loader = loaderFactory.newLoader("Initializing Language Server for " + resource.getExtension());
            loader.show();
            return promise.thenPromise(new Function<InitializeResult, Promise<EditorPartPresenter>>() {
                @Override
                public Promise<EditorPartPresenter> apply(InitializeResult arg) throws FunctionException {
                    loader.hide();
                    return Promises.<EditorPartPresenter>resolve(createEditor(editorConfigurationFactory.build(arg.getCapabilities())));
                }
            });

        }
        return null;
    }

