  /**
   * Checks if the completion result is still good for the given document position.
   *
   * <p>
   *
   * <p>The following checks are executed:
   *
   * <ol>
   *   <li>A completion result has been retrieved at least once.
   *   <li>The latest completion result is "complete", i.e. the <code>isIncomplete</code> property
   *       is <code>false</code>.
   *   <li>The given document id is the same as in the latest completion result.
   *   <li>The given word starts with the one in the latest completion result.
   *   <li>The difference between the given offset and the one in the latest completion result
   *       matches the respective difference between the words.
   * </ol>
   *
   * Only if all checks are satisfied then the latest completion result can be reused for the given
   * document position.
   *
   * @param documentId a text document identifier
   * @param offset an offset position in the document
   * @param word the word at the current position in the document
   * @return <code>true</code> if the completion result can still be used for the given document
   *     position, <code>false</code> otherwise.
   */
  public boolean isGoodFor(TextDocumentIdentifier documentId, int offset, String word) {
    return completionList != null
        && !completionList.isInComplete()
        && this.documentId.getUri().equals(documentId.getUri())
        && word.startsWith(this.word)
        && offset - this.offset == word.length() - this.word.length();
  }

