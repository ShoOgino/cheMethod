  public static void applyTextEdits(Document document, List<TextEdit> edits) {
    edits = new ArrayList<>(edits);
    Collections.sort(edits, COMPARATOR);
    // jdt.ls sends text edits in reverse order of application
    // see https://github.com/eclipse/eclipse.jdt.ls/issues/398
    for (int i = edits.size() - 1; i >= 0; i--) {
      TextEdit e = edits.get(i);
      Range r = e.getRange();
      Position start = r.getStart();
      Position end = r.getEnd();
      int startIndex =
          document.getIndexFromPosition(new TextPosition(start.getLine(), start.getCharacter()));
      // python ls, for example shows as end position index 0 of the line after the
      // change. If the change is on the last line, we crash
      int endIndex =
          document.getIndexFromPosition(new TextPosition(end.getLine(), end.getCharacter()));
      if (endIndex < 0) {
        endIndex = document.getContentsCharCount();
      }
      document.replace(startIndex, endIndex - startIndex, e.getNewText());
    }
  }

