    @Override
    public void getCompletion(final CompletionCallback callback) {

        if (serverCapabilities.getCompletionProvider() != null &&
            serverCapabilities.getCompletionProvider().getResolveProvider() != null &&
            serverCapabilities.getCompletionProvider().getResolveProvider()) {
            completionItem.setTextDocumentIdentifier(documentId);
            documentServiceClient.resolveCompletionItem(completionItem).then(new Operation<CompletionItemDTO>() {
                @Override
                public void apply(CompletionItemDTO arg) throws OperationException {
                    callback.onCompletion(new CompletionImpl(arg));
                }
            }).catchError(new Operation<PromiseError>() {
                @Override
                public void apply(PromiseError arg) throws OperationException {
                    Log.error(getClass(), arg);
                    //try to apply with default text
                    callback.onCompletion(new CompletionImpl(completionItem));
                }
            });
        } else {
            callback.onCompletion(new CompletionImpl(completionItem));
        }
    }

