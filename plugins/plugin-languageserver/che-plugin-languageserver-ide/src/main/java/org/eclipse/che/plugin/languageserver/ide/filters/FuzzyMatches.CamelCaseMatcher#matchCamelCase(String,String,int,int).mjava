        private List<Match> matchCamelCase(String word, String wordToMatch, int i, int j) {
            if (i == word.length()) {
                return new ArrayList<>();
            } else if (j == wordToMatch.length()) {
                return null;
            } else if (word.charAt(i) != wordToMatch.toLowerCase().charAt(j)) {
                return null;
            } else {
                List<Match> result = null;
                int nextUpperIndex = j + 1;
                result = matchCamelCase(word, wordToMatch, i + 1, j + 1);
                while (result == null && (nextUpperIndex = nextAnchor(wordToMatch, nextUpperIndex)) < wordToMatch.length()) {
                    result = matchCamelCase(word, wordToMatch, i + 1, nextUpperIndex);
                    nextUpperIndex++;
                }
                return result == null ? null : join(new Match(j, j + 1), result);
            }
        }

