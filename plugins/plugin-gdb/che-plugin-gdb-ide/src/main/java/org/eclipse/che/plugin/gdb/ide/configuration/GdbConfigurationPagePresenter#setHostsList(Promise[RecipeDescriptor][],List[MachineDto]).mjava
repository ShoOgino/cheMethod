    private void setHostsList(final Promise<RecipeDescriptor>[] recipePromises, final List<MachineDto> machines) {
        Promises.all(recipePromises).then(new Operation<JsArrayMixed>() {
            @Override
            public void apply(JsArrayMixed recipes) throws OperationException {
                Map<String, String> hosts = new HashMap<>();

                for (int i = 0; i < recipes.length(); i++) {
                    String recipeJson = recipes.getObject(i).toString();
                    RecipeDescriptor recipeDescriptor = dtoFactory.createDtoFromJson(recipeJson, RecipeDescriptor.class);

                    String script = recipeDescriptor.getScript();

                    String host;
                    try {
                        Map<String, String> m = JsonHelper.toMap(script);
                        host = m.containsKey("host") ? m.get("host") : "localhost";
                    } catch (Exception e) {
                        host = "localhost";
                    }
                    String description = host + " (" + machines.get(i).getConfig().getName() + ")";
                    hosts.put(host, description);
                }

                view.setHostsList(hosts);
            }
        });
    }

