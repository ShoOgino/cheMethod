  private void internalOnSuiteStart(
      TestResultWrapper wrapper, List<String> testHierarchy, boolean provideLocation) {
    int index = 0;
    String currentClass, currentParent;

    while (index < currentSuites.size() && index < testHierarchy.size()) {
      currentClass = currentSuites.get(index);
      currentParent = testHierarchy.get(testHierarchy.size() - 1 - index);
      if (!currentClass.equals(shortName(currentParent))) {
        break;
      }
      index++;
    }

    for (int i = currentSuites.size() - 1; i >= index; i--) {
      currentClass = currentSuites.remove(i);
      testSuiteFinished(out, currentClass);
    }

    for (int i = index; i < testHierarchy.size(); i++) {
      String testName = testHierarchy.get(testHierarchy.size() - 1 - i);
      String currentClassName = shortName(testName);
      String location = "java:suite://" + testName;
      if (wrapper != null) {
        String xmlTestName = wrapper.getXmlTestName();
        if (testName.equals(xmlTestName)) {
          String fileName = wrapper.getFileName();
          if (fileName != null) {
            location = "file://" + fileName;
          }
        }
      }
      TestingMessageHelper.testSuiteStarted(out, currentClassName, location, provideLocation);
      currentSuites.add(currentClassName);
    }
  }

