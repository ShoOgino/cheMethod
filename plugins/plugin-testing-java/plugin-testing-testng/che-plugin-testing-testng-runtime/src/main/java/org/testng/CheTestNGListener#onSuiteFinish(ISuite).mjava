    /**
     * Analyses test methods which were ran.
     *
     * @param suite
     *         test suite
     */
    public void onSuiteFinish(ISuite suite) {
        try {
            if (suite != null && suite.getAllInvokedMethods().size() < suite.getAllMethods().size()) {
                for (ITestNGMethod ngMethod : suite.getAllMethods()) {
                    if (ngMethod.isTest()) {
                        boolean methodInvoked = false;
                        for (IInvokedMethod invokedMethod : suite.getAllInvokedMethods()) {
                            if (invokedMethod.getTestMethod() == ngMethod) {
                                methodInvoked = true;
                                break;
                            }
                        }

                        if (!methodInvoked) {
                            String methodName = shortName(ngMethod.getTestClass().getName()) + "." + ngMethod.getMethodName();
                            testStarted(out, methodName);
                            testIgnored(out, methodName);
                            testFinished(out, methodName);
                            break;
                        }
                    }
                }
            }
        } catch (NoSuchMethodError ignored) {
        }

        for (int i = currentSuites.size() - 1; i >= 0; i--) {
            internalSuiteFinish(currentSuites.get(i));
        }
        currentSuites.clear();
    }

