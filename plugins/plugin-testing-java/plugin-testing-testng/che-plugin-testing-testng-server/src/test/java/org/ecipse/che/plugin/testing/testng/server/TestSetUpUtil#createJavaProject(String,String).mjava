    /**
     * Creates a IJavaProject.
     *
     * @param projectName   The name of the project
     * @param binFolderName Name of the output folder
     * @return Returns the Java project handle
     * @throws CoreException Project creation failed
     */
    public static IJavaProject createJavaProject(String projectName, String binFolderName) throws CoreException {
        IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
        IProject project = root.getProject(projectName);
        if (!project.exists()) {
            project.create(null);
        } else {
            project.refreshLocal(IResource.DEPTH_INFINITE, null);
        }

        if (!project.isOpen()) {
            project.open(null);
        }

        IPath outputLocation;
        if (binFolderName != null && binFolderName.length() > 0) {
            IFolder binFolder = project.getFolder(binFolderName);
            if (!binFolder.exists()) {
                CoreUtility.createFolder(binFolder, false, true, null);
            }
            outputLocation = binFolder.getFullPath();
        } else {
            outputLocation = project.getFullPath();
        }

        IFolder codenvyFolder = project.getFolder(".che");
        if (!codenvyFolder.exists()) {
            CoreUtility.createFolder(codenvyFolder, false, true, null);
        }

//		if (!project.hasNature(JavaCore.NATURE_ID)) {
//			addNatureToProject(project, JavaCore.NATURE_ID, null);
//		}

        IJavaProject jproject = JavaCore.create(project);
//		jproject.setOutputLocation(outputLocation, null);
        jproject.setRawClasspath(new IClasspathEntry[0], null);
        IFolder folder = project.getFolder(JavaProject.INNER_DIR);
        CoreUtility.createFolder(folder, true, true, null);

        return jproject;
    }

