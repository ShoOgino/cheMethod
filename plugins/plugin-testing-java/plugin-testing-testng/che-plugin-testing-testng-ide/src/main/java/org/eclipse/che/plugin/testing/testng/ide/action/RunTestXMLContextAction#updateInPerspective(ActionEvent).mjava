    @Override
    public void updateInPerspective(@NotNull ActionEvent e) {
        e.getPresentation().setEnabledAndVisible(false);
        if ((appContext.getRootProject() == null)) {
            e.getPresentation().setEnabledAndVisible(false);
            return;
        }
        final Selection< ? > selection = selectionAgent.getSelection();
        if (selection == null || selection.isEmpty()) {
            e.getPresentation().setEnabledAndVisible(false);
            return;
        }
        if (selection.isMultiSelection()) {
            e.getPresentation().setEnabledAndVisible(false);
            return;
        }
        String expectedXmlFile = MavenAttributes.DEFAULT_TEST_RESOURCES_FOLDER + "/testng.xml";
        final Object possibleNode = selection.getHeadElement();
        if (possibleNode instanceof FileNode) {
            VirtualFile file = ((FileNode)possibleNode).getData();
            if (file instanceof File) {
                e.getPresentation().setEnabledAndVisible(file.getLocation().toString().endsWith(expectedXmlFile));
            } else {
                e.getPresentation().setEnabledAndVisible(false);
            }
        }
        if (possibleNode instanceof ContainerNode) {
            Container container = ((ContainerNode)possibleNode).getData();
            Project project = container.getProject();
            if (project != null) {
                String projectType = project.getType();
                boolean enable = "maven".equals(projectType);
                e.getPresentation().setEnabledAndVisible(enable);
                return;
            } else {
                e.getPresentation().setEnabledAndVisible(false);
            }
        }
    }

