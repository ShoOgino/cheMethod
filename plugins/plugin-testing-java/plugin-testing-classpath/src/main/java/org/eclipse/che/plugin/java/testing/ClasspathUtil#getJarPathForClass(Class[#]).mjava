    /**
     * Finds jar which contains current class and returns its path.
     *
     * @param clazz
     *         container of this class should be found
     * @return path to the jar
     */
    public static String getJarPathForClass(Class<?> clazz) {
        try {
            CodeSource codeSource = clazz.getProtectionDomain().getCodeSource();
            File jarFile;

            if (codeSource.getLocation() != null) {
                jarFile = new File(codeSource.getLocation().toURI());
            } else {
                String path = clazz.getResource(clazz.getSimpleName() + ".class").getPath();
                String jarFilePath = path.substring(path.indexOf(":") + 1, path.indexOf("!"));
                jarFilePath = URLDecoder.decode(jarFilePath, "UTF-8");
                jarFile = new File(jarFilePath);
            }
            return jarFile.getAbsolutePath();
        } catch (URISyntaxException | UnsupportedEncodingException ignore) {
        }
        return null;
    }

