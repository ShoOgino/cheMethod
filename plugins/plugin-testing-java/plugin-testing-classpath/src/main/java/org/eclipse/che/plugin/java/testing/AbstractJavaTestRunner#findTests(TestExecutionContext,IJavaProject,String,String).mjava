  /**
   * Finds tests which should be ran.
   *
   * @param context information about test runner
   * @param javaProject current project
   * @param methodAnnotation java annotation which describes test method in the test framework
   * @param classAnnotation java annotation which describes test class in the test framework
   * @return list of full qualified names of test classes. If it is the declaration of a test method
   *     it should be: parent fqn + '#' + method name (a.b.c.ClassName#methodName)
   */
  protected List<String> findTests(
      TestExecutionContext context,
      IJavaProject javaProject,
      String methodAnnotation,
      String classAnnotation) {
    switch (context.getContextType()) {
      case FILE:
        return javaTestFinder.findTestClassDeclaration(
            findCompilationUnitByPath(javaProject, context.getFilePath()));
      case FOLDER:
        return javaTestFinder.findClassesInPackage(
            javaProject, context.getFilePath(), methodAnnotation, classAnnotation);
      case SET:
        return convertClassesPathsToFqns(context.getListOfTestClasses(), javaProject);
      case PROJECT:
        return javaTestFinder.findClassesInProject(javaProject, methodAnnotation, classAnnotation);
      case CURSOR_POSITION:
        return javaTestFinder.findTestMethodDeclaration(
            findCompilationUnitByPath(javaProject, context.getFilePath()),
            context.getCursorOffset());
    }

    return emptyList();
  }

