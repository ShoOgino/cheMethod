    /**
     * Check that we have a sparse checkout "keepDir" if url contains branch and subtree.
     */
    @Test
    public void shouldReturnGitHubBranchAndKeepdirFactory() throws Exception {

        String githubUrl = "https://github.com/eclipse/che/tree/4.2.x/dashboard";
        String githubCloneUrl = "https://github.com/eclipse/che";
        String githubBranch = "4.2.x";
        String githubKeepdir = "dashboard";

        FactoryDto computedFactory = newDto(FactoryDto.class).withV("4.0");
        when(urlFactoryBuilder.createFactory(anyString())).thenReturn(computedFactory);

        githubFactoryParametersResolver.createFactory(singletonMap(URL_PARAMETER_NAME, githubUrl));

        // check we called the builder with the following codenvy json file
        verify(urlFactoryBuilder).createFactory(jsonFileLocationArgumentCaptor.capture());
        assertEquals(jsonFileLocationArgumentCaptor.getValue(), "https://raw.githubusercontent.com/eclipse/che/4.2.x/.factory.json");

        // check we provide dockerfile and correct env
        verify(urlFactoryBuilder).buildWorkspaceConfig(eq("che"), eq("eclipse"), eq("https://raw.githubusercontent.com/eclipse/che/4.2.x/.factory.dockerfile"));

        // check project config built
        verify(projectConfigDtoMerger).merge(any(FactoryDto.class), projectConfigDtoArgumentCaptor.capture());

        ProjectConfigDto projectConfigDto = projectConfigDtoArgumentCaptor.getValue();
        SourceStorageDto sourceStorageDto = projectConfigDto.getSource();
        assertNotNull(sourceStorageDto);
        assertEquals(sourceStorageDto.getType(), "git");
        assertEquals(sourceStorageDto.getLocation(), githubCloneUrl);
        Map<String, String> sourceParameters = sourceStorageDto.getParameters();
        assertEquals(sourceParameters.size(), 2);
        assertEquals(sourceParameters.get("branch"), githubBranch);
        assertEquals(sourceParameters.get("keepDir"), githubKeepdir);

    }

