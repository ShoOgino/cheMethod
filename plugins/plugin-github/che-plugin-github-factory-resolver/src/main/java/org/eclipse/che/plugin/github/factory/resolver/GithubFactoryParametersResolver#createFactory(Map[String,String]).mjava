  /**
   * Create factory object based on provided parameters
   *
   * @param factoryParameters map containing factory data parameters provided through URL
   * @throws BadRequestException when data are invalid
   */
  @Override
  public FactoryDto createFactory(@NotNull final Map<String, String> factoryParameters)
      throws BadRequestException {

    // no need to check null value of url parameter as accept() method has performed the check
    final GithubUrl githubUrl = githubUrlParser.parse(factoryParameters.get("url"));

    // create factory from the following location if location exists, else create default factory
    FactoryDto factory = urlFactoryBuilder.createFactory(githubUrl.factoryJsonFileLocation());

    // add workspace configuration if not defined
    if (factory.getWorkspace() == null) {
      factory.setWorkspace(
          urlFactoryBuilder.buildWorkspaceConfig(
              githubUrl.getRepository(), githubUrl.getUsername(), githubUrl.dockerFileLocation()));
    }

    // Compute project configuration
    ProjectConfigDto projectConfigDto =
        newDto(ProjectConfigDto.class)
            .withSource(githubSourceStorageBuilder.build(githubUrl))
            .withName(githubUrl.getRepository())
            .withType("blank")
            .withPath("/".concat(githubUrl.getRepository()));

    // apply merging operation from existing and computed settings
    return projectConfigDtoMerger.merge(factory, projectConfigDto);
  }

