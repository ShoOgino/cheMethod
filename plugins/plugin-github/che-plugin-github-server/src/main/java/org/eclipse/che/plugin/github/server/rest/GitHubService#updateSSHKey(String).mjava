  @POST
  @Path("ssh/generate")
  public void updateSSHKey(@HeaderParam(AUTH_HEADER_NAME) String oauthToken) throws ApiException {
    final String host = "github.com";
    SshPair sshPair = null;
    try {
      sshPair = sshServiceClient.getPair("vcs", host);
    } catch (NotFoundException ignored) {
    }

    if (sshPair != null) {
      if (sshPair.getPublicKey() == null) {
        sshServiceClient.removePair("vcs", host);
        sshPair =
            sshServiceClient.generatePair(
                newDto(GenerateSshPairRequest.class).withService("vcs").withName(host));
      }
    } else {
      sshPair =
          sshServiceClient.generatePair(
              newDto(GenerateSshPairRequest.class).withService("vcs").withName(host));
    }

    // update public key
    try {
      githubKeyUploader.uploadKey(sshPair.getPublicKey(), oauthToken);
    } catch (IOException e) {
      LOG.error("Upload github ssh key fail", e);
      throw new GitException(e.getMessage(), e);
    }
  }

