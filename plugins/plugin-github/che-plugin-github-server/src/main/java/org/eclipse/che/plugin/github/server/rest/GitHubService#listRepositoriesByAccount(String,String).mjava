  @GET
  @Path("list/account")
  @Produces(MediaType.APPLICATION_JSON)
  public GitHubRepositoryList listRepositoriesByAccount(
      @QueryParam("account") String account, @HeaderParam(AUTH_HEADER_NAME) String oauthToken)
      throws ApiException {
    GitHub gitHub = gitHubFactory.oauthConnect(oauthToken);
    try {
      // First, try to retrieve organization repositories:
      return gitHubDTOFactory.createRepositoriesList(
          gitHub.getOrganization(account).listRepositories());
    } catch (IOException ioException) {
      LOG.error("Get list repositories by account fail", ioException);
      // If account is not organization, then try by user name:
      try {
        return gitHubDTOFactory.createRepositoriesList(gitHub.getUser(account).listRepositories());
      } catch (IOException exception) {
        LOG.error("Get list repositories by account fail", exception);
        throw new ServerException(exception.getMessage());
      }
    }
  }

