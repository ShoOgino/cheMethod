  @Override
  public Promise<HostUser> getUserInfo() {
    return oAuthServiceClient
        .getToken(SERVICE_NAME.toLowerCase())
        .thenPromise(token -> gitHubClientService.getUserInfo(token.getToken()))
        .then(
            new Function<GitHubUser, HostUser>() {
              @Override
              public HostUser apply(GitHubUser gitHubUser) throws FunctionException {
                return dtoFactory
                    .createDto(HostUser.class)
                    .withId(gitHubUser.getId())
                    .withLogin(gitHubUser.getLogin())
                    .withName(gitHubUser.getName())
                    .withUrl(gitHubUser.getUrl());
              }
            });
  }

