    @Override
    public Promise<PullRequest> getPullRequest(String owner, String repository, String username, final String branchName) {
        return gitHubClientService.getPullRequests(owner, repository, username + ':' + branchName)
                                  .thenPromise(new Function<GitHubPullRequestList, Promise<PullRequest>>() {
                                      @Override
                                      public Promise<PullRequest> apply(GitHubPullRequestList prsList) throws FunctionException {
                                          if (prsList.getPullRequests().isEmpty()) {
                                              return Promises.reject(JsPromiseError.create(new NoPullRequestException(branchName)));
                                          }
                                          return Promises.resolve(valueOf(prsList.getPullRequests().get(0)));
                                      }
                                  });
    }

