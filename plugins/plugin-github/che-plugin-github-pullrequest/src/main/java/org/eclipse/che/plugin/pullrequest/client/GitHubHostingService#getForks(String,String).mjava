    private Promise<List<Repository>> getForks(final String owner, final String repository) {
        return gitHubClientService.getForks(owner, repository)
                                  .then(new Function<GitHubRepositoryList, List<Repository>>() {
                                      @Override
                                      public List<Repository> apply(GitHubRepositoryList gitHubRepositoryList) throws FunctionException {
                                          final List<Repository> repositories = new ArrayList<>();
                                          for (final GitHubRepository oneGitHubRepository : gitHubRepositoryList.getRepositories()) {
                                              repositories.add(valueOf(oneGitHubRepository));
                                          }
                                          return repositories;
                                      }
                                  });
    }

