  /**
   * Converts an instance of {@link org.eclipse.che.plugin.github.shared.GitHubRepository} into a
   * {@link Repository}.
   *
   * @param gitHubRepository the GitHub repository to convert.
   * @return the corresponding {@link Repository} instance or {@code null} if given gitHubRepository
   *     is {@code null}.
   */
  private Repository valueOf(final GitHubRepository gitHubRepository) {
    if (gitHubRepository == null) {
      return null;
    }

    final GitHubRepository gitHubRepositoryParent = gitHubRepository.getParent();
    final Repository parent =
        gitHubRepositoryParent == null
            ? null
            : dtoFactory
                .createDto(Repository.class)
                .withFork(gitHubRepositoryParent.isFork())
                .withName(gitHubRepositoryParent.getName())
                .withParent(null)
                .withPrivateRepo(gitHubRepositoryParent.isPrivateRepo())
                .withCloneUrl(gitHubRepositoryParent.getCloneUrl());

    return dtoFactory
        .createDto(Repository.class)
        .withFork(gitHubRepository.isFork())
        .withName(gitHubRepository.getName())
        .withParent(parent)
        .withPrivateRepo(gitHubRepository.isPrivateRepo())
        .withCloneUrl(gitHubRepository.getCloneUrl());
  }

