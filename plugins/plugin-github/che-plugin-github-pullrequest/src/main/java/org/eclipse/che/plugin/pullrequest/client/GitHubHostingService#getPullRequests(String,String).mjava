    /**
     * Get all pull requests for given owner:repository
     *
     * @param owner
     *         the username of the owner.
     * @param repository
     *         the repository name.
     */
    private Promise<List<PullRequest>> getPullRequests(String owner, String repository) {

        return gitHubClientService.getPullRequests(owner, repository)
                                  .then(new Function<GitHubPullRequestList, List<PullRequest>>() {
                                      @Override
                                      public List<PullRequest> apply(GitHubPullRequestList result) throws FunctionException {
                                          final List<PullRequest> pullRequests = new ArrayList<>();
                                          for (final GitHubPullRequest oneGitHubPullRequest : result.getPullRequests()) {
                                              pullRequests.add(valueOf(oneGitHubPullRequest));
                                          }
                                          return pullRequests;
                                      }
                                  });
    }

