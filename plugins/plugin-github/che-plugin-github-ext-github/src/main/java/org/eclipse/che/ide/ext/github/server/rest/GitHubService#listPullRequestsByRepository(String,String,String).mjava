    @GET
    @Path("pullrequests/{user}/{repository}")
    @Produces(MediaType.APPLICATION_JSON)
    public GitHubPullRequestList listPullRequestsByRepository(@PathParam("user") String user,
                                                              @PathParam("repository") String repository,
                                                              @QueryParam("head") String head)
            throws ApiException {
        try {
            final GitHub github = gitHubFactory.connect();
            // Workaround for adding head parameter to the request
            // TODO remove after update to 1.73 library version
            github.setConnector(new HttpConnector() {
                @Override
                public HttpURLConnection connect(URL url) throws IOException {
                    final String sourceUrl = url.toString();
                    if (sourceUrl.contains("pulls")) {
                        return DEFAULT.connect(URI.create(url.toString() + "&head=" + head).toURL());
                    }
                    return DEFAULT.connect(url);
                }
            });
            return gitHubDTOFactory.createPullRequestsList(github.getUser(user)
                                                                 .getRepository(repository)
                                                                 .listPullRequests(GHIssueState.OPEN));
        } catch (IOException e) {
            LOG.error("Getting list of pull request by repositories", e);
            throw new ServerException(e.getMessage());
        }
    }

