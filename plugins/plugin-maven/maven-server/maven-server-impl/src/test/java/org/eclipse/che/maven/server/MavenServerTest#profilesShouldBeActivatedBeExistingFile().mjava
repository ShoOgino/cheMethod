    @Test
    public void profilesShouldBeActivatedBeExistingFile() throws Exception {
        MavenModel model = new MavenModel();
        model.setMavenKey(new MavenKey("aaa", "bbb", "ccc"));
        model.getBuild().setSources(Collections.singletonList("src/main/java"));
        model.getBuild().setTestSources(Collections.singletonList("src/test/java"));

        MavenProfile profile = new MavenProfile("id", "pom");
        final MavenActivation activation = new MavenActivation();
        activation.setFile(new MavenActivationFile("${basedir}/dir/file.txt", ""));
        profile.setActivation(activation);
        final Properties properties = new Properties();
        properties.setProperty("key", "value");
        profile.setProperties(properties);
        model.setProfiles(singletonList(profile));


        final ProfileApplicationResult profileApplicationResult = MavenServerImpl
                .applyProfiles(model,
                               new File(MavenServerTest.class.getResource("/multi-module-with-profiles").getFile()),
                               MavenExplicitProfiles.NONE, emptyList());
        Assert.assertNotNull(profileApplicationResult);
        Assert.assertEquals(1, profileApplicationResult.getActivatedProfiles().getEnabledProfiles().size());
        Assert.assertEquals(1, profileApplicationResult.getModel().getProperties().size());
    }

