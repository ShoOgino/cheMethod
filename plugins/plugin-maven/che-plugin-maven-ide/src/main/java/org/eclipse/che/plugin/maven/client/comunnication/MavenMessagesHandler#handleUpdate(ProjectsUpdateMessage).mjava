    private void handleUpdate(ProjectsUpdateMessage dto) {
        List<String> updatedProjects = dto.getUpdatedProjects();
        Set<String> projectToRefresh = computeUniqueHiLevelProjects(updatedProjects);
        for (final String path : projectToRefresh) {
            appContext.getWorkspaceRoot().getContainer(path).then(new Operation<Optional<Container>>() {
                @Override
                public void apply(Optional<Container> container) throws OperationException {
                    if (container.isPresent()) {
                        container.get().synchronize();
                    }
                }
            });
        }

        int updatedNumber = 0;
        String deletedProject = "";

        for (String path : dto.getDeletedProjects()) {
            if (!updatedProjects.contains(path)) {
                updatedNumber++;
                deletedProject = path;
            }
        }

        if (updatedNumber > 1) {
            notificationManager.notify("Maven", updatedNumber + " modules were deleted", StatusNotification.Status.SUCCESS, EMERGE_MODE);
        } else if (updatedNumber == 1) {
            notificationManager.notify("Maven", "Module was deleted: " + deletedProject, StatusNotification.Status.SUCCESS, EMERGE_MODE);
        }

        pomEditorReconciler.reconcilePoms(updatedProjects);
    }

