    @Test
    public void testTestSourceClasspathEntryShouldHaveOutputLocationPath() throws Exception {
        String pom = "<groupId>test</groupId>" +
                     "<artifactId>testOutputLocation</artifactId>" +
                     "<version>42</version>" +
                     "<dependencies>" +
                     "    <dependency>" +
                     "        <groupId>junit</groupId>" +
                     "        <artifactId>junit</artifactId>" +
                     "        <version>4.12</version>" +
                     "    </dependency>" +
                     "</dependencies>";
        createTestProject("test", pom);

        IProject test = ResourcesPlugin.getWorkspace().getRoot().getProject("test");
        mavenWorkspace.update(Collections.singletonList(test));
        mavenWorkspace.waitForUpdate();

        JavaProject javaProject = (JavaProject)JavaCore.create(test);
        IClasspathEntry[] classpath = javaProject.getResolvedClasspath();
        IClasspathEntry srcMainJava = null;
        for (IClasspathEntry entry : classpath) {
            if (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE && entry.getPath().toOSString().endsWith("src/test/java")) {
                srcMainJava = entry;
                break;
            }
        }

        assertThat(srcMainJava).isNotNull();
        assertThat(srcMainJava.getOutputLocation()).isNotNull();
        assertThat(srcMainJava.getOutputLocation().toOSString()).endsWith("target/test-classes");
    }

