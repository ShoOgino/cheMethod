    @Test
    public void testSingleProjectClasspath() throws Exception {
        String pom = "<groupId>test</groupId>" +
                     "<artifactId>testArtifact</artifactId>" +
                     "<version>42</version>" +
                     "<dependencies>" +
                     "    <dependency>" +
                     "        <groupId>junit</groupId>" +
                     "        <artifactId>junit</artifactId>" +
                     "        <version>4.12</version>" +
                     "    </dependency>" +
                     "</dependencies>";
        createTestProject("test", pom);

        IProject test = ResourcesPlugin.getWorkspace().getRoot().getProject("test");
        mavenWorkspace.update(Collections.singletonList(test));
        mavenWorkspace.waitForUpdate();

        JavaProject javaProject = (JavaProject)JavaCore.create(test);
        IClasspathEntry[] classpath = javaProject.getResolvedClasspath();
        assertThat(classpath).onProperty("path").is(new Condition<Object[]>() {
            @Override
            public boolean matches(Object[] value) {
                return Stream.of(value).filter(o -> {
                    if (o instanceof IPath) {
                        return ((IPath)o).lastSegment().endsWith("junit-4.12.jar");
                    }
                    return false;
                }).findFirst().isPresent();
            }
        });
    }

