    @Test
    public void testClasspathProjectThatHasDependencyInWorkspace() throws Exception {
        String pom = "<groupId>test</groupId>" +
                     "<artifactId>testArtifact</artifactId>" +
                     "<version>42</version>" +
                     "<dependencies>" +
                     "    <dependency>" +
                     "        <groupId>junit</groupId>" +
                     "        <artifactId>junit</artifactId>" +
                     "        <version>4.12</version>" +
                     "    </dependency>" +
                     "</dependencies>";
        createTestProjectWithPackages("test1", pom, "org.eclipse.che.maven.test");

        String pom2 = "<groupId>test2</groupId>" +
                      "<artifactId>testArtifact2</artifactId>" +
                      "<version>2</version>" +
                      "<dependencies>" +
                      "    <dependency>" +
                      "        <groupId>junit</groupId>" +
                      "        <artifactId>junit</artifactId>" +
                      "        <version>4.12</version>" +
                      "    </dependency>" +
                      "    <dependency>" +
                      "        <groupId>test</groupId>" +
                      "        <artifactId>testArtifact</artifactId>" +
                      "        <version>42</version>" +
                      "    </dependency>" +
                      "</dependencies>";
        createTestProject("test2", pom2);

        IProject project1 = ResourcesPlugin.getWorkspace().getRoot().getProject("test1");
        IProject project2 = ResourcesPlugin.getWorkspace().getRoot().getProject("test2");
        mavenWorkspace.update(Arrays.asList(project1, project2));
        mavenWorkspace.waitForUpdate();

        JavaProject javaProject = (JavaProject)JavaCore.create(project2);
        IJavaElement packageFragment = javaProject.findPackageFragment("org.eclipse.che.maven.test");
        assertThat(packageFragment).isNotNull();
    }

