    @BeforeMethod
    public void setUp() throws Exception {
        Provider<ProjectRegistry> projectRegistryProvider = (Provider<ProjectRegistry>)mock(Provider.class);
        when(projectRegistryProvider.get()).thenReturn(projectRegistry);

        RequestTransmitter requestTransmitter = mock(RequestTransmitter.class);

        MavenServerManagerTest.MyMavenServerProgressNotifier mavenNotifier = new MavenServerManagerTest.MyMavenServerProgressNotifier();
        MavenTerminal terminal = new MavenTerminal() {
            @Override
            public void print(int level, String message, Throwable throwable) throws RemoteException {
                System.out.println(message);
                if (throwable != null) {
                    throwable.printStackTrace();
                }
            }
        };

        File localRepository = new File(new File("target/localRepo").getAbsolutePath());
        localRepository.mkdirs();
        mavenServerManager.setLocalRepository(localRepository);

        MavenWrapperManager wrapperManager = new MavenWrapperManager(mavenServerManager);
        mavenProjectManager =
                new MavenProjectManager(wrapperManager, mavenServerManager, terminal, mavenNotifier, new EclipseWorkspaceProvider());
        Provider<ProjectManager> projectManagerProvider = (Provider<ProjectManager>)mock(Provider.class);
        when(projectManagerProvider.get()).thenReturn(pm);

        ClasspathManager classpathManager =
                new ClasspathManager(root.getAbsolutePath(), wrapperManager, mavenProjectManager, terminal, mavenNotifier);

        mavenWorkspace = new MavenWorkspace(mavenProjectManager,
                                            mavenNotifier,
                                            new MavenExecutorService(),
                                            projectRegistryProvider,
                                            classpathManager,
                                            eventService,
                                            new EclipseWorkspaceProvider());
        EditorWorkingCopyManager editorWorkingCopyManager =
                new EditorWorkingCopyManager(projectManagerProvider, eventService, requestTransmitter);
        pomReconciler =
                new PomReconciler(mavenProjectManager, editorWorkingCopyManager, eventService, mock(LanguageClient.class));
    }

