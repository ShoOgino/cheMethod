    @Test
    public void testUpdateProjectThatHasDependencyInWorkspace() throws Exception {
        String pom = "<groupId>test</groupId>" +
                     "<artifactId>testArtifact</artifactId>" +
                     "<version>42</version>" +
                     "<dependencies>" +
                     "    <dependency>" +
                     "        <groupId>junit</groupId>" +
                     "        <artifactId>junit</artifactId>" +
                     "        <version>4.12</version>" +
                     "    </dependency>" +
                     "</dependencies>";
        createTestProject("test1", pom);

        String pom2 = "<groupId>test2</groupId>" +
                      "<artifactId>testArtifact2</artifactId>" +
                      "<version>2</version>" +
                      "<dependencies>" +
                      "    <dependency>" +
                      "        <groupId>junit</groupId>" +
                      "        <artifactId>junit</artifactId>" +
                      "        <version>4.12</version>" +
                      "    </dependency>" +
                      "    <dependency>" +
                      "        <groupId>test</groupId>" +
                      "        <artifactId>testArtifact</artifactId>" +
                      "        <version>42</version>" +
                      "    </dependency>" +
                      "</dependencies>";
        createTestProject("test2", pom2);

        IProject project1 = ResourcesPlugin.getWorkspace().getRoot().getProject("test1");
        IProject project2 = ResourcesPlugin.getWorkspace().getRoot().getProject("test2");
        mavenWorkspace.update(Arrays.asList(project1, project2));
        mavenWorkspace.waitForUpdate();
        MavenProject mavenProject = projectManager.findMavenProject(project2);

        List<MavenArtifact> dependencies = mavenProject.getDependencies();
        assertThat(dependencies).isNotNull().hasSize(3);
        assertThat(dependencies).onProperty("artifactId").contains("junit", "hamcrest-core", "testArtifact");
        assertThat(dependencies).onProperty("groupId").contains("junit", "org.hamcrest", "test");
        assertThat(dependencies).onProperty("version").contains("4.12", "1.3", "42");

        List<File> depFiles = dependencies.stream().map(MavenArtifact::getFile).collect(Collectors.toList());
        List<String> paths = depFiles.stream().map(File::getAbsolutePath).collect(Collectors.toList());
        assertThat(paths).contains(new java.io.File(root, "test1/pom.xml").getAbsolutePath());
    }

