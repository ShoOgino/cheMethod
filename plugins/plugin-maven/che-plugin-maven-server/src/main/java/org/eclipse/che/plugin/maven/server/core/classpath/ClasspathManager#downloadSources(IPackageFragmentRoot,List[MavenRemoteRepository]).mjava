  private boolean downloadSources(
      IPackageFragmentRoot fragmentRoot, List<MavenRemoteRepository> repositories)
      throws JavaModelException {
    fragmentRoot.getAdapter(MavenArtifactKey.class);
    IClasspathEntry classpathEntry = fragmentRoot.getResolvedClasspathEntry();
    MavenArtifactKey artifactKey = getArtifactKey(classpathEntry);
    if (artifactKey != null) {
      MavenServerWrapper mavenServer =
          wrapperManager.getMavenServer(MavenWrapperManager.ServerType.DOWNLOAD);

      try {
        mavenServer.customize(
            projectManager.copyWorkspaceCache(), terminal, notifier, false, false);

        MavenArtifactKey sourceKey =
            new MavenArtifactKey(
                artifactKey.getGroupId(),
                artifactKey.getArtifactId(),
                artifactKey.getVersion(),
                artifactKey.getPackaging(),
                SOURCES);
        MavenArtifact mavenArtifact = mavenServer.resolveArtifact(sourceKey, repositories);
        if (mavenArtifact.isResolved()) {
          updateClasspath(
              projectManager.findMavenProject(fragmentRoot.getJavaProject().getProject()));
        }
        return mavenArtifact.isResolved();
      } finally {
        wrapperManager.release(mavenServer);
      }
    }
    return false;
  }

