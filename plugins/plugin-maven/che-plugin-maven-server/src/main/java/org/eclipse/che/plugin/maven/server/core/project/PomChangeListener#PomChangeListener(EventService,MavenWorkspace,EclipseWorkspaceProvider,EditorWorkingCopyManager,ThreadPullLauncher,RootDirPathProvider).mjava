  @Inject
  public PomChangeListener(
      EventService eventService,
      MavenWorkspace mavenWorkspace,
      EclipseWorkspaceProvider eclipseWorkspaceProvider,
      EditorWorkingCopyManager editorWorkingCopyManager,
      ThreadPullLauncher launcher,
      RootDirPathProvider pathProvider) {
    this.mavenWorkspace = mavenWorkspace;
    this.eclipseWorkspaceProvider = eclipseWorkspaceProvider;
    this.editorWorkingCopyManager = editorWorkingCopyManager;
    this.workspacePath = pathProvider.get();

    launcher.scheduleWithFixedDelay(this::updateProms, 20, 3, TimeUnit.SECONDS);

    eventService.subscribe(
        new EventSubscriber<ProjectItemModifiedEvent>() {
          @Override
          public void onEvent(ProjectItemModifiedEvent event) {
            String eventPath = event.getPath();
            if (!event.isFolder() && eventPath.endsWith("pom.xml")) {
              // TODO update only pom file that in root of project
              //                    if(event.getProject().equals(eventPath.substring(0,
              // eventPath.lastIndexOf("pom.xml") - 1))) {
              if (pomIsValid(eventPath)) {
                projectToUpdate.add(new Path(eventPath).removeLastSegments(1).toOSString());
              }
              //                    }
            }
          }
        });

    eventService.subscribe(
        new EventSubscriber<PomModifiedEventDto>() {
          @Override
          public void onEvent(PomModifiedEventDto event) {
            String eventPath = event.getPath();
            if (pomIsValid(eventPath)) {
              projectToUpdate.add(new Path(eventPath).removeLastSegments(1).toOSString());
            }
          }
        });
  }

