  @Test
  public void shouldBeAbleToUpdateBuildResource() throws Exception {
    final File pom = getTestPomFile();
    write(
        pom,
        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
            + "<project>\n"
            + "    <build>\n"
            + "        <resources>\n"
            + "             <resource>\n"
            + "                 <targetPath>META-INF/temp</targetPath>\n"
            + "                 <filtering>true</filtering>\n"
            + "                 <!-- DIRECTORY -->\n"
            + "                 <directory>${basedir}/src/main/temp</directory>\n"
            + "                 <includes>\n"
            + "                     <include>configuration.xml</include>\n"
            + "                 </includes>\n"
            + "                 <excludes>\n"
            + "                     <exclude>**/*.properties</exclude>\n"
            + "                 </excludes>\n"
            + "            </resource>\n"
            + "         </resources>\n"
            + "    </build>\n"
            + "</project>");
    final Model model = Model.readFrom(pom);

    final Resource resource = model.getBuild().getResources().get(0);
    resource
        .setDirectory("new-directory")
        .setFiltering(false)
        .setTargetPath("target-path")
        .setIncludes(asList("include1", "include2", "include3"))
        .setExcludes(asList("exclude1", "exclude2", "exclude3"));
    model.save();

    assertEquals(
        read(pom),
        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
            + "<project>\n"
            + "    <build>\n"
            + "        <resources>\n"
            + "             <resource>\n"
            + "                 <targetPath>target-path</targetPath>\n"
            + "                 <filtering>false</filtering>\n"
            + "                 <!-- DIRECTORY -->\n"
            + "                 <directory>new-directory</directory>\n"
            + "                 <includes>\n"
            + "                    <include>include1</include>\n"
            + "                    <include>include2</include>\n"
            + "                    <include>include3</include>\n"
            + "                 </includes>\n"
            + "                 <excludes>\n"
            + "                    <exclude>exclude1</exclude>\n"
            + "                    <exclude>exclude2</exclude>\n"
            + "                    <exclude>exclude3</exclude>\n"
            + "                 </excludes>\n"
            + "            </resource>\n"
            + "         </resources>\n"
            + "    </build>\n"
            + "</project>");
    assertEquals(resource.getDirectory(), "new-directory");
    assertEquals(resource.getTargetPath(), "target-path");
    assertEquals(resource.getIncludes(), asList("include1", "include2", "include3"));
    assertEquals(resource.getExcludes(), asList("exclude1", "exclude2", "exclude3"));
    assertFalse(resource.isFiltering());
  }

