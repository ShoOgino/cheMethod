    @Test
    public void shouldBeAbleToGetBuildResources() throws Exception {
        final File pom = getTestPomFile();
        write(pom, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                   "<project>\n" +
                   "    <build>\n" +
                   "        <resources>\n" +
                   "             <resource>\n" +
                   "                 <targetPath>META-INF/temp</targetPath>\n" +
                   "                 <filtering>true</filtering>\n" +
                   "                 <directory>${basedir}/src/main/temp</directory>\n" +
                   "                 <includes>\n" +
                   "                     <include>configuration.xml</include>\n" +
                   "                 </includes>\n" +
                   "                 <excludes>\n" +
                   "                     <exclude>**/*.properties</exclude>\n" +
                   "                 </excludes>\n" +
                   "            </resource>\n" +
                   "         </resources>\n" +
                   "    </build>\n" +
                   "</project>");
        final Model model = Model.readFrom(pom);

        final List<Resource> resources = model.getBuild().getResources();

        assertEquals(resources.size(), 1);
        final Resource resource = resources.get(0);
        assertEquals(resource.getTargetPath(), "META-INF/temp");
        assertTrue(resource.isFiltering());
        assertEquals(resource.getDirectory(), "${basedir}/src/main/temp");
        assertEquals(resource.getIncludes(), asList("configuration.xml"));
        assertEquals(resource.getExcludes(), asList("**/*.properties"));
    }

