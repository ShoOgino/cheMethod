    @Test
    public void shouldBeAbleToUpdateExistingDependency() throws Exception {
        final File pom = getTestPomFile();
        write(pom, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                   "<project>\n" +
                   "    <dependencies>\n" +
                   "        <dependency>\n" +
                   "            <groupId>org.junit</groupId>\n" +
                   "            <artifactId>junit</artifactId>\n" +
                   "            <version>x.x.x</version>\n" +
                   "            <scope>test</scope>\n" +
                   "        </dependency>\n" +
                   "    </dependencies>\n" +
                   "</project>");
        final Model model = Model.readFrom(pom);

        model.dependencies()
             .first()
             .setVersion("new-version")
             .setScope(null)
             .setOptional(true)
             .setType("type")
             .setClassifier("classifier")
             .setExclusions(asList(new Exclusion("artifact1", "group1")))
             .addExclusion(new Exclusion("artifact2", "group2"));

        model.writeTo(pom);

        final Dependency junit = model.dependencies().first();
        assertEquals(junit.getGroupId(), "org.junit");
        assertEquals(junit.getArtifactId(), "junit");
        assertEquals(junit.getVersion(), "new-version");
        assertEquals(junit.getScope(), "compile");
        assertEquals(junit.getType(), "type");
        assertEquals(junit.getClassifier(), "classifier");
        assertEquals(junit.getExclusions().size(), 2);
        assertTrue(junit.isOptional());
        assertEquals(read(pom), "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                                "<project>\n" +
                                "    <dependencies>\n" +
                                "        <dependency>\n" +
                                "            <optional>true</optional>\n" +
                                "            <groupId>org.junit</groupId>\n" +
                                "            <artifactId>junit</artifactId>\n" +
                                "            <version>new-version</version>\n" +
                                "            <type>type</type>\n" +
                                "            <classifier>classifier</classifier>\n" +
                                "            <exclusions>\n" +
                                "                <exclusion>\n" +
                                "                    <groupId>group1</groupId>\n" +
                                "                    <artifactId>artifact1</artifactId>\n" +
                                "                </exclusion>\n" +
                                "                <exclusion>\n" +
                                "                    <groupId>group2</groupId>\n" +
                                "                    <artifactId>artifact2</artifactId>\n" +
                                "                </exclusion>\n" +
                                "            </exclusions>\n" +
                                "        </dependency>\n" +
                                "    </dependencies>\n" +
                                "</project>");
    }

