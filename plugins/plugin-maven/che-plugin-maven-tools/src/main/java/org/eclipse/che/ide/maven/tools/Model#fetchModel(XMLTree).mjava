    private static Model fetchModel(XMLTree tree) {
        final Model model = new Model(tree);
        final Element root = tree.getRoot();
        model.modelVersion = root.getChildText("modelVersion");
        model.groupId = root.getChildText("groupId");
        model.artifactId = root.getChildText("artifactId");
        model.version = root.getChildText("version");
        model.name = root.getChildText("name");
        model.description = root.getChildText("description");
        model.packaging = root.getChildText("packaging");
        if (root.hasSingleChild("parent")) {
            model.parent = new Parent(root.getSingleChild("parent"));
        }
        if (root.hasSingleChild("dependencyManagement")) {
            final Element dm = tree.getSingleElement("/project/dependencyManagement");
            final List<Dependency> dependencies =
                    tree.getElements("/project/dependencyManagement/dependencies/dependency", TO_DEPENDENCY_MAPPER);
            model.dependencyManagement = new DependencyManagement(dm, dependencies);
        }
        if (root.hasSingleChild("build")) {
            model.build = new Build(root.getSingleChild("build"));
        }
        if (root.hasSingleChild("dependencies")) {
            final List<Dependency> dependencies = tree.getElements("/project/dependencies/dependency", TO_DEPENDENCY_MAPPER);
            model.dependencies = new Dependencies(root, dependencies);
        }
        if (root.hasSingleChild("modules")) {
            model.modules = tree.getElements("/project/modules/module", TO_MODULE_MAPPER);
        }
        if (root.hasSingleChild("profiles")) {
            model.profiles = tree.getElements("/project/profiles/profile", TO_PROFILE_MAPPER);
        }
        if (root.hasSingleChild("repositories")) {
            model.repositories = tree.getElements("/project/repositories/repository", TO_REPOSITORY_MAPPER);
        }
        if (root.hasSingleChild("pluginRepositories")) {
            model.pluginRepositories = tree.getElements("/project/pluginRepositories/repository", TO_REPOSITORY_MAPPER);
        }
        if (root.hasSingleChild("properties")) {
            model.properties = fetchProperties(root.getSingleChild("properties"));
        }
        return model;
    }

