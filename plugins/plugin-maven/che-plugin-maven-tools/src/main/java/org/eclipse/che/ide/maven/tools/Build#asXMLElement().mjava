    public NewElement asXMLElement() {
        final NewElement xmlBuildElement = createElement("build");
        if (!isNullOrEmpty(getDefaultGoal())) {
            xmlBuildElement.appendChild(createElement("defaultGoal", getDefaultGoal()));
        }
        if (!isNullOrEmpty(getFinalName())) {
            xmlBuildElement.appendChild(createElement("finalName", getFinalName()));
        }
        if (resources != null && !resources.isEmpty()) {
            xmlBuildElement.appendChild(newResourcesElement(resources));
        }
        final List<Resource> testResources = getTestResources();
        if (testResources != null && !testResources.isEmpty()) {
            xmlBuildElement.appendChild(newTestResourcesElement(testResources));
        }
        if (sourceDirectory != null) {
            xmlBuildElement.appendChild(createElement("sourceDirectory", sourceDirectory));
        }
        if (testSourceDirectory != null) {
            xmlBuildElement.appendChild(createElement("testSourceDirectory", testSourceDirectory));
        }
        if (scriptSourceDirectory != null) {
            xmlBuildElement.appendChild(createElement("scriptSourceDirectory", scriptSourceDirectory));
        }
        if (outputDirectory != null) {
            xmlBuildElement.appendChild(createElement("outputDirectory", outputDirectory));
        }
        if (testOutputDirectory != null) {
            xmlBuildElement.appendChild(createElement("testOutputDirectory", testOutputDirectory));
        }
        if (resources != null && !resources.isEmpty()) {
            xmlBuildElement.appendChild(newResourcesElement(resources));
        }
        if (plugins != null && !plugins.isEmpty()) {
            xmlBuildElement.appendChild(newPluginsElement(plugins));
        }
        return xmlBuildElement;
    }

