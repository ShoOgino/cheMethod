    /**
     * Adds new exclusion to the list of dependency exclusions.
     * <p/>
     * If dependency doesn't have exclusions then it will be added to xml.
     *
     * @param exclusion
     *         new exclusion which will be added
     * @return this dependency instance
     * @throws NullPointerException
     *         when {@code exclusion} is {@code null}
     */
    public Dependency addExclusion(Exclusion exclusion) {
        requireNonNull(exclusion, "Required not null exclusion");
        exclusions().add(exclusion);
        //add exclusion to xml tree
        if (!isNew()) {
            if (dependencyElement.hasSingleChild("exclusions")) {
                dependencyElement.getSingleChild("exclusions").appendChild(exclusion.asXMLElement());
            } else {
                dependencyElement.appendChild(createElement("exclusions", exclusion.asXMLElement()));
            }
            exclusion.exclusionElement = dependencyElement.getSingleChild("exclusions").getLastChild();
        }
        return this;
    }

