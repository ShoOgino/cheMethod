  /**
   * Removes exclusion from the dependency exclusions.
   *
   * <p>If last exclusion has been removed removes exclusions element as well.
   *
   * @param exclusion exclusion which should be removed
   * @return this dependency instance
   * @throws NullPointerException when {@code exclusion} is {@code null}
   */
  public Dependency removeExclusion(Exclusion exclusion) {
    requireNonNull(exclusion, "Required not null exclusion");
    exclusions().remove(exclusion);
    // remove dependency from xml
    if (!isNew() && exclusions.isEmpty()) {
      dependencyElement.removeChild("exclusions");
      exclusion.exclusionElement = null;
    } else {
      exclusion.remove();
    }
    return this;
  }

