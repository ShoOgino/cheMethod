    Profile(Element element) {
        this.element = element;
        this.id = element.getChildText("id");
        final Element modules = element.getSingleChild("modules");
        if (element.hasSingleChild("modules") && modules != null) {
            this.modules = modules.getChildren(TEXT_MAPPER);
        }
        if (element.hasSingleChild("activation")) {
            activation = new Activation(element.getSingleChild("activation"));
        }
        if (element.hasSingleChild("build")) {
            build = new Build(element.getSingleChild("build"));
        }
        final Element repositories = element.getSingleChild("repositories");
        if (element.hasSingleChild("repositories") && repositories != null) {
            this.repositories = repositories.getChildren(REPOSITORY_MAPPER);
        }
        final Element elementDependencies = element.getSingleChild("dependencies");
        if (element.hasSingleChild("dependencies") && elementDependencies != null) {
            final List<Dependency> dependencies = elementDependencies.getChildren(TO_DEPENDENCY_MAPPER);
            this.dependencies = new Dependencies(element, dependencies);
        }
        final Element properties = element.getSingleChild("properties");
        if (element.hasSingleChild("properties") && properties != null) {
            this.properties = fetchProperties(properties);
        }
        final Element dependencyManagementDependencies = element.getSingleChild("dependencyManagement/dependencies");
        if (element.hasSingleChild("dependencyManagement") && dependencyManagementDependencies != null) {
            final Element dm = element.getSingleChild("dependencyManagement");
            final List<Dependency> dependencies = dependencyManagementDependencies.getChildren(TO_DEPENDENCY_MAPPER);
            this.dependencyManagement = new DependencyManagement(dm, dependencies);
        }
    }

