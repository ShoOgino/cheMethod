  /** Check if not specifying a custom docker file we have the default value */
  @Test
  public void checkDefaultImage() throws Exception {

    RecipeDto recipeDto =
        newDto(RecipeDto.class).withContent(DEFAULT_DOCKER_IMAGE).withType("dockerimage");
    MachineConfigDto machine =
        newDto(MachineConfigDto.class)
            .withInstallers(
                ImmutableList.of(
                    "org.eclipse.che.ws-agent", "org.eclipse.che.exec", "org.eclipse.che.terminal"))
            .withAttributes(singletonMap(MEMORY_LIMIT_ATTRIBUTE, DEFAULT_MEMORY_LIMIT_BYTES));

    // setup environment
    EnvironmentDto environmentDto =
        newDto(EnvironmentDto.class)
            .withRecipe(recipeDto)
            .withMachines(singletonMap(MACHINE_NAME, machine));
    // setup environment
    WorkspaceConfigDto expectedWsConfig =
        newDto(WorkspaceConfigDto.class)
            .withDefaultEnv("foo")
            .withEnvironments(singletonMap("foo", environmentDto))
            .withName("dumm");

    WorkspaceConfigDto actualWsConfigDto =
        urlFactoryBuilder.buildWorkspaceConfig("foo", "dumm", null);

    assertEquals(actualWsConfigDto, expectedWsConfig);
  }

