    /**
     * Check that by specifying a location of custom dockerfile it's stored in the machine source if URL is accessible
     */
    // FIXME: spi
    @Test(enabled = false)
    public void checkWithCustomDockerfile() throws Exception {

        String myLocation = "http://foo-location";
        RecipeDto recipeDto = newDto(RecipeDto.class).withLocation(myLocation)
                                                     .withType("dockerfile")
                                                     .withContentType("text/x-dockerfile");
        MachineConfigDto machine = newDto(MachineConfigDto.class).withInstallers(singletonList("org.eclipse.che.ws-agent"))
                                                                 .withAttributes(singletonMap("memoryLimitBytes", MEMORY_LIMIT_BYTES));

        // setup environment
        EnvironmentDto environmentDto = newDto(EnvironmentDto.class).withRecipe(recipeDto)
                                                                    .withMachines(singletonMap(MACHINE_NAME, machine));

        WorkspaceConfigDto expectedWsConfig = newDto(WorkspaceConfigDto.class)
                .withDefaultEnv("foo")
                .withEnvironments(singletonMap("foo", environmentDto))
                .withName("dumm");

        when(URLChecker.exists(myLocation)).thenReturn(true);

        WorkspaceConfigDto actualWsConfigDto = urlFactoryBuilder.buildWorkspaceConfig("foo", "dumm", myLocation);

        assertEquals(actualWsConfigDto, expectedWsConfig);
    }

