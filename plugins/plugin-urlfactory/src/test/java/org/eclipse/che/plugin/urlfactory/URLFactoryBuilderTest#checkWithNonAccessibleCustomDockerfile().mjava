  /**
   * Check that by specifying a location of custom dockerfile it's stored in the machine source if
   * URL is accessible
   */
  // FIXME: spi
  @Test(enabled = false)
  public void checkWithNonAccessibleCustomDockerfile() throws Exception {

    String myLocation = "http://foo-location";
    RecipeDto recipeDto =
        newDto(RecipeDto.class).withLocation(DEFAULT_DOCKER_IMAGE).withType("dockerimage");
    MachineConfigDto machine =
        newDto(MachineConfigDto.class)
            .withInstallers(singletonList("org.eclipse.che.ws-agent"))
            .withAttributes(singletonMap("memoryLimitBytes", MEMORY_LIMIT_BYTES));

    // setup environment
    EnvironmentDto environmentDto =
        newDto(EnvironmentDto.class)
            .withRecipe(recipeDto)
            .withMachines(singletonMap(MACHINE_NAME, machine));

    WorkspaceConfigDto expectedWsConfig =
        newDto(WorkspaceConfigDto.class)
            .withDefaultEnv("foo")
            .withEnvironments(singletonMap("foo", environmentDto))
            .withName("dumm");

    when(URLChecker.exists(myLocation)).thenReturn(false);

    WorkspaceConfigDto actualWsConfigDto =
        urlFactoryBuilder.buildWorkspaceConfig("foo", "dumm", myLocation);

    assertEquals(actualWsConfigDto, expectedWsConfig);
  }

