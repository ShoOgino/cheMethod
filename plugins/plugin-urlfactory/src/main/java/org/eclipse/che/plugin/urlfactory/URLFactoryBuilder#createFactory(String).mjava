  /**
   * Build a default factory using the provided json file or create default one
   *
   * @param jsonFileLocation location of factory json file
   * @return a factory
   */
  public FactoryDto createFactory(String jsonFileLocation) {

    // Check if there is factory json file inside the repository
    if (jsonFileLocation != null) {
      String factoryJsonContent = URLFetcher.fetch(jsonFileLocation);
      if (!Strings.isNullOrEmpty(factoryJsonContent)) {
        // Adapt an old factory format to a new one if necessary
        try {
          final ByteArrayInputStream contentStream =
              new ByteArrayInputStream(factoryJsonContent.getBytes(UTF_8));
          final InputStream newStream = factoryAdapter.adapt(contentStream);
          factoryJsonContent = CharStreams.toString(new InputStreamReader(newStream, UTF_8));
        } catch (IOException x) {
          throw new IllegalStateException(x.getLocalizedMessage(), x);
        }
        return DtoFactory.getInstance().createDtoFromJson(factoryJsonContent, FactoryDto.class);
      }
    }

    // else return a default factory
    return newDto(FactoryDto.class).withV("4.0");
  }

