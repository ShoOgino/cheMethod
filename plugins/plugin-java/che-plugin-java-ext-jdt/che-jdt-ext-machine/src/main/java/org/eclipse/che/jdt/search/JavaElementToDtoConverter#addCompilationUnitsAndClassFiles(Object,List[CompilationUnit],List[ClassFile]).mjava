    private void addCompilationUnitsAndClassFiles(Object parent, List<CompilationUnit> compilationUnits, List<ClassFile> classFiles)
            throws JavaModelException {
        Set<Object> childrens = this.childrens.get(parent);
        for (Object children : childrens) {
            if (children instanceof ICompilationUnit) {
                ICompilationUnit unit = (ICompilationUnit)children;
                CompilationUnit compilationUnit = DtoFactory.newDto(CompilationUnit.class);
                compilationUnit.setElementName(unit.getElementName());
                compilationUnit.setProjectPath(unit.getJavaProject().getPath().toOSString());
                compilationUnit.setPath(unit.getResource().getFullPath().toOSString());
                compilationUnit.setHandleIdentifier(unit.getHandleIdentifier());
                compilationUnit.setLabel(JavaElementLabels.getElementLabel(unit, JavaElementLabels.ALL_DEFAULT));
                compilationUnit.setImports(getImports(children));
                compilationUnit.setTypes(getTypes(children));
                compilationUnits.add(compilationUnit);
            } else if (children instanceof IClassFile) {
                ClassFile classFile = DtoFactory.newDto(ClassFile.class);
                IClassFile clazz = (IClassFile)children;
                classFile.setHandleIdentifier(clazz.getHandleIdentifier());
                classFile.setElementName(clazz.getElementName());
                classFile.setPath(clazz.getType().getFullyQualifiedName());
                classFile.setLabel(JavaElementLabels.getElementLabel(clazz, JavaElementLabels.ALL_DEFAULT));
                classFile.setProjectPath(clazz.getJavaProject().getPath().toOSString());
                classFile.setType(getTypes(children).get(0));
                classFiles.add(classFile);
            }
        }

    }

