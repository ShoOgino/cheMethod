    private List<Type> getTypes(Object parent) throws JavaModelException {
        List<Type> result = new ArrayList<>();
        Set<Object> objects = childrens.get(parent);
        if (objects == null) {
            return result;
        }

        for (Object object : objects) {
            if (object instanceof IType) {
                IType type = (IType)object;
                Type dtoType = DtoFactory.newDto(Type.class);
                dtoType.setElementName(type.getElementName());
                dtoType.setLabel(JavaElementLabels.getElementLabel(type, JavaElementLabels.ALL_DEFAULT));
                dtoType.setHandleIdentifier(type.getHandleIdentifier());
                dtoType.setFlags(type.getFlags());
                dtoType.setTypes(getTypes(object));
                dtoType.setFields(getFields(object));
                dtoType.setMethods(getMethods(object));
                dtoType.setInitializers(getInitializes(object));
                if (parent instanceof ITypeRoot) {
                    IType primaryType = ((ITypeRoot)parent).findPrimaryType();
                    dtoType.setPrimary(type.equals(primaryType));
                } else {
                    dtoType.setPrimary(false);
                }
                result.add(dtoType);
            }
        }

        return result;
    }

