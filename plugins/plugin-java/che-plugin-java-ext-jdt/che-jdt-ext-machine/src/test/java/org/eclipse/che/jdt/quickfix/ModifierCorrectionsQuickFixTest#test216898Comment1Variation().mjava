	/**
	 * Quick Fix proposes wrong visibility for overriding/overridden method.
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=216898#c1
	 * 
	 * @throws Exception if anything goes wrong
	 * @since 3.9
	 */
    @Test
	public void test216898Comment1Variation() throws Exception {
		// Changing Abs.getName to protected by hand to allow solution for AbsImpl
		IPackageFragment pack1= fSourceFolder.createPackageFragment("test1", false, null);
		IPackageFragment pack2= fSourceFolder.createPackageFragment("test2", false, null);

		StringBuffer buf= new StringBuffer();

		buf.append("package test1;\n");
		buf.append("public abstract class Abs {\n");
		buf.append("  protected abstract String getName();\n");
		buf.append("}\n");
		pack1.createCompilationUnit("Abs.java", buf.toString(), false, null);

		buf= new StringBuffer();

		buf.append("package test2;\n");
		buf.append("public class AbsImpl extends test1.Abs {\n");
		buf.append("  String getName() {\n");
		buf.append("    return \"name\";\n");
		buf.append("  }\n");
		buf.append("}\n");
		ICompilationUnit cu= pack2.createCompilationUnit("AbsImpl.java", buf.toString(), false, null);

		CompilationUnit astRoot= getASTRoot(cu);
		ArrayList proposals= collectCorrections(cu, astRoot, 1);

		assertCorrectLabels(proposals);
		assertNumberOfProposals(proposals, 1);

		String[] expected= new String[1];
		buf= new StringBuffer();
		buf.append("package test2;\n");
		buf.append("public class AbsImpl extends test1.Abs {\n");
		buf.append("  protected String getName() {\n");
		buf.append("    return \"name\";\n");
		buf.append("  }\n");
		buf.append("}\n");
		expected[0]= buf.toString();

		assertExpectedExistInProposals(proposals, expected);
	}

