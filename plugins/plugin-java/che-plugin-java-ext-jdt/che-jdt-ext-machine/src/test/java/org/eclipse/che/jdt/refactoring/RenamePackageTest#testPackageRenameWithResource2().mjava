    @Test
    public void testPackageRenameWithResource2() throws Exception {
        IPackageFragment fragment = getRoot().createPackageFragment("org.test", true, null);

        StringBuffer buf = new StringBuffer();
        buf.append("package org.test;\n");
        buf.append("public class MyClass {\n");
        buf.append("}\n");
        fragment.createCompilationUnit("MyClass.java", buf.toString(), true, null);

        IFile file = ((IFolder)fragment.getResource()).getFile("x.properties");
        byte[] content = "This is about 'org.test' and more".getBytes();
        file.create(new ByteArrayInputStream(content), true, null);
        file.refreshLocal(IResource.DEPTH_ONE, null);

        RenameJavaElementDescriptor descriptor =
                RefactoringSignatureDescriptorFactory.createRenameJavaElementDescriptor(IJavaRefactorings.RENAME_PACKAGE);
        descriptor.setJavaElement(fragment);
        descriptor.setNewName("org.test2");
        descriptor.setUpdateReferences(true);
        descriptor.setUpdateQualifiedNames(true);
        descriptor.setFileNamePatterns("*.properties");
        Refactoring refactoring = createRefactoring(descriptor);
        RefactoringStatus status = performRefactoring(refactoring);
        if (status != null)
            assertTrue(status.toString(), status.isOK());

        RefactoringProcessor processor = ((RenameRefactoring)refactoring).getProcessor();
        IResourceMapper rm = (IResourceMapper)processor.getAdapter(IResourceMapper.class);
        IJavaElementMapper jm = (IJavaElementMapper)processor.getAdapter(IJavaElementMapper.class);
        checkMappingUnchanged(jm, rm, new Object[]{getRoot().getJavaProject(), getRoot()});
        IPackageFragment newFragment = getRoot().getPackageFragment("org.test2");
        IFile newFile = ((IContainer)newFragment.getResource()).getFile(new Path("x.properties"));
        assertEquals("This is about 'org.test2' and more", getContents(newFile));
        checkMappingChanged(jm, rm, new Object[][]{
                {fragment, newFragment},
                {file, newFile},
        });
    }

