    @Test
	public void testMissingSynchronizedOnInheritedMethod() throws Exception {
		IPackageFragment pack1= fSourceFolder.createPackageFragment("r", false, null);
		StringBuffer buf= new StringBuffer();
		buf.append("package r;\n");
		buf.append("\n");
		buf.append("public class A {\n");
		buf.append("	protected synchronized void foo() {\n");
		buf.append("	}\n");
		buf.append("}\n");
		pack1.createCompilationUnit("A.java", buf.toString(), false, null);

		buf= new StringBuffer();
		buf.append("package r;\n");
		buf.append("\n");
		buf.append("class B extends A {\n");
		buf.append("	protected void foo() {\n");
		buf.append("	}\n");
		buf.append("}\n");
		ICompilationUnit cu= pack1.createCompilationUnit("B.java", buf.toString(), false, null);

		CompilationUnit astRoot= getASTRoot(cu);
		ArrayList proposals= collectCorrections(cu, astRoot);

		assertCorrectLabels(proposals);
		assertNumberOfProposals(proposals, 1);

		String[] expected= new String[1];
		buf= new StringBuffer();
		buf.append("package r;\n");
		buf.append("\n");
		buf.append("class B extends A {\n");
		buf.append("	protected synchronized void foo() {\n");
		buf.append("	}\n");
		buf.append("}\n");
		expected[0]= buf.toString();

		assertExpectedExistInProposals(proposals, expected);
	}

