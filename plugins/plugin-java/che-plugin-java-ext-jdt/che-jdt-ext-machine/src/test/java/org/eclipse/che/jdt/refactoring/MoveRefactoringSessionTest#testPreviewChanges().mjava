    @Test
    public void testPreviewChanges() throws Exception {
        IType type = fProject.findType("p.A");
        ICompilationUnit unit = type.getCompilationUnit();
        String sessionId = manager.createMoveRefactoringSession(new IJavaElement[]{unit});
        ReorgDestination destination = new DtoServerImpls.ReorgDestinationImpl();
        destination.setSessionId(sessionId);
        destination.setProjectPath(RefactoringTestSetup.getProject().getPath().toOSString());
        destination.setDestination(p1.getPath().toOSString());
        destination.setType(ReorgDestination.DestinationType.PACKAGE);
        manager.setRefactoringDestination(destination);
        MoveSettings settings = new DtoServerImpls.MoveSettingsImpl();
        settings.setUpdateReferences(true);
        settings.setSessionId(sessionId);
        manager.setMoveSettings(settings);
        manager.createChange(sessionId);
        RefactoringPreview change = manager.getRefactoringPreview(sessionId);

        RefactoringChange change1 = new DtoServerImpls.ChangeEnabledStateImpl();
        change1.setSessionId(sessionId);
        change1.setChangeId(change.getChildrens().get(0).getId());
        ChangePreview preview = manager.getChangePreview(change1);

        assertThat(preview).isNotNull();
        assertThat(preview.getFileName()).isNotNull().isNotEmpty();
        assertThat(preview.getOldContent()).isNotNull().isNotEmpty();
        assertThat(preview.getNewContent()).isNotNull().isNotEmpty();

    }

