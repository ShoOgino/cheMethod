    @Test
	public void testDestination_yes_methodToCu() throws Exception {
		ICompilationUnit cu= getPackageP().createCompilationUnit("A.java", "package p;class A{void foo(){/*impl*/}}", false, new NullProgressMonitor());
		ICompilationUnit cu1= getPackageP().createCompilationUnit("B.java", "package p;class B{}", false, new NullProgressMonitor());
		IMethod method= cu.getType("A").getMethod("foo", new String[0]);
		IJavaElement[] javaElements= {method};
		IResource[] resources= {};
		JavaMoveProcessor ref= verifyEnabled(resources, javaElements, createReorgQueries());

		Object destination= cu1;
		verifyValidDestination(ref, destination);

		RefactoringStatus status= performRefactoring(ref, true);
		assertEquals(null, status);

		assertTrue("source method not moved", ! method.exists());

		IType typeB= cu1.getType("B");
		IMethod methodBfoo= typeB.getMethod("foo", new String[0]);
		assertTrue("method does not exist after", methodBfoo.exists());

		assertEquals("void foo(){/*impl*/}", methodBfoo.getSource());

	}

