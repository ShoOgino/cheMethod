    @Test
	public void testDestination_yes_fileToCu() throws Exception{
		ParticipantTesting.reset();
		IProject superFolder= RefactoringTestSetup.getProject().getProject();
		IFile file= superFolder.getFile("a.txt");
		file.create(getStream("123"), true, null);

		ICompilationUnit cu1= getPackageP().createCompilationUnit("A.java", "package p;class A{void foo(){}class Inner{}}", false, new NullProgressMonitor());
		IJavaElement[] javaElements= {};
		IResource[] resources= {file};
		String[] handles= ParticipantTesting.createHandles(new Object[] {file});
		JavaMoveProcessor ref= verifyEnabled(resources, javaElements, createReorgQueries());

		Object destination= cu1;
		verifyValidDestination(ref, destination);

		assertTrue("source file does not exist before", file.exists());

		RefactoringStatus status= performRefactoring(ref, true);
		assertEquals(null, status);

		assertTrue("source file not moved", ! file.exists());

		IFile newFile= ((IFolder)cu1.getParent().getResource()).getFile(file.getName());
		assertTrue("new file does not exist after", newFile.exists());

		ParticipantTesting.testMove(
				handles,
				new MoveArguments[] {
						new MoveArguments(getPackageP().getResource(), ref.getUpdateReferences())});
	}

