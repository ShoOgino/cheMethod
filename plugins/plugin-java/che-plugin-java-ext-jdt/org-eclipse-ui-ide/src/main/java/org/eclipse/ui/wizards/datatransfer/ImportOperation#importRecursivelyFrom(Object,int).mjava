  /**
   * Imports the specified file system object recursively into the workspace. If the import fails,
   * adds a status object to the list to be returned by <code>getStatus</code>.
   *
   * @param fileSystemObject the file system object to be imported
   * @param policy determines how the file system object and children are imported
   * @throws CoreException
   * @exception OperationCanceledException if canceled
   */
  void importRecursivelyFrom(Object fileSystemObject, int policy) throws CoreException {
    if (monitor.isCanceled()) {
      throw new OperationCanceledException();
    }

    if (!provider.isFolder(fileSystemObject)) {
      importFile(fileSystemObject, policy);
      return;
    }

    int childPolicy = importFolder(fileSystemObject, policy);
    if (childPolicy != POLICY_SKIP_CHILDREN) {
      Iterator children = provider.getChildren(fileSystemObject).iterator();
      while (children.hasNext()) {
        importRecursivelyFrom(children.next(), childPolicy);
      }
    }
  }

