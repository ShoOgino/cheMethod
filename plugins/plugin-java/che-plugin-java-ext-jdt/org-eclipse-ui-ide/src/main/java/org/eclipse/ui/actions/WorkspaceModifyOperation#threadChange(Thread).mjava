  /* (non-Javadoc)
   * @see IThreadListener#threadChange(Thread);
   * @since 3.2
   */
  public void threadChange(Thread thread) {
    //we must make sure we aren't transferring control away from a thread that
    //already owns a scheduling rule because this is deadlock prone (bug 105491)
    if (rule == null) {
      return;
    }
    Job currentJob = Job.getJobManager().currentJob();
    if (currentJob == null) {
      return;
    }
    ISchedulingRule currentRule = currentJob.getRule();
    if (currentRule == null) {
      return;
    }
    throw new IllegalStateException(
        "Cannot fork a thread from a thread owning a rule"); //$NON-NLS-1$
  }

