  /**
   * Runs the given search query. This method will execute the query in the same thread as the
   * caller. This method blocks until the query is finished. Running a query adds it to the set of
   * known queries and notifies any registered {@link IQueryListener}s about the addition.
   *
   * <p>The result will be shown in the given search result view which will be activated. A call to
   * to {@link #activateSearchResultView} is not required.
   *
   * @param context the runnable context to run the query in
   * @param query the query to execute
   * @param view the search result view to show the result in. If <code>null</code> is passed in,
   *     the default activation mechanism is used to open a new result view or to select the view to
   *     be reused.
   * @return a status indicating whether the query ran correctly, including {@link IStatus#CANCEL}
   *     to signal that the query was canceled.
   * @since 3.2
   */
  public static IStatus runQueryInForeground(
      IRunnableContext context, ISearchQuery query, ISearchResultViewPart view) {
    if (query == null) {
      throw new IllegalArgumentException("query must not be null"); //$NON-NLS-1$
    }
    return InternalSearchUI.getInstance().runSearchInForeground(context, query, view);
  }

