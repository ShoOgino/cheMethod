  private IStatus doRunSearchInForeground(final SearchJobRecord rec, IRunnableContext context) {
    try {
      runInCurrentThread(
          new IRunnableWithProgress() {
            public void run(IProgressMonitor monitor)
                throws InvocationTargetException, InterruptedException {
              searchJobStarted(rec);
              try {
                IStatus status = rec.query.run(monitor);
                if (status.matches(IStatus.CANCEL)) {
                  throw new InterruptedException();
                }
                if (!status.isOK()) {
                  throw new InvocationTargetException(new CoreException(status));
                }
              } catch (OperationCanceledException e) {
                throw new InterruptedException();
              } finally {
                searchJobFinished(rec);
              }
            }
          },
          new NullProgressMonitor());
    } catch (InvocationTargetException e) {
      Throwable innerException = e.getTargetException();
      if (innerException instanceof CoreException) {
        return ((CoreException) innerException).getStatus();
      }
      return new Status(
          IStatus.ERROR,
          "SearchPlugin.getID()",
          0,
          "An unexpected exception occurred during search",
          innerException);
    } catch (InterruptedException e) {
      return Status.CANCEL_STATUS;
    }
    return Status.OK_STATUS;
  }

