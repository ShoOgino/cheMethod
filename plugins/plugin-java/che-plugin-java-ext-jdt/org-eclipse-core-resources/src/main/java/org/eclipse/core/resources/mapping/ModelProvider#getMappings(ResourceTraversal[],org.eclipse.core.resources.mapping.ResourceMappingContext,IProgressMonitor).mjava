  /**
   * Return the set of mappings that overlap with the given resource traversals. This method is used
   * to map operations on resources to operations on resource mappings. By default, this method
   * calls {@link #getMappings( IResource[],
   * org.eclipse.core.resources.mapping.ResourceMappingContext , IProgressMonitor)} with the
   * resources extracted from each traversal.
   *
   * <p>Subclasses may override this method.
   *
   * @param traversals the traversals
   * @param context a resource mapping context
   * @param monitor a progress monitor, or <code>null</code> if progress reporting is not desired
   * @return the set of mappings that overlap with the given resource traversals
   */
  public ResourceMapping[] getMappings(
      ResourceTraversal[] traversals,
      org.eclipse.core.resources.mapping.ResourceMappingContext context,
      IProgressMonitor monitor)
      throws CoreException {
    Set<ResourceMapping> result = new HashSet<ResourceMapping>();
    for (int i = 0; i < traversals.length; i++) {
      ResourceTraversal traversal = traversals[i];
      ResourceMapping[] mappings = getMappings(traversal.getResources(), context, monitor);
      for (int j = 0; j < mappings.length; j++) result.add(mappings[j]);
    }
    return result.toArray(new ResourceMapping[result.size()]);
  }

