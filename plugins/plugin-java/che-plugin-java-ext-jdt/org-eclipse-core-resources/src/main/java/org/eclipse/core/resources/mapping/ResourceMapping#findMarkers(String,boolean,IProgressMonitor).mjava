  /**
   * Returns all markers of the specified type on the resources in this mapping. If <code>
   * includeSubtypes</code> is <code>false</code>, only markers whose type exactly matches the given
   * type are returned. Returns an empty array if there are no matching markers.
   *
   * @param type the type of marker to consider, or <code>null</code> to indicate all types
   * @param includeSubtypes whether or not to consider sub-types of the given type
   * @param monitor a progress monitor, or <code>null</code> if progress reporting is not desired
   * @return an array of markers
   * @exception CoreException if this method fails.
   */
  public IMarker[] findMarkers(String type, boolean includeSubtypes, IProgressMonitor monitor)
      throws CoreException {
    final ResourceTraversal[] traversals =
        getTraversals(ResourceMappingContext.LOCAL_CONTEXT, monitor);
    ArrayList<IMarker> result = new ArrayList<IMarker>();
    for (int i = 0; i < traversals.length; i++)
      traversals[i].doFindMarkers(result, type, includeSubtypes);
    return result.toArray(new IMarker[result.size()]);
  }

