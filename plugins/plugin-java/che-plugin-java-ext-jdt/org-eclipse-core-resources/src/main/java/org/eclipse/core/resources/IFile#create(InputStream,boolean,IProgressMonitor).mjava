  /**
   * Creates a new file resource as a member of this handle's parent resource.
   *
   * <p>This is a convenience method, fully equivalent to:
   *
   * <pre>
   *   create(source, (force ? FORCE : IResource.NONE), monitor);
   * </pre>
   *
   * <p>This method changes resources; these changes will be reported in a subsequent resource
   * change event, including an indication that the file has been added to its parent.
   *
   * <p>This method is long-running; progress and cancellation are provided by the given progress
   * monitor.
   *
   * @param source an input stream containing the initial contents of the file, or <code>null</code>
   *     if the file should be marked as not local
   * @param force a flag controlling how to deal with resources that are not in sync with the local
   *     file system
   * @param monitor a progress monitor, or <code>null</code> if progress reporting is not desired
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>This resource already exists in the workspace.
   *       <li>The parent of this resource does not exist.
   *       <li>The parent of this resource is a virtual folder.
   *       <li>The project of this resource is not accessible.
   *       <li>The parent contains a resource of a different type at the same path as this resource.
   *       <li>The name of this resource is not valid (according to <code>IWorkspace.validateName
   *           </code>).
   *       <li>The corresponding location in the local file system is occupied by a directory.
   *       <li>The corresponding location in the local file system is occupied by a file and <code>
   *           force </code> is <code>false</code>.
   *       <li>Resource changes are disallowed during certain types of resource change event
   *           notification. See <code>IResourceChangeEvent</code> for more details.
   *     </ul>
   *
   * @exception OperationCanceledException if the operation is canceled. Cancelation can occur even
   *     if no progress monitor is provided.
   */
  public void create(InputStream source, boolean force, IProgressMonitor monitor)
      throws CoreException;

