  /**
   * Returns whether a resource should be included in a traversal based on the provided member
   * flags.
   *
   * @param flags The resource info flags
   * @param memberFlags The member flag mask
   * @return Whether the resource is included
   */
  protected boolean isMember(int flags, int memberFlags) {
    int excludeMask = 0;
    if ((memberFlags & IContainer.INCLUDE_PHANTOMS) == 0) excludeMask |= M_PHANTOM;
    if ((memberFlags & IContainer.INCLUDE_HIDDEN) == 0) excludeMask |= M_HIDDEN;
    if ((memberFlags & IContainer.INCLUDE_TEAM_PRIVATE_MEMBERS) == 0)
      excludeMask |= M_TEAM_PRIVATE_MEMBER;
    if ((memberFlags & IContainer.EXCLUDE_DERIVED) != 0) excludeMask |= M_DERIVED;
    // the resource is a matching member if it matches none of the exclude flags
    return flags != NULL_FLAG && (flags & excludeMask) == 0;
  }

