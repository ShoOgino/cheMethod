    /*
 * Return a 2 element String array.
 * 	element 0 - the path
 * 	element 1 - the key
 * The path may be null.
 * The key is never null.
 */
    public static String[] decodePath(String fullPath) {
        String key = null;
        String path = null;

        // check to see if we have an indicator which tells us where the path ends
        int index = fullPath.indexOf(DOUBLE_SLASH);
        if (index == -1) {
            // we don't have a double-slash telling us where the path ends
            // so the path is up to the last slash character
            int lastIndex = fullPath.lastIndexOf(IPath.SEPARATOR);
            if (lastIndex == -1) {
                key = fullPath;
            } else {
                path = fullPath.substring(0, lastIndex);
                key = fullPath.substring(lastIndex + 1);
            }
        } else {
            // the child path is up to the double-slash and the key
            // is the string after it
            path = fullPath.substring(0, index);
            key = fullPath.substring(index + 2);
        }

        // adjust if we have an absolute path
        if (path != null)
            if (path.length() == 0)
                path = null;
            else if (path.charAt(0) == IPath.SEPARATOR)
                path = path.substring(1);

        return new String[] {path, key};
    }

