  /**
   * Sets the path variable with the given name to be the specified value. Depending on the value
   * given and if the variable is currently defined or not, there are several possible outcomes for
   * this operation:
   *
   * <p>
   *
   * <ul>
   *   <li>A new variable will be created, if there is no variable defined with the given name, and
   *       the given value is not <code>null</code>.
   *   <li>The referred variable's value will be changed, if it already exists and the given value
   *       is not <code>null</code>.
   *   <li>The referred variable will be removed, if a variable with the given name is currently
   *       defined and the given value is <code>null</code>.
   *   <li>The call will be ignored, if a variable with the given name is not currently defined and
   *       the given value is <code>null</code>, or if it is defined but the given value is equal to
   *       its current value.
   * </ul>
   *
   * <p>If a variable is effectively changed, created or removed by a call to this method,
   * notification will be sent to all registered listeners.
   *
   * @param name the name of the variable
   * @param value the value for the variable (may be <code>null</code>)
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>The variable name is not valid
   *       <li>The variable value is relative
   *     </ul>
   *
   * @since 3.6
   */
  public void setURIValue(String name, URI value) throws CoreException;

