  /**
   * Sets whether this resource subtree is marked as derived.
   *
   * <p>A <b>derived</b> resource is a regular file or folder that is created in the course of
   * translating, compiling, copying, or otherwise processing other files. Derived resources are not
   * original data, and can be recreated from other resources. It is commonplace to exclude derived
   * resources from version and configuration management because they would otherwise clutter the
   * team repository with version of these ever-changing files as each user regenerates them.
   *
   * <p>If a resource or any of its ancestors is marked as derived, a team provider should assume
   * that the resource is not under version and configuration management <i>by default</i>. That is,
   * the resource should only be stored in a team repository if the user explicitly indicates that
   * this resource is worth saving.
   *
   * <p>Newly-created resources are not marked as derived; rather, the mark must be set explicitly
   * using <code>setDerived(true)</code>. Derived marks are maintained in the in-memory resource
   * tree, and are discarded when the resources are deleted. Derived marks are saved to disk when a
   * project is closed, or when the workspace is saved.
   *
   * <p>Projects and the workspace root are never considered derived; attempts to mark them as
   * derived are ignored.
   *
   * <p>This operation does <b>not</b> result in a resource change event, and does not trigger
   * autobuilds.
   *
   * @param isDerived <code>true</code> if this resource is to be marked as derived, and <code>false
   *     </code> otherwise
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>This resource does not exist.
   *       <li>Resource changes are disallowed during certain types of resource change event
   *           notification. See <code>IResourceChangeEvent</code> for more details.
   *     </ul>
   *
   * @see #isDerived()
   * @since 2.0
   * @deprecated Replaced by {@link #setDerived(boolean, IProgressMonitor)} which is a workspace
   *     operation and reports changes in resource deltas.
   */
  @Deprecated
  public void setDerived(boolean isDerived) throws CoreException;

