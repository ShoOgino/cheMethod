  /**
   * Sets the given attribute key-value pairs on this marker. The values must be <code>null</code>
   * or an instance of one of the following classes: <code>String</code>, <code>Integer</code>, or
   * <code>Boolean</code>. If a value is <code>null</code>, the new value of the attribute is
   * considered to be undefined.
   *
   * <p>The values of the attributes cannot be <code>String</code> whose UTF encoding exceeds 65535
   * bytes. On persistent markers this limit is enforced by an assertion.
   *
   * <p>This method changes resources; these changes will be reported in a subsequent resource
   * change event, including an indication that this marker has been modified.
   *
   * @param attributeNames an array of attribute names
   * @param values an array of attribute values
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>This marker does not exist.
   *       <li>Resource changes are disallowed during certain types of resource change event
   *           notification. See <code>IResourceChangeEvent</code> for more details.
   *     </ul>
   *
   * @see IResourceRuleFactory#markerRule(IResource)
   */
  public void setAttributes(String[] attributeNames, Object[] values) throws CoreException;

