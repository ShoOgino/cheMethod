  /**
   * Builds this project. Does nothing if the project is closed.
   *
   * <p>Building a project involves executing the commands found in this project's build spec. The
   * build is run for the project's active build configuration.
   *
   * <p>This method may change resources; these changes will be reported in a subsequent resource
   * change event.
   *
   * <p>This method is long-running; progress and cancellation are provided by the given progress
   * monitor.
   *
   * @param kind the kind of build being requested. Valid values are:
   *     <ul>
   *       <li><code>IncrementalProjectBuilder.FULL_BUILD</code> - indicates a full build.
   *       <li><code>IncrementalProjectBuilder.INCREMENTAL_BUILD</code> - indicates an incremental
   *           build.
   *       <li><code>CLEAN_BUILD</code>- indicates a clean request. Clean does not actually build
   *           anything, but rather discards all problems and build states.
   *     </ul>
   *
   * @param monitor a progress monitor, or <code>null</code> if progress reporting is not desired
   * @exception CoreException if the build fails. The status contained in the exception may be a
   *     generic <code>BUILD_FAILED</code> code, but it could also be any other status code; it
   *     might also be a multi-status.
   * @exception OperationCanceledException if the operation is canceled. Cancelation can occur even
   *     if no progress monitor is provided.
   * @see IProjectDescription
   * @see IncrementalProjectBuilder#FULL_BUILD
   * @see IncrementalProjectBuilder#INCREMENTAL_BUILD
   * @see IResourceRuleFactory#buildRule()
   */
  public void build(int kind, IProgressMonitor monitor) throws CoreException;

