	/**
	 * Changes this project resource to match the given project
	 * description. This project should exist and be open.
	 * <p>
	 * This is a convenience method, fully equivalent to:
	 * <pre>
	 *   setDescription(description, KEEP_HISTORY, monitor);
	 * </pre>
	 * </p>
	 * <p>
	 * This method requires the {@link IWorkspaceRoot} scheduling rule.
	 * </p>
	 * <p>
	 * This method changes resources; these changes will be reported
	 * in a subsequent resource change event, including an indication 
	 * that the project's content has changed.
	 * </p>
	 * <p>
	 * This method is long-running; progress and cancellation are provided
	 * by the given progress monitor. 
	 * </p>
	 *
	 * @param description the project description
	 * @param monitor a progress monitor, or <code>null</code> if progress
	 *    reporting is not desired
	 * @exception CoreException if this method fails. Reasons include:
	 * <ul>
	 * <li> This project does not exist in the workspace.</li>
	 * <li> This project is not open.</li>
	 * <li> The location in the local file system corresponding to the project
	 *   description file is occupied by a directory.</li>
	 * <li> The workspace is out of sync with the project description file 
	 *   in the local file system .</li>
	 * <li> Resource changes are disallowed during certain types of resource change 
	 *       event notification. See <code>IResourceChangeEvent</code> for more details.</li>
	 * <li> The file modification validator disallowed the change.</li>
	 * </ul>
	 * @exception OperationCanceledException if the operation is canceled. 
	 * Cancelation can occur even if no progress monitor is provided.
	 *
	 * @see #getDescription()
	 * @see IProjectNature#configure()
	 * @see IProjectNature#deconfigure()
	 * @see #setDescription(IProjectDescription,int,IProgressMonitor)
	 */
	public void setDescription(IProjectDescription description, IProgressMonitor monitor) throws CoreException;

