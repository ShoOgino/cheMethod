  /**
   * Changes this project resource to match the given project description. This project should exist
   * and be open.
   *
   * <p>The given project description is used to change the project's natures, build spec, comment,
   * and referenced projects. The name and location of a project cannot be changed using this
   * method; these settings in the project description are ignored. To change a project's name or
   * location, use {@link IResource#move(IProjectDescription, int, IProgressMonitor)}. The project's
   * session and persistent properties are not affected.
   *
   * <p>If the new description includes nature ids of natures that the project did not have before,
   * these natures will be configured in automatically, which involves instantiating the project
   * nature and calling {@link IProjectNature#configure()} on it. An internal reference to the
   * nature object is retained, and will be returned on subsequent calls to <code>getNature</code>
   * for the specified nature id. Similarly, any natures the project had which are no longer
   * required will be automatically de-configured by calling {@link IProjectNature#deconfigure} on
   * the nature object and letting go of the internal reference to it.
   *
   * <p>The <code>FORCE</code> update flag controls how this method deals with cases where the
   * workspace is not completely in sync with the local file system. If <code>FORCE</code> is not
   * specified, the method will only attempt to overwrite the project's description file in the
   * local file system provided it is in sync with the workspace. This option ensures there is no
   * unintended data loss; it is the recommended setting. However, if <code>FORCE</code> is
   * specified, an attempt will be made to write the project description file in the local file
   * system, overwriting any existing one if need be.
   *
   * <p>The <code>KEEP_HISTORY</code> update flag controls whether or not a copy of current contents
   * of the project description file should be captured in the workspace's local history. The local
   * history mechanism serves as a safety net to help the user recover from mistakes that might
   * otherwise result in data loss. Specifying <code>KEEP_HISTORY</code> is recommended. Note that
   * local history is maintained with each individual project, and gets discarded when a project is
   * deleted from the workspace.
   *
   * <p>The <code>AVOID_NATURE_CONFIG</code> update flag controls whether or not added and removed
   * natures should be configured or de-configured. If this flag is not specified, then added
   * natures will be configured and removed natures will be de-configured. If this flag is
   * specified, natures can still be added or removed, but they will not be configured or
   * de-configured.
   *
   * <p>The scheduling rule required for this operation depends on the <code>AVOID_NATURE_CONFIG
   * </code> flag. If the flag is specified the {@link IResourceRuleFactory#modifyRule} is required;
   * If the flag is not specified, the {@link IWorkspaceRoot} scheduling rule is required.
   *
   * <p>Update flags other than <code>FORCE</code>, <code>KEEP_HISTORY</code>, and <code>
   * AVOID_NATURE_CONFIG</code> are ignored.
   *
   * <p>Prior to modifying the project description file, the file modification validator (if
   * provided by the Team plug-in), will be given a chance to perform any last minute preparations.
   * Validation is performed by calling <code>IFileModificationValidator.validateSave</code> on the
   * project description file. If the validation fails, then this operation will fail.
   *
   * <p>This method changes resources; these changes will be reported in a subsequent resource
   * change event, including an indication that the project's content has changed.
   *
   * <p>This method is long-running; progress and cancellation are provided by the given progress
   * monitor.
   *
   * @param description the project description
   * @param updateFlags bit-wise or of update flag constants (<code>FORCE</code>, <code>KEEP_HISTORY
   *     </code> and <code>AVOID_NATURE_CONFIG</code>)
   * @param monitor a progress monitor, or <code>null</code> if progress reporting is not desired
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>This project does not exist in the workspace.
   *       <li>This project is not open.
   *       <li>The location in the local file system corresponding to the project description file
   *           is occupied by a directory.
   *       <li>The workspace is not in sync with the project description file in the local file
   *           system and <code>FORCE</code> is not specified.
   *       <li>Resource changes are disallowed during certain types of resource change event
   *           notification. See <code>IResourceChangeEvent</code> for more details.
   *       <li>The file modification validator disallowed the change.
   *     </ul>
   *
   * @exception OperationCanceledException if the operation is canceled. Cancelation can occur even
   *     if no progress monitor is provided.
   * @see #getDescription()
   * @see IProjectNature#configure()
   * @see IProjectNature#deconfigure()
   * @see IResource#FORCE
   * @see IResource#KEEP_HISTORY
   * @see IResource#AVOID_NATURE_CONFIG
   * @see IResourceRuleFactory#modifyRule(IResource)
   * @since 2.0
   */
  public void setDescription(
      IProjectDescription description, int updateFlags, IProgressMonitor monitor)
      throws CoreException;

