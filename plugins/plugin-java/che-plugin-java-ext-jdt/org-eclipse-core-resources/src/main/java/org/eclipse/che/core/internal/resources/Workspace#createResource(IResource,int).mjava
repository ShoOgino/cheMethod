  public void createResource(IResource resource, int updateFlags) throws CoreException {
    try {
      IPath path = resource.getFullPath();
      switch (resource.getType()) {
        case IResource.FILE:
          String newName = path.lastSegment();
          VirtualFileEntry child =
              getProjectsRoot().getChild(path.removeLastSegments(1).toOSString());
          if (child == null) {
            throw new NotFoundException(
                "Can't find parent folder: " + path.removeLastSegments(1).toOSString());
          }
          FolderEntry entry = (FolderEntry) child;

          entry.createFile(newName, new byte[0]);
          break;
        case IResource.FOLDER:
          getProjectsRoot().createFolder(path.toOSString());
          break;
        case IResource.PROJECT:
          ProjectConfigImpl projectConfig = new ProjectConfigImpl();
          projectConfig.setPath(resource.getName());
          projectConfig.setName(resource.getName());
          projectConfig.setType(BaseProjectType.ID);
          projectManager.get().createProject(projectConfig, new HashMap<>());
          break;
        default:
          throw new UnsupportedOperationException();
      }
    } catch (ForbiddenException | ConflictException | ServerException | NotFoundException e) {
      throw new CoreException(new Status(0, ResourcesPlugin.getPluginId(), e.getMessage(), e));
    }
  }

