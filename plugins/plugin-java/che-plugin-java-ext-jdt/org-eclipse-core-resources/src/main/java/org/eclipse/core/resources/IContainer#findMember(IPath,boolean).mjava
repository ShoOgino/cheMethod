  /**
   * Finds and returns the member resource identified by the given path in this container, or <code>
   * null</code> if no such resource exists. The supplied path may be absolute or relative; in
   * either case, it is interpreted as relative to this resource. Trailing separators and the path's
   * device are ignored. If the path is empty this container is returned. Parent references in the
   * supplied path are discarded if they go above the workspace root.
   *
   * <p>If the <code>includePhantoms</code> argument is <code>false</code>, only a member resource
   * with the given path that exists will be returned. If the <code>includePhantoms</code> argument
   * is <code>true</code>, the method also returns a resource if the workspace is keeping track of a
   * phantom with that path.
   *
   * <p>Note that no attempt is made to exclude team-private member resources as with <code>members
   * </code>.
   *
   * <p>N.B. Unlike the methods which traffic strictly in resource handles, this method infers the
   * resulting resource's type from the resource (or phantom) existing at the calculated path in the
   * workspace.
   *
   * @param path the path of the desired resource
   * @param includePhantoms <code>true</code> if phantom resources are of interest; <code>false
   *     </code> if phantom resources are not of interest
   * @return the member resource, or <code>null</code> if no such resource exists
   * @see #members(boolean)
   * @see IResource#isPhantom()
   */
  public IResource findMember(IPath path, boolean includePhantoms);

