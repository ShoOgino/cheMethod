	/**
	 * Returns the handles of all files that are mapped to the given URI.
	 * Returns an empty array if there are none. The URI must be absolute; its
	 * path segments need not be valid names. The resulting files may not
	 * currently exist.
	 * <p>
	 * If the {@link #INCLUDE_TEAM_PRIVATE_MEMBERS} flag is specified in the
	 * member flags, team private members will be included along with the
	 * others. If the {@link #INCLUDE_TEAM_PRIVATE_MEMBERS} flag is not
	 * specified (recommended), the result will omit any team private member
	 * resources.
	 * </p>
	 * <p>
	 * If the {@link #INCLUDE_HIDDEN} flag is specified in the member flags,
	 * hidden members will be included along with the others. If the
	 * {@link #INCLUDE_HIDDEN} flag is not specified (recommended), the result
	 * will omit any hidden member resources.
	 * </p>
	 * <p>
	 * The result will also omit resources that are explicitly excluded 
	 * from the workspace according to existing resource filters.
	 * </p>
	 * 
	 * @param location
	 *        a URI path into some file system
	 * @param memberFlags
	 *        bit-wise or of member flag constants (
	 *        {@link #INCLUDE_TEAM_PRIVATE_MEMBERS} and {@link #INCLUDE_HIDDEN})
	 *        indicating which members are of interest
	 * @return the corresponding files in the workspace, or an empty array if
	 *         none
	 * @since 3.5
	 */
	public IFile[] findFilesForLocationURI(URI location, int memberFlags);

