  /**
   * Maps the given plug-in file to its real location. This method is intended to be used with
   * <code>ISaveContext.getSaveNumber()</code> to map plug-in configuration file names to real
   * locations.
   *
   * <p>For example, assume a plug-in has a configuration file named "config.properties". The map
   * facility can be used to map that logical name onto a real name which is specific to a
   * particular save (e.g., 10.config.properties, where 10 is the current save number). The paths
   * specified here should always be relative to the plug-in state location for the plug-in saving
   * the state.
   *
   * <p>Each save participant must manage the deletion of its old state files. Old state files can
   * be discovered using <code>getPreviousSaveNumber</code> or by using <code>getFiles</code> to
   * discover the current files and comparing that to the list of files on disk.
   *
   * @param file the logical name of the participant's data file
   * @param location the real (i.e., filesystem) name by which the file should be known for this
   *     save, or <code>null</code> to remove the entry
   * @see #lookup(IPath)
   * @see #getSaveNumber()
   * @see #needSaveNumber()
   * @see ISavedState#lookup(IPath)
   */
  public void map(IPath file, IPath location);

