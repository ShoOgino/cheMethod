  /** Combines rules for each parameter to validateEdit from the corresponding rule factories. */
  public ISchedulingRule validateEditRule(IResource[] resources) {
    if (resources.length == 0) return null;
    //optimize rule for single file
    if (resources.length == 1) {
      if (resources[0].getType() == IResource.ROOT) return root;
      return factoryFor(resources[0]).validateEditRule(resources);
    }
    //gather rules for each resource from appropriate factory
    HashSet<ISchedulingRule> rules = new HashSet<ISchedulingRule>();
    IResource[] oneResource = new IResource[1];
    for (int i = 0; i < resources.length; i++) {
      if (resources[i].getType() == IResource.ROOT) return root;
      oneResource[0] = resources[i];
      ISchedulingRule rule = factoryFor(resources[i]).validateEditRule(oneResource);
      if (rule != null) rules.add(rule);
    }
    if (rules.isEmpty()) return null;
    if (rules.size() == 1) return rules.iterator().next();
    ISchedulingRule[] ruleArray = rules.toArray(new ISchedulingRule[rules.size()]);
    return new MultiRule(ruleArray);
  }

