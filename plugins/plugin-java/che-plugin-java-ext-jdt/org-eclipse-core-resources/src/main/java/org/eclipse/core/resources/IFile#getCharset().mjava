  /**
   * Returns the name of a charset to be used when decoding the contents of this file into
   * characters.
   *
   * <p>This refinement of the corresponding {@link IEncodedStorage} method is a convenience method,
   * fully equivalent to:
   *
   * <pre>
   *   getCharset(true);
   * </pre>
   *
   * <p><b>Note 1</b>: this method does not check whether the result is a supported charset name.
   * Callers should be prepared to handle <code>UnsupportedEncodingException</code> where this
   * charset is used.
   *
   * <p><b>Note 2</b>: this method returns a cached value for the encoding that may be out of date
   * if the file is not synchronized with the local file system and the encoding has since changed
   * in the file system.
   *
   * @return the name of a charset
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>This resource could not be read.
   *       <li>This resource is not local.
   *       <li>The corresponding location in the local file system is occupied by a directory.
   *     </ul>
   *
   * @see IFile#getCharset(boolean)
   * @see IEncodedStorage#getCharset()
   * @see IContainer#getDefaultCharset()
   * @since 3.0
   */
  public String getCharset() throws CoreException;

