	/**
	 * Returns the handles to all the resources (workspace root, project,
	 * folder) in the workspace which are mapped to the given path in the local
	 * file system. Returns an empty array if there are none.
	 * <p>
	 * If the path maps to the platform working location, the returned object
	 * will be a single element array consisting of an object of type
	 * <code>ROOT</code>.
	 * </p>
	 * <p>
	 * If the path maps to a project, the resulting array will contain a
	 * resource of type <code>PROJECT</code>, along with any linked folders that
	 * share the same location. Otherwise the resulting array will contain
	 * folders (type <code>FOLDER</code>).
	 * </p>
	 * <p>
	 * The path should be absolute; a relative path will be treated as absolute.
	 * The path segments need not be valid names; a trailing separator is
	 * ignored. The resulting resources may not currently exist.
	 * </p>
	 * <p>
	 * The result will omit team private members and hidden resources. The
	 * result will omit resources within team private members or hidden
	 * containers.
	 * </p>
	 * <p>
	 * The result will also omit resources that are explicitly excluded 
	 * from the workspace according to existing resource filters.
	 * </p>
	 * 
	 * @param location
	 *        a path in the local file system
	 * @return the corresponding containers in the workspace, or an empty array
	 *         if none
	 * @since 2.1
	 * @deprecated use {@link #findContainersForLocationURI(URI)} instead
	 */
	@Deprecated
	public IContainer[] findContainersForLocation(IPath location);

