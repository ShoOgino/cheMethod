	/**
	 * Opens this project.  No action is taken if the project is already open.
	 * <p>
	 * Opening a project constructs an in-memory representation 
	 * of its resources from information stored on disk.
	 * </p>
	 * <p>
	 * When a project is opened for the first time, initial information about the
	 * project's existing resources can be obtained in the following ways:
	 * <ul>
	 * <li>If a {@link #loadSnapshot(int, URI, IProgressMonitor)} call has been made
	 * before the open, resources are restored from that file (a file written by
	 * {@link #saveSnapshot(int, URI, IProgressMonitor)}). When the snapshot includes
	 * resource tree information and can be loaded without error, no refresh is initiated,
	 * so the project's resource tree will match what the snapshot provides.
	 * <li>Otherwise, when the {@link IResource#BACKGROUND_REFRESH} flag is specified,
	 * resources on disk will be added to the project in the background after
	 * this method returns. Child resources of the project may not be available
	 * until this background refresh completes.
	 * <li>Otherwise, resource information is obtained with a refresh operation in the
	 * foreground, before this method returns.
	 * </ul>
	 * </p>
	 * This method changes resources; these changes will be reported
	 * in a subsequent resource change event that includes
	 * an indication that the project has been opened and its resources
	 * have been added to the tree.  If the <code>BACKGROUND_REFRESH</code>
	 * update flag is specified, multiple resource change events may occur as
	 * resources on disk are discovered and added to the tree.
	 * </p>
	 * <p>
	 * This method is long-running; progress and cancellation are provided
	 * by the given progress monitor.
	 * </p>
	 *
	 * @param monitor a progress monitor, or <code>null</code> if progress
	 *    reporting is not desired
	 * @exception CoreException if this method fails. Reasons include:
	 * <ul>
	 * <li> Resource changes are disallowed during certain types of resource change 
	 *       event notification. See <code>IResourceChangeEvent</code> for more details.</li>
	 * </ul>
	 * @exception OperationCanceledException if the operation is canceled. 
	 * Cancelation can occur even if no progress monitor is provided.
	 * @see #close(IProgressMonitor)
	 * @see IResource#BACKGROUND_REFRESH
	 * @see IResourceRuleFactory#modifyRule(IResource)
	 * @since 3.1
	 */
	public void open(int updateFlags, IProgressMonitor monitor) throws CoreException;

