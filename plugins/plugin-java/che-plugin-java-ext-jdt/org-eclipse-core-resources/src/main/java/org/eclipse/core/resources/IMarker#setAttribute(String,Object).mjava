	/**
	 * Sets the attribute with the given name.  The value must be <code>null</code> or 
	 * an instance of one of the following classes: 
	 * <code>String</code>, <code>Integer</code>, or <code>Boolean</code>.
	 * If the value is <code>null</code>, the attribute is considered to be undefined.
	 * 
	 * <p>
	 * The attribute value cannot be <code>String</code> 
	 * whose UTF encoding exceeds 65535 bytes. On persistent
	 * markers this limit is enforced by an assertion.
	 * </p>
	 * 
	 * <p>
	 * This method changes resources; these changes will be reported
	 * in a subsequent resource change event, including an indication 
	 * that this marker has been modified.
	 * </p>
	 * 
	 * @param attributeName the name of the attribute
	 * @param value the value, or <code>null</code> if the attribute is to be undefined
	 * @exception CoreException if this method fails. Reasons include:
	 * <ul>
	 * <li> This marker does not exist.</li>
	 * <li> Resource changes are disallowed during certain types of resource change 
	 *       event notification. See <code>IResourceChangeEvent</code> for more details.</li>
	 * </ul>
	 * @see IResourceRuleFactory#markerRule(IResource)
	 */
	public void setAttribute(String attributeName, Object value) throws CoreException;

