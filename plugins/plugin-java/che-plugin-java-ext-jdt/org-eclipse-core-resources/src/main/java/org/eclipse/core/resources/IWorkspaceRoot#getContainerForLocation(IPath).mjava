  /**
   * Returns a handle to the workspace root, project or folder which is mapped to the given path in
   * the local file system, or <code>null</code> if none. If the path maps to the platform working
   * location, the returned object will be of type <code>ROOT</code>. If the path maps to a project,
   * the resulting object will be of type <code>PROJECT</code>; otherwise the resulting object will
   * be a folder (type <code>FOLDER</code>). The path should be absolute; a relative path will be
   * treated as absolute. The path segments need not be valid names; a trailing separator is
   * ignored. The resulting resource may not currently exist.
   *
   * <p>This method returns null when the given file system location is not equal to or under the
   * location of any existing project in the workspace, or equal to the location of the platform
   * working location.
   *
   * <p>The result will also omit resources that are explicitly excluded from the workspace
   * according to existing resource filters.
   *
   * <p>Warning: This method ignores linked resources and their children. Since linked resources may
   * overlap other resources, a unique mapping from a file system location to a single resource is
   * not guaranteed. To find all resources for a given location, including linked resources, use the
   * method <code>findContainersForLocation</code>.
   *
   * @param location a path in the local file system
   * @return the corresponding project or folder in the workspace, or <code>null</code> if none
   */
  public IContainer getContainerForLocation(IPath location);

