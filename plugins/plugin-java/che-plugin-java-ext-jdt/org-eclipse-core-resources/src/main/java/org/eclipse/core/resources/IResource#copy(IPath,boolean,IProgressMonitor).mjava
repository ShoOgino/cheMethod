  /**
   * Makes a copy of this resource at the given path.
   *
   * <p>This is a convenience method, fully equivalent to:
   *
   * <pre>
   *   copy(destination, (force ? FORCE : IResource.NONE), monitor);
   * </pre>
   *
   * <p>This operation changes resources; these changes will be reported in a subsequent resource
   * change event that will include an indication that the resource copy has been added to its new
   * parent.
   *
   * <p>This operation is long-running; progress and cancellation are provided by the given progress
   * monitor.
   *
   * @param destination the destination path
   * @param force a flag controlling whether resources that are not in sync with the local file
   *     system will be tolerated
   * @param monitor a progress monitor, or <code>null</code> if progress reporting is not desired
   * @exception CoreException if this resource could not be copied. Reasons include:
   *     <ul>
   *       <li>This resource does not exist.
   *       <li>This resource or one of its descendents is not local.
   *       <li>The source or destination is the workspace root.
   *       <li>The source is a project but the destination is not.
   *       <li>The destination is a project but the source is not.
   *       <li>The resource corresponding to the parent destination path does not exist.
   *       <li>The resource corresponding to the parent destination path is a closed project.
   *       <li>A resource at destination path does exist.
   *       <li>This resource or one of its descendents is out of sync with the local file system and
   *           <code>force</code> is <code>false</code>.
   *       <li>The workspace and the local file system are out of sync at the destination resource
   *           or one of its descendents.
   *       <li>The source resource is a file and the destination path specifies a project.
   *       <li>Resource changes are disallowed during certain types of resource change event
   *           notification. See <code>IResourceChangeEvent</code> for more details.
   *     </ul>
   *
   * @exception OperationCanceledException if the operation is canceled. Cancelation can occur even
   *     if no progress monitor is provided.
   */
  public void copy(IPath destination, boolean force, IProgressMonitor monitor) throws CoreException;

