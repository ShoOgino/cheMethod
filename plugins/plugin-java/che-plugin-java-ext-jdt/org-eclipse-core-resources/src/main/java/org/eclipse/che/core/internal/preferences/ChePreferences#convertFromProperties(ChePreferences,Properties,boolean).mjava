  /*
   * Version 1 (current version)
   * path/key=value
   */
  protected static void convertFromProperties(
      ChePreferences node, Properties table, boolean notify) {
    String version = table.getProperty(VERSION_KEY);
    if (version == null || !VERSION_VALUE.equals(version)) {
      // ignore for now
    }
    table.remove(VERSION_KEY);
    for (Iterator i = table.keySet().iterator(); i.hasNext(); ) {
      String fullKey = (String) i.next();
      String value = table.getProperty(fullKey);
      if (value != null) {
        String[] splitPath = decodePath(fullKey);
        String path = splitPath[0];
        path = makeRelative(path);
        String key = splitPath[1];
        //                if (DEBUG_PREFERENCE_SET)
        //                    PrefsMessages.message("Setting preference: " + path + '/' + key + '=' + value); //$NON-NLS-1$
        //use internal methods to avoid notifying listeners
        ChePreferences childNode = (ChePreferences) node.internalNode(path, false, null);
        String oldValue = childNode.internalPut(key, value);
        //                // notify listeners if applicable
        //                if (notify && !value.equals(oldValue))
        //                    childNode.firePreferenceEvent(key, oldValue, value);
      }
    }
    //        PreferencesService.getDefault().shareStrings();
  }

