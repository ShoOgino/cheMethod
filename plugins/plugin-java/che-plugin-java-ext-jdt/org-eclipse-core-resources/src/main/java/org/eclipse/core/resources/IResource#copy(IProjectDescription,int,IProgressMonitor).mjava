	/**
	 * Makes a copy of this project using the given project description. 
	 * The project's descendents are copied as well. The description specifies the
	 * name, location and attributes of the new project. After successful
	 * completion, corresponding new resources will exist at the given path; their
	 * contents and properties will be copies of the originals. The original
	 * resources are not affected.
	 * <p>
	 * When a resource is copied, its persistent properties are copied with it.
	 * Session properties and markers are not copied.
	 * </p>
	 * <p> The <code>FORCE</code> update flag controls how this method deals with
	 * cases where the workspace is not completely in sync with the local file
	 * system. If <code>FORCE</code> is not specified, the method will only attempt
	 * to copy resources that are in sync with the corresponding files and
	 * directories in the local file system; it will fail if it encounters a
	 * resource that is out of sync with the file system. However, if
	 * <code>FORCE</code> is specified, the method copies all corresponding files
	 * and directories from the local file system, including ones that have been
	 * recently updated or created. Note that in both settings of the
	 * <code>FORCE</code> flag, the operation fails if the newly created resources
	 * in the workspace would be out of sync with the local file system; this
	 * ensures files in the file system cannot be accidentally overwritten.
	 * </p>
	 * <p>  
	 * The <code>SHALLOW</code> update flag controls how this method deals with
	 * linked resources.  If <code>SHALLOW</code> is not specified, then the
	 * underlying contents of any linked resources in the project will always be
	 * copied in the file system.  In this case, the destination of the copy will
	 * never contain any linked resources.  If <code>SHALLOW</code> is specified
	 * when a project containing linked resources is copied, new linked resources
	 * are created in the destination project that point to the same file system
	 * locations.  In this case, no files on disk under linked resources are
	 * actually copied. The <code>SHALLOW</code> update flag is ignored when copying
	 * non- linked resources.
	 * </p>
	 * <p>
	 * Update flags other than <code>FORCE</code> or <code>SHALLOW</code> are ignored.
	 * </p>
	 * <p>
	 * An attempt will be made to copy the local history for this resource and its children,
	 * to the destination. Since local history existence is a safety-net mechanism, failure
	 * of this action will not result in automatic failure of the copy operation.
	 * </p>
	 * <p> This operation changes resources; these changes will be reported in a
	 * subsequent resource change event that will include an indication that the
	 * resource copy has been added to its new parent.
	 * </p>
	 * <p>
	 * This operation is long-running; progress and cancellation are provided
	 * by the given progress monitor. 
	 * </p>
	 *
	 * @param description the destination project description
	 * @param updateFlags bit-wise or of update flag constants
	 *   (<code>FORCE</code> and <code>SHALLOW</code>)
	 * @param monitor a progress monitor, or <code>null</code> if progress
	 *    reporting is not desired
	 * @exception CoreException if this resource could not be copied. Reasons include:
	 * <ul>
	 * <li> This resource does not exist.</li>
	 * <li> This resource or one of its descendents is not local.</li>
	 * <li> This resource is not a project.</li>
	 * <li> The project described by the given description already exists.</li>
	 * <li> This resource or one of its descendents is out of sync with the local file
	 *      system and <code>FORCE</code> is not specified.</li>
	 * <li> The workspace and the local file system are out of sync
	 *      at the destination resource or one of its descendents.</li>
	 * <li> Resource changes are disallowed during certain types of resource change 
	 *       event notification. See <code>IResourceChangeEvent</code> for more details.</li>
	 * </ul>
	 * @exception OperationCanceledException if the operation is canceled. 
	 * Cancelation can occur even if no progress monitor is provided.
	 * @see #FORCE
	 * @see #SHALLOW
	 * @see IResourceRuleFactory#copyRule(IResource, IResource)
	 * @since 2.0
	 */
	public void copy(IProjectDescription description, int updateFlags, IProgressMonitor monitor) throws CoreException;

