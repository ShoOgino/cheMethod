    @Override
    public IProjectDescription getDescription() throws CoreException {
        return new IProjectDescription() {
            @Override
            public IBuildConfiguration[] getBuildConfigReferences(String s) {
                return new IBuildConfiguration[0];
            }

            @Override
            public ICommand[] getBuildSpec() {
                return new ICommand[0];
            }

            @Override
            public String getComment() {
                return null;
            }

            @Override
            public IProject[] getDynamicReferences() {
                return new IProject[0];
            }

            @Override
            public IPath getLocation() {
                return null;
            }

            @Override
            public URI getLocationURI() {
                return null;
            }

            @Override
            public String getName() {
                return null;
            }

            @Override
            public String[] getNatureIds() {
                Map<String, List<String>> attributes = workspace.getProjectRegistry().getProject(path.toString()).getAttributes();
                String language = "";
                if (attributes.containsKey("language")) {
                    language = attributes.get("language").get(0);
                }
                return "java".equals(language) ? new String[]{"org.eclipse.jdt.core.javanature"} : new String[]{language};
            }

            @Override
            public IProject[] getReferencedProjects() {
                return new IProject[0];
            }

            @Override
            public boolean hasNature(String s) {
                String[] natureIds = getNatureIds();
                for (String id : natureIds) {
                    if (s.equals(id)) {
                        return true;
                    }
                }
                return false;
            }

            @Override
            public ICommand newCommand() {
                return null;
            }

            @Override
            public void setActiveBuildConfig(String s) {

            }

            @Override
            public void setBuildConfigs(String[] strings) {

            }

            @Override
            public void setBuildConfigReferences(String s, IBuildConfiguration[] iBuildConfigurations) {

            }

            @Override
            public void setBuildSpec(ICommand[] iCommands) {

            }

            @Override
            public void setComment(String s) {

            }

            @Override
            public void setDynamicReferences(IProject[] iProjects) {

            }

            @Override
            public void setLocation(IPath iPath) {

            }

            @Override
            public void setLocationURI(URI uri) {

            }

            @Override
            public void setName(String s) {

            }

            @Override
            public void setNatureIds(String[] strings) {

            }

            @Override
            public void setReferencedProjects(IProject[] iProjects) {

            }
        };
    }

