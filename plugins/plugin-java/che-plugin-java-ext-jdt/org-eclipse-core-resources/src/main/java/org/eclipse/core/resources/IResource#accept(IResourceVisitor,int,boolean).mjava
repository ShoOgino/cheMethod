  /**
   * Accepts the given visitor. The visitor's <code>visit</code> method is called with this
   * resource. If the visitor returns <code>false</code>, this resource's members are not visited.
   *
   * <p>The subtree under the given resource is traversed to the supplied depth.
   *
   * <p>This is a convenience method, fully equivalent to:
   *
   * <pre>
   *   accept(visitor, depth, includePhantoms ? IContainer.INCLUDE_PHANTOMS : IResource.NONE);
   * </pre>
   *
   * @param visitor the visitor
   * @param depth the depth to which members of this resource should be visited. One of {@link
   *     IResource#DEPTH_ZERO}, {@link IResource#DEPTH_ONE}, or {@link IResource#DEPTH_INFINITE}.
   * @param includePhantoms <code>true</code> if phantom resources are of interest; <code>false
   *     </code> if phantom resources are not of interest.
   * @exception CoreException if this request fails. Reasons include:
   *     <ul>
   *       <li><code>includePhantoms</code> is <code>false</code> and this resource does not exist.
   *       <li><code>includePhantoms</code> is <code>true</code> and this resource does not exist
   *           and is not a phantom.
   *       <li>The visitor failed with this exception.
   *     </ul>
   *
   * @see IResource#isPhantom()
   * @see IResourceVisitor#visit(IResource)
   * @see IResource#DEPTH_ZERO
   * @see IResource#DEPTH_ONE
   * @see IResource#DEPTH_INFINITE
   * @see IResource#accept(IResourceVisitor,int,int)
   */
  public void accept(IResourceVisitor visitor, int depth, boolean includePhantoms)
      throws CoreException;

