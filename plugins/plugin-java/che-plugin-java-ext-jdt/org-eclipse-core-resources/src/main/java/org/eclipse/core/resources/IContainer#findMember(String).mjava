	/**
	 * Finds and returns the member resource identified by the given path in
	 * this container, or <code>null</code> if no such resource exists.
	 * The supplied path may be absolute or relative; in either case, it is
	 * interpreted as relative to this resource. Trailing separators and the path's
	 * device are ignored. If the path is empty this container is returned. Parent
	 * references in the supplied path are discarded if they go above the workspace
	 * root.
	 * <p>
	 * Note that no attempt is made to exclude team-private member resources
	 * as with <code>members</code>.
	 * </p><p>
	 * N.B. Unlike the methods which traffic strictly in resource
	 * handles, this method infers the resulting resource's type from the
	 * resource existing at the calculated path in the workspace.
	 * </p><p>
	 * Note that <code>path</code> contains a relative path to the resource
	 * and all path special characters will be interpreted. Passing an empty string
	 * will result in returning this {@link IContainer} itself.
	 * </p>
	 *
	 * @param path the relative path to the member resource, must be a valid path or path segment
	 * @return the member resource, or <code>null</code> if no such
	 * 		resource exists
	 * @see #members()
	 * @see IPath#isValidPath(String)
	 * @see IPath#isValidSegment(String)
	 */
	public IResource findMember(String path);

