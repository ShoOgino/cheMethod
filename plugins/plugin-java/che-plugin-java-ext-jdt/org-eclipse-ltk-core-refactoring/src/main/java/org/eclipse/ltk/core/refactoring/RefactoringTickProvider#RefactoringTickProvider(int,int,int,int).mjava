  /**
   * Creates a new refactoring tick provider with the given values
   *
   * @param checkInitialConditionsTicks ticks used in the initial condition check step
   * @param checkFinalConditionsTicks ticks used in the final condition check step
   * @param createChangeTicks ticks used in the create change step
   * @param initializeChangeTicks ticks used in the change validation steps
   */
  public RefactoringTickProvider(
      int checkInitialConditionsTicks,
      int checkFinalConditionsTicks,
      int createChangeTicks,
      int initializeChangeTicks) {
    Assert.isTrue(
        checkInitialConditionsTicks >= 0
            && checkFinalConditionsTicks >= 0
            && createChangeTicks >= 0
            && initializeChangeTicks >= 0);

    fValues = new int[4];
    fValues[CHECK_INITIAL_CONDITIONS] = checkInitialConditionsTicks;
    fValues[CHECK_FINAL_CONDITIONS] = checkFinalConditionsTicks;
    fValues[CREATE_CHANGE] = createChangeTicks;
    fValues[INITIALIZE_CHANGE] = initializeChangeTicks;
  }

