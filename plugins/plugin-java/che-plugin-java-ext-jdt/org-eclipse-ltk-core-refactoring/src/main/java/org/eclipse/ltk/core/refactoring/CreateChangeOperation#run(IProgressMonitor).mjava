  /** {@inheritDoc} */
  public void run(IProgressMonitor pm) throws CoreException {
    if (pm == null) pm = new NullProgressMonitor();
    fChange = null;
    try {
      fChange = null;
      RefactoringTickProvider rtp = fRefactoring.getRefactoringTickProvider();
      if (fCheckConditionOperation != null) {
        int conditionTicks = fCheckConditionOperation.getTicks(rtp);
        int allTicks = conditionTicks + rtp.getCreateChangeTicks() + rtp.getInitializeChangeTicks();
        pm.beginTask("", allTicks); //$NON-NLS-1$
        pm.subTask(""); //$NON-NLS-1$
        fCheckConditionOperation.run(new SubProgressMonitor(pm, conditionTicks));
        RefactoringStatus status = fCheckConditionOperation.getStatus();
        if (status != null && status.getSeverity() < fConditionCheckingFailedSeverity) {
          fChange =
              fRefactoring.createChange(new SubProgressMonitor(pm, rtp.getCreateChangeTicks()));
          fChange.initializeValidationData(
              new NotCancelableProgressMonitor(
                  new SubProgressMonitor(pm, rtp.getInitializeChangeTicks())));
        } else {
          pm.worked(rtp.getCreateChangeTicks() + rtp.getInitializeChangeTicks());
        }
      } else {
        pm.beginTask("", rtp.getCreateChangeTicks() + rtp.getInitializeChangeTicks()); //$NON-NLS-1$
        fChange = fRefactoring.createChange(new SubProgressMonitor(pm, rtp.getCreateChangeTicks()));
        fChange.initializeValidationData(
            new NotCancelableProgressMonitor(
                new SubProgressMonitor(pm, rtp.getInitializeChangeTicks())));
      }
    } finally {
      pm.done();
    }
  }

