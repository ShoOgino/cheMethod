    /**
     * Returns the refactoring contribution for the refactoring with the
     * specified id.
     *
     * @param id
     *            the unique id of the refactoring
     * @return the refactoring contribution, or <code>null</code> if no
     *         refactoring contribution has been registered with the specified
     *         id
     */
    public RefactoringContribution getRefactoringContribution(final String id) {
        Assert.isNotNull(id);
        Assert.isTrue(!"".equals(id)); //$NON-NLS-1$
        populateCache();
        return (RefactoringContribution)fContributionCache.get(id);
    }

