  /**
   * Writes the specified refactoring descriptor proxies to the output stream. Refactoring
   * descriptor proxies which cannot be resolved are automatically skipped.
   *
   * <p>It is the responsibility of the caller to close the output stream.
   *
   * @param proxies the refactoring descriptor proxies
   * @param stream a <code>UTF-8</code> output stream where to write the refactoring descriptors to
   * @param flags the flags which must be present in order to be written to the output stream, or
   *     <code>RefactoringDescriptor#NONE</code>
   * @param time <code>true</code> to write time information associated with the refactorings,
   *     <code>false</code> otherwise
   * @param monitor the progress monitor to use, or <code>null</code> if no progress monitoring or
   *     cancelation is desired
   * @throws CoreException if an error occurs while writing to the output stream. Reasons include:
   *     <ul>
   *       <li>The refactoring descriptors have an illegal format, contain illegal arguments or
   *           otherwise illegal information.
   *       <li>An I/O error occurs while writing the refactoring descriptors to the output stream.
   *     </ul>
   *
   * @see RefactoringDescriptor#NONE
   * @see RefactoringDescriptor#STRUCTURAL_CHANGE
   * @see RefactoringDescriptor#BREAKING_CHANGE
   * @see IRefactoringCoreStatusCodes#REFACTORING_HISTORY_FORMAT_ERROR
   * @see IRefactoringCoreStatusCodes#REFACTORING_HISTORY_IO_ERROR
   */
  public void writeRefactoringDescriptors(
      RefactoringDescriptorProxy[] proxies,
      OutputStream stream,
      int flags,
      boolean time,
      IProgressMonitor monitor)
      throws CoreException;

