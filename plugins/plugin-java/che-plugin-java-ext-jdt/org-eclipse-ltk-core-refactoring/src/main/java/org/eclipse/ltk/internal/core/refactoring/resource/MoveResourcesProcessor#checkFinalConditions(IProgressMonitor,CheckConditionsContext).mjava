  /* (non-Javadoc)
   * @see org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor#checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
   */
  public RefactoringStatus checkFinalConditions(IProgressMonitor pm, CheckConditionsContext context)
      throws CoreException {
    pm.beginTask("", 1); // $NON-NLS-1$
    try {
      RefactoringStatus status = validateDestination(fDestination);
      if (status.hasFatalError()) {
        return status;
      }
      fMoveArguments = new MoveArguments(fDestination, isUpdateReferences());

      ResourceChangeChecker checker =
          (ResourceChangeChecker) context.getChecker(ResourceChangeChecker.class);
      IResourceChangeDescriptionFactory deltaFactory = checker.getDeltaFactory();

      for (int i = 0; i < fResourcesToMove.length; i++) {
        IResource resource = fResourcesToMove[i];
        IResource newResource = fDestination.findMember(resource.getName());
        if (newResource != null) {
          status.addWarning(
              Messages.format(
                  RefactoringCoreMessages.MoveResourcesProcessor_warning_destination_already_exists,
                  BasicElementLabels.getPathLabel(newResource.getFullPath(), false)));
          deltaFactory.delete(newResource);
        }
        ResourceModifications.buildMoveDelta(deltaFactory, fResourcesToMove[i], fMoveArguments);
      }
      return status;
    } finally {
      pm.done();
    }
  }

