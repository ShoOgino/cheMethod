  /* (non-Javadoc)
   * @see org.eclipse.ltk.core.refactoring.RefactoringContribution#retrieveArgumentMap(org.eclipse.ltk.core.refactoring.RefactoringDescriptor)
   */
  public Map retrieveArgumentMap(final RefactoringDescriptor descriptor) {
    HashMap map = new HashMap();

    if (descriptor instanceof MoveResourcesDescriptor) {
      MoveResourcesDescriptor moveDescriptor = (MoveResourcesDescriptor) descriptor;
      IPath[] paths = moveDescriptor.getResourcePathsToMove();
      String project = moveDescriptor.getProject();
      IPath destinationPath = moveDescriptor.getDestinationPath();

      map.put(ATTRIBUTE_NUMBER_OF_RESOURCES, String.valueOf(paths.length));
      for (int i = 0; i < paths.length; i++) {
        map.put(
            ATTRIBUTE_ELEMENT + (i + 1),
            ResourceProcessors.resourcePathToHandle(project, paths[i]));
      }
      map.put(
          ATTRIBUTE_DESTINATION, ResourceProcessors.resourcePathToHandle(project, destinationPath));
      map.put(
          ATTRIBUTE_UPDATE_REFERENCES,
          moveDescriptor.isUpdateReferences() ? "true" : "false"); //$NON-NLS-1$//$NON-NLS-2$
      return map;
    }
    return null;
  }

