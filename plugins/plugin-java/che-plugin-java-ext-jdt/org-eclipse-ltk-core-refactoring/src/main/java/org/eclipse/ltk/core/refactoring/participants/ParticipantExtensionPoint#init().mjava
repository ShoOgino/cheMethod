  private void init() {
    //		IExtensionRegistry registry= Platform.getExtensionRegistry();
    //		IConfigurationElement[] ces= new IConfigurationElement[0];//registry.getConfigurationElementsFor(fPluginId, fParticipantID);
    Set<Class<? extends RefactoringParticipant>> ces =
        CheRefactoringParticipantsRegistry.getParticipantsFor(fParticipantID);
    fParticipants = new ArrayList(ces.size());
    for (Class<? extends RefactoringParticipant> clazz : ces) {
      ParticipantDescriptor descriptor = new ParticipantDescriptor(clazz);
      IStatus status = descriptor.checkSyntax();
      switch (status.getSeverity()) {
        case IStatus.ERROR:
          RefactoringCorePlugin.log(status);
          break;
        case IStatus.WARNING:
        case IStatus.INFO:
          RefactoringCorePlugin.log(status);
          fParticipants.add(descriptor);
          break;
        default:
          fParticipants.add(descriptor);
      }
    }
  }

