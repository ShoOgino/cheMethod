  /**
   * Hook method to initialize some internal state to provide an adequate answer for the <code>
   * isValid</code> method. This method gets called after a change or a whole change tree has been
   * created.
   *
   * <p>Typically this method is implemented in one of the following ways:
   *
   * <ul>
   *   <li>the change hooks up a listener on some delta notification mechanism and marks itself as
   *       invalid if it receives a certain delta. Is this the case the implementor must take care
   *       of unhooking the listener in <code>dispose</code>.
   *   <li>the change remembers some information allowing to decide if a change object is still
   *       valid when <code>isValid</code> is called.
   * </ul>
   *
   * <p>For example, a change object that manipulates the content of an <code>IFile</code> could
   * either listen to resource changes and detect that the file got changed or it could remember
   * some content stamp and compare it with the actual content stamp when <code>isValid</code> is
   * called.
   *
   * @param pm a progress monitor
   */
  public abstract void initializeValidationData(IProgressMonitor pm);

