  /**
   * Returns the cached refactoring history document.
   *
   * @param path the path of the document
   * @param input the input stream where to read the document
   * @return the cached refactoring history document
   * @throws SAXException if an error occurs while parsing the history entry
   * @throws IOException if an input/output error occurs
   * @throws ParserConfigurationException if an error occurs in the parser configuration
   */
  private Document getCachedDocument(final IPath path, final InputStream input)
      throws SAXException, IOException, ParserConfigurationException {
    if (path.equals(fCachedPath) && fCachedDocument != null) return fCachedDocument;
    DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
    parser.setErrorHandler(new DefaultHandler());
    final Document document = parser.parse(new InputSource(input));
    fCachedDocument = document;
    fCachedPath = path;
    return document;
  }

