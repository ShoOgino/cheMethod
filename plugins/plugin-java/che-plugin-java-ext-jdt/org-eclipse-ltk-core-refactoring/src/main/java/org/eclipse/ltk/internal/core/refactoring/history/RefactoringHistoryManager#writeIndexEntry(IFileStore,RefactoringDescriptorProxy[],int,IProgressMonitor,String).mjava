  /**
   * Writes the specified index entry to the refactoring history.
   *
   * @param file the history index file
   * @param proxies the refactoring descriptors
   * @param flags the flags to use (either {@link EFS#NONE} or {@link EFS#APPEND})
   * @param monitor the progress monitor to use
   * @param task the task label
   * @throws CoreException if an error occurs while writing the index entry
   * @throws IOException if an input/output error occurs
   */
  private static void writeIndexEntry(
      final IFileStore file,
      final RefactoringDescriptorProxy[] proxies,
      final int flags,
      final IProgressMonitor monitor,
      final String task)
      throws CoreException, IOException {
    OutputStream output = null;
    try {
      monitor.beginTask(task, 2);
      file.getParent()
          .mkdir(
              EFS.NONE,
              new SubProgressMonitor(monitor, 1, SubProgressMonitor.SUPPRESS_SUBTASK_LABEL));
      output =
          new BufferedOutputStream(
              file.openOutputStream(
                  flags,
                  new SubProgressMonitor(monitor, 1, SubProgressMonitor.SUPPRESS_SUBTASK_LABEL)));
      writeRefactoringDescriptorProxies(output, proxies);
    } finally {
      monitor.done();
      if (output != null) {
        try {
          output.close();
        } catch (IOException exception) {
          // Do nothing
        }
      }
    }
  }

