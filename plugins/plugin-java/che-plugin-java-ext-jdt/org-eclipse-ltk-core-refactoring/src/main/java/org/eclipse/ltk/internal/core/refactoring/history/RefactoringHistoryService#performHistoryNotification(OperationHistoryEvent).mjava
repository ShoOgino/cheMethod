  private void performHistoryNotification(final OperationHistoryEvent event) {
    RefactoringDescriptor descriptor = getRefactoringDescriptor(event.getOperation());
    if (descriptor != null) {
      RefactoringDescriptorProxyAdapter proxy = new RefactoringDescriptorProxyAdapter(descriptor);
      switch (event.getEventType()) {
        case OperationHistoryEvent.ABOUT_TO_EXECUTE:
          {
            if (checkDescriptor(descriptor, event.getOperation())) {
              fireRefactoringExecutionEvent(proxy, RefactoringExecutionEvent.ABOUT_TO_PERFORM);
            }
            break;
          }
        case OperationHistoryEvent.DONE:
          {
            if (!RefactoringDescriptor.ID_UNKNOWN.equals(descriptor.getID())) {
              long timeStamp =
                  fOverrideTimeStamp >= 0 ? fOverrideTimeStamp : System.currentTimeMillis();
              descriptor.setTimeStamp(timeStamp);
            }

            fireRefactoringHistoryEvent(proxy, RefactoringHistoryEvent.PUSHED);
            fireRefactoringExecutionEvent(proxy, RefactoringExecutionEvent.PERFORMED);
            break;
          }
        case OperationHistoryEvent.ABOUT_TO_UNDO:
          {
            fireRefactoringExecutionEvent(proxy, RefactoringExecutionEvent.ABOUT_TO_UNDO);
            break;
          }
        case OperationHistoryEvent.UNDONE:
          {
            fireRefactoringHistoryEvent(proxy, RefactoringHistoryEvent.POPPED);
            fireRefactoringExecutionEvent(proxy, RefactoringExecutionEvent.UNDONE);
            break;
          }
        case OperationHistoryEvent.ABOUT_TO_REDO:
          {
            fireRefactoringExecutionEvent(proxy, RefactoringExecutionEvent.ABOUT_TO_REDO);
            break;
          }
        case OperationHistoryEvent.REDONE:
          {
            fireRefactoringHistoryEvent(proxy, RefactoringHistoryEvent.PUSHED);
            fireRefactoringExecutionEvent(proxy, RefactoringExecutionEvent.REDONE);
            break;
          }
      }
    }
  }

