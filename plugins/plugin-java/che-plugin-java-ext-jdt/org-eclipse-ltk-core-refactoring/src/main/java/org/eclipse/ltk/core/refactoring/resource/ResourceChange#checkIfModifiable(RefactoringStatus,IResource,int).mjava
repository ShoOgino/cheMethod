  /**
   * Utility method to validate a resource to be modified.
   *
   * @param result the status where the result will be added to
   * @param resource the resource to validate
   * @param validationMethod the validation method used in {@link #isValid(IProgressMonitor)}.
   *     Supported validation methods currently are:
   *     <ul>
   *       <li>{@link #VALIDATE_DEFAULT}
   *       <li>{@link #VALIDATE_NOT_DIRTY}
   *       <li>{@link #VALIDATE_NOT_READ_ONLY}
   *       <li>{@link #SAVE_IF_DIRTY}
   *     </ul>
   *     or combinations of these methods.
   */
  protected static void checkIfModifiable(
      RefactoringStatus result, IResource resource, int validationMethod) {
    checkExistence(result, resource);
    if (result.hasFatalError()) return;
    if (validationMethod == VALIDATE_DEFAULT) return;
    ValidationState state = new ValidationState(resource);
    if ((validationMethod & VALIDATE_NOT_READ_ONLY) != 0) {
      state.checkReadOnly(result);
      if (result.hasFatalError()) return;
    }
    if ((validationMethod & VALIDATE_NOT_DIRTY) != 0) {
      state.checkDirty(result);
    }
  }

