  /**
   * Returns whether a project has a shared refactoring history.
   *
   * @param project the project to test
   * @return <code>true</code> if the project has a shared project history, <code>false</code>
   *     otherwise
   */
  public static boolean hasSharedRefactoringHistory(final IProject project) {
    Assert.isNotNull(project);
    final IScopeContext[] contexts = new IScopeContext[] {new ProjectScope(project)};
    final String preference =
        Platform.getPreferencesService()
            .getString(
                RefactoringCorePlugin.getPluginId(),
                RefactoringPreferenceConstants.PREFERENCE_SHARED_REFACTORING_HISTORY,
                Boolean.FALSE.toString(),
                contexts);
    if (preference != null) return Boolean.valueOf(preference).booleanValue();
    return false;
  }

