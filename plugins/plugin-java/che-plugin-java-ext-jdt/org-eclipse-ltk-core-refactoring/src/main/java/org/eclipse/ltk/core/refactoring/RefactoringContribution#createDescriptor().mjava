	/**
	 * Creates a new customizable refactoring descriptor initialized with its
	 * default values.
	 * <p>
	 * This method may be reimplemented to return a language-specified
	 * refactoring descriptor which can be initialized using language-specific
	 * features. Refactoring tool providers may reimplement this method to
	 * provide a uniform API to expose refactoring functionality in the form of
	 * refactoring descriptors.
	 * </p>
	 * <p>
	 * Callers of this method are supposed to cast the resulting refactoring
	 * descriptor to the corresponding language-specific refactoring descriptor
	 * provided by the API of the refactoring tooling provider.
	 * </p>
	 * <p>
	 * Note: this method is supposed to be reimplemented by clients wishing to
	 * provide customizable refactoring descriptors.
	 * </p>
	 *
	 * @return the refactoring descriptor, or <code>null</code> if the
	 *         refactoring represented by this contribution does not expose
	 *         customizable refactoring descriptors
	 *
	 * @see #createDescriptor(String, String, String, String, Map, int)
	 *
	 * @since 3.3
	 */
	public RefactoringDescriptor createDescriptor() {
		return null;
	}

