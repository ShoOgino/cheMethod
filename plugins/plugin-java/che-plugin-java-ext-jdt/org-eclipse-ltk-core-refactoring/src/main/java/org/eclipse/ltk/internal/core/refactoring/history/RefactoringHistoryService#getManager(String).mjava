	/**
	 * Returns the refactoring history manager corresponding to the project
	 * with the specified name.
	 *
	 * @param name
	 *            the name of the project, or <code>null</code> for the
	 *            workspace
	 * @return the refactoring history manager, or <code>null</code>
	 */
	private RefactoringHistoryManager getManager(final String name) {
		final IFileStore store= EFS.getLocalFileSystem().getStore(RefactoringCorePlugin.getDefault().getStateLocation()).getChild(NAME_HISTORY_FOLDER);
		if (name != null && !"".equals(name)) {//$NON-NLS-1$
			try {
				final IProject project= ResourcesPlugin.getWorkspace().getRoot().getProject(name);
				if (project.isAccessible()) {
					if (hasSharedRefactoringHistory(project)) {
						final URI uri= project.getLocationURI();
						if (uri != null)
							return getManager(EFS.getStore(uri).getChild(RefactoringHistoryService.NAME_HISTORY_FOLDER), name);
					} else
						return getManager(store.getChild(name), name);
				}
			} catch (CoreException exception) {
				// Do nothing
			}
		} else
			return getManager(store.getChild(NAME_WORKSPACE_PROJECT), null);
		return null;
	}

