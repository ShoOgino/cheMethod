  /**
   * Fetches and returns information about this file from the underlying file system.
   *
   * <p>This method succeeds regardless of whether a corresponding file currently exists in the
   * underlying file system. In the case of a non-existent file, the returned info will include the
   * file's name and will return <code>false</code> when IFileInfo#exists() is called, but all other
   * information will assume default values.
   *
   * @param options bit-wise or of option flag constants (currently only {@link EFS#NONE} is
   *     applicable).
   * @param monitor a progress monitor, or <code>null</code> if progress reporting and cancellation
   *     are not desired
   * @return A structure containing information about this file.
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>Problems occurred while contacting the file system.
   *     </ul>
   *
   * @see IFileTree#getFileInfo(IFileStore)
   */
  public IFileInfo fetchInfo(int options, IProgressMonitor monitor) throws CoreException;

