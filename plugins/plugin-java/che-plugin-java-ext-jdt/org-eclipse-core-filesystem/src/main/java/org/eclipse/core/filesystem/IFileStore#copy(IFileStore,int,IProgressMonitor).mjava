  /**
   * Copies the file represented by this store to the provided destination store. Copying occurs
   * with best-effort semantics; if some files cannot be copied, exceptions are recorded but other
   * files will continue to be copied if possible.
   *
   * <p>The {@link EFS#OVERWRITE} option flag indicates how this method deals with files that
   * already exist at the copy destination. If the <code>OVERWRITE</code> flag is present, then
   * existing files at the destination are overwritten with the corresponding files from the source
   * of the copy operation. When this flag is not present, existing files at the destination are not
   * overwritten and an exception is thrown indicating what files could not be copied. No exception
   * is thrown for directories that already exist at the destination.
   *
   * <p>Copying a file into a directory of the same name or vice versa always throws a <code>
   * CoreException</code>, regardless of whether the <code>OVERWRITE</code> flag is specified or
   * not.
   *
   * <p>The {@link EFS#SHALLOW} option flag indicates how this method deals with copying of
   * directories. If the <code>SHALLOW</code> flag is present, then a directory will be copied but
   * the files and directories within it will not. When this flag is not present, all child
   * directories and files of a directory are copied recursively.
   *
   * <p>In case of a recursive directory copy exception throwing may be deferred. Part of the copy
   * task may be executed without rollback until the exception occurs. The order of copy operations
   * is not specified.
   *
   * @param destination The destination of the copy.
   * @param options bit-wise or of option flag constants ( {@link EFS#OVERWRITE} or {@link
   *     EFS#SHALLOW}).
   * @param monitor a progress monitor, or <code>null</code> if progress reporting and cancellation
   *     are not desired
   * @exception CoreException if this method fails. Reasons include:
   *     <ul>
   *       <li>This store does not exist.
   *       <li>The parent of the destination file store does not exist.
   *       <li>The <code>OVERWRITE</code> flag is not specified and a file of the same name already
   *           exists at the copy destination.
   *       <li>A file is being copied, but a directory of the same name already exists at the copy
   *           destination.
   *       <li>A directory is being copied, but a file of the same name already exists at the copy
   *           destination.
   *     </ul>
   */
  public void copy(IFileStore destination, int options, IProgressMonitor monitor)
      throws CoreException;

