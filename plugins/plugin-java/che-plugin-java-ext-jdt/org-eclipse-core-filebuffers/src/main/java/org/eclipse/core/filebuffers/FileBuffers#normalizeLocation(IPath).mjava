	/**
	 * Returns the normalized form of the given path or location.
	 * <p>
	 * The normalized form is defined as follows:
	 * </p>
	 * <ul>
	 * <li><b>Existing Workspace Files:</b> For a path or location for
	 * which there
	 * {@link org.eclipse.core.resources.IContainer#exists(org.eclipse.core.runtime.IPath) exists}
	 * a workspace file, the normalized form is that file's workspace
	 * relative, absolute path as returned by
	 * {@link IFile#getFullPath()}.</li>
	 * <li><b>Non-existing Workspace Files:</b> For a path to a
	 * non-existing workspace file, the normalized form is the
	 * {@link IPath#makeAbsolute() absolute} form of the path.</li>
	 * <li><b>External Files:</b> For a location for which there
	 * exists no workspace file, the normalized form is the
	 * {@link IPath#makeAbsolute() absolute} form of the location.</li>
	 * </ul>
	 *
	 * @param pathOrLocation the path or location to be normalized
	 * @return the normalized form of <code>pathOrLocation</code>
	 */
	public static IPath normalizeLocation(IPath pathOrLocation) {
		// existing workspace resources - this is the 93% case
		if (WORKSPACE_ROOT.exists(pathOrLocation))
			return pathOrLocation.makeAbsolute();

		IFile file= WORKSPACE_ROOT.getFileForLocation(pathOrLocation);
		// existing workspace resources referenced by their file system path
		// files that do not exist (including non-accessible files) do not pass
		if (file != null && file.exists())
			return file.getFullPath();

		// non-existing resources and external files
		return pathOrLocation.makeAbsolute();
	}
//
//	/**
//	 * Returns the file in the local file system for the given location.
//	 * <p>
//	 * The location is either a full path of a workspace resource or an
//	 * absolute path in the local file system.
//	 * </p>
//	 *
//	 * @param location the location
//	 * @return the {@link IFileStore} in the local file system for the given location
//	 * @since 3.2
//	 */
//	public static IFileStore getFileStoreAtLocation(IPath location) {
//		if (location == null)
//			return null;
//
//		IFile file= getWorkspaceFileAtLocation(location);
//		try {
//			if (file != null) {
//				URI uri= file.getLocationURI();
//				if (uri == null)
//					return null;
//				return EFS.getStore(uri);
//			}
//		} catch (CoreException e) {
//			//fall through and assume it is a local file
//		}
//		return EFS.getLocalFileSystem().getStore(location);
//	}

