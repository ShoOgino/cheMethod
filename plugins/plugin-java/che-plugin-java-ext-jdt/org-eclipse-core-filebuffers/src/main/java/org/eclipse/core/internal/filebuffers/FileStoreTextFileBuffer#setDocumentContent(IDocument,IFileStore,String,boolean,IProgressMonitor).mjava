  /**
   * Initializes the given document with the given file's content using the given encoding.
   *
   * @param document the document to be initialized
   * @param file the file which delivers the document content
   * @param encoding the character encoding for reading the given stream
   * @param hasBOM tell whether the given file has a BOM
   * @param monitor the progress monitor
   * @exception CoreException if the given stream can not be read
   */
  private void setDocumentContent(
      IDocument document,
      IFileStore file,
      String encoding,
      boolean hasBOM,
      IProgressMonitor monitor)
      throws CoreException {
    InputStream contentStream = getFileContents(file);
    if (contentStream == null) return;

    Reader in = null;
    try {

      if (encoding == null) encoding = fManager.getDefaultEncoding();

      /*
       * XXX:
       * This is a workaround for a corresponding bug in Java readers and writer,
       * see http://developer.java.sun.com/developer/bugParade/bugs/4508058.html
       */
      if (hasBOM && CHARSET_UTF_8.equals(encoding)) {
        int n = 0;
        do {
          int bytes = contentStream.read(new byte[IContentDescription.BOM_UTF_8.length]);
          if (bytes == -1) throw new IOException();
          n += bytes;
        } while (n < IContentDescription.BOM_UTF_8.length);
      }

      in = new BufferedReader(new InputStreamReader(contentStream, encoding), BUFFER_SIZE);
      StringBuffer buffer = new StringBuffer(BUFFER_SIZE);
      char[] readBuffer = new char[READER_CHUNK_SIZE];
      int n = in.read(readBuffer);
      while (n > 0) {
        buffer.append(readBuffer, 0, n);
        n = in.read(readBuffer);
      }

      document.set(buffer.toString());

    } catch (IOException x) {
      String msg = x.getMessage() == null ? "" : x.getMessage(); // $NON-NLS-1$
      IStatus s = new Status(IStatus.ERROR, FileBuffersPlugin.PLUGIN_ID, IStatus.OK, msg, x);
      throw new CoreException(s);
    } finally {
      try {
        if (in != null) in.close();
        else contentStream.close();
      } catch (IOException x) {
      }
    }
  }

