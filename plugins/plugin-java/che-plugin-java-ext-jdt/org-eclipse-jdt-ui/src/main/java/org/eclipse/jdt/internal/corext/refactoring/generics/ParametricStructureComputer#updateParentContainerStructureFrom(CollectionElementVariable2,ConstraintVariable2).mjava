	/**
	 * Updates the structure of the parent container variable of the given
	 * CollectionElementVariable2 from the structure of 'v1'.
	 * @param elemVar
	 * @param v1
	 */
	private void updateParentContainerStructureFrom(CollectionElementVariable2 elemVar, ConstraintVariable2 v1) {
		ConstraintVariable2 elemContainer= elemVar.getParentConstraintVariable();

		// This could be something that appears like it should have container
		// structure, but doesn't, e.g., an array access for an array of containers
		// (JDK 1.5 disallows arrays of parametric types). So if it doesn't have
		// container structure, ignore it.
		ParametricStructure elemContainerStructure= elemStructure(elemContainer);
		if (elemContainerStructure == ParametricStructure.NONE)
			return;

		if (elemContainerStructure == null) { // handle clone()
			elemContainerStructure= newParametricType(elemContainer.getType());
			setStructureAndPush(elemContainer, elemContainerStructure);
		}
		ParametricStructure v1Structure= elemStructure(v1);
		int parmIdx= elemVar.getDeclarationTypeVariableIndex(); //TODO: index is NOT_DECLARED_TYPE_VARIABLE_INDEX if the type variable comes from a supertype!!!
		if (parmIdx == CollectionElementVariable2.NOT_DECLARED_TYPE_VARIABLE_INDEX)
			return; //TODO: ParametricStructure should use type variable keys instead of index

		if (elemContainerStructure == v1Structure || containsSubStructure(v1Structure, elemContainerStructure)) { // avoid creating cyclic structure
			if (!(elemStructure(elemVar) == ParametricStructure.NONE))
				setStructureAndPush(elemVar, ParametricStructure.NONE);
			if (elemContainerStructure.getParameters()[parmIdx] == null) {
				elemContainerStructure.getParameters()[parmIdx]= ParametricStructure.NONE;
				fWorkList2.push(elemContainer);
			}
		} else if (updateStructureOfIthParamFrom(elemContainerStructure, parmIdx, v1Structure)) {
			setStructureAndPush(elemVar, elemContainerStructure.getParameters()[parmIdx]);
			fWorkList2.push(elemContainer);
			if (DEBUG_INITIALIZATION)
				System.out.println("  updated structure of " + elemContainer + " to " + elemContainerStructure); //$NON-NLS-1$ //$NON-NLS-2$
		}
	}

