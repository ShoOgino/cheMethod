	//-------
	private static IMethod[] classesDeclareMethodName(ITypeHierarchy hier, List<IType> classes, IMethod method, String newName)  throws CoreException {
		Set<IMethod> result= new HashSet<IMethod>();
		IType type= method.getDeclaringType();
		List<IType> subtypes= Arrays.asList(hier.getAllSubtypes(type));

		int parameterCount= method.getParameterTypes().length;
		boolean isMethodPrivate= JdtFlags.isPrivate(method);

		for (Iterator<IType> iter= classes.iterator(); iter.hasNext(); ){
			IType clazz= iter.next();
			IMethod[] methods= clazz.getMethods();
			boolean isSubclass= subtypes.contains(clazz);
			for (int j= 0; j < methods.length; j++) {
				IMethod foundMethod= Checks.findMethod(newName, parameterCount, false, new IMethod[] {methods[j]});
				if (foundMethod == null)
					continue;
				if (isSubclass || type.equals(clazz))
					result.add(foundMethod);
				else if ((! isMethodPrivate) && (! JdtFlags.isPrivate(methods[j])))
					result.add(foundMethod);
			}
		}
		return result.toArray(new IMethod[result.size()]);
	}

