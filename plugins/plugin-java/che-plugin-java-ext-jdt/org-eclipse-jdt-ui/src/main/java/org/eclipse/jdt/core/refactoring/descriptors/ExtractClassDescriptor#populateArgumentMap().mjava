  /* (non-Javadoc)
   * @see org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor#populateArgumentMap()
   */
  protected void populateArgumentMap() {
    super.populateArgumentMap();
    if (fFields != null) {
      String[] oldFieldNames = new String[fFields.length];
      String[] newFieldNames = new String[fFields.length];
      boolean[] createField = new boolean[fFields.length];
      for (int i = 0; i < fFields.length; i++) {
        Field field = fFields[i];
        Assert.isNotNull(field);
        oldFieldNames[i] = field.getFieldName();
        createField[i] = field.isCreateField();
        if (field.isCreateField()) newFieldNames[i] = field.getNewFieldName();
      }
      JavaRefactoringDescriptorUtil.setStringArray(
          fArguments, OLD_FIELD_COUNT, OLD_FIELD_NAME, oldFieldNames, 0);
      JavaRefactoringDescriptorUtil.setStringArray(
          fArguments, NEW_FIELD_COUNT, NEW_FIELD_NAME, newFieldNames, 0);
      JavaRefactoringDescriptorUtil.setBooleanArray(
          fArguments, CREATE_FIELD_COUNT, CREATE_FIELD, createField, 0);
    }
  }

