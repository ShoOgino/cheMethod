  private void appendFolderLabel(IPackageFragmentRoot root, long flags) {
    IResource resource = root.getResource();
    if (resource == null) {
      appendExternalArchiveLabel(root, flags);
      return;
    }

    boolean rootQualified = getFlag(flags, JavaElementLabels.ROOT_QUALIFIED);
    boolean referencedQualified =
        getFlag(flags, JavaElementLabels.REFERENCED_ROOT_POST_QUALIFIED) && isReferenced(root);
    if (rootQualified) {
      fBuffer.append(root.getPath().makeRelative().toString());
    } else {
      IPath projectRelativePath = resource.getProjectRelativePath();
      if (projectRelativePath.segmentCount() == 0) {
        fBuffer.append(resource.getName());
        referencedQualified = false;
      } else {
        fBuffer.append(projectRelativePath.toString());
      }

      int offset = fBuffer.length();
      if (referencedQualified) {
        fBuffer.append(JavaElementLabels.CONCAT_STRING);
        fBuffer.append(resource.getProject().getName());
      } else if (getFlag(flags, JavaElementLabels.ROOT_POST_QUALIFIED)) {
        fBuffer.append(JavaElementLabels.CONCAT_STRING);
        fBuffer.append(root.getParent().getElementName());
      } else {
        return;
      }
      if (getFlag(flags, JavaElementLabels.COLORIZE)) {
        fBuffer.setStyle(offset, fBuffer.length() - offset, QUALIFIER_STYLE);
      }
    }
  }

