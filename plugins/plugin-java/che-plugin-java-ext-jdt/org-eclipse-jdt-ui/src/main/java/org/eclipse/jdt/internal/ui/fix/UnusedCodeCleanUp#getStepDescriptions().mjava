  /** {@inheritDoc} */
  @Override
  public String[] getStepDescriptions() {
    List<String> result = new ArrayList<String>();
    if (isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_IMPORTS))
      result.add(MultiFixMessages.UnusedCodeMultiFix_RemoveUnusedImport_description);
    if (isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_MEMBERS)
        && isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_METHODS))
      result.add(MultiFixMessages.UnusedCodeMultiFix_RemoveUnusedMethod_description);
    if (isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_MEMBERS)
        && isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_CONSTRUCTORS))
      result.add(MultiFixMessages.UnusedCodeMultiFix_RemoveUnusedConstructor_description);
    if (isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_MEMBERS)
        && isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_TYPES))
      result.add(MultiFixMessages.UnusedCodeMultiFix_RemoveUnusedType_description);
    if (isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_MEMBERS)
        && isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_PRIVATE_FELDS))
      result.add(MultiFixMessages.UnusedCodeMultiFix_RemoveUnusedField_description);
    if (isEnabled(CleanUpConstants.REMOVE_UNUSED_CODE_LOCAL_VARIABLES))
      result.add(MultiFixMessages.UnusedCodeMultiFix_RemoveUnusedVariable_description);
    return result.toArray(new String[result.size()]);
  }

