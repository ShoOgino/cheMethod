  /* (non-Javadoc)
   * @see org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet#upperBound()
   */
  @Override
  public TypeSet upperBound() {
    if (fMembers.size() == 1)
      return new SingletonTypeSet(fMembers.iterator().next(), getTypeSetEnvironment());
    if (fMembers.contains(getJavaLangObject()))
      return new SingletonTypeSet(getJavaLangObject(), getTypeSetEnvironment());

    EnumeratedTypeSet result = new EnumeratedTypeSet(getTypeSetEnvironment());

    // Add to result each element of fMembers that has no proper supertype in fMembers
    result.fMembers.addAll(fMembers);
    for (Iterator<TType> iter = fMembers.iterator(); iter.hasNext(); ) {
      TType t = iter.next();

      if (t.isArrayType()) {
        ArrayType at = (ArrayType) t;
        int numDims = at.getDimensions();
        for (Iterator<TType> subIter = TTypes.getAllSubTypesIterator(at.getElementType());
            subIter.hasNext();
            ) {
          result.fMembers.remove(TTypes.createArrayType(subIter.next(), numDims));
        }
      } else {
        for (Iterator<TType> iterator = TTypes.getAllSubTypesIterator(t); iterator.hasNext(); ) {
          result.fMembers.remove(iterator.next());
        }
      }
    }
    result.initComplete();
    return result;
  }

