  /*
   * @see ASTVisitor#visit(ConstructorInvocation)
   */
  @Override
  public boolean visit(ConstructorInvocation node) {
    if (node.getAST().apiLevel() >= JLS3) {
      if (!node.typeArguments().isEmpty()) {
        this.fBuffer.append("<"); // $NON-NLS-1$
        for (Iterator<Type> it = node.typeArguments().iterator(); it.hasNext(); ) {
          Type t = it.next();
          t.accept(this);
          if (it.hasNext()) {
            this.fBuffer.append(","); // $NON-NLS-1$
          }
        }
        this.fBuffer.append(">"); // $NON-NLS-1$
      }
    }
    this.fBuffer.append("this("); // $NON-NLS-1$
    for (Iterator<Expression> it = node.arguments().iterator(); it.hasNext(); ) {
      Expression e = it.next();
      e.accept(this);
      if (it.hasNext()) {
        this.fBuffer.append(","); // $NON-NLS-1$
      }
    }
    this.fBuffer.append(");"); // $NON-NLS-1$
    return false;
  }

