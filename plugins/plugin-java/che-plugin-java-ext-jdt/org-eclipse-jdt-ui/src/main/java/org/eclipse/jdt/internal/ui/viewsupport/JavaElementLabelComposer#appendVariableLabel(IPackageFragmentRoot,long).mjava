  private boolean appendVariableLabel(IPackageFragmentRoot root, long flags) {
    try {
      IClasspathEntry rawEntry = root.getRawClasspathEntry();
      if (rawEntry.getEntryKind() == IClasspathEntry.CPE_VARIABLE) {
        IClasspathEntry entry = JavaModelUtil.getClasspathEntry(root);
        if (entry.getReferencingEntry() != null) {
          return false; // not the variable entry itself, but a referenced entry
        }
        IPath path = rawEntry.getPath().makeRelative();

        if (getFlag(flags, JavaElementLabels.REFERENCED_ROOT_POST_QUALIFIED)) {
          int segements = path.segmentCount();
          if (segements > 0) {
            fBuffer.append(path.segment(segements - 1));
            if (segements > 1) {
              int offset = fBuffer.length();
              fBuffer.append(JavaElementLabels.CONCAT_STRING);
              fBuffer.append(path.removeLastSegments(1).toOSString());
              if (getFlag(flags, JavaElementLabels.COLORIZE)) {
                fBuffer.setStyle(offset, fBuffer.length() - offset, QUALIFIER_STYLE);
              }
            }
          } else {
            fBuffer.append(path.toString());
          }
        } else {
          fBuffer.append(path.toString());
        }
        int offset = fBuffer.length();
        fBuffer.append(JavaElementLabels.CONCAT_STRING);
        if (root.isExternal()) fBuffer.append(root.getPath().toOSString());
        else fBuffer.append(root.getPath().makeRelative().toString());

        if (getFlag(flags, JavaElementLabels.COLORIZE)) {
          fBuffer.setStyle(offset, fBuffer.length() - offset, QUALIFIER_STYLE);
        }
        return true;
      }
    } catch (JavaModelException e) {
      // problems with class path, ignore (bug 202792)
      return false;
    }
    return false;
  }

