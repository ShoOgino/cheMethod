	/**
	 * Skips over the next <code>try</code> keyword. The current token when calling this method must
	 * be a <code>catch</code> or <code>finally</code> keyword. Returns <code>true</code> if a
	 * matching <code>try</code> could be found, <code>false</code> otherwise. The cursor (
	 * <code>fPosition</code>) is set to the offset of the <code>try</code> token.
	 * 
	 * @return <code>true</code> if a matching <code>try</code> token was found, <code>false</code>
	 *         otherwise
	 * @since 3.7
	 */
	private boolean skipNextTRY() {
		Assert.isTrue(fToken == Symbols.TokenCATCH || fToken == Symbols.TokenFINALLY);
	
		while (true) {
			nextToken();
			switch (fToken) {
			// scopes: skip them
				case Symbols.TokenRPAREN:
				case Symbols.TokenRBRACKET:
				case Symbols.TokenRBRACE:
				case Symbols.TokenGREATERTHAN:
					skipScope();
					break;
	
				case Symbols.TokenTRY:
					// found it
					return true;
	
					// shortcut scope starts
				case Symbols.TokenLPAREN:
				case Symbols.TokenLBRACE:
				case Symbols.TokenLBRACKET:
				case Symbols.TokenEOF:
					return false;
			}
		}
	}

