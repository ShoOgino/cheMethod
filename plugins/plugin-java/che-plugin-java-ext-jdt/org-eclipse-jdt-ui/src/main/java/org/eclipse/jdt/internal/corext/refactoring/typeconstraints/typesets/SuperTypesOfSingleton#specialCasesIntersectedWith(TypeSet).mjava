  /* (non-Javadoc)
   * @see org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet#intersectedWith(org.eclipse.jdt.internal.corext
   * .refactoring.typeconstraints.typesets.TypeSet)
   */
  @Override
  protected TypeSet specialCasesIntersectedWith(TypeSet other) {
    if (other.isSingleton() && other.anyMember().equals(fLowerBound))
      return other; // xsect(superTypes(A),A) = A

    if (other instanceof SuperTypesOfSingleton) {
      SuperTypesOfSingleton otherSuper = (SuperTypesOfSingleton) other;

      if (TTypes.canAssignTo(otherSuper.fLowerBound, fLowerBound)) return this;
      if (TTypes.canAssignTo(fLowerBound, otherSuper.fLowerBound)) return otherSuper;
    } else if (other.hasUniqueUpperBound()) {
      TType otherUpper = other.uniqueUpperBound();

      if (otherUpper.equals(fLowerBound))
        return new SingletonTypeSet(fLowerBound, getTypeSetEnvironment());
      if ((otherUpper != fLowerBound && TTypes.canAssignTo(otherUpper, fLowerBound))
          || !TTypes.canAssignTo(fLowerBound, otherUpper))
        return getTypeSetEnvironment().getEmptyTypeSet();
    }
    //		else if (other instanceof SuperTypesSet) {
    //			SuperTypesSet otherSub= (SuperTypesSet) other;
    //			TypeSet otherLowers= otherSub.lowerBound();
    //
    //			for(Iterator iter= otherLowers.iterator(); iter.hasNext(); ) {
    //				TType t= (TType) iter.next();
    //
    //				if ()
    //			}
    //		}
    return null;
  }

