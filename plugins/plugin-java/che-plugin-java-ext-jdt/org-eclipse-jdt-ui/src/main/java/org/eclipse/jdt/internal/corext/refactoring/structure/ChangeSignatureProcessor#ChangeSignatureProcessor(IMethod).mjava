  /**
   * Creates a new change signature refactoring.
   *
   * @param method the method, or <code>null</code> if invoked by scripting framework
   * @throws JavaModelException if something's wrong with the given method
   */
  public ChangeSignatureProcessor(IMethod method) throws JavaModelException {
    fMethod = method;
    fOldVarargIndex = -1;
    fDelegateUpdating = false;
    fDelegateDeprecation = true;
    if (fMethod != null) {
      fParameterInfos = createParameterInfoList(method);
      // fExceptionInfos is created in checkInitialConditions
      fReturnTypeInfo =
          new ReturnTypeInfo(Signature.toString(Signature.getReturnType(fMethod.getSignature())));
      fMethodName = fMethod.getElementName();
      fVisibility = JdtFlags.getVisibilityCode(fMethod);
    }
  }

