  /**
   * Returns the type signature of the declaring type of a <code>CompletionProposal</code>, or
   * <code>null</code> for proposals that do not have a declaring type. The return value is
   * <em>not</em> <code>null</code> for proposals of the following kinds:
   *
   * <ul>
   *   <li>METHOD_DECLARATION
   *   <li>METHOD_NAME_REFERENCE
   *   <li>METHOD_REF
   *   <li>ANNOTATION_ATTRIBUTE_REF
   *   <li>POTENTIAL_METHOD_DECLARATION
   *   <li>ANONYMOUS_CLASS_DECLARATION
   *   <li>FIELD_REF
   *   <li>PACKAGE_REF (returns the package, but no type)
   *   <li>TYPE_REF
   * </ul>
   *
   * @param proposal the completion proposal to get the declaring type for
   * @return the type signature of the declaring type, or <code>null</code> if there is none
   * @see org.eclipse.jdt.core.Signature#toCharArray(char[])
   */
  protected final char[] getDeclaringType(CompletionProposal proposal) {
    switch (proposal.getKind()) {
      case CompletionProposal.METHOD_DECLARATION:
      case CompletionProposal.METHOD_NAME_REFERENCE:
      case CompletionProposal.JAVADOC_METHOD_REF:
      case CompletionProposal.METHOD_REF:
      case CompletionProposal.CONSTRUCTOR_INVOCATION:
      case CompletionProposal.ANONYMOUS_CLASS_CONSTRUCTOR_INVOCATION:
      case CompletionProposal.METHOD_REF_WITH_CASTED_RECEIVER:
      case CompletionProposal.ANNOTATION_ATTRIBUTE_REF:
      case CompletionProposal.POTENTIAL_METHOD_DECLARATION:
      case CompletionProposal.ANONYMOUS_CLASS_DECLARATION:
      case CompletionProposal.FIELD_REF:
      case CompletionProposal.FIELD_REF_WITH_CASTED_RECEIVER:
      case CompletionProposal.JAVADOC_FIELD_REF:
      case CompletionProposal.JAVADOC_VALUE_REF:
        char[] declaration = proposal.getDeclarationSignature();
        // special methods may not have a declaring type: methods defined on arrays etc.
        // Currently known: class literals don't have a declaring type - use Object
        if (declaration == null) return "java.lang.Object".toCharArray(); //$NON-NLS-1$
        return Signature.toCharArray(declaration);
      case CompletionProposal.PACKAGE_REF:
        return proposal.getDeclarationSignature();
      case CompletionProposal.JAVADOC_TYPE_REF:
      case CompletionProposal.TYPE_REF:
        return Signature.toCharArray(proposal.getSignature());
      case CompletionProposal.LOCAL_VARIABLE_REF:
      case CompletionProposal.VARIABLE_DECLARATION:
      case CompletionProposal.KEYWORD:
      case CompletionProposal.LABEL_REF:
      case CompletionProposal.JAVADOC_BLOCK_TAG:
      case CompletionProposal.JAVADOC_INLINE_TAG:
      case CompletionProposal.JAVADOC_PARAM_REF:
        return null;
      default:
        Assert.isTrue(false);
        return null;
    }
  }

