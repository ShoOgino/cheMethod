  /*
   * @see ASTVisitor#visit(EnumConstantDeclaration)
   * @since 3.0
   */
  @Override
  public boolean visit(EnumConstantDeclaration node) {
    if (node.getJavadoc() != null) {
      node.getJavadoc().accept(this);
    }
    printModifiers(node.modifiers());
    node.getName().accept(this);
    if (!node.arguments().isEmpty()) {
      this.fBuffer.append("("); //$NON-NLS-1$
      for (Iterator<Expression> it = node.arguments().iterator(); it.hasNext(); ) {
        Expression e = it.next();
        e.accept(this);
        if (it.hasNext()) {
          this.fBuffer.append(","); //$NON-NLS-1$
        }
      }
      this.fBuffer.append(")"); //$NON-NLS-1$
    }
    if (node.getAnonymousClassDeclaration() != null) {
      node.getAnonymousClassDeclaration().accept(this);
    }
    return false;
  }

