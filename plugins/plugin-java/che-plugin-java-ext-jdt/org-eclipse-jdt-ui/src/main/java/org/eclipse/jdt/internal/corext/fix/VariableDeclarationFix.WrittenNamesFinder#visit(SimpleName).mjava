    /** {@inheritDoc} */
    @Override
    public boolean visit(SimpleName node) {
      if (node.getParent() instanceof VariableDeclarationFragment) return super.visit(node);
      if (node.getParent() instanceof SingleVariableDeclaration) return super.visit(node);

      IBinding binding = node.resolveBinding();
      if (!(binding instanceof IVariableBinding)) return super.visit(node);

      binding = ((IVariableBinding) binding).getVariableDeclaration();
      if (ASTResolving.isWriteAccess(node)) {
        List<SimpleName> list;
        if (fResult.containsKey(binding)) {
          list = fResult.get(binding);
        } else {
          list = new ArrayList<SimpleName>();
        }
        list.add(node);
        fResult.put(binding, list);
      }

      return super.visit(node);
    }

