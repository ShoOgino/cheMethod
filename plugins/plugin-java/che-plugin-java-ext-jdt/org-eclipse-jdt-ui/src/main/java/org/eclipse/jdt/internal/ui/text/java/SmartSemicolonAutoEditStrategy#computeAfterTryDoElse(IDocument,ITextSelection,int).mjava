  /**
   * Computes an insert position for an opening brace if <code>offset</code> maps to a position in
   * <code>doc</code> involving a keyword taking a block after it. These are: <code>try</code>,
   * <code>do</code>, <code>synchronized</code>, <code>static</code>, <code>finally</code>, or
   * <code>else</code>.
   *
   * @param doc the document being modified
   * @param line the current line under investigation
   * @param offset the offset of the caret position, relative to the line start.
   * @return an insert position relative to the line start if <code>line</code> contains one of the
   *     above keywords at or before <code>offset</code>, -1 otherwise
   */
  private static int computeAfterTryDoElse(IDocument doc, ITextSelection line, int offset) {
    // search backward while WS, find 'try', 'do', 'else' in default partition
    int p = offset + line.getOffset();
    p = firstWhitespaceToRight(doc, p);
    if (p == -1) return -1;
    p--;

    if (looksLike(doc, p, "try") // $NON-NLS-1$
        || looksLike(doc, p, "do") // $NON-NLS-1$
        || looksLike(doc, p, "synchronized") // $NON-NLS-1$
        || looksLike(doc, p, "static") // $NON-NLS-1$
        || looksLike(doc, p, "finally") // $NON-NLS-1$
        || looksLike(doc, p, "else")) // $NON-NLS-1$
    return p + 1 - line.getOffset();

    return -1;
  }

