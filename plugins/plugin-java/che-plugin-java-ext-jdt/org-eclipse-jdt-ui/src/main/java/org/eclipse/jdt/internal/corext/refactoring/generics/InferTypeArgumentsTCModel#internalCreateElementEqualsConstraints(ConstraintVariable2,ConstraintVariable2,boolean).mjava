  private void internalCreateElementEqualsConstraints(
      ConstraintVariable2 cv, ConstraintVariable2 initializerCv, boolean isAssignment) {
    if (cv == null || initializerCv == null) return;

    Map<String, CollectionElementVariable2> leftElements = getElementVariables(cv);
    Map<String, CollectionElementVariable2> rightElements = getElementVariables(initializerCv);
    for (Iterator<Entry<String, CollectionElementVariable2>> leftIter =
            leftElements.entrySet().iterator();
        leftIter.hasNext(); ) {
      Entry<String, CollectionElementVariable2> leftEntry = leftIter.next();
      String leftTypeVariableKey = leftEntry.getKey();
      CollectionElementVariable2 rightElementVariable = rightElements.get(leftTypeVariableKey);
      if (rightElementVariable != null) {
        CollectionElementVariable2 leftElementVariable = leftEntry.getValue();
        createEqualsConstraint(leftElementVariable, rightElementVariable);
        internalCreateElementEqualsConstraints(
            leftElementVariable, rightElementVariable, false); // recursive
      }
    }

    ArrayElementVariable2 leftArrayElement = getArrayElementVariable(cv);
    ArrayElementVariable2 rightArrayElement = getArrayElementVariable(initializerCv);
    if (leftArrayElement != null && rightArrayElement != null) {
      if (isAssignment) createSubtypeConstraint(rightArrayElement, leftArrayElement);
      else createEqualsConstraint(leftArrayElement, rightArrayElement);
      internalCreateElementEqualsConstraints(
          leftArrayElement, rightArrayElement, false); // recursive
    }
  }

