  public static IProposableFix[] createMissingSerialVersionFixes(
      CompilationUnit compilationUnit, IProblemLocation problem) {
    if (problem.getProblemId() != IProblem.MissingSerialVersion) return null;

    final ICompilationUnit unit = (ICompilationUnit) compilationUnit.getJavaElement();
    if (unit == null) return null;

    final SimpleName simpleName = getSelectedName(compilationUnit, problem);
    if (simpleName == null) return null;

    ASTNode declaringNode = getDeclarationNode(simpleName);
    if (declaringNode == null) return null;

    SerialVersionDefaultOperation defop =
        new SerialVersionDefaultOperation(unit, new ASTNode[] {declaringNode});
    IProposableFix fix1 =
        new PotentialProgrammingProblemsFix(
            FixMessages.Java50Fix_SerialVersion_default_description,
            compilationUnit,
            new CompilationUnitRewriteOperation[] {defop});

    //		SerialVersionHashOperation hashop= new SerialVersionHashOperation(unit, new ASTNode[] {declaringNode});
    //		IProposableFix
    //				fix2= new PotentialProgrammingProblemsFix(FixMessages.Java50Fix_SerialVersion_hash_description, compilationUnit, new CompilationUnitRewriteOperation[] {hashop});

    return new IProposableFix[] {fix1 /*, fix2*/};
  }

