	/**
	 * Checks whether the refactoring id is valid.
	 *
	 * @param id
	 *            the refactoring id
	 * @return the outcome of the validation
	 */
	private boolean checkId(final String id) {
		Assert.isNotNull(id);
		if (id.equals(IJavaRefactorings.RENAME_COMPILATION_UNIT))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_ENUM_CONSTANT))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_FIELD))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_JAVA_PROJECT))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_LOCAL_VARIABLE))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_METHOD))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_PACKAGE))
			return true;
		else if (id.equals(RENAME_RESOURCE))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_SOURCE_FOLDER))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_TYPE))
			return true;
		else if (id.equals(IJavaRefactorings.RENAME_TYPE_PARAMETER))
			return true;
		return false;
	}

