	/**
	 * Sets the fields. The order is important and should be the same as the order
	 * returned from {@link #getFields(IType)}. Changing the order can have side effects because of different initialization order.
	 * Only fields which return <code>true</code> for {@link Field#isCreateField()} are created in the extracted class. Can be
	 * <code>null</code> to indicate that all instance fields should be moved
	 *
	 * @param fields the fields to move to the extracted class. Can be <code>null</code> to indicate that all instance fields should
	 *  be moved
	 * @throws IllegalArgumentException if one of the fields is <code>null</code>
	 */
	public void setFields(Field[] fields) throws IllegalArgumentException {
		for (int i= 0; i < fields.length; i++) {
			Field field= fields[i];
			if (field == null)
				throw new IllegalArgumentException("Field can not be null"); //$NON-NLS-1$
		}
		fFields= fields;
	}

