  protected Expression computeProposals(
      AST ast,
      ITypeBinding returnBinding,
      int returnOffset,
      CompilationUnit root,
      Expression result) {
    ScopeAnalyzer analyzer = new ScopeAnalyzer(root);
    IBinding[] bindings =
        analyzer.getDeclarationsInScope(
            returnOffset, ScopeAnalyzer.VARIABLES | ScopeAnalyzer.CHECK_VISIBILITY);
    for (int i = 0; i < bindings.length; i++) {
      IVariableBinding curr = (IVariableBinding) bindings[i];
      ITypeBinding type = curr.getType();
      if (type != null && type.isAssignmentCompatible(returnBinding) && testModifier(curr)) {
        if (result == null) {
          result = ast.newSimpleName(curr.getName());
        }
        addLinkedPositionProposal(RETURN_EXPRESSION_KEY, curr.getName(), null);
      }
    }
    return result;
  }

