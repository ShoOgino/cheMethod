	private int computeJavaAdornmentFlags(IJavaElement element, int renderFlags) {
		int flags= 0;
		if (showOverlayIcons(renderFlags)) {
			try {
				if (element instanceof IMember) {
					IMember member= (IMember)element;

					int modifiers= member.getFlags();
					if (confirmAbstract(member) && JdtFlags.isAbstract(member))
						flags|= JavaElementImageDescriptor.ABSTRACT;
					if (Flags.isFinal(modifiers) || isInterfaceOrAnnotationField(member) || isEnumConstant(member, modifiers))
						flags|= JavaElementImageDescriptor.FINAL;
					if (Flags.isStatic(modifiers) || isInterfaceOrAnnotationFieldOrType(member) || isEnumConstant(member, modifiers))
						flags|= JavaElementImageDescriptor.STATIC;

					if (Flags.isDeprecated(modifiers))
						flags|= JavaElementImageDescriptor.DEPRECATED;

					int elementType= element.getElementType();
					if (elementType == IJavaElement.METHOD) {
						if (((IMethod)element).isConstructor())
							flags|= JavaElementImageDescriptor.CONSTRUCTOR;
						if (Flags.isSynchronized(modifiers)) // collides with 'super' flag
							flags|= JavaElementImageDescriptor.SYNCHRONIZED;
						if (Flags.isNative(modifiers))
							flags|= JavaElementImageDescriptor.NATIVE;
						if (Flags.isDefaultMethod(modifiers))
							flags|= JavaElementImageDescriptor.DEFAULT_METHOD;
						if (Flags.isAnnnotationDefault(modifiers))
							flags|= JavaElementImageDescriptor.ANNOTATION_DEFAULT;
					}

					if (member.getElementType() == IJavaElement.TYPE) {
						if (JavaModelUtil.hasMainMethod((IType)member)) {
							flags|= JavaElementImageDescriptor.RUNNABLE;
						}
					}

					if (member.getElementType() == IJavaElement.FIELD) {
						if (Flags.isVolatile(modifiers))
							flags|= JavaElementImageDescriptor.VOLATILE;
						if (Flags.isTransient(modifiers))
							flags|= JavaElementImageDescriptor.TRANSIENT;
					}
				} else if (element instanceof ILocalVariable && Flags.isFinal(((ILocalVariable)element).getFlags())) {
					flags|= JavaElementImageDescriptor.FINAL;
				}
			} catch (JavaModelException e) {
				// do nothing. Can't compute runnable adornment or get flags
			}
		}
		return flags;
	}

