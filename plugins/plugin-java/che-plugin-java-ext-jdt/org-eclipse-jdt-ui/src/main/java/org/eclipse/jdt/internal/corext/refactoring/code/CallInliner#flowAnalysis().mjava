  private void flowAnalysis() {
    fInvocationScope =
        fRootScope.findScope(fTargetNode.getStartPosition(), fTargetNode.getLength());
    fInvocationScope.setCursor(fTargetNode.getStartPosition());
    fFlowContext = new FlowContext(0, fNumberOfLocals + 1);
    fFlowContext.setConsiderAccessMode(true);
    fFlowContext.setComputeMode(FlowContext.ARGUMENTS);
    Selection selection =
        Selection.createFromStartLength(fInvocation.getStartPosition(), fInvocation.getLength());
    switch (fBodyDeclaration.getNodeType()) {
      case ASTNode.INITIALIZER:
      case ASTNode.FIELD_DECLARATION:
      case ASTNode.METHOD_DECLARATION:
      case ASTNode.ENUM_CONSTANT_DECLARATION:
        fFlowInfo = new InputFlowAnalyzer(fFlowContext, selection, true).perform(fBodyDeclaration);
        break;
      default:
        Assert.isTrue(false, "Should not happen"); // $NON-NLS-1$
    }
  }

