  /**
   * Returns <code>true</code> if the current tokens look like a method declaration header (i.e.
   * only the return type and method name). The heuristic calls <code>nextToken</code> and expects
   * an identifier (method name) and a type declaration (an identifier with optional brackets) which
   * also covers the visibility modifier of constructors; it does not recognize package visible
   * constructors.
   *
   * @return <code>true</code> if the current position looks like a method declaration header.
   */
  private boolean looksLikeMethodDecl() {
    /*
     * TODO This heuristic does not recognize package private constructors
     * since those do have neither type nor visibility keywords.
     * One option would be to go over the parameter list, but that might
     * be empty as well, or not typed in yet - hard to do without an AST...
     */

    nextToken();
    if (fToken == Symbols.TokenIDENT) { // method name
      do nextToken();
      while (skipBrackets()); // optional brackets for array valued return types

      return fToken == Symbols.TokenIDENT; // return type name
    }
    return false;
  }

