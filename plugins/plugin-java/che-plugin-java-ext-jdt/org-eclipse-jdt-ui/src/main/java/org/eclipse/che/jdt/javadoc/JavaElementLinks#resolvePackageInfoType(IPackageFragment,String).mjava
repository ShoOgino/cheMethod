  private static IType resolvePackageInfoType(IPackageFragment pack, String refTypeName)
      throws JavaModelException {
    // Note: The scoping rules of JLS7 6.3 are broken for package-info.java, see https://bugs.eclipse.org/216451#c4
    // We follow the javadoc tool's implementation and only support fully-qualified type references:
    IJavaProject javaProject = pack.getJavaProject();
    return javaProject.findType(refTypeName, (IProgressMonitor) null);

    // This implementation would make sense, but the javadoc tool doesn't support it:
    //		IClassFile classFile= pack.getClassFile(JavaModelUtil.PACKAGE_INFO_CLASS);
    //		if (classFile.exists()) {
    //			return resolveType(classFile.getType(), refTypeName);
    //		}
    //
    //		// check if refTypeName is a qualified name
    //		int firstDot= refTypeName.indexOf('.');
    //		if (firstDot != -1) {
    //			String typeNameRest= refTypeName.substring(firstDot + 1);
    //			String simpleTypeName= refTypeName.substring(0, firstDot);
    //			IType simpleType= resolvePackageInfoType(pack, simpleTypeName);
    //			if (simpleType != null) {
    //				// a type-qualified name
    //				return resolveType(simpleType, typeNameRest);
    //			} else {
    //				// a fully-qualified name
    //				return javaProject.findType(refTypeName, (IProgressMonitor) null);
    //			}
    //		}
    //
    //		ICompilationUnit cu= pack.getCompilationUnit(JavaModelUtil.PACKAGE_INFO_JAVA);
    //		if (! cu.exists()) {
    //			// refTypeName is a simple name in the package-info.java from the source attachment. Sorry, we give up here...
    //			return null;
    //		}
    //
    //		// refTypeName is a simple name in a CU. Let's play the shadowing rules of JLS7 6.4.1:
    //		// 1) single-type import
    //		// 2) enclosing package
    //		// 3) java.lang.* (JLS7 7.3)
    //		// 4) on-demand import
    //		IImportDeclaration[] imports= cu.getImports();
    //		for (int i= 0; i < imports.length; i++) {
    //			IImportDeclaration importDecl= imports[i];
    //			String name= importDecl.getElementName();
    //			if (Flags.isStatic(importDecl.getFlags())) {
    //				imports[i]= null;
    //			} else 	if (! importDecl.isOnDemand()) {
    //				if (name.endsWith('.' + refTypeName)) {
    //					// 1) single-type import
    //					IType type= javaProject.findType(name, (IProgressMonitor) null);
    //					if (type != null)
    //						return type;
    //				}
    //				imports[i]= null;
    //			}
    //		}
    //
    //		// 2) enclosing package
    //		IType type= javaProject.findType(pack.getElementName() + '.' + refTypeName, (IProgressMonitor) null);
    //		if (type != null)
    //			return type;
    //
    //		// 3) java.lang.* (JLS7 7.3)
    //		type= javaProject.findType("java.lang." + refTypeName, (IProgressMonitor) null); //$NON-NLS-1$
    //		if (type != null)
    //			return type;
    //
    //		// 4) on-demand import
    //		for (int i= 0; i < imports.length; i++) {
    //			IImportDeclaration importDecl= imports[i];
    //			if (importDecl != null) {
    //				String name= importDecl.getElementName();
    //				name= name.substring(0, name.length() - 1); //remove the *
    //				type= javaProject.findType(name + refTypeName, (IProgressMonitor) null);
    //				if (type != null)
    //					return type;
    //			}
    //		}
    //		return null;
  }

