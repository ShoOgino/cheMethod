    @Override
    public final void acceptSearchMatch(final SearchMatch match) throws CoreException {
      final SearchMatch accepted = fRequestor.acceptSearchMatch(match);
      if (accepted != null) {
        fCollectedMatches.add(accepted);
        final IResource resource = accepted.getResource();
        if (!resource.equals(fLastResource)) {
          if (fBinary) {
            final IJavaElement element = JavaCore.create(resource);
            if (!(element instanceof ICompilationUnit)) {
              final IProject project = resource.getProject();
              if (!fGrouping)
                fStatus.addEntry(
                    fSeverity,
                    Messages.format(
                        RefactoringCoreMessages.RefactoringSearchEngine_binary_match_ungrouped,
                        BasicElementLabels.getResourceName(project)),
                    null,
                    null,
                    RefactoringStatusEntry.NO_CODE);
              else if (!fBinaryResources.contains(resource))
                fStatus.addEntry(
                    fSeverity,
                    Messages.format(
                        RefactoringCoreMessages.RefactoringSearchEngine_binary_match_grouped,
                        BasicElementLabels.getResourceName(project)),
                    null,
                    null,
                    RefactoringStatusEntry.NO_CODE);
              fBinaryResources.add(resource);
            }
          }
          if (fInaccurate
              && accepted.getAccuracy() == SearchMatch.A_INACCURATE
              && !fInaccurateMatches.contains(accepted)) {
            fStatus.addEntry(
                fSeverity,
                Messages.format(
                    RefactoringCoreMessages.RefactoringSearchEngine_inaccurate_match,
                    BasicElementLabels.getResourceName(resource)),
                null,
                null,
                RefactoringStatusEntry.NO_CODE);
            fInaccurateMatches.add(accepted);
          }
        }
      }
    }

