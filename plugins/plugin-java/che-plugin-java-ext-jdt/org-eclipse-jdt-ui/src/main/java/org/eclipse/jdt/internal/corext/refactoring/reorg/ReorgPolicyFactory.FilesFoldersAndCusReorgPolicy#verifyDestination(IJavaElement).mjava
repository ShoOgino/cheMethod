    @Override
    protected RefactoringStatus verifyDestination(IJavaElement javaElement)
        throws JavaModelException {
      Assert.isNotNull(javaElement);
      if (!fCheckDestination) return new RefactoringStatus();
      if (!javaElement.exists())
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_doesnotexist0);
      if (javaElement instanceof IJavaModel)
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_jmodel);

      if (javaElement.isReadOnly())
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_readonly);

      if (!javaElement.isStructureKnown())
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_structure);

      if (javaElement instanceof IOpenable) {
        IOpenable openable = (IOpenable) javaElement;
        if (!openable.isConsistent())
          return RefactoringStatus.createFatalErrorStatus(
              RefactoringCoreMessages.ReorgPolicyFactory_inconsistent);
      }

      if (javaElement instanceof IPackageFragmentRoot) {
        IPackageFragmentRoot root = (IPackageFragmentRoot) javaElement;
        if (root.isArchive())
          return RefactoringStatus.createFatalErrorStatus(
              RefactoringCoreMessages.ReorgPolicyFactory_archive);
        if (root.isExternal())
          return RefactoringStatus.createFatalErrorStatus(
              RefactoringCoreMessages.ReorgPolicyFactory_external);
      }

      if (ReorgUtils.isInsideCompilationUnit(javaElement)) {
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_cannot);
      }

      IContainer destinationAsContainer = getDestinationAsContainer();
      if (destinationAsContainer == null || isChildOfOrEqualToAnyFolder(destinationAsContainer))
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_not_this_resource);

      if (containsLinkedResources() && !ReorgUtils.canBeDestinationForLinkedResources(javaElement))
        return RefactoringStatus.createFatalErrorStatus(
            RefactoringCoreMessages.ReorgPolicyFactory_linked);
      return new RefactoringStatus();
    }

