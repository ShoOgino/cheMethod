  private List<IVariableBinding> getAllEnclosingAnonymousTypesField() {
    final List<IVariableBinding> ans = new ArrayList<IVariableBinding>();
    final AbstractTypeDeclaration declaration =
        (AbstractTypeDeclaration)
            ASTNodes.getParent(fAnonymousInnerClassNode, AbstractTypeDeclaration.class);
    AnonymousClassDeclaration anonymous =
        (AnonymousClassDeclaration)
            ASTNodes.getParent(fAnonymousInnerClassNode, ASTNode.ANONYMOUS_CLASS_DECLARATION);
    while (anonymous != null) {
      if (ASTNodes.isParent(anonymous, declaration)) {
        ITypeBinding binding = anonymous.resolveBinding();
        if (binding != null) {
          ans.addAll(Arrays.asList(binding.getDeclaredFields()));
        }
      } else {
        break;
      }
      anonymous =
          (AnonymousClassDeclaration)
              ASTNodes.getParent(anonymous, ASTNode.ANONYMOUS_CLASS_DECLARATION);
    }
    return ans;
  }

