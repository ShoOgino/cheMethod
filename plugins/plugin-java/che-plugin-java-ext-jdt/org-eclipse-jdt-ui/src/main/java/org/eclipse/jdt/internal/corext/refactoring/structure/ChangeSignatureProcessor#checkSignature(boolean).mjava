  private RefactoringStatus checkSignature(boolean resolveBindings) {
    RefactoringStatus result = new RefactoringStatus();
    checkMethodName(result);
    if (result.hasFatalError()) return result;

    checkParameterNamesAndValues(result);
    if (result.hasFatalError()) return result;

    checkForDuplicateParameterNames(result);
    if (result.hasFatalError()) return result;

    try {
      RefactoringStatus[] typeStati;
      if (resolveBindings)
        typeStati =
            TypeContextChecker.checkAndResolveMethodTypes(
                fMethod, getStubTypeContext(), getNotDeletedInfos(), fReturnTypeInfo);
      else
        typeStati =
            TypeContextChecker.checkMethodTypesSyntax(
                fMethod, getNotDeletedInfos(), fReturnTypeInfo);
      for (int i = 0; i < typeStati.length; i++) result.merge(typeStati[i]);

      result.merge(checkVarargs());
    } catch (CoreException e) {
      //cannot do anything here
      throw new RuntimeException(e);
    }

    //checkExceptions() unnecessary (IType always ok)
    return result;
  }

