  /*
   * @see org.eclipse.jdt.internal.ui.text.java.ResultCollector#createTypeCompletion(org.eclipse.jdt.core.CompletionProposal)
   */
  IJavaCompletionProposal createTypeProposal(CompletionProposal typeProposal) {
    final ICompilationUnit cu = getCompilationUnit();
    if (cu == null || getContext() != null && getContext().isInJavadoc())
      return super.createJavaCompletionProposal(typeProposal);

    IJavaProject project = cu.getJavaProject();
    if (!shouldProposeGenerics(project)) return super.createJavaCompletionProposal(typeProposal);

    char[] completion = typeProposal.getCompletion();
    // don't add parameters for import-completions nor for proposals with an empty completion (e.g. inside the type argument list)
    if (completion.length > 0
        && (completion[completion.length - 1] == ';' || completion[completion.length - 1] == '.'))
      return super.createJavaCompletionProposal(typeProposal);

    LazyJavaCompletionProposal newProposal =
        new LazyGenericTypeProposal(typeProposal, getInvocationContext());
    return newProposal;
  }

