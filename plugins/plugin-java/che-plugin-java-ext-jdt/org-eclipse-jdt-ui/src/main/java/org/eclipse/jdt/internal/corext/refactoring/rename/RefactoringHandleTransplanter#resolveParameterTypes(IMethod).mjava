	private String[] resolveParameterTypes(IMethod method) {
		final String[] oldParameterTypes= method.getParameterTypes();
		final String[] newparams= new String[oldParameterTypes.length];

		final String[] possibleOldSigs= new String[4];
		possibleOldSigs[0]= Signature.createTypeSignature(fOldType.getElementName(), false);
		possibleOldSigs[1]= Signature.createTypeSignature(fOldType.getElementName(), true);
		possibleOldSigs[2]= Signature.createTypeSignature(fOldType.getFullyQualifiedName(), false);
		possibleOldSigs[3]= Signature.createTypeSignature(fOldType.getFullyQualifiedName(), true);

		final String[] possibleNewSigs= new String[4];
		possibleNewSigs[0]= Signature.createTypeSignature(fNewType.getElementName(), false);
		possibleNewSigs[1]= Signature.createTypeSignature(fNewType.getElementName(), true);
		possibleNewSigs[2]= Signature.createTypeSignature(fNewType.getFullyQualifiedName(), false);
		possibleNewSigs[3]= Signature.createTypeSignature(fNewType.getFullyQualifiedName(), true);

		// Textually replace all occurrences
		// This handles stuff like Map<SomeClass, some.package.SomeClass>
		for (int i= 0; i < oldParameterTypes.length; i++) {
			newparams[i]= oldParameterTypes[i];
			for (int j= 0; j < possibleOldSigs.length; j++) {
				newparams[i]= replaceAll(newparams[i], possibleOldSigs[j], possibleNewSigs[j]);
			}
		}
		return newparams;
	}

