    CharSequence getExceptionDescription(String simpleName) {
        if (fMethod != null) {
            if (fExceptionDescriptions == null) {
                fExceptionDescriptions = new HashMap<String, StringBuffer>();
            } else {
                StringBuffer description = fExceptionDescriptions.get(simpleName);
                if (description != null) {
                    return description.length() > 0 ? description : null;
                }
            }

            StringBuffer description = new StringBuffer();
            fExceptionDescriptions.put(simpleName, description);
            fBuf = description;
            fLiteralContent = 0;

            List<TagElement> tags = fJavadoc.tags();
            for (Iterator<TagElement> iter = tags.iterator(); iter.hasNext(); ) {
                TagElement tag = iter.next();
                String tagName = tag.getTagName();
                if (TagElement.TAG_THROWS.equals(tagName) || TagElement.TAG_EXCEPTION.equals(tagName)) {
                    List<? extends ASTNode> fragments = tag.fragments();
                    if (fragments.size() > 0) {
                        Object first = fragments.get(0);
                        if (first instanceof Name) {
                            String name = ASTNodes.getSimpleNameIdentifier((Name)first);
                            if (name.equals(simpleName)) {
                                if (fragments.size() > 1)
                                    handleContentElements(fragments.subList(1, fragments.size()));
                                break;
                            }
                        }
                    }
                }
            }

            fBuf = null;
            return description.length() > 0 ? description : null;
        }
        return null;
    }

