  private static ICompilationUnit[][] splitByProject(ICompilationUnit[] units) {
    if (hasOnlyOneProject(units)) return new ICompilationUnit[][] {units};

    Hashtable<IJavaProject, ArrayList<ICompilationUnit>> projectTable =
        new Hashtable<IJavaProject, ArrayList<ICompilationUnit>>();

    for (int i = 0; i < units.length; i++) {
      ICompilationUnit unit = units[i];
      ArrayList<ICompilationUnit> list = projectTable.get(unit.getJavaProject());
      if (list == null) {
        list = new ArrayList<ICompilationUnit>();
        projectTable.put(unit.getJavaProject(), list);
      }
      list.add(unit);
    }

    Collection<ArrayList<ICompilationUnit>> values = projectTable.values();

    ICompilationUnit[][] result = new ICompilationUnit[values.size()][];
    int i = 0;
    for (Iterator<ArrayList<ICompilationUnit>> iterator = values.iterator(); iterator.hasNext(); ) {
      ArrayList<ICompilationUnit> cus = iterator.next();
      result[i] = cus.toArray(new ICompilationUnit[cus.size()]);
      i++;
    }

    return result;
  }

