  /**
   * Gets a reader for an IMember's Javadoc comment content from the source attachment. and renders
   * the tags in HTML. Returns <code>null</code> if the member does not contain a Javadoc comment or
   * if no source is available.
   *
   * @param member the member to get the Javadoc of.
   * @param allowInherited for methods with no (Javadoc) comment, the comment of the overridden
   *     class is returned if <code>allowInherited</code> is <code>true</code>
   * @param useAttachedJavadoc if <code>true</code> Javadoc will be extracted from attached Javadoc
   *     if there's no source
   * @return a reader for the Javadoc comment content in HTML or <code>null</code> if the member
   *     does not contain a Javadoc comment or if no source is available
   * @throws org.eclipse.jdt.core.JavaModelException is thrown when the elements Javadoc can not be
   *     accessed
   * @since 3.2
   */
  public static Reader getHTMLContentReader(
      IMember member, boolean allowInherited, boolean useAttachedJavadoc)
      throws JavaModelException {
    Reader contentReader = internalGetContentReader(member);
    if (contentReader != null) return new JavaDoc2HTMLTextReader(contentReader);

    if (useAttachedJavadoc
        && member.getOpenable().getBuffer() == null) { // only if no source available
      String s = member.getAttachedJavadoc(null);
      if (s != null) return new StringReader(s);
    }

    if (allowInherited && (member.getElementType() == IJavaElement.METHOD))
      return findDocInHierarchy((IMethod) member, true, useAttachedJavadoc);

    return null;
  }

