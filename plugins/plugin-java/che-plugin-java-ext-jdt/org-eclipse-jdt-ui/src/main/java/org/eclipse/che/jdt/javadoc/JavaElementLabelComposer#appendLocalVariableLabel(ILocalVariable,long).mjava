  /**
   * Appends the styled label for a local variable.
   *
   * @param localVariable the element to render
   * @param flags the rendering flags. Flags with names starting with 'F_' are considered.
   */
  public void appendLocalVariableLabel(ILocalVariable localVariable, long flags) {
    if (getFlag(flags, JavaElementLabels.F_PRE_TYPE_SIGNATURE)) {
      appendTypeSignatureLabel(localVariable, localVariable.getTypeSignature(), flags);
      fBuffer.append(' ');
    }

    if (getFlag(flags, JavaElementLabels.F_FULLY_QUALIFIED)) {
      appendElementLabel(
          localVariable.getDeclaringMember(),
          JavaElementLabels.M_PARAMETER_TYPES
              | JavaElementLabels.M_FULLY_QUALIFIED
              | JavaElementLabels.T_FULLY_QUALIFIED
              | (flags & QUALIFIER_FLAGS));
      fBuffer.append('.');
    }

    fBuffer.append(getElementName(localVariable));

    if (getFlag(flags, JavaElementLabels.F_APP_TYPE_SIGNATURE)) {
      int offset = fBuffer.length();
      fBuffer.append(JavaElementLabels.DECL_STRING);
      appendTypeSignatureLabel(localVariable, localVariable.getTypeSignature(), flags);
      if (getFlag(flags, JavaElementLabels.COLORIZE)) {
        //				fBuffer.setStyle(offset, fBuffer.length() - offset, DECORATIONS_STYLE);
      }
    }

    // post qualification
    if (getFlag(flags, JavaElementLabels.F_POST_QUALIFIED)) {
      fBuffer.append(JavaElementLabels.CONCAT_STRING);
      appendElementLabel(
          localVariable.getDeclaringMember(),
          JavaElementLabels.M_PARAMETER_TYPES
              | JavaElementLabels.M_FULLY_QUALIFIED
              | JavaElementLabels.T_FULLY_QUALIFIED
              | (flags & QUALIFIER_FLAGS));
    }
  }

