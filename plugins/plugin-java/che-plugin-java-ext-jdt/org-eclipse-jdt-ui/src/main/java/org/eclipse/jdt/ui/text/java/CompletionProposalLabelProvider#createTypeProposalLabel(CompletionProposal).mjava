  /**
   * Creates a display label for a given type proposal. The display label consists of:
   *
   * <ul>
   *   <li>the simple type name (erased when the context is in javadoc)
   *   <li>the package name
   * </ul>
   *
   * <p>Examples: A proposal for the generic type <code>java.util.List&lt;E&gt;</code>, the display
   * label is: <code>List<E> - java.util</code>.
   *
   * @param typeProposal the method proposal to display
   * @return the display label for the given type proposal
   */
  StyledString createTypeProposalLabel(CompletionProposal typeProposal) {
    char[] signature;
    if (fContext != null && fContext.isInJavadoc())
      signature = Signature.getTypeErasure(typeProposal.getSignature());
    else signature = typeProposal.getSignature();
    char[] fullName = Signature.toCharArray(signature);
    return createTypeProposalLabel(fullName);
  }

