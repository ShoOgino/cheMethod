  private static ChangeCorrectionProposal getProposal(
      ICompilationUnit cu, SimpleName sn, IVariableBinding variableBinding, int relevance) {
    Expression accessNode = sn;
    Expression qualifier = null;
    boolean useSuper = false;

    ASTNode parent = sn.getParent();
    switch (parent.getNodeType()) {
      case ASTNode.QUALIFIED_NAME:
        accessNode = (Expression) parent;
        qualifier = ((QualifiedName) parent).getQualifier();
        break;
      case ASTNode.SUPER_FIELD_ACCESS:
        accessNode = (Expression) parent;
        qualifier = ((SuperFieldAccess) parent).getQualifier();
        useSuper = true;
        break;
    }
    ASTRewrite rewrite = ASTRewrite.create(sn.getAST());
    ProposalParameter gspc =
        new ProposalParameter(useSuper, cu, rewrite, accessNode, qualifier, variableBinding);
    if (ASTResolving.isWriteAccess(sn)) return addSetterProposal(gspc, relevance);
    else return addGetterProposal(gspc, relevance);
  }

