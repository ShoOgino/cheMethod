  public static ControlStatementsFix[] createRemoveBlockFix(
      CompilationUnit compilationUnit, ASTNode node) {
    if (!(node instanceof Statement)) {
      return null;
    }
    Statement statement = (Statement) node;

    if (statement instanceof Block) {
      Block block = (Block) statement;
      if (block.statements().size() != 1) return null;

      ASTNode parent = block.getParent();
      if (!(parent instanceof Statement)) return null;

      statement = (Statement) parent;
    }

    if (statement instanceof IfStatement) {
      List<ControlStatementsFix> result = new ArrayList<ControlStatementsFix>();

      List<RemoveBlockOperation> removeAllList = new ArrayList<RemoveBlockOperation>();

      IfElseIterator iter = new IfElseIterator((IfStatement) statement);
      IfStatement item = null;
      while (iter.hasNext()) {
        item = iter.next();
        if (RemoveBlockOperation.satisfiesQuickAssistPrecondition(
            item, IfStatement.THEN_STATEMENT_PROPERTY)) {
          RemoveBlockOperation op =
              new RemoveBlockOperation(item, IfStatement.THEN_STATEMENT_PROPERTY);
          removeAllList.add(op);
          if (item == statement)
            result.add(
                new ControlStatementsFix(
                    FixMessages.ControlStatementsFix_removeIfBlock_proposalDescription,
                    compilationUnit,
                    new CompilationUnitRewriteOperation[] {op}));
        }
      }

      if (RemoveBlockOperation.satisfiesQuickAssistPrecondition(
          item, IfStatement.ELSE_STATEMENT_PROPERTY)) {
        RemoveBlockOperation op =
            new RemoveBlockOperation(item, IfStatement.ELSE_STATEMENT_PROPERTY);
        removeAllList.add(op);
        if (item == statement)
          result.add(
              new ControlStatementsFix(
                  FixMessages.ControlStatementsFix_removeElseBlock_proposalDescription,
                  compilationUnit,
                  new CompilationUnitRewriteOperation[] {op}));
      }

      if (removeAllList.size() > 1) {
        CompilationUnitRewriteOperation[] allConvert =
            removeAllList.toArray(new CompilationUnitRewriteOperation[removeAllList.size()]);
        result.add(
            new ControlStatementsFix(
                FixMessages.ControlStatementsFix_removeIfElseBlock_proposalDescription,
                compilationUnit,
                allConvert));
      }

      return result.toArray(new ControlStatementsFix[result.size()]);
    } else if (statement instanceof WhileStatement) {
      if (RemoveBlockOperation.satisfiesQuickAssistPrecondition(
          statement, WhileStatement.BODY_PROPERTY)) {
        RemoveBlockOperation op = new RemoveBlockOperation(statement, WhileStatement.BODY_PROPERTY);
        return new ControlStatementsFix[] {
          new ControlStatementsFix(
              FixMessages.ControlStatementsFix_removeBrackets_proposalDescription,
              compilationUnit,
              new CompilationUnitRewriteOperation[] {op})
        };
      }
    } else if (statement instanceof ForStatement) {
      if (RemoveBlockOperation.satisfiesQuickAssistPrecondition(
          statement, ForStatement.BODY_PROPERTY)) {
        RemoveBlockOperation op = new RemoveBlockOperation(statement, ForStatement.BODY_PROPERTY);
        return new ControlStatementsFix[] {
          new ControlStatementsFix(
              FixMessages.ControlStatementsFix_removeBrackets_proposalDescription,
              compilationUnit,
              new CompilationUnitRewriteOperation[] {op})
        };
      }
    } else if (statement instanceof EnhancedForStatement) {
      if (RemoveBlockOperation.satisfiesQuickAssistPrecondition(
          statement, EnhancedForStatement.BODY_PROPERTY)) {
        RemoveBlockOperation op =
            new RemoveBlockOperation(statement, EnhancedForStatement.BODY_PROPERTY);
        return new ControlStatementsFix[] {
          new ControlStatementsFix(
              FixMessages.ControlStatementsFix_removeBrackets_proposalDescription,
              compilationUnit,
              new CompilationUnitRewriteOperation[] {op})
        };
      }
    } else if (statement instanceof DoStatement) {
      if (RemoveBlockOperation.satisfiesQuickAssistPrecondition(
          statement, DoStatement.BODY_PROPERTY)) {
        RemoveBlockOperation op = new RemoveBlockOperation(statement, DoStatement.BODY_PROPERTY);
        return new ControlStatementsFix[] {
          new ControlStatementsFix(
              FixMessages.ControlStatementsFix_removeBrackets_proposalDescription,
              compilationUnit,
              new CompilationUnitRewriteOperation[] {op})
        };
      }
    }

    return null;
  }

