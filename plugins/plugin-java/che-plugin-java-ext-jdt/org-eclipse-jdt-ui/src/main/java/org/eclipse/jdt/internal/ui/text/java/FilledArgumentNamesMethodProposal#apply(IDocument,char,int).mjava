  /*
   * @see ICompletionProposalExtension#apply(IDocument, char)
   */
  @Override
  public void apply(IDocument document, char trigger, int offset) {
    super.apply(document, trigger, offset);
    int baseOffset = getReplacementOffset();
    String replacement = getReplacementString();

    if (fArgumentOffsets != null && getTextViewer() != null) {
      LinkedModeModelImpl model = new LinkedModeModelImpl();
      for (int i = 0; i != fArgumentOffsets.length; i++) {
        LinkedPositionGroupImpl group = new LinkedPositionGroupImpl();
        RegionImpl region = new RegionImpl();
        region.setLength(fArgumentLengths[i]);
        region.setOffset(baseOffset + fArgumentOffsets[i]);
        group.addPositions(region);
        model.addGroups(group);
      }
      model.setEscapePosition(baseOffset + replacement.length());
      this.linkedModel = model;

      //                model.forceInstall();
      //                JavaEditor editor = getJavaEditor();
      //                if (editor != null) {
      //                    model.addLinkingListener(new EditorHighlightingSynchronizer(editor));
      //                }
      //
      //                LinkedModeUI ui = new EditorLinkedModeUI(model, getTextViewer());
      //                ui.setExitPosition(getTextViewer(), baseOffset + replacement.length(), 0,
      // Integer.MAX_VALUE);
      //                ui.setExitPolicy(new ExitPolicy(')', document));
      //                ui.setDoContextInfo(true);
      //                ui.setCyclingMode(LinkedModeUI.CYCLE_WHEN_NO_PARENT);
      //                ui.enter();

      fSelectedRegion = new Region(baseOffset + replacement.length(), 0);

    } else {
      fSelectedRegion = new Region(baseOffset + replacement.length(), 0);
    }
  }

