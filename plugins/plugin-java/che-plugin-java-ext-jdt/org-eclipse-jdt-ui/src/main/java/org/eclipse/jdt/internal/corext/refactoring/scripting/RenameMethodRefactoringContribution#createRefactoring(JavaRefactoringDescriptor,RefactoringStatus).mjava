  /** {@inheritDoc} */
  @Override
  public Refactoring createRefactoring(
      JavaRefactoringDescriptor descriptor, RefactoringStatus status) throws JavaModelException {
    JavaRefactoringArguments arguments =
        new JavaRefactoringArguments(descriptor.getProject(), retrieveArgumentMap(descriptor));

    String input = arguments.getAttribute(JavaRefactoringDescriptorUtil.ATTRIBUTE_INPUT);
    IMethod method =
        (IMethod) JavaRefactoringDescriptorUtil.handleToElement(arguments.getProject(), input);
    if (method == null) {
      status.addFatalError(
          Messages.format(
              RefactoringCoreMessages.RenameMethodRefactoringContribution_could_not_create,
              new Object[] {BasicElementLabels.getResourceName(arguments.getProject()), input}));
      return null;
    }

    JavaRenameProcessor processor;
    if (MethodChecks.isVirtual(method)) {
      processor = new RenameVirtualMethodProcessor(method, arguments, status);
    } else {
      processor = new RenameNonVirtualMethodProcessor(method, arguments, status);
    }
    return new RenameRefactoring(processor);
  }

