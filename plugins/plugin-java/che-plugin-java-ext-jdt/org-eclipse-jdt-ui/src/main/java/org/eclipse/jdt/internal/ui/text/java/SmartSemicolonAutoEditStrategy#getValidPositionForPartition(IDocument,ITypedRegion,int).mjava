  /**
   * Returns a valid insert location (except for whitespace) in <code>partition</code> or -1 if
   * there is no valid insert location. An valid insert location is right after any java string or
   * character partition, or at the end of a java default partition, but never behind <code>
   * maxOffset</code>. Comment partitions or empty java partitions do never yield valid insert
   * positions.
   *
   * @param doc the document being modified
   * @param partition the current partition
   * @param maxOffset the maximum offset to consider
   * @return a valid insert location in <code>partition</code>, or -1 if there is no valid insert
   *     location
   */
  private static int getValidPositionForPartition(
      IDocument doc, ITypedRegion partition, int maxOffset) {
    final int INVALID = -1;

    if (IJavaPartitions.JAVA_DOC.equals(partition.getType())) return INVALID;
    if (IJavaPartitions.JAVA_MULTI_LINE_COMMENT.equals(partition.getType())) return INVALID;
    if (IJavaPartitions.JAVA_SINGLE_LINE_COMMENT.equals(partition.getType())) return INVALID;

    int endOffset = Math.min(maxOffset, partition.getOffset() + partition.getLength());

    if (IJavaPartitions.JAVA_CHARACTER.equals(partition.getType())) return endOffset;
    if (IJavaPartitions.JAVA_STRING.equals(partition.getType())) return endOffset;
    if (IDocument.DEFAULT_CONTENT_TYPE.equals(partition.getType())) {
      try {
        if (doc.get(partition.getOffset(), endOffset - partition.getOffset()).trim().length() == 0)
          return INVALID;
        else return endOffset;
      } catch (BadLocationException e) {
        return INVALID;
      }
    }
    // default: we don't know anything about the partition - assume valid
    return endOffset;
  }

