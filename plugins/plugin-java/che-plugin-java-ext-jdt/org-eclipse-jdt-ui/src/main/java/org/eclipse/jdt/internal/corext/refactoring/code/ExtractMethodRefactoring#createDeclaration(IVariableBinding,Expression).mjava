  private VariableDeclarationStatement createDeclaration(
      IVariableBinding binding, Expression intilizer) {
    VariableDeclaration original =
        ASTNodes.findVariableDeclaration(binding, fAnalyzer.getEnclosingBodyDeclaration());
    VariableDeclarationFragment fragment = fAST.newVariableDeclarationFragment();
    fragment.setName((SimpleName) ASTNode.copySubtree(fAST, original.getName()));
    fragment.setInitializer(intilizer);
    VariableDeclarationStatement result = fAST.newVariableDeclarationStatement(fragment);
    result.modifiers().addAll(ASTNode.copySubtrees(fAST, ASTNodes.getModifiers(original)));
    result.setType(
        ASTNodeFactory.newType(
            fAST,
            original,
            fImportRewriter,
            new ContextSensitiveImportRewriteContext(original, fImportRewriter)));
    return result;
  }

