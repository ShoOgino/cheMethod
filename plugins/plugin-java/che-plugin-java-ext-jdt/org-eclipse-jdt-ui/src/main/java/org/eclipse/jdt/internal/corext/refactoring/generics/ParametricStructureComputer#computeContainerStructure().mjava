  private void computeContainerStructure() {
    if (DEBUG_INITIALIZATION)
      System.out.println("\n*** Computing Container Structure ***\n"); // $NON-NLS-1$

    initializeContainerStructure();

    if (DEBUG_INITIALIZATION) dumpContainerStructure();

    while (!fWorkList2.isEmpty()) {
      ConstraintVariable2 v = fWorkList2.pop();
      List<ITypeConstraint2> usedIn = fTCModel.getUsedIn(v);

      for (Iterator<ITypeConstraint2> iter = usedIn.iterator(); iter.hasNext(); ) {
        SubTypeConstraint2 stc = (SubTypeConstraint2) iter.next();

        ConstraintVariable2 lhs = stc.getLeft();
        ConstraintVariable2 rhs = stc.getRight();

        unifyContainerStructure(lhs, rhs);
      }

      TypeEquivalenceSet typeEquivalenceSet = v.getTypeEquivalenceSet();
      if (typeEquivalenceSet != null) {
        ConstraintVariable2[] contributingVariables = typeEquivalenceSet.getContributingVariables();
        for (int i = 0; i + 1 < contributingVariables.length; i++) {
          ConstraintVariable2 first = contributingVariables[i];
          ConstraintVariable2 second = contributingVariables[i + 1];

          unifyContainerStructure(first, second);
        }
      }
    }
    if (DEBUG_INITIALIZATION) dumpContainerStructure();
  }

