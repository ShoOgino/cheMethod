  public static String[][] suggestArgumentNamesWithProposals(
      IJavaProject project, String[] paramNames) {
    String[][] newNames = new String[paramNames.length][];
    ArrayList<String> takenNames = new ArrayList<String>();

    // Ensure that the code generation preferences are respected
    for (int i = 0; i < paramNames.length; i++) {
      String curr = paramNames[i];
      String baseName =
          NamingConventions.getBaseName(NamingConventions.VK_PARAMETER, curr, project);

      String[] proposedNames =
          getVariableNameSuggestions(
              NamingConventions.VK_PARAMETER, project, curr, 0, takenNames, true);
      if (!curr.equals(baseName)) {
        // make the existing name to favorite
        LinkedHashSet<String> updatedNames = new LinkedHashSet<String>();
        updatedNames.add(curr);
        for (int k = 0; k < proposedNames.length; k++) {
          updatedNames.add(proposedNames[k]);
        }
        proposedNames = updatedNames.toArray(new String[updatedNames.size()]);
      }
      newNames[i] = proposedNames;
      takenNames.add(proposedNames[0]);
    }
    return newNames;
  }

