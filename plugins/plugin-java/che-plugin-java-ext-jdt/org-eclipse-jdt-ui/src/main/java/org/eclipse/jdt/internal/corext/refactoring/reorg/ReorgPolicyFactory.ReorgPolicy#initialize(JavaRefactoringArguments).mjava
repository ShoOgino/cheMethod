    public RefactoringStatus initialize(JavaRefactoringArguments arguments) {
      String handle = arguments.getAttribute(ATTRIBUTE_DESTINATION);
      if (handle != null) {
        final IJavaElement element =
            JavaRefactoringDescriptorUtil.handleToElement(arguments.getProject(), handle, false);
        if (element != null) {
          if (fCheckDestination && !element.exists())
            return JavaRefactoringDescriptorUtil.createInputFatalStatus(
                element, getProcessorId(), getRefactoringId());
          else {
            try {
              IReorgDestination destination = ReorgDestinationFactory.createDestination(element);
              setDestination(destination);
              return verifyDestination(destination);
            } catch (JavaModelException exception) {
              JavaPlugin.log(exception);
              return RefactoringStatus.createFatalErrorStatus(
                  Messages.format(
                      RefactoringCoreMessages.InitializableRefactoring_illegal_argument,
                      new String[] {handle, JavaRefactoringDescriptorUtil.ATTRIBUTE_INPUT}));
            }
          }
        } else {
          // Leave for compatibility
          // https://bugs.eclipse.org/bugs/show_bug.cgi?id=157479
          final IResource resource =
              JavaRefactoringDescriptorUtil.handleToResource(arguments.getProject(), handle);
          if (resource == null || fCheckDestination && !resource.exists())
            return JavaRefactoringDescriptorUtil.createInputFatalStatus(
                resource, getProcessorId(), getRefactoringId());
          else {
            try {
              IReorgDestination destination = ReorgDestinationFactory.createDestination(resource);
              setDestination(destination);
              return verifyDestination(destination);
            } catch (JavaModelException exception) {
              JavaPlugin.log(exception);
              return RefactoringStatus.createFatalErrorStatus(
                  Messages.format(
                      RefactoringCoreMessages.InitializableRefactoring_illegal_argument,
                      new String[] {handle, JavaRefactoringDescriptorUtil.ATTRIBUTE_INPUT}));
            }
          }
        }
      } else {
        // https://bugs.eclipse.org/bugs/show_bug.cgi?id=157479
        handle = arguments.getAttribute(ATTRIBUTE_TARGET);
        if (handle != null) {
          final IResource resource =
              JavaRefactoringDescriptorUtil.handleToResource(arguments.getProject(), handle);
          if (resource == null || fCheckDestination && !resource.exists())
            return JavaRefactoringDescriptorUtil.createInputFatalStatus(
                resource, getProcessorId(), getRefactoringId());
          else {
            try {
              IReorgDestination destination = ReorgDestinationFactory.createDestination(resource);
              setDestination(destination);
              return verifyDestination(destination);
            } catch (JavaModelException exception) {
              JavaPlugin.log(exception);
              return RefactoringStatus.createFatalErrorStatus(
                  Messages.format(
                      RefactoringCoreMessages.InitializableRefactoring_illegal_argument,
                      new String[] {handle, JavaRefactoringDescriptorUtil.ATTRIBUTE_INPUT}));
            }
          }
        } else
          return RefactoringStatus.createFatalErrorStatus(
              Messages.format(
                  RefactoringCoreMessages.InitializableRefactoring_argument_not_exist,
                  JavaRefactoringDescriptorUtil.ATTRIBUTE_INPUT));
      }
    }

