  /* (non-Javadoc)
   * @see org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet#intersectedWith(org.eclipse.jdt.internal.corext
   * .refactoring.typeconstraints.typesets.TypeSet)
   */
  @Override
  public TypeSet specialCasesIntersectedWith(TypeSet other) {
    if (other.isSingleton() && other.anyMember().equals(fUpperBound))
      return other; // xsect(subTypes(A),A) = A

    if (other instanceof SubTypesOfSingleton) {
      SubTypesOfSingleton otherSub = (SubTypesOfSingleton) other;

      if (TTypes.canAssignTo(otherSub.fUpperBound, fUpperBound)) return otherSub; // .makeClone();
      if (TTypes.canAssignTo(fUpperBound, otherSub.fUpperBound)) return this; // makeClone();
    } else if (other.hasUniqueLowerBound()) {
      TType otherLower = other.uniqueLowerBound();

      if (otherLower.equals(fUpperBound))
        return new SingletonTypeSet(fUpperBound, getTypeSetEnvironment());
      if (otherLower != fUpperBound && TTypes.canAssignTo(fUpperBound, otherLower)
          || !TTypes.canAssignTo(otherLower, fUpperBound))
        return getTypeSetEnvironment().getEmptyTypeSet();
    }
    //		else if (other instanceof SubTypesSet) {
    //			SubTypesSet otherSub= (SubTypesSet) other;
    //			TypeSet otherUppers= otherSub.upperBound();
    //
    //			for(Iterator iter= otherUppers.iterator(); iter.hasNext(); ) {
    //				TType t= (TType) iter.next();
    //
    //				if ()
    //			}
    //		}
    return null;
  }

