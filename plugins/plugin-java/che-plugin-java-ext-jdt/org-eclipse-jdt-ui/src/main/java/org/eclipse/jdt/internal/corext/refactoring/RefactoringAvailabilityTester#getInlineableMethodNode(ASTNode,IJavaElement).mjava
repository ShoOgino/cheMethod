  private static ASTNode getInlineableMethodNode(ASTNode node, IJavaElement unit) {
    if (node == null) return null;
    switch (node.getNodeType()) {
      case ASTNode.SIMPLE_NAME:
        StructuralPropertyDescriptor locationInParent = node.getLocationInParent();
        if (locationInParent == MethodDeclaration.NAME_PROPERTY) {
          return node.getParent();
        } else if (locationInParent == MethodInvocation.NAME_PROPERTY
            || locationInParent == SuperMethodInvocation.NAME_PROPERTY) {
          return unit instanceof ICompilationUnit
              ? node.getParent()
              : null; // don't start on invocations in binary
        }
        return null;
      case ASTNode.EXPRESSION_STATEMENT:
        node = ((ExpressionStatement) node).getExpression();
    }
    switch (node.getNodeType()) {
      case ASTNode.METHOD_DECLARATION:
        return node;
      case ASTNode.METHOD_INVOCATION:
      case ASTNode.SUPER_METHOD_INVOCATION:
      case ASTNode.CONSTRUCTOR_INVOCATION:
        return unit instanceof ICompilationUnit
            ? node
            : null; // don't start on invocations in binary
    }
    return null;
  }

