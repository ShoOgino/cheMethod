  public static void addRedundantSuperInterfaceProposal(
      IInvocationContext context, IProblemLocation problem, Collection<ICommandAccess> proposals) {
    ASTNode selectedNode = problem.getCoveringNode(context.getASTRoot());
    if (!(selectedNode instanceof Name)) {
      return;
    }
    ASTNode node = ASTNodes.getNormalizedNode(selectedNode);

    ASTRewrite rewrite = ASTRewrite.create(node.getAST());
    rewrite.remove(node, null);

    String label = CorrectionMessages.LocalCorrectionsSubProcessor_remove_redundant_superinterface;
    Image image =
        JavaPluginImages.get(
            JavaPluginImages
                .IMG_TOOL_DELETE); // JavaPlugin.getDefault().getWorkbench().getSharedImages().getImage(ISharedImages.IMG_TOOL_DELETE);

    ASTRewriteCorrectionProposal proposal =
        new ASTRewriteCorrectionProposal(
            label,
            context.getCompilationUnit(),
            rewrite,
            IProposalRelevance.REMOVE_REDUNDANT_SUPER_INTERFACE,
            image);
    proposals.add(proposal);
  }

