  public static IProposableFix createAddUnimplementedMethodsFix(
      final CompilationUnit root, IProblemLocation problem) {
    ASTNode typeNode = getSelectedTypeNode(root, problem);
    if (typeNode == null) return null;

    if (isTypeBindingNull(typeNode)) return null;

    AddUnimplementedMethodsOperation operation = new AddUnimplementedMethodsOperation(typeNode);
    if (operation.getMethodsToImplement().length > 0) {
      return new UnimplementedCodeFix(
          CorrectionMessages.UnimplementedMethodsCorrectionProposal_description,
          root,
          new CompilationUnitRewriteOperation[] {operation});
    } else {
      return new IProposableFix() {
        public CompilationUnitChange createChange(IProgressMonitor progressMonitor)
            throws CoreException {
          CompilationUnitChange change =
              new CompilationUnitChange(
                  CorrectionMessages.UnimplementedMethodsCorrectionProposal_description,
                  (ICompilationUnit) root.getJavaElement()) {
                @Override
                public Change perform(IProgressMonitor pm) throws CoreException {
                  //							Shell shell=
                  // PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
                  //							String dialogTitle=
                  // CorrectionMessages.UnimplementedMethodsCorrectionProposal_description;
                  //							IStatus status= getStatus();
                  //							ErrorDialog.openError(shell, dialogTitle,
                  // CorrectionMessages.UnimplementedCodeFix_DependenciesErrorMessage, status);
                  // TODO
                  return new NullChange();
                }
              };
          change.setEdit(new MultiTextEdit());
          return change;
        }

        public String getAdditionalProposalInfo() {
          return new String();
        }

        public String getDisplayString() {
          return CorrectionMessages.UnimplementedMethodsCorrectionProposal_description;
        }

        public IStatus getStatus() {
          return new Status(
              IStatus.ERROR,
              JavaPlugin.ID_PLUGIN,
              CorrectionMessages.UnimplementedCodeFix_DependenciesStatusMessage);
        }
      };
    }
  }

