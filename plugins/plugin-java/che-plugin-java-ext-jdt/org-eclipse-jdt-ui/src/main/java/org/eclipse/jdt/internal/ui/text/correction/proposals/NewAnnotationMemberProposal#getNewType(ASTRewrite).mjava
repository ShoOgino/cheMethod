  private Type getNewType(ASTRewrite rewrite) {
    AST ast = rewrite.getAST();
    Type newTypeNode = null;
    ITypeBinding binding = null;
    if (fInvocationNode.getLocationInParent() == MemberValuePair.NAME_PROPERTY) {
      Expression value = ((MemberValuePair) fInvocationNode.getParent()).getValue();
      binding = value.resolveTypeBinding();
    } else if (fInvocationNode instanceof Expression) {
      binding = ((Expression) fInvocationNode).resolveTypeBinding();
    }
    if (binding != null) {
      ImportRewriteContext importRewriteContext =
          new ContextSensitiveImportRewriteContext(fInvocationNode, getImportRewrite());
      newTypeNode = getImportRewrite().addImport(binding, ast, importRewriteContext);
    }
    if (newTypeNode == null) {
      newTypeNode = ast.newSimpleType(ast.newSimpleName("String")); // $NON-NLS-1$
    }
    addLinkedPosition(rewrite.track(newTypeNode), false, KEY_TYPE);
    return newTypeNode;
  }

