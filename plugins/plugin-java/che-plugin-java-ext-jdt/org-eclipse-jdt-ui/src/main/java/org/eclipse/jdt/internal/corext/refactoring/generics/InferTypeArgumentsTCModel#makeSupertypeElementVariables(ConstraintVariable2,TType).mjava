	private void makeSupertypeElementVariables(ConstraintVariable2 expressionCv, TType supertype) {
		if (supertype.isParameterizedType() || supertype.isRawType()) {
			TType[] typeArguments= null;
			if (supertype.isParameterizedType()) {
				typeArguments= ((ParameterizedType) supertype).getTypeArguments();
			}
			TypeVariable[] typeParameters= ((GenericType) supertype.getTypeDeclaration()).getTypeParameters();
			for (int i= 0; i < typeParameters.length; i++) {
				TypeVariable typeParameter= typeParameters[i];
				TType referenceTypeArgument;
				if (typeArguments == null) { // raw type
					referenceTypeArgument= typeParameter.getErasure();
				} else {
					referenceTypeArgument= typeArguments[i];
				}
				if (referenceTypeArgument.isTypeVariable()) {
					CollectionElementVariable2 referenceTypeArgumentCv= getElementVariable(expressionCv, (TypeVariable) referenceTypeArgument);
					if (referenceTypeArgumentCv != null) {
						setElementVariable(expressionCv, referenceTypeArgumentCv, typeParameter);
						continue;
					}
				}
				makeElementVariable(expressionCv, typeParameter, CollectionElementVariable2.NOT_DECLARED_TYPE_VARIABLE_INDEX);
			}
		}
		makeElementVariablesFromSupertypes(expressionCv, supertype);
	}

