    /**
     * Creates edits that describe how to format the given string.
     * Returns the changes required to format source.
     *
     * @param content
     *         The content to format
     * @param offset
     *         The given offset to start recording the edits (inclusive).
     * @param length
     *         the given length to stop recording the edits (exclusive).
     * @return <code>List<Change></code> describing the changes required to format source
     * @throws IllegalArgumentException
     *         If the offset and length are not inside the string, a IllegalArgumentException is thrown.
     */
    public List<Change> getFormatChanges(String content, int offset, int length) throws BadLocationException, IllegalArgumentException {
        IDocument document = new Document(content);
        DocumentChangeListener documentChangeListener = new DocumentChangeListener(document);
        TextEdit textEdit = CodeFormatterUtil.format2(CodeFormatter.K_COMPILATION_UNIT, content, offset, length, 0, null, null);
        textEdit.apply(document);
        return documentChangeListener.getChanges();
    }

