	public static void addFallThroughProposals(IInvocationContext context, IProblemLocation problem, Collection<ICommandAccess>
			proposals) {
		ASTNode selectedNode = problem.getCoveringNode(context.getASTRoot());
		if (selectedNode instanceof SwitchCase && selectedNode.getLocationInParent() == SwitchStatement.STATEMENTS_PROPERTY) {
			AST ast = selectedNode.getAST();
			ASTNode parent = selectedNode.getParent();

			// insert break:
			ASTRewrite rewrite = ASTRewrite.create(ast);
			ListRewrite listRewrite = rewrite.getListRewrite(parent, SwitchStatement.STATEMENTS_PROPERTY);
			listRewrite.insertBefore(ast.newBreakStatement(), selectedNode, null);

			String label = CorrectionMessages.LocalCorrectionsSubProcessor_insert_break_statement;
			Image image = JavaPluginImages.get(JavaPluginImages.IMG_CORRECTION_CHANGE);
			ASTRewriteCorrectionProposal proposal = new ASTRewriteCorrectionProposal(label, context.getCompilationUnit(), rewrite,
																					 IProposalRelevance.INSERT_BREAK_STATEMENT, image);
			proposals.add(proposal);

			// insert //$FALL-THROUGH$:
			rewrite = ASTRewrite.create(ast);
			rewrite.setTargetSourceRangeComputer(new NoCommentSourceRangeComputer());
			listRewrite = rewrite.getListRewrite(parent, SwitchStatement.STATEMENTS_PROPERTY);
			ASTNode fallThroughComment = rewrite.createStringPlaceholder("//$FALL-THROUGH$", ASTNode.EMPTY_STATEMENT); //$NON-NLS-1$
			listRewrite.insertBefore(fallThroughComment, selectedNode, null);

			label = CorrectionMessages.LocalCorrectionsSubProcessor_insert_fall_through;
			image = JavaPluginImages.get(JavaPluginImages.IMG_CORRECTION_CHANGE);
			proposal =
					new ASTRewriteCorrectionProposal(label, context.getCompilationUnit(), rewrite, IProposalRelevance.INSERT_FALL_THROUGH,
													 image);
			proposals.add(proposal);
		}
	}

