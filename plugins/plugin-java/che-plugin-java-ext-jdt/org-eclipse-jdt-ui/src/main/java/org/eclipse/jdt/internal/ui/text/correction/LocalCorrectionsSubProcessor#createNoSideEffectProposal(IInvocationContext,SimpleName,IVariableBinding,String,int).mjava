	private static ASTRewriteCorrectionProposal createNoSideEffectProposal(IInvocationContext context, SimpleName nodeToQualify,
																		   IVariableBinding fieldBinding, String label, int relevance) {
		AST ast = nodeToQualify.getAST();

		Expression qualifier;
		if (Modifier.isStatic(fieldBinding.getModifiers())) {
			ITypeBinding declaringClass = fieldBinding.getDeclaringClass();
			qualifier = ast.newSimpleName(declaringClass.getTypeDeclaration().getName());
		} else {
			qualifier = ast.newThisExpression();
		}

		ASTRewrite rewrite = ASTRewrite.create(ast);
		FieldAccess access = ast.newFieldAccess();
		access.setName((SimpleName)rewrite.createCopyTarget(nodeToQualify));
		access.setExpression(qualifier);
		rewrite.replace(nodeToQualify, access, null);


		Image image = JavaPluginImages.get(JavaPluginImages.IMG_CORRECTION_CHANGE);
		return new ASTRewriteCorrectionProposal(label, context.getCompilationUnit(), rewrite, relevance, image);
	}

