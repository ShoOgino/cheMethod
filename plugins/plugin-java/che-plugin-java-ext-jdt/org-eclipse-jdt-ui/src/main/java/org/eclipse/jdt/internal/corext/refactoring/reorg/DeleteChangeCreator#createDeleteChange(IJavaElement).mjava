  private static Change createDeleteChange(IJavaElement javaElement) throws JavaModelException {
    Assert.isTrue(!ReorgUtils.isInsideCompilationUnit(javaElement));

    switch (javaElement.getElementType()) {
      case IJavaElement.PACKAGE_FRAGMENT_ROOT:
        return createPackageFragmentRootDeleteChange((IPackageFragmentRoot) javaElement);

      case IJavaElement.PACKAGE_FRAGMENT:
        return createSourceManipulationDeleteChange((IPackageFragment) javaElement);

      case IJavaElement.COMPILATION_UNIT:
        return createSourceManipulationDeleteChange((ICompilationUnit) javaElement);

      case IJavaElement.CLASS_FILE:
        // if this assert fails, it means that a precondition is missing
        Assert.isTrue(((IClassFile) javaElement).getResource() instanceof IFile);
        return createDeleteChange(((IClassFile) javaElement).getResource());

      case IJavaElement.JAVA_MODEL: // cannot be done
        Assert.isTrue(false);
        return null;

      case IJavaElement.JAVA_PROJECT: // handled differently
        Assert.isTrue(false);
        return null;

      case IJavaElement.TYPE:
      case IJavaElement.FIELD:
      case IJavaElement.METHOD:
      case IJavaElement.INITIALIZER:
      case IJavaElement.PACKAGE_DECLARATION:
      case IJavaElement.IMPORT_CONTAINER:
      case IJavaElement.IMPORT_DECLARATION:
        Assert.isTrue(false); // not done here
        return new NullChange();
      default:
        Assert.isTrue(false); // there's no more kinds
        return new NullChange();
    }
  }

