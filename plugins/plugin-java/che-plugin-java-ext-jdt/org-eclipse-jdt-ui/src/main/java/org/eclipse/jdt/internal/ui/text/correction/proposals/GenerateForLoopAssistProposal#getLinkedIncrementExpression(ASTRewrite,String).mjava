  /**
   * Creates a {@link PostfixExpression} used to increment the loop variable of a <code>for</code>
   * loop to iterate over an array.
   *
   * @param rewrite the current {@link ASTRewrite} instance
   * @param variableToIncrement the name of the variable to increment
   * @return a filled {@link PostfixExpression} realizing an incrementation of the specified
   *     variable
   */
  private Expression getLinkedIncrementExpression(ASTRewrite rewrite, String variableToIncrement) {
    AST ast = rewrite.getAST();
    PostfixExpression incrementLoopVariable = ast.newPostfixExpression();
    SimpleName name = ast.newSimpleName(variableToIncrement);
    addLinkedPosition(rewrite.track(name), LinkedPositionGroup.NO_STOP, name.getIdentifier());
    incrementLoopVariable.setOperand(name);
    incrementLoopVariable.setOperator(PostfixExpression.Operator.INCREMENT);
    return incrementLoopVariable;
  }

