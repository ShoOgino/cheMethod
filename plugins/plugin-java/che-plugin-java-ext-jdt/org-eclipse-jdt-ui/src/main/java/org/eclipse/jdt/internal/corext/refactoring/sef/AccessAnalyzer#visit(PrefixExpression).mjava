	@Override
	public boolean visit(PrefixExpression node) {
		Expression operand = node.getOperand();
		if (!considerBinding(resolveBinding(operand), operand))
			return true;

		PrefixExpression.Operator operator = node.getOperator();
		if (operator != PrefixExpression.Operator.INCREMENT && operator != PrefixExpression.Operator.DECREMENT)
			return true;

		checkParent(node);

		fRewriter.replace(node,
						  createInvocation(node.getAST(), node.getOperand(), node.getOperator().toString()),
			createGroupDescription(PREFIX_ACCESS));
		return false;
	}

