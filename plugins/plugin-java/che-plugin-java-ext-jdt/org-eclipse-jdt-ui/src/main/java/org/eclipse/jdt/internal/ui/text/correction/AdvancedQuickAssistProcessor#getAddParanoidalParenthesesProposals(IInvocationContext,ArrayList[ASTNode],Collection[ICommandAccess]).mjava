  private static boolean getAddParanoidalParenthesesProposals(
      IInvocationContext context,
      ArrayList<ASTNode> coveredNodes,
      Collection<ICommandAccess> resultingCollections) {

    IProposableFix fix =
        ExpressionsFix.createAddParanoidalParenthesisFix(
            context.getASTRoot(), coveredNodes.toArray(new ASTNode[coveredNodes.size()]));
    if (fix == null) return false;

    if (resultingCollections == null) return true;

    // add correction proposal
    Image image = JavaPluginImages.get(JavaPluginImages.IMG_CORRECTION_CAST);
    Map<String, String> options = new Hashtable<String, String>();
    options.put(CleanUpConstants.EXPRESSIONS_USE_PARENTHESES, CleanUpOptions.TRUE);
    options.put(CleanUpConstants.EXPRESSIONS_USE_PARENTHESES_ALWAYS, CleanUpOptions.TRUE);
    FixCorrectionProposal proposal =
        new FixCorrectionProposal(
            fix,
            new ExpressionsCleanUp(options),
            IProposalRelevance.ADD_PARANOIDAL_PARENTHESES,
            image,
            context);
    resultingCollections.add(proposal);
    return true;
  }

