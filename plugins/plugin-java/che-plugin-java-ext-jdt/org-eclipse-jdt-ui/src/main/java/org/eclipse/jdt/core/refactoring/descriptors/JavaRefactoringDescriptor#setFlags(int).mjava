  /**
   * Sets the flags of this refactoring.
   *
   * <p>The default is <code>
   * RefactoringDescriptor.STRUCTURAL_CHANGE | RefactoringDescriptor.MULTI_CHANGE</code>, unless
   * overridden by a concrete subclass. Clients may use refactoring flags to indicate special
   * capabilities of Java refactorings.
   *
   * @param flags the flags to set, or <code>RefactoringDescriptor.NONE</code> to clear the flags
   * @see #getFlags()
   * @see RefactoringDescriptor#NONE
   * @see RefactoringDescriptor#STRUCTURAL_CHANGE
   * @see RefactoringDescriptor#BREAKING_CHANGE
   * @see RefactoringDescriptor#MULTI_CHANGE
   * @see #JAR_MIGRATION
   * @see #JAR_REFACTORING
   * @see #JAR_SOURCE_ATTACHMENT
   */
  public void setFlags(final int flags) {
    super.setFlags(flags);
  }

