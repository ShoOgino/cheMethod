  private RefactoringStatus addWarnings(final Set<Warning> warnings) {
    RefactoringStatus status = new RefactoringStatus();

    // Remove deleted ripple methods from user selection and add warnings
    for (Iterator<Warning> iter = warnings.iterator(); iter.hasNext(); ) {
      final Warning warning = iter.next();
      final IMethod[] elements = warning.getRipple();
      if (warning.isSelectionWarning()) {
        String message =
            Messages.format(
                RefactoringCoreMessages.RenameTypeProcessor_deselected_method_is_overridden,
                new String[] {
                  JavaElementLabels.getElementLabel(elements[0], JavaElementLabels.ALL_DEFAULT),
                  JavaElementLabels.getElementLabel(
                      elements[0].getDeclaringType(), JavaElementLabels.ALL_DEFAULT)
                });
        status.addWarning(message);
      }
      if (warning.isNameWarning()) {
        String message =
            Messages.format(
                RefactoringCoreMessages.RenameTypeProcessor_renamed_method_is_overridden,
                new String[] {
                  JavaElementLabels.getElementLabel(elements[0], JavaElementLabels.ALL_DEFAULT),
                  JavaElementLabels.getElementLabel(
                      elements[0].getDeclaringType(), JavaElementLabels.ALL_DEFAULT)
                });
        status.addWarning(message);
      }
      for (int i = 0; i < elements.length; i++)
        fPreloadedElementToSelection.put(elements[i], Boolean.FALSE);
    }
    return status;
  }

