  private Type evaluateParameterType(
      AST ast, Expression elem, String key, ImportRewriteContext context) {
    ITypeBinding binding = Bindings.normalizeTypeBinding(elem.resolveTypeBinding());
    if (binding != null && binding.isWildcardType()) {
      binding = ASTResolving.normalizeWildcardType(binding, true, ast);
    }
    if (binding != null) {
      ITypeBinding[] typeProposals = ASTResolving.getRelaxingTypes(ast, binding);
      for (int i = 0; i < typeProposals.length; i++) {
        addLinkedPositionProposal(key, typeProposals[i]);
      }
      return getImportRewrite().addImport(binding, ast, context);
    }
    return ast.newSimpleType(ast.newSimpleName("Object")); // $NON-NLS-1$
  }

