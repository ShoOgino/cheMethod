  /**
   * Finds a method for the given <code>IMethodBinding</code>. Returns <code>null</code> if the type
   * doesn't contain a corresponding method.
   *
   * @param method the method to find
   * @param type the type to look in
   * @return the corresponding IMethod or <code>null</code>
   * @throws JavaModelException if an error occurs in the Java model
   * @deprecated Use {@link #findMethodInHierarchy(ITypeBinding, String, String[])} or {@link
   *     JavaModelUtil}
   */
  public static IMethod findMethod(IMethodBinding method, IType type) throws JavaModelException {
    method = method.getMethodDeclaration();

    IMethod[] candidates = type.getMethods();
    for (int i = 0; i < candidates.length; i++) {
      IMethod candidate = candidates[i];
      if (candidate.getElementName().equals(method.getName())
          && sameParameters(method, candidate)) {
        return candidate;
      }
    }
    return null;
  }

