  public RefactoringStatus validateInput() {
    RefactoringStatus result = Checks.checkTypeName(fClassName, fCu);
    if (result.hasFatalError()) return result;

    if (fClassNamesUsed.contains(fClassName))
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.ConvertAnonymousToNestedRefactoring_type_exists);
    IMethodBinding superConstructorBinding = getSuperConstructorBinding();
    if (superConstructorBinding == null)
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.ConvertAnonymousToNestedRefactoring_compile_errors);
    if (fClassName.equals(superConstructorBinding.getDeclaringClass().getName()))
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.ConvertAnonymousToNestedRefactoring_another_name);
    if (classNameHidesEnclosingType())
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.ConvertAnonymousToNestedRefactoring_name_hides);
    return result;
  }

