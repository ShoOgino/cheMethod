  public static ParameterizedType[] inferArguments(
      SimpleType[] types,
      InferTypeArgumentsUpdate update,
      InferTypeArgumentsTCModel model,
      CompilationUnitRewrite rewrite) {
    for (int i = 0; i < types.length; i++) {
      types[i].setProperty(REWRITTEN, null);
    }
    List<ParameterizedType> result = new ArrayList<ParameterizedType>();
    HashMap<ICompilationUnit, CuUpdate> updates = update.getUpdates();
    Set<Entry<ICompilationUnit, CuUpdate>> entrySet = updates.entrySet();
    for (Iterator<Entry<ICompilationUnit, CuUpdate>> iter = entrySet.iterator(); iter.hasNext(); ) {

      Entry<ICompilationUnit, CuUpdate> entry = iter.next();

      rewrite.setResolveBindings(false);
      CuUpdate cuUpdate = entry.getValue();

      for (Iterator<CollectionElementVariable2> cvIter = cuUpdate.getDeclarations().iterator();
          cvIter.hasNext(); ) {
        ConstraintVariable2 cv = cvIter.next();
        ParameterizedType newNode = rewriteConstraintVariable(cv, rewrite, model, false, types);
        if (newNode != null) result.add(newNode);
      }
    }
    return result.toArray(new ParameterizedType[result.size()]);
  }

