  public RefactoringStatus checkNewElementName(String name) throws CoreException {
    Assert.isNotNull(name);
    RefactoringStatus result = Checks.checkTypeParameterName(name, fTypeParameter);
    if (Checks.startsWithLowerCase(name))
      result.addWarning(
          RefactoringCoreMessages.RenameTypeParameterRefactoring_should_start_lowercase);
    if (Checks.isAlreadyNamed(fTypeParameter, name))
      result.addFatalError(RefactoringCoreMessages.RenameTypeParameterRefactoring_another_name);

    IMember member = fTypeParameter.getDeclaringMember();
    if (member instanceof IType) {
      IType type = (IType) member;
      if (type.getTypeParameter(name).exists())
        result.addFatalError(
            RefactoringCoreMessages
                .RenameTypeParameterRefactoring_class_type_parameter_already_defined);
    } else if (member instanceof IMethod) {
      IMethod method = (IMethod) member;
      if (method.getTypeParameter(name).exists())
        result.addFatalError(
            RefactoringCoreMessages
                .RenameTypeParameterRefactoring_method_type_parameter_already_defined);
    } else {
      JavaPlugin.logErrorMessage(
          "Unexpected sub-type of IMember: " + member.getClass().getName()); //$NON-NLS-1$
      Assert.isTrue(false);
    }
    return result;
  }

