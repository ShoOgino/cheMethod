		/**
		 * Tests whether the node to be replaced is invalid.
		 *
		 * @return true if the node is invalid, false otherwise
		 *
		 */
		public boolean isInvalidNode() {
			ASTNode first = fNodes.get(0);
			ASTNode candidate = first.getParent();
			if (candidate == null)
				return false;
			// return invalid if the opening and closing parenthesis of the method signature is part of the node to be replaced
			if (candidate.getNodeType() == ASTNode.METHOD_DECLARATION)
				return true;
			return false;
		}

