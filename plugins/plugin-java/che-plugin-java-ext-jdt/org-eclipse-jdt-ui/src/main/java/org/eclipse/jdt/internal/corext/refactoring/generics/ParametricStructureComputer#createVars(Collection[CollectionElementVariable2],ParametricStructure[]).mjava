  private Collection<CollectionElementVariable2> createVars(
      Collection<CollectionElementVariable2> cvs, ParametricStructure[] parms) {
    if (parms.length > 0) { // happens, e.g., for Properties (non-parametric)
      //			Assert.isTrue(cvs.size() == parms.length, "cvs.length==" + cvs.size() + " parms.length="
      // + parms.length); //assumption is wrong in presence of NOT_DECLARED_TYPE_VARIABLE_INDEX
      for (Iterator<CollectionElementVariable2> iter = cvs.iterator(); iter.hasNext(); ) {
        CollectionElementVariable2 childVar = iter.next();
        int declarationTypeVariableIndex = childVar.getDeclarationTypeVariableIndex();

        if (declarationTypeVariableIndex
            != CollectionElementVariable2.NOT_DECLARED_TYPE_VARIABLE_INDEX)
          setElemStructure(childVar, parms[declarationTypeVariableIndex]);
      }
    } else {
      for (Iterator<CollectionElementVariable2> iter = cvs.iterator(); iter.hasNext(); ) {
        CollectionElementVariable2 childVar = iter.next();
        int declarationTypeVariableIndex = childVar.getDeclarationTypeVariableIndex();

        if (declarationTypeVariableIndex
            != CollectionElementVariable2.NOT_DECLARED_TYPE_VARIABLE_INDEX)
          setElemStructure(childVar, ParametricStructure.NONE);
      }
    }
    List<CollectionElementVariable2> result =
        new ArrayList<CollectionElementVariable2>(cvs.size() * 2); // roughly
    for (Iterator<CollectionElementVariable2> iter = cvs.iterator(); iter.hasNext(); ) {
      CollectionElementVariable2 childVar = iter.next();
      int declarationTypeVariableIndex = childVar.getDeclarationTypeVariableIndex();

      if (declarationTypeVariableIndex
          != CollectionElementVariable2.NOT_DECLARED_TYPE_VARIABLE_INDEX) {
        result.add(childVar);
        result.addAll(createVariablesFor(childVar));
      }
    }
    return result;
  }

