    private boolean areLocalsUsedIn(Expression fieldInitializer, List<VariableDeclarationFragment> fieldsToInitialize) {
        Set<IBinding> localsUsed= new HashSet<IBinding>(0);
        collectRefrencedVariables(fieldInitializer, localsUsed);

        ITypeBinding anonType= fAnonymousInnerClassNode.resolveBinding();

        for (Iterator<IBinding> iterator= localsUsed.iterator(); iterator.hasNext();) {
			IVariableBinding curr= (IVariableBinding) iterator.next();
			if (isBindingToTemp(curr)) { // reference a local from outside
				return true;
			} else if (curr.isField() && (curr.getDeclaringClass() == anonType) && fieldsToInitialize.contains(fCompilationUnitNode.findDeclaringNode(curr))) {
				return true; // references a field that references a local from outside
			}
		}
        return false;
    }

