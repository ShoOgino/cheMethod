  private static void addNewFieldForType(
      ICompilationUnit targetCU,
      ITypeBinding binding,
      ITypeBinding senderDeclBinding,
      SimpleName simpleName,
      boolean isWriteAccess,
      boolean mustBeConst,
      Collection<ICommandAccess> proposals) {
    String name = simpleName.getIdentifier();
    String nameLabel = BasicElementLabels.getJavaElementName(name);
    String label;
    Image image;
    if (senderDeclBinding.isEnum() && !isWriteAccess) {
      label =
          Messages.format(
              CorrectionMessages.UnresolvedElementsSubProcessor_createenum_description,
              new Object[] {nameLabel, ASTResolving.getTypeSignature(senderDeclBinding)});
      image = JavaPluginImages.get(JavaPluginImages.IMG_FIELD_PUBLIC);
      proposals.add(
          new NewVariableCorrectionProposal(
              label,
              targetCU,
              NewVariableCorrectionProposal.ENUM_CONST,
              simpleName,
              senderDeclBinding,
              10,
              image));
    } else {
      if (!mustBeConst) {
        if (binding == null) {
          label =
              Messages.format(
                  CorrectionMessages.UnresolvedElementsSubProcessor_createfield_description,
                  nameLabel);
          image = JavaPluginImages.get(JavaPluginImages.IMG_FIELD_PRIVATE);
        } else {
          label =
              Messages.format(
                  CorrectionMessages.UnresolvedElementsSubProcessor_createfield_other_description,
                  new Object[] {nameLabel, ASTResolving.getTypeSignature(senderDeclBinding)});
          image = JavaPluginImages.get(JavaPluginImages.IMG_FIELD_PUBLIC);
        }
        int fieldRelevance =
            StubUtility.hasFieldName(targetCU.getJavaProject(), name)
                ? IProposalRelevance.CREATE_FIELD_PREFIX_OR_SUFFIX_MATCH
                : IProposalRelevance.CREATE_FIELD;
        proposals.add(
            new NewVariableCorrectionProposal(
                label,
                targetCU,
                NewVariableCorrectionProposal.FIELD,
                simpleName,
                senderDeclBinding,
                fieldRelevance,
                image));
      }

      if (!isWriteAccess && !senderDeclBinding.isAnonymous()) {
        if (binding == null) {
          label =
              Messages.format(
                  CorrectionMessages.UnresolvedElementsSubProcessor_createconst_description,
                  nameLabel);
          image = JavaPluginImages.get(JavaPluginImages.IMG_FIELD_PRIVATE);
        } else {
          label =
              Messages.format(
                  CorrectionMessages.UnresolvedElementsSubProcessor_createconst_other_description,
                  new Object[] {nameLabel, ASTResolving.getTypeSignature(senderDeclBinding)});
          image = JavaPluginImages.get(JavaPluginImages.IMG_FIELD_PUBLIC);
        }
        int constRelevance =
            StubUtility.hasConstantName(targetCU.getJavaProject(), name)
                ? IProposalRelevance.CREATE_CONSTANT_PREFIX_OR_SUFFIX_MATCH
                : IProposalRelevance.CREATE_CONSTANT;
        proposals.add(
            new NewVariableCorrectionProposal(
                label,
                targetCU,
                NewVariableCorrectionProposal.CONST_FIELD,
                simpleName,
                senderDeclBinding,
                constRelevance,
                image));
      }
    }
  }

