  /**
   * Tests if a method is a subsignature of another method.
   *
   * @param overriding overriding method (m1)
   * @param overridden overridden method (m2)
   * @return <code>true</code> iff the method <code>m1</code> is a subsignature of the method <code>
   *     m2</code>. This is one of the requirements for m1 to override m2. Accessibility and return
   *     types are not taken into account. Note that subsignature is <em>not</em> symmetric!
   * @throws JavaModelException if a problem occurs
   */
  public boolean isSubsignature(IMethod overriding, IMethod overridden) throws JavaModelException {
    if (!overridden.getElementName().equals(overriding.getElementName())) {
      return false;
    }
    int nParameters = overridden.getNumberOfParameters();
    if (nParameters != overriding.getNumberOfParameters()) {
      return false;
    }

    if (!hasCompatibleTypeParameters(overriding, overridden)) {
      return false;
    }

    return nParameters == 0 || hasCompatibleParameterTypes(overriding, overridden);
  }

