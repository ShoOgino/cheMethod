  /**
   * Returns the display string for a java type signature.
   *
   * @param typeSignature the type signature to create a display name for
   * @return the display name for <code>typeSignature</code>
   * @throws IllegalArgumentException if <code>typeSignature</code> is not a valid signature
   * @see org.eclipse.jdt.core.Signature#toCharArray(char[])
   * @see org.eclipse.jdt.core.Signature#getSimpleName(char[])
   */
  private char[] createTypeDisplayName(char[] typeSignature) throws IllegalArgumentException {
    char[] displayName = Signature.getSimpleName(Signature.toCharArray(typeSignature));

    // XXX see https://bugs.eclipse.org/bugs/show_bug.cgi?id=84675
    boolean useShortGenerics = false;
    if (useShortGenerics) {
      StringBuffer buf = new StringBuffer();
      buf.append(displayName);
      int pos;
      do {
        pos = buf.indexOf("? extends "); //$NON-NLS-1$
        if (pos >= 0) {
          buf.replace(pos, pos + 10, "+"); //$NON-NLS-1$
        } else {
          pos = buf.indexOf("? super "); //$NON-NLS-1$
          if (pos >= 0) buf.replace(pos, pos + 8, "-"); //$NON-NLS-1$
        }
      } while (pos >= 0);
      return buf.toString().toCharArray();
    }
    return displayName;
  }

