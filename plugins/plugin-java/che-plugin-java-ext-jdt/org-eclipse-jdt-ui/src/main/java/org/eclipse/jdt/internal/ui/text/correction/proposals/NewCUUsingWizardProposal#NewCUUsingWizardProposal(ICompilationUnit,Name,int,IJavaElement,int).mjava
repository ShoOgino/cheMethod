  public NewCUUsingWizardProposal(
      ICompilationUnit cu, Name node, int typeKind, IJavaElement typeContainer, int severity) {
    super("", null, severity, null); // $NON-NLS-1$

    fCompilationUnit = cu;
    fNode = node;
    fTypeKind = typeKind;
    fTypeContainer = typeContainer;
    fTypeNameWithParameters = getTypeName(typeKind, node);

    fCreatedType = null;

    String containerName = ASTNodes.getQualifier(node);
    String typeName = fTypeNameWithParameters;
    String containerLabel = BasicElementLabels.getJavaElementName(containerName);
    String typeLabel = BasicElementLabels.getJavaElementName(typeName);
    boolean isInnerType = typeContainer instanceof IType;
    switch (typeKind) {
      case K_CLASS:
        setImage(JavaPluginImages.get(JavaPluginImages.IMG_OBJS_CLASS));
        if (isInnerType) {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerclass_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerclass_intype_description,
                    new String[] {typeLabel, containerLabel}));
          }
        } else {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages.NewCUCompletionUsingWizardProposal_createclass_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createclass_inpackage_description,
                    new String[] {typeLabel, containerLabel}));
          }
        }
        break;
      case K_INTERFACE:
        setImage(JavaPluginImages.get(JavaPluginImages.IMG_OBJS_INTERFACE));
        if (isInnerType) {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerinterface_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerinterface_intype_description,
                    new String[] {typeLabel, containerLabel}));
          }
        } else {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinterface_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinterface_inpackage_description,
                    new String[] {typeLabel, containerLabel}));
          }
        }
        break;
      case K_ENUM:
        setImage(JavaPluginImages.get(JavaPluginImages.IMG_OBJS_ENUM));
        if (isInnerType) {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerenum_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerenum_intype_description,
                    new String[] {typeLabel, containerLabel}));
          }
        } else {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages.NewCUCompletionUsingWizardProposal_createenum_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createenum_inpackage_description,
                    new String[] {typeLabel, containerLabel}));
          }
        }
        break;
      case K_ANNOTATION:
        setImage(JavaPluginImages.get(JavaPluginImages.IMG_OBJS_ANNOTATION));
        if (isInnerType) {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerannotation_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createinnerannotation_intype_description,
                    new String[] {typeLabel, containerLabel}));
          }
        } else {
          if (containerName.length() == 0) {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createannotation_description,
                    typeLabel));
          } else {
            setDisplayName(
                Messages.format(
                    CorrectionMessages
                        .NewCUCompletionUsingWizardProposal_createannotation_inpackage_description,
                    new String[] {typeLabel, containerLabel}));
          }
        }
        break;
      default:
        throw new IllegalArgumentException("Unknown type kind"); // $NON-NLS-1$
    }
    fShowDialog = true;
  }

