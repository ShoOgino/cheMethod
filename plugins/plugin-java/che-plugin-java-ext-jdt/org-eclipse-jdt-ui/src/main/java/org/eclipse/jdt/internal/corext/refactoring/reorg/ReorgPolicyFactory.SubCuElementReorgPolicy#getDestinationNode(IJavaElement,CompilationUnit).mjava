    /*
     * Get the 'destination' in 'target' as ASTNode or 'null'
     */
    private ASTNode getDestinationNode(IJavaElement destination, CompilationUnit target)
        throws JavaModelException {
      switch (destination.getElementType()) {
        case IJavaElement.INITIALIZER:
          return ASTNodeSearchUtil.getInitializerNode((IInitializer) destination, target);
        case IJavaElement.FIELD:
          return ASTNodeSearchUtil.getFieldOrEnumConstantDeclaration((IField) destination, target);
        case IJavaElement.METHOD:
          return ASTNodeSearchUtil.getMethodOrAnnotationTypeMemberDeclarationNode(
              (IMethod) destination, target);
        case IJavaElement.TYPE:
          IType typeDestination = (IType) destination;
          if (typeDestination.isAnonymous()) {
            return ASTNodeSearchUtil.getClassInstanceCreationNode(typeDestination, target)
                .getAnonymousClassDeclaration();
          } else {
            return ASTNodeSearchUtil.getAbstractTypeDeclarationNode(typeDestination, target);
          }
        case IJavaElement.COMPILATION_UNIT:
          IType mainType = JavaElementUtil.getMainType((ICompilationUnit) destination);
          if (mainType != null) {
            return ASTNodeSearchUtil.getAbstractTypeDeclarationNode(mainType, target);
          }
          // $FALL-THROUGH$
        default:
          return null;
      }
    }

