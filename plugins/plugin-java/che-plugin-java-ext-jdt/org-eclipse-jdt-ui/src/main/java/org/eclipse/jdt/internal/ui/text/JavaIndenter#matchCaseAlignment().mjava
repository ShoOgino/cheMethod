  /**
   * Returns as a reference any previous <code>switch</code> labels (<code>case</code> or <code>
   * default</code>) or the offset of the brace that scopes the switch statement. Sets <code>fIndent
   * </code> to <code>prefCaseIndent</code> upon a match.
   *
   * @return the reference offset for a <code>switch</code> label
   */
  private int matchCaseAlignment() {
    while (true) {
      nextToken();
      switch (fToken) {
          // invalid cases: another case label or an LBRACE must come before a case
          // -> bail out with the current position
        case Symbols.TokenLPAREN:
        case Symbols.TokenLBRACKET:
        case Symbols.TokenEOF:
          return fPosition;
        case Symbols.TokenLBRACE:
          // opening brace of switch statement
          fIndent = fPrefs.prefCaseIndent;
          return fPosition;
        case Symbols.TokenCASE:
        case Symbols.TokenDEFAULT:
          // align with previous label
          fIndent = 0;
          return fPosition;

          // scopes: skip them
        case Symbols.TokenRPAREN:
        case Symbols.TokenRBRACKET:
        case Symbols.TokenRBRACE:
        case Symbols.TokenGREATERTHAN:
          skipScope();
          break;

        default:
          // keep searching
          continue;
      }
    }
  }

