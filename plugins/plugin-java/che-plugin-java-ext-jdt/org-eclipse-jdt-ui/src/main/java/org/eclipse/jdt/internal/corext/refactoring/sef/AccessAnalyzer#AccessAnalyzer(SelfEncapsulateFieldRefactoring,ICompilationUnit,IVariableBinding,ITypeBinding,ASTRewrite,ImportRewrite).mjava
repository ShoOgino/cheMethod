  public AccessAnalyzer(
      SelfEncapsulateFieldRefactoring refactoring,
      ICompilationUnit unit,
      IVariableBinding field,
      ITypeBinding declaringClass,
      ASTRewrite rewriter,
      ImportRewrite importRewrite) {
    Assert.isNotNull(refactoring);
    Assert.isNotNull(unit);
    Assert.isNotNull(field);
    Assert.isNotNull(declaringClass);
    Assert.isNotNull(rewriter);
    Assert.isNotNull(importRewrite);
    fCUnit = unit;
    fFieldBinding = field.getVariableDeclaration();
    fDeclaringClassBinding = declaringClass;
    fRewriter = rewriter;
    fImportRewriter = importRewrite;
    fGroupDescriptions = new ArrayList<TextEditGroup>();
    fGetter = refactoring.getGetterName();
    fSetter = refactoring.getSetterName();
    fEncapsulateDeclaringClass = refactoring.getEncapsulateDeclaringClass();
    try {
      fIsFieldFinal = Flags.isFinal(refactoring.getField().getFlags());
    } catch (JavaModelException e) {
      // assume non final field
    }
    fStatus = new RefactoringStatus();
  }

