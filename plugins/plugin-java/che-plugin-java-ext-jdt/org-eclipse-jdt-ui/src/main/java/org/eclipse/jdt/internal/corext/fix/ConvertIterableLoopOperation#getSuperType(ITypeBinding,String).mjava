  /**
   * Returns the supertype of the given type with the qualified name.
   *
   * @param binding the binding of the type
   * @param name the qualified name of the supertype
   * @return the supertype, or <code>null</code>
   */
  private static ITypeBinding getSuperType(final ITypeBinding binding, final String name) {

    if (binding.isArray() || binding.isPrimitive()) return null;

    if (binding.getQualifiedName().startsWith(name)) return binding;

    final ITypeBinding type = binding.getSuperclass();
    if (type != null) {
      final ITypeBinding result = getSuperType(type, name);
      if (result != null) return result;
    }
    final ITypeBinding[] types = binding.getInterfaces();
    for (int index = 0; index < types.length; index++) {
      final ITypeBinding result = getSuperType(types[index], name);
      if (result != null) return result;
    }
    return null;
  }

