  /**
   * Creates a new promote temp to field refactoring.
   *
   * @param declaration the variable declaration node to convert to a field
   */
  public PromoteTempToFieldRefactoring(VariableDeclaration declaration) {
    Assert.isTrue(declaration != null);
    fTempDeclarationNode = declaration;
    IVariableBinding resolveBinding = declaration.resolveBinding();
    Assert.isTrue(
        resolveBinding != null && !resolveBinding.isParameter() && !resolveBinding.isField());

    ASTNode root = declaration.getRoot();
    Assert.isTrue(root instanceof CompilationUnit);
    fCompilationUnitNode = (CompilationUnit) root;

    IJavaElement input = fCompilationUnitNode.getJavaElement();
    Assert.isTrue(input instanceof ICompilationUnit);
    fCu = (ICompilationUnit) input;

    fSelectionStart = declaration.getStartPosition();
    fSelectionLength = declaration.getLength();

    fFieldName = ""; // $NON-NLS-1$
    fVisibility = Modifier.PRIVATE;
    fDeclareStatic = false;
    fDeclareFinal = false;
    fInitializeIn = INITIALIZE_IN_METHOD;
    fLinkedProposalModel = null;
  }

