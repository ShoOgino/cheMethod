    public static ITypeBinding getTypeBinding(CompilationUnit root, IType type) throws JavaModelException {
        if (type.isAnonymous()) {
            final IJavaElement parent = type.getParent();
            if (parent instanceof IField && Flags.isEnum(((IMember)parent).getFlags())) {
                final EnumConstantDeclaration constant =
                        (EnumConstantDeclaration)NodeFinder.perform(root, ((ISourceReference)parent).getSourceRange());
                if (constant != null) {
                    final AnonymousClassDeclaration declaration = constant.getAnonymousClassDeclaration();
                    if (declaration != null)
                        return declaration.resolveBinding();
                }
            } else {
                final ClassInstanceCreation creation =
                        (ClassInstanceCreation)getParent(NodeFinder.perform(root, type.getNameRange()), ClassInstanceCreation.class);
                if (creation != null)
                    return creation.resolveTypeBinding();
            }
        } else {
            final AbstractTypeDeclaration declaration =
                    (AbstractTypeDeclaration)getParent(NodeFinder.perform(root, type.getNameRange()), AbstractTypeDeclaration.class);
            if (declaration != null)
                return declaration.resolveBinding();
        }
        return null;
    }

