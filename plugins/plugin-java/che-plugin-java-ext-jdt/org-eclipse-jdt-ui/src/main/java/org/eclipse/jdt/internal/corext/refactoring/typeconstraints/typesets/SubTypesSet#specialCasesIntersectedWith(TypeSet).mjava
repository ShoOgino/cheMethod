	/* (non-Javadoc)
	 * @see org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet#intersectedWith(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet)
	 */
	@Override
	protected TypeSet specialCasesIntersectedWith(TypeSet s2) {
		if (fUpperBounds.equals(s2))
			return s2; // xsect(subTypes(A),A) = A
		if (s2 instanceof SubTypesSet) {
			SubTypesSet st2= (SubTypesSet) s2;

			if (fUpperBounds.isSingleton() && st2.fUpperBounds.isSingleton()) {
				TType t1= this.fUpperBounds.anyMember();
				TType t2= st2.fUpperBounds.anyMember();

				if (TTypes.canAssignTo(t2, t1))
					return new SubTypesSet(st2.fUpperBounds);
			} else if (fUpperBounds instanceof SubTypesSet) {
				// xsect(subTypes(superTypes(A)), subTypes(A)) = subTypes(A)
				SubTypesSet myUpperSubTypes= (SubTypesSet) fUpperBounds;

				if (myUpperSubTypes.lowerBound().equals(st2.lowerBound()))
					return st2;
			}
		}
		if (s2 instanceof SubTypesOfSingleton) {
			SubTypesOfSingleton st2= (SubTypesOfSingleton) s2;

			if (fUpperBounds.isSingleton()) {
				TType t1= this.fUpperBounds.anyMember();
				TType t2= st2.uniqueUpperBound();

				if (TTypes.canAssignTo(t2, t1))
					return getTypeSetEnvironment().createSubTypesOfSingleton(t2);
			} else if (fUpperBounds instanceof SubTypesOfSingleton) {
				// xsect(subTypes(superTypes(A)), subTypes(A)) = subTypes(A)
				SubTypesOfSingleton myUpperSubTypes= (SubTypesOfSingleton) fUpperBounds;

				if (myUpperSubTypes.uniqueLowerBound().equals(st2.uniqueLowerBound()))
					return st2;
			}
		}

		if (s2 instanceof SuperTypesSet) {
			SuperTypesSet st2= (SuperTypesSet) s2;

			if (fUpperBounds.equals(st2.lowerBound()))
				return fUpperBounds;

			if (fUpperBounds instanceof TypeSetIntersection) {
				// (intersect (subTypes (intersect (superTypes A) B))
				//            (superTypes A)) =>
				// (intersect (superTypes A) (subTypes B))
				TypeSetIntersection lbXSect= (TypeSetIntersection) fUpperBounds;
				TypeSet xsectLeft= lbXSect.getLHS();
				TypeSet xsectRight= lbXSect.getRHS();

				if (xsectLeft.equals(st2.lowerBound()))
					return new TypeSetIntersection(s2, new SubTypesSet(xsectRight));
			}
		}
		return null;
	}

