  /**
   * Creates a {@link ASTRewrite#createCopyTarget(ASTNode) copy} of <code>type</code> and adds
   * <code>extraDimensions</code> to it.
   *
   * @param type the type to copy
   * @param extraDimensions the dimensions to add
   * @param rewrite the ASTRewrite with which to create new nodes
   * @return the copy target with added dimensions
   */
  public static Type copyTypeAndAddDimensions(
      Type type, List<Dimension> extraDimensions, ASTRewrite rewrite) {
    AST ast = rewrite.getAST();
    if (extraDimensions.isEmpty()) {
      return (Type) rewrite.createCopyTarget(type);
    }

    ArrayType result;
    if (type instanceof ArrayType) {
      ArrayType arrayType = (ArrayType) type;
      Type varElementType = (Type) rewrite.createCopyTarget(arrayType.getElementType());
      result = ast.newArrayType(varElementType, 0);
      result.dimensions().addAll(copyDimensions(extraDimensions, rewrite));
      result.dimensions().addAll(copyDimensions(arrayType.dimensions(), rewrite));
    } else {
      Type elementType = (Type) rewrite.createCopyTarget(type);
      result = ast.newArrayType(elementType, 0);
      result.dimensions().addAll(copyDimensions(extraDimensions, rewrite));
    }
    return result;
  }

