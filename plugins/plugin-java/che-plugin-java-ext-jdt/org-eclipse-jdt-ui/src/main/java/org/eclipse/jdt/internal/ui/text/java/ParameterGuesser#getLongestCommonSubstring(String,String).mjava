  /**
   * Returns the longest common substring of two strings.
   *
   * @param first the first string
   * @param second the second string
   * @return the longest common substring
   */
  private static String getLongestCommonSubstring(String first, String second) {

    String shorter = (first.length() <= second.length()) ? first : second;
    String longer = shorter == first ? second : first;

    int minLength = shorter.length();

    StringBuffer pattern = new StringBuffer(shorter.length() + 2);
    String longestCommonSubstring = ""; // $NON-NLS-1$

    for (int i = 0; i < minLength; i++) {
      for (int j = i + 1; j <= minLength; j++) {
        if (j - i < longestCommonSubstring.length()) continue;

        String substring = shorter.substring(i, j);
        pattern.setLength(0);
        pattern.append('*');
        pattern.append(substring);
        pattern.append('*');

        StringMatcher matcher = new StringMatcher(pattern.toString(), true, false);
        if (matcher.match(longer)) longestCommonSubstring = substring;
      }
    }

    return longestCommonSubstring;
  }

