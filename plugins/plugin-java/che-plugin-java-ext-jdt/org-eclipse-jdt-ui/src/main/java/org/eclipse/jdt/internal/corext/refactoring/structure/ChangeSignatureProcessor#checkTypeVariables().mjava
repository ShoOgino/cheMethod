  private RefactoringStatus checkTypeVariables() {
    if (fRippleMethods.length == 1) return null;

    RefactoringStatus result = new RefactoringStatus();
    if (fReturnTypeInfo.isTypeNameChanged() && fReturnTypeInfo.getNewTypeBinding() != null) {
      HashSet<ITypeBinding> typeVariablesCollector = new HashSet<ITypeBinding>();
      collectTypeVariables(fReturnTypeInfo.getNewTypeBinding(), typeVariablesCollector);
      if (typeVariablesCollector.size() != 0) {
        ITypeBinding first = typeVariablesCollector.iterator().next();
        String msg =
            Messages.format(
                RefactoringCoreMessages
                    .ChangeSignatureRefactoring_return_type_contains_type_variable,
                new String[] {
                  BasicElementLabels.getJavaElementName(fReturnTypeInfo.getNewTypeName()),
                  BasicElementLabels.getJavaElementName(first.getName())
                });
        result.addError(msg);
      }
    }

    for (Iterator<ParameterInfo> iter = getNotDeletedInfos().iterator(); iter.hasNext(); ) {
      ParameterInfo info = iter.next();
      if (info.isTypeNameChanged() && info.getNewTypeBinding() != null) {
        HashSet<ITypeBinding> typeVariablesCollector = new HashSet<ITypeBinding>();
        collectTypeVariables(info.getNewTypeBinding(), typeVariablesCollector);
        if (typeVariablesCollector.size() != 0) {
          ITypeBinding first = typeVariablesCollector.iterator().next();
          String msg =
              Messages.format(
                  RefactoringCoreMessages
                      .ChangeSignatureRefactoring_parameter_type_contains_type_variable,
                  new String[] {
                    BasicElementLabels.getJavaElementName(info.getNewTypeName()),
                    BasicElementLabels.getJavaElementName(info.getNewName()),
                    BasicElementLabels.getJavaElementName(first.getName())
                  });
          result.addError(msg);
        }
      }
    }
    return result;
  }

