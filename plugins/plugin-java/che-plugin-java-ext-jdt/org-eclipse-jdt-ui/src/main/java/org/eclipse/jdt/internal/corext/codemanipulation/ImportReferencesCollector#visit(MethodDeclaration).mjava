	/*
	 * @see ASTVisitor#visit(MethodDeclaration)
	 */
	@Override
	public boolean visit(MethodDeclaration node) {
		if (!isAffected(node)) {
			return false;
		}
		doVisitNode(node.getJavadoc());

		doVisitChildren(node.modifiers());
		doVisitChildren(node.typeParameters());

		if (!node.isConstructor()) {
			doVisitNode(node.getReturnType2());
		}
		// name not visited
		
		int apiLevel= node.getAST().apiLevel();
		if (apiLevel >= AST.JLS8) {
			doVisitNode(node.getReceiverType());
		}
		// receiverQualifier not visited:
		//   Enclosing class names cannot be shadowed by an import (qualification is always redundant).
		doVisitChildren(node.parameters());
		if (apiLevel >= AST.JLS8) {
			doVisitChildren(node.extraDimensions());
			doVisitChildren(node.thrownExceptionTypes());
		} else {
			Iterator<Name> iter= getThrownExceptions(node).iterator();
			while (iter.hasNext()) {
				typeRefFound(iter.next());
			}
		}
		if (!fSkipMethodBodies) {
			doVisitNode(node.getBody());
		}
		return false;
	}

