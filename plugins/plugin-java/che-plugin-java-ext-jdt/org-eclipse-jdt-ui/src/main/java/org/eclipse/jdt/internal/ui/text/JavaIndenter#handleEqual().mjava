  /**
   * Checks if the statement at position is itself a continuation of the previous, else sets the
   * indentation to Continuation Indent.
   *
   * @return the position of the token
   * @since 3.7
   */
  private int handleEqual() {
    try {
      //If this line is itself continuation of the previous then do nothing
      IRegion line = fDocument.getLineInformationOfOffset(fPosition);
      int nonWS =
          fScanner.findNonWhitespaceBackward(line.getOffset(), JavaHeuristicScanner.UNBOUND);
      if (nonWS != Symbols.TokenEOF) {
        int tokenAtPreviousLine = fScanner.nextToken(nonWS, nonWS + 1);
        if (tokenAtPreviousLine != Symbols.TokenSEMICOLON
            && tokenAtPreviousLine != Symbols.TokenRBRACE
            && tokenAtPreviousLine != Symbols.TokenLBRACE
            && tokenAtPreviousLine != Symbols.TokenEOF) return fPosition;
      }
    } catch (BadLocationException e) {
      return fPosition;
    }

    fIndent = fPrefs.prefContinuationIndent;
    return fPosition;
  }

