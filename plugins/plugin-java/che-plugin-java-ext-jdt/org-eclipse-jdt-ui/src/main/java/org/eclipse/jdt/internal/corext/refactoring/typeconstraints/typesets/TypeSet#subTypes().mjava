	/**
	 * @return a new TypeSet representing the set of all sub-types of the
	 * types in the receiver.
	 */
	public TypeSet subTypes() {
		if (isUniverse() || contains(getJavaLangObject()))
			return getTypeSetEnvironment().getUniverseTypeSet();

		if (isSingleton())
			return possiblyArraySubTypeSetFor(anyMember());

		return getTypeSetEnvironment().createSubTypesSet(this);
	}

