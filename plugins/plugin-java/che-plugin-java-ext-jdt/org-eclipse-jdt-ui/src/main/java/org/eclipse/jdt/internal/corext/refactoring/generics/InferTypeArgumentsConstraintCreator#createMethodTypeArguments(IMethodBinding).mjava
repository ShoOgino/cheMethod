  /** @return a map from type variable key to type variable constraint variable */
  private Map<String, IndependentTypeVariable2> createMethodTypeArguments(
      IMethodBinding methodBinding) {
    ITypeBinding[] methodTypeParameters = methodBinding.getMethodDeclaration().getTypeParameters();
    Map<String, IndependentTypeVariable2> methodTypeVariables;
    if (methodTypeParameters.length == 0) {
      methodTypeVariables = Collections.emptyMap();
    } else {
      methodTypeVariables = new HashMap<String, IndependentTypeVariable2>();
      for (int i = 0; i < methodTypeParameters.length; i++) {
        ITypeBinding methodTypeParameter = methodTypeParameters[i];
        //TODO: typeVariable does not need a type binding - only used in equality constraints
        TypeVariable typeVariable = (TypeVariable) fTCModel.createTType(methodTypeParameter);
        IndependentTypeVariable2 typeVariableCv =
            fTCModel.makeIndependentTypeVariable(typeVariable);
        methodTypeVariables.put(methodTypeParameter.getKey(), typeVariableCv);
      }
    }
    return methodTypeVariables;
  }

