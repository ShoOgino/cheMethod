	public static void addNLSProposals(IInvocationContext context, IProblemLocation problem, Collection<ICommandAccess> proposals) throws
																																   CoreException {
//		final ICompilationUnit cu= context.getCompilationUnit();
//		if (cu == null || !cu.exists()){
//			return;
//		}
//		String name= CorrectionMessages.LocalCorrectionsSubProcessor_externalizestrings_description;

//		ChangeCorrectionProposal proposal= new ChangeCorrectionProposal(name, null, IProposalRelevance.EXTERNALIZE_STRINGS, JavaPluginImages
//				.get(JavaPluginImages.IMG_CORRECTION_CHANGE)) {
//			@Override
//			public void apply(IDocument document) {
//				ExternalizeWizard.open(cu, JavaPlugin.getActiveWorkbenchShell());
//			}
//			@Override
//			public Object getAdditionalProposalInfo(IProgressMonitor monitor) {
//				return CorrectionMessages.LocalCorrectionsSubProcessor_externalizestrings_additional_info;
//			}
//
//		};
//		proposals.add(proposal);

//		IProposableFix fix= StringFix.createFix(context.getASTRoot(), problem, false, true);
//		if (fix != null) {
//			Image image= JavaPluginImages.get(JavaPluginImages.IMG_OBJS_NLS_NEVER_TRANSLATE);
//			Map<String, String> options= new Hashtable<String, String>();
//			options.put(CleanUpConstants.ADD_MISSING_NLS_TAGS, CleanUpOptions.TRUE);
//			FixCorrectionProposal
//					addNLS= new FixCorrectionProposal(fix, new StringCleanUp(options), IProposalRelevance.ADD_MISSING_NLS_TAGS, image, context);
//			addNLS.setCommandId(ADD_NON_NLS_ID);
//			proposals.add(addNLS);
//		}
	}

