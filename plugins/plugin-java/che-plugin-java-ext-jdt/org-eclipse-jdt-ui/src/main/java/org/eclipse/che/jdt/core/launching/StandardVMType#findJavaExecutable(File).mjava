  /**
   * Starting in the specified VM install location, attempt to find the 'java' executable file. If
   * found, return the corresponding <code>File</code> object, otherwise return <code>null</code>.
   *
   * @param vmInstallLocation the {@link java.io.File} location to look in
   * @return the {@link java.io.File} for the Java executable or <code>null</code>
   */
  public static File findJavaExecutable(File vmInstallLocation) {
    // Try each candidate in order.  The first one found wins.  Thus, the order
    // of fgCandidateJavaLocations and fgCandidateJavaFiles is significant.
    for (int i = 0; i < fgCandidateJavaFiles.length; i++) {
      for (int j = 0; j < fgCandidateJavaLocations.length; j++) {
        File javaFile =
            new File(vmInstallLocation, fgCandidateJavaLocations[j] + fgCandidateJavaFiles[i]);
        if (javaFile.isFile()) {
          return javaFile;
        }
      }
    }
    return null;
  }

