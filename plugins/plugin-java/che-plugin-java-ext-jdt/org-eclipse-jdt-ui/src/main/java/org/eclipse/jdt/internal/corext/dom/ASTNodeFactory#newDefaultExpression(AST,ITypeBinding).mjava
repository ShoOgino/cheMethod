  /**
   * Returns an expression that is assignable to the given type binding. <code>null</code> is
   * returned if the type is the 'void' type.
   *
   * @param ast The AST to create the expression for
   * @param type The type binding to which the returned expression is compatible to
   * @return the Null-literal for reference types, a boolean-literal for a boolean type, a number
   *     literal for primitive types or <code>null</code> if the type is void.
   */
  public static Expression newDefaultExpression(AST ast, ITypeBinding type) {
    if (type.isPrimitive()) {
      String name = type.getName();
      if ("boolean".equals(name)) { //$NON-NLS-1$
        return ast.newBooleanLiteral(false);
      } else if ("void".equals(name)) { //$NON-NLS-1$
        return null;
      } else {
        return ast.newNumberLiteral("0"); //$NON-NLS-1$
      }
    }
    return ast.newNullLiteral();
  }

