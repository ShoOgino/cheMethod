    private List<SearchResultGroup> getReferencesToTypesInNamesakes(
        IProgressMonitor pm, RefactoringStatus status) throws CoreException {
      pm.beginTask("", 2); //$NON-NLS-1$
      // e.g. renaming B-p.p; project C requires B, X and has ref to B-p.p and X-p.p;
      // goal: find refs to X-p.p in CUs from fOccurrences

      // (1) find namesake packages (scope: all packages referenced by CUs in fOccurrences and fPackage)
      IJavaElement[] elements = new IJavaElement[fOccurrences.length + 1];
      for (int i = 0; i < fOccurrences.length; i++) {
        elements[i] = fOccurrences[i].getCompilationUnit();
      }
      elements[fOccurrences.length] = fPackage;
      IJavaSearchScope namesakePackagesScope =
          RefactoringScopeFactory.createReferencedScope(elements);
      IPackageFragment[] namesakePackages =
          getNamesakePackages(namesakePackagesScope, new SubProgressMonitor(pm, 1));
      if (namesakePackages.length == 0) {
        pm.done();
        return new ArrayList<SearchResultGroup>(0);
      }

      // (2) find refs in fOccurrences and fPackage to namesake packages
      // (from fOccurrences (without namesakes): may have shared star import)
      // (from fPackage: may have unimported references to types of namesake packages)
      IType[] typesToSearch = getTypesInPackages(namesakePackages);
      if (typesToSearch.length == 0) {
        pm.done();
        return new ArrayList<SearchResultGroup>(0);
      }
      SearchPattern pattern =
          RefactoringSearchEngine.createOrPattern(typesToSearch, IJavaSearchConstants.REFERENCES);
      IJavaSearchScope scope = getPackageAndOccurrencesWithoutNamesakesScope();
      SearchResultGroup[] results =
          RefactoringSearchEngine.search(pattern, scope, new SubProgressMonitor(pm, 1), status);
      pm.done();
      return new ArrayList<SearchResultGroup>(Arrays.asList(results));
    }

