  /**
   * Appends the label for a class file. Considers the CF_* flags.
   *
   * @param classFile the element to render
   * @param flags the rendering flags. Flags with names starting with 'CF_' are considered.
   */
  public void appendClassFileLabel(IClassFile classFile, long flags) {
    if (getFlag(flags, JavaElementLabels.CF_QUALIFIED)) {
      IPackageFragment pack = (IPackageFragment) classFile.getParent();
      if (!pack.isDefaultPackage()) {
        appendPackageFragmentLabel(pack, (flags & QUALIFIER_FLAGS));
        fBuffer.append('.');
      }
    }
    fBuffer.append(classFile.getElementName());

    if (getFlag(flags, JavaElementLabels.CF_POST_QUALIFIED)) {
      int offset = fBuffer.length();
      fBuffer.append(JavaElementLabels.CONCAT_STRING);
      appendPackageFragmentLabel((IPackageFragment) classFile.getParent(), flags & QUALIFIER_FLAGS);
      //			if (getFlag(flags, JavaElementLabels.COLORIZE)) {
      //				fBuffer.setStyle(offset, fBuffer.length() - offset, QUALIFIER_STYLE);
      //			}
    }
  }

