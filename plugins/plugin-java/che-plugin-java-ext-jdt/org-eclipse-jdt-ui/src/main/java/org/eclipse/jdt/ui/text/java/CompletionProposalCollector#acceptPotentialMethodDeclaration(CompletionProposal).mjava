  private void acceptPotentialMethodDeclaration(CompletionProposal proposal) {
    try {
      IJavaElement enclosingElement = null;
      //			if (getContext().isExtended()) {
      //				enclosingElement= getContext().getEnclosingElement();
      //			} else if (fCompilationUnit != null) {
      // kept for backward compatibility: CU is not reconciled at this moment, information is missing (bug 70005)
      enclosingElement = fCompilationUnit.getElementAt(proposal.getCompletionLocation() + 1);
      //			}
      if (enclosingElement == null) return;
      IType type = (IType) enclosingElement.getAncestor(IJavaElement.TYPE);
      if (type != null) {
        String prefix = String.valueOf(proposal.getName());
        int completionStart = proposal.getReplaceStart();
        int completionEnd = proposal.getReplaceEnd();
        int relevance = computeRelevance(proposal);

        GetterSetterCompletionProposal.evaluateProposals(
            type,
            prefix,
            completionStart,
            completionEnd - completionStart,
            relevance + 2,
            fSuggestedMethodNames,
            fJavaProposals);
        MethodDeclarationCompletionProposal.evaluateProposals(
            type,
            prefix,
            completionStart,
            completionEnd - completionStart,
            relevance,
            fSuggestedMethodNames,
            fJavaProposals);
      }
    } catch (CoreException e) {
      JavaPlugin.log(e);
    }
  }

