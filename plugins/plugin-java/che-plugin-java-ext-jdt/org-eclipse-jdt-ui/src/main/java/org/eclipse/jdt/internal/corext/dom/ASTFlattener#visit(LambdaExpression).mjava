    /*
     * @see ASTVisitor#visit(LambdaExpression)
     */
    @Override
    public boolean visit(LambdaExpression node) {
        boolean hasParentheses = node.hasParentheses();
        if (hasParentheses)
            this.fBuffer.append('(');
        for (Iterator<? extends VariableDeclaration> it = node.parameters().iterator(); it.hasNext(); ) {
            VariableDeclaration v = it.next();
            v.accept(this);
            if (it.hasNext()) {
                this.fBuffer.append(",");//$NON-NLS-1$
            }
        }
        if (hasParentheses)
            this.fBuffer.append(')');
        this.fBuffer.append(" -> "); //$NON-NLS-1$
        node.getBody().accept(this);
        return false;
    }

