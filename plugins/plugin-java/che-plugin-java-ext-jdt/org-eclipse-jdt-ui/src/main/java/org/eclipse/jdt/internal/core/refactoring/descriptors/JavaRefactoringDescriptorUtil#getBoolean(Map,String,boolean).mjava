	/**
	 * Retrieves a <code>boolean</code> attribute from map. If the attribute does not exist it returns the default value
	 *
	 * @param map the map with <code>&lt;String, String&gt;</code> mapping
	 * @param attribute the key in the map
	 * @param defaultValue the default value to use if the attribute does not exist
	 * @return the <code>boolean</code> value of the attribute or the specified default value if the attribute does not exist
	 *
	 * @throws IllegalArgumentException if the attribute does not contain a valid value
	 */
	public static boolean getBoolean(Map map, String attribute, boolean defaultValue) throws IllegalArgumentException {
		String value= getString(map, attribute, true);
		if (value == null)
			return defaultValue;
		value= value.toLowerCase();
		//Boolean.valueOf(value) does not complain about wrong values
		if (LOWER_CASE_TRUE.equals(value))
			return true;
		if (LOWER_CASE_FALSE.equals(value))
			return false;
		throw new IllegalArgumentException("The attribute '" + attribute + "' does not contain a valid boolean: '" + value + "'"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	}

