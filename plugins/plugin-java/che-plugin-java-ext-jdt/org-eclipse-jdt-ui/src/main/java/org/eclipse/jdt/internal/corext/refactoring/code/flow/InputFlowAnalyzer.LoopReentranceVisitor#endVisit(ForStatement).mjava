    @Override
    public void endVisit(ForStatement node) {
      if (skipNode(node)) return;
      FlowInfo initInfo = createSequential(node.initializers());
      FlowInfo conditionInfo = getFlowInfo(node.getExpression());
      FlowInfo incrementInfo = createSequential(node.updaters());
      FlowInfo actionInfo = getFlowInfo(node.getBody());
      ForFlowInfo forInfo = createFor();
      setFlowInfo(node, forInfo);
      // the for statement is the outermost loop. In this case we only have
      // to consider the increment, condition and action.
      if (node == fLoopNode) {
        forInfo.mergeIncrement(incrementInfo, fFlowContext);
        forInfo.mergeCondition(conditionInfo, fFlowContext);
        forInfo.mergeAction(actionInfo, fFlowContext);
      } else {
        // we have to merge two different cases. One if we reenter the for statement
        // immediatelly (that means we have to consider increments, condition and action)
        // and the other case if we reenter the for in the next loop of
        // the outer loop. Then we have to consider initializations, condtion and action.
        // For a conditional flow info that means:
        // (initializations | increments) & condition & action.
        GenericConditionalFlowInfo initIncr = new GenericConditionalFlowInfo();
        initIncr.merge(initInfo, fFlowContext);
        initIncr.merge(incrementInfo, fFlowContext);
        forInfo.mergeAccessModeSequential(initIncr, fFlowContext);
        forInfo.mergeCondition(conditionInfo, fFlowContext);
        forInfo.mergeAction(actionInfo, fFlowContext);
      }
      forInfo.removeLabel(null);
    }

