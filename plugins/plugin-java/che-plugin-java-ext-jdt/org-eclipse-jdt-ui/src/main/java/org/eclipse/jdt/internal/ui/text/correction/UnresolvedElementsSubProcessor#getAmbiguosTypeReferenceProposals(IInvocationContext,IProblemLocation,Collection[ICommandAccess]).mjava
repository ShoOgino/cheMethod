  public static void getAmbiguosTypeReferenceProposals(
      IInvocationContext context, IProblemLocation problem, Collection<ICommandAccess> proposals)
      throws CoreException {
    final ICompilationUnit cu = context.getCompilationUnit();
    int offset = problem.getOffset();
    int len = problem.getLength();

    IJavaElement[] elements = cu.codeSelect(offset, len);
    for (int i = 0; i < elements.length; i++) {
      IJavaElement curr = elements[i];
      if (curr instanceof IType && !TypeFilter.isFiltered((IType) curr)) {
        String qualifiedTypeName = ((IType) curr).getFullyQualifiedName('.');

        CompilationUnit root = context.getASTRoot();

        String label =
            Messages.format(
                CorrectionMessages.UnresolvedElementsSubProcessor_importexplicit_description,
                BasicElementLabels.getJavaElementName(qualifiedTypeName));
        Image image = JavaPluginImages.get(JavaPluginImages.IMG_OBJS_IMPDECL);
        ASTRewriteCorrectionProposal proposal =
            new ASTRewriteCorrectionProposal(
                label,
                cu,
                ASTRewrite.create(root.getAST()),
                IProposalRelevance.IMPORT_EXPLICIT,
                image);

        ImportRewrite imports = proposal.createImportRewrite(root);
        imports.addImport(qualifiedTypeName);

        proposals.add(proposal);
      }
    }
  }

