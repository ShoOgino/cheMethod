    private void handleExceptionTags(List<TagElement> tags, List<String> exceptionNames, CharSequence[] exceptionDescriptions) {
        if (tags.size() == 0 && containsOnlyNull(exceptionNames))
            return;

        handleBlockTagTitle(JavaDocMessages.JavaDoc2HTMLTextReader_throws_section);

        for (Iterator<TagElement> iter = tags.iterator(); iter.hasNext(); ) {
            TagElement tag = iter.next();
            fBuf.append(BlOCK_TAG_ENTRY_START);
            handleThrowsTag(tag);
            fBuf.append(BlOCK_TAG_ENTRY_END);
        }
        for (int i = 0; i < exceptionDescriptions.length; i++) {
            CharSequence description = exceptionDescriptions[i];
            String name = exceptionNames.get(i);
            if (name != null) {
                fBuf.append(BlOCK_TAG_ENTRY_START);
                handleLink(Collections.singletonList(fJavadoc.getAST().newSimpleName(name)));
                if (description != null) {
                    fBuf.append(JavaElementLabels.CONCAT_STRING);
                    fBuf.append(description);
                }
                fBuf.append(BlOCK_TAG_ENTRY_END);
            }
        }
    }

