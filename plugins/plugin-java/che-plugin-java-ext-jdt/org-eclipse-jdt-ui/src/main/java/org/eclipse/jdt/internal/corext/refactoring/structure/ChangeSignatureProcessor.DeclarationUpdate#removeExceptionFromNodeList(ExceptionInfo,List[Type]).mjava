    private void removeExceptionFromNodeList(ExceptionInfo toRemove, List<Type> list) {
      ITypeBinding typeToRemove = toRemove.getTypeBinding();
      for (Iterator<Type> iter = list.iterator(); iter.hasNext(); ) {
        Type currentExcType = iter.next();
        ITypeBinding currentType = currentExcType.resolveBinding();
        /* Maybe remove all subclasses of typeToRemove too.
         * Problem:
         * - B extends A;
         * - A.m() throws IOException, Exception;
         * - B.m() throws IOException, AWTException;
         * Removing Exception should remove AWTException,
         * but NOT remove IOException (or a subclass of JavaModelException). */
        // if (Bindings.isSuperType(typeToRemove, currentType))
        if (currentType == null) continue; // newly added or unresolvable type
        if (Bindings.equals(currentType, typeToRemove)
            || toRemove.getElement().getElementName().equals(currentType.getName())) {
          getASTRewrite().remove(currentExcType, fDescription);
          registerImportRemoveNode(currentExcType);
        }
      }
    }

