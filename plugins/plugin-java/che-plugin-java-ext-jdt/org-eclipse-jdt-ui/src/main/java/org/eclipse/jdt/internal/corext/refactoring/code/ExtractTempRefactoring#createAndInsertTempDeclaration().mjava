  private void createAndInsertTempDeclaration() throws CoreException {
    Expression initializer =
        getSelectedExpression().createCopyTarget(fCURewrite.getASTRewrite(), true);
    VariableDeclarationStatement vds = createTempDeclaration(initializer);

    if ((!fReplaceAllOccurrences)
        || (retainOnlyReplacableMatches(getMatchingFragments()).length <= 1)) {
      insertAt(getSelectedExpression().getAssociatedNode(), vds);
      return;
    }

    ASTNode[] firstReplaceNodeParents =
        getParents(getFirstReplacedExpression().getAssociatedNode());
    ASTNode[] commonPath = findDeepestCommonSuperNodePathForReplacedNodes();
    Assert.isTrue(commonPath.length <= firstReplaceNodeParents.length);

    ASTNode deepestCommonParent = firstReplaceNodeParents[commonPath.length - 1];
    if (deepestCommonParent instanceof Block)
      insertAt(firstReplaceNodeParents[commonPath.length], vds);
    else insertAt(deepestCommonParent, vds);
  }

