  /**
   * Returns all arrays, visible in the current context's scope, in the order that they appear.
   *
   * @return all visible arrays
   */
  public Variable[] findArraysInCurrentScope() {
    List<Variable> arrays = new ArrayList<Variable>();

    // local variables
    for (ListIterator<Variable> iterator = fLocalVariables.listIterator(fLocalVariables.size());
        iterator.hasPrevious();
        ) {
      Variable localVariable = iterator.previous();

      if (localVariable.isArray()) arrays.add(localVariable);
    }

    // fields
    for (ListIterator<Variable> iterator = fFields.listIterator(fFields.size());
        iterator.hasPrevious();
        ) {
      Variable field = iterator.previous();

      if (field.isArray()) arrays.add(field);
    }

    return arrays.toArray(new Variable[arrays.size()]);
  }

