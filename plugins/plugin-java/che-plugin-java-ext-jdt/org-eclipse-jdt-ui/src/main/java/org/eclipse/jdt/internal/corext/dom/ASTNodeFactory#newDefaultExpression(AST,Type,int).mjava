  /**
   * Returns an expression that is assignable to the given type. <code>null</code> is returned if
   * the type is the 'void' type.
   *
   * @param ast The AST to create the expression for
   * @param type The type of the returned expression
   * @param extraDimensions Extra dimensions to the type
   * @return the Null-literal for reference types, a boolean-literal for a boolean type, a number
   *     literal for primitive types or <code>null</code> if the type is void.
   */
  public static Expression newDefaultExpression(AST ast, Type type, int extraDimensions) {
    if (extraDimensions == 0 && type.isPrimitiveType()) {
      PrimitiveType primitiveType = (PrimitiveType) type;
      if (primitiveType.getPrimitiveTypeCode() == PrimitiveType.BOOLEAN) {
        return ast.newBooleanLiteral(false);
      } else if (primitiveType.getPrimitiveTypeCode() == PrimitiveType.VOID) {
        return null;
      } else {
        return ast.newNumberLiteral("0"); // $NON-NLS-1$
      }
    }
    return ast.newNullLiteral();
  }

