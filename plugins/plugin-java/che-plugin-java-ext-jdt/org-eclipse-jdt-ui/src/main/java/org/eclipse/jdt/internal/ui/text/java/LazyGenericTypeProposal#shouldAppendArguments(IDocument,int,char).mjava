	/**
	 * Returns <code>true</code> if type arguments should be appended when
	 * applying this proposal, <code>false</code> if not (for example if the
	 * document already contains a type argument list after the insertion point.
	 *
	 * @param document the document
	 * @param offset the insertion offset
	 * @param trigger the trigger character
	 * @return <code>true</code> if arguments should be appended
	 */
	private boolean shouldAppendArguments(IDocument document, int offset, char trigger) {
		/*
		 * No argument list if there were any special triggers (for example a period to qualify an
		 * inner type).
		 */
		if (trigger != '\0' && trigger != '<' && trigger != '(')
			return false;

		/* No argument list if the completion is empty (already within the argument list). */
		char[] completion= fProposal.getCompletion();
		if (completion.length == 0)
			return false;

		/* No argument list if there already is a generic signature behind the name. */
		try {
			IRegion region= document.getLineInformationOfOffset(offset);
			String line= document.get(region.getOffset(), region.getLength());

			int index= offset - region.getOffset();
			while (index != line.length() && Character.isUnicodeIdentifierPart(line.charAt(index)))
				++index;

			if (index == line.length())
				return true;

			char ch= line.charAt(index);
			return ch != '<';

		} catch (BadLocationException e) {
			return true;
		}
	}

