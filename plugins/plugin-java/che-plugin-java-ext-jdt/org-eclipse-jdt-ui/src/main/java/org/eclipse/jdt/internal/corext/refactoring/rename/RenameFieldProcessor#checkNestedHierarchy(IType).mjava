  private RefactoringStatus checkNestedHierarchy(IType type) throws CoreException {
    IType[] nestedTypes = type.getTypes();
    if (nestedTypes == null) return null;
    RefactoringStatus result = new RefactoringStatus();
    for (int i = 0; i < nestedTypes.length; i++) {
      IField otherField = nestedTypes[i].getField(getNewElementName());
      if (otherField.exists()) {
        String msg =
            Messages.format(
                RefactoringCoreMessages.RenameFieldRefactoring_hiding,
                new String[] {
                  BasicElementLabels.getJavaElementName(fField.getElementName()),
                  BasicElementLabels.getJavaElementName(getNewElementName()),
                  BasicElementLabels.getJavaElementName(nestedTypes[i].getFullyQualifiedName('.'))
                });
        result.addWarning(msg, JavaStatusContext.create(otherField));
      }
      result.merge(checkNestedHierarchy(nestedTypes[i]));
    }
    return result;
  }

