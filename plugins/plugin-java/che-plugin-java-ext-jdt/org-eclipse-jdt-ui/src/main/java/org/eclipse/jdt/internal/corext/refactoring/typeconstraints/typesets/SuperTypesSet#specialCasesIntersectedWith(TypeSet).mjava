  /* (non-Javadoc)
   * @see org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet#intersectedWith(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet)
   */
  @Override
  protected TypeSet specialCasesIntersectedWith(TypeSet s2) {
    if (fLowerBounds.equals(s2)) return s2; // xsect(superTypes(A),A) = A
    if (s2 instanceof SuperTypesSet) {
      SuperTypesSet st2 = (SuperTypesSet) s2;

      if (fLowerBounds.isSingleton() && st2.fLowerBounds.isSingleton()) {
        TType t1 = this.fLowerBounds.anyMember();
        TType t2 = st2.fLowerBounds.anyMember();

        if (TTypes.canAssignTo(t1, t2))
          return new SuperTypesSet(st2.fLowerBounds, getTypeSetEnvironment());
      } else if (fLowerBounds instanceof SubTypesSet) {
        // xsect(superTypes(subTypes(A)), superTypes(A)) = superTypes(A)
        SubTypesSet myLowerSubTypes = (SubTypesSet) fLowerBounds;

        if (myLowerSubTypes.upperBound().equals(st2.upperBound())) return st2;
      }
    }
    if (s2 instanceof SuperTypesOfSingleton) {
      SuperTypesOfSingleton st2 = (SuperTypesOfSingleton) s2;

      if (fLowerBounds.isSingleton()) {
        TType t1 = this.fLowerBounds.anyMember();
        TType t2 = st2.uniqueLowerBound();

        if (TTypes.canAssignTo(t1, t2))
          return getTypeSetEnvironment().createSuperTypesOfSingleton(t2);
      } else if (fLowerBounds instanceof SubTypesOfSingleton) {
        // xsect(superTypes(subTypes(A)), superTypes(A)) = superTypes(A)
        SubTypesOfSingleton myLowerSubTypes = (SubTypesOfSingleton) fLowerBounds;

        if (myLowerSubTypes.uniqueUpperBound().equals(st2.uniqueUpperBound())) return st2;
      }
    }
    if (s2 instanceof SubTypesSet) {
      SubTypesSet st2 = (SubTypesSet) s2;
      if (fLowerBounds.equals(st2.upperBound())) return fLowerBounds;

      if (fLowerBounds instanceof TypeSetIntersection) {
        // (intersect (superTypes (intersect (subTypes A) B))
        //            (subTypes A)) =>
        // (intersect (subTypes A) (superTypes B))
        TypeSetIntersection lbXSect = (TypeSetIntersection) fLowerBounds;
        TypeSet xsectLeft = lbXSect.getLHS();
        TypeSet xsectRight = lbXSect.getRHS();

        if (xsectLeft.equals(st2.upperBound()))
          return new TypeSetIntersection(
              s2, new SuperTypesSet(xsectRight, getTypeSetEnvironment()));
      }
    }
    return null;
  }

