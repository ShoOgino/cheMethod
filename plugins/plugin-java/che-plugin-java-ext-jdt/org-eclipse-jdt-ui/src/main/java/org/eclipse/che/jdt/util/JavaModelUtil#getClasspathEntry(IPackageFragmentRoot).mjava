    /**
     * Returns the classpath entry of the given package fragment root. This is the raw entry, except
     * if the root is a referenced library, in which case it's the resolved entry.
     *
     * @param root a package fragment root
     * @return the corresponding classpath entry
     * @throws JavaModelException if accessing the entry failed
     * @since 3.6
     */
    public static IClasspathEntry getClasspathEntry(IPackageFragmentRoot root) throws JavaModelException {
        IClasspathEntry rawEntry= root.getRawClasspathEntry();
        int rawEntryKind= rawEntry.getEntryKind();
        switch (rawEntryKind) {
            case IClasspathEntry.CPE_LIBRARY:
            case IClasspathEntry.CPE_VARIABLE:
            case IClasspathEntry.CPE_CONTAINER: // should not happen, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=305037
                if (root.isArchive() && root.getKind() == IPackageFragmentRoot.K_BINARY) {
                    IClasspathEntry resolvedEntry= root.getResolvedClasspathEntry();
                    if (resolvedEntry.getReferencingEntry() != null)
                        return resolvedEntry;
                    else
                        return rawEntry;
                }
        }
        return rawEntry;
    }

