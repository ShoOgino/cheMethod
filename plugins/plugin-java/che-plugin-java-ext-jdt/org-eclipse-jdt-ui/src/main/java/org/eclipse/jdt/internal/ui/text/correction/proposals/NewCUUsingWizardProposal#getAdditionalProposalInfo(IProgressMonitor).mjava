  /*
   * @see org.eclipse.jface.text.contentassist.ICompletionProposalExtension5#getAdditionalProposalInfo(org.eclipse.core.runtime.IProgressMonitor)
   * @since 3.5
   */
  @Override
  public Object getAdditionalProposalInfo(IProgressMonitor monitor) {
    StringBuffer buf = new StringBuffer();
    switch (fTypeKind) {
      case K_CLASS:
        buf.append(CorrectionMessages.NewCUCompletionUsingWizardProposal_createclass_info);
        break;
      case K_INTERFACE:
        buf.append(CorrectionMessages.NewCUCompletionUsingWizardProposal_createinterface_info);
        break;
      case K_ENUM:
        buf.append(CorrectionMessages.NewCUCompletionUsingWizardProposal_createenum_info);
        break;
      case K_ANNOTATION:
        buf.append(CorrectionMessages.NewCUCompletionUsingWizardProposal_createannotation_info);
        break;
    }
    buf.append("<br>"); // $NON-NLS-1$
    buf.append("<br>"); // $NON-NLS-1$
    if (fTypeContainer instanceof IType) {
      buf.append(CorrectionMessages.NewCUCompletionUsingWizardProposal_tooltip_enclosingtype);
    } else {
      buf.append(CorrectionMessages.NewCUCompletionUsingWizardProposal_tooltip_package);
    }
    buf.append(" <b>"); // $NON-NLS-1$
    buf.append(
        JavaElementLabels.getElementLabel(fTypeContainer, JavaElementLabels.T_FULLY_QUALIFIED));
    buf.append("</b><br>"); // $NON-NLS-1$
    buf.append("public "); // $NON-NLS-1$

    switch (fTypeKind) {
      case K_CLASS:
        buf.append("class <b>"); // $NON-NLS-1$
        break;
      case K_INTERFACE:
        buf.append("interface <b>"); // $NON-NLS-1$
        break;
      case K_ENUM:
        buf.append("enum <b>"); // $NON-NLS-1$
        break;
      case K_ANNOTATION:
        buf.append("@interface <b>"); // $NON-NLS-1$
        break;
    }
    nameToHTML(fTypeNameWithParameters, buf);

    ITypeBinding superclass = getPossibleSuperTypeBinding(fNode);
    if (superclass != null) {
      if (superclass.isClass()) {
        if (fTypeKind == K_CLASS) {
          buf.append("</b> extends <b>"); // $NON-NLS-1$
          nameToHTML(
              BindingLabelProvider.getBindingLabel(
                  superclass, BindingLabelProvider.DEFAULT_TEXTFLAGS),
              buf);
        }
      } else {
        if (fTypeKind == K_INTERFACE) {
          buf.append("</b> extends <b>"); // $NON-NLS-1$
        } else {
          buf.append("</b> implements <b>"); // $NON-NLS-1$
        }
        nameToHTML(
            BindingLabelProvider.getBindingLabel(
                superclass, BindingLabelProvider.DEFAULT_TEXTFLAGS),
            buf);
      }
    }
    buf.append("</b> {<br>}<br>"); // $NON-NLS-1$
    return buf.toString();
  }

