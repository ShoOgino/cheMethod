	public Collection<String> getUsedVariableNames(int offset, int length) {
		HashSet<String> result= new HashSet<String>();
		IBinding[] bindingsBefore= getDeclarationsInScope(offset, VARIABLES);
		for (int i= 0; i < bindingsBefore.length; i++) {
			result.add(bindingsBefore[i].getName());
		}
		IBinding[] bindingsAfter= getDeclarationsAfter(offset + length, VARIABLES);
		for (int i= 0; i < bindingsAfter.length; i++) {
			result.add(bindingsAfter[i].getName());
		}
		List<ImportDeclaration> imports= fRoot.imports();
		for (int i= 0; i < imports.size(); i++) {
			ImportDeclaration decl= imports.get(i);
			if (decl.isStatic() && !decl.isOnDemand()) {
				result.add(ASTNodes.getSimpleNameIdentifier(decl.getName()));
			}
		}
		return result;
	}

