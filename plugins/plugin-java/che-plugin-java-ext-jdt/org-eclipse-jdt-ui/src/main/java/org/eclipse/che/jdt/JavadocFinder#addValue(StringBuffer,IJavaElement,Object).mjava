  private void addValue(StringBuffer buf, IJavaElement element, Object value)
      throws URISyntaxException {
    // Note: To be bug-compatible with Javadoc from Java 5/6/7, we currently don't escape HTML tags in String-valued annotations.
    if (value instanceof ITypeBinding) {
      ITypeBinding typeBinding = (ITypeBinding) value;
      IJavaElement type = typeBinding.getJavaElement();
      if (type == null) {
        buf.append(typeBinding.getName());
      } else {
        String uri = JavaElementLinks.createURI(baseHref, type);
        String name = type.getElementName();
        addLink(buf, uri, name);
      }
      buf.append(".class"); //$NON-NLS-1$

    } else if (value instanceof IVariableBinding) { // only enum constants
      IVariableBinding variableBinding = (IVariableBinding) value;
      IJavaElement variable = variableBinding.getJavaElement();
      String uri = JavaElementLinks.createURI(baseHref, variable);
      String name = variable.getElementName();
      addLink(buf, uri, name);

    } else if (value instanceof IAnnotationBinding) {
      IAnnotationBinding annotationBinding = (IAnnotationBinding) value;
      addAnnotation(buf, element, annotationBinding);

    } else if (value instanceof String) {
      buf.append(ASTNodes.getEscapedStringLiteral((String) value));

    } else if (value instanceof Character) {
      buf.append(ASTNodes.getEscapedCharacterLiteral((Character) value));

    } else if (value instanceof Object[]) {
      Object[] values = (Object[]) value;
      buf.append('{');
      for (int i = 0; i < values.length; i++) {
        if (i > 0) {
          buf.append(JavaElementLabels.COMMA_STRING);
        }
        addValue(buf, element, values[i]);
      }
      buf.append('}');

    } else { // primitive types (except char) or null
      buf.append(String.valueOf(value));
    }
  }

