  /* (non-Javadoc)
   * @see org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet#containsAll(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet)
   */
  @Override
  public boolean containsAll(TypeSet s) {
    if (fEnumCache != null) return fEnumCache.containsAll(s);

    if (!isUniverse()
        && s
            .isUniverse()) // this is more general than just SuperTypesSet; probably belongs in TypeSet
    return false;
    if (equals(s)) return true;
    if (fLowerBounds.containsAll(s)) return true;

    // Make sure all elements of s are contained in this set
    for (Iterator<TType> sIter = s.iterator(); sIter.hasNext(); ) {
      TType t = sIter.next();
      boolean found = false;

      // Scan the "lower frontier", i.e. the lower bound set, and see whether
      // 't' is a supertype of any of those.
      for (Iterator<TType> lbIter = fLowerBounds /*.lowerBound()*/.iterator(); lbIter.hasNext(); ) {
        TType lb = lbIter.next();

        if (TTypes.canAssignTo(lb, t)) {
          found = true;
          break;
        }
      }
      if (!found) return false;
    }
    return true;
  }

