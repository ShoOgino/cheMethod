  public static void addRemoveSafeVarargsProposals(
      IInvocationContext context, IProblemLocation problem, Collection<ICommandAccess> proposals) {
    ASTNode coveringNode = problem.getCoveringNode(context.getASTRoot());
    if (!(coveringNode instanceof MethodDeclaration)) return;

    MethodDeclaration methodDeclaration = (MethodDeclaration) coveringNode;
    MarkerAnnotation annotation = null;

    List<? extends ASTNode> modifiers = methodDeclaration.modifiers();
    for (Iterator<? extends ASTNode> iterator = modifiers.iterator(); iterator.hasNext(); ) {
      ASTNode node = iterator.next();
      if (node instanceof MarkerAnnotation) {
        annotation = (MarkerAnnotation) node;
        if ("SafeVarargs".equals(annotation.resolveAnnotationBinding().getName())) { // $NON-NLS-1$
          break;
        }
      }
    }

    if (annotation == null) return;

    ASTRewrite rewrite = ASTRewrite.create(coveringNode.getAST());
    rewrite.remove(annotation, null);

    String label = CorrectionMessages.VarargsWarningsSubProcessor_remove_safevarargs_label;
    Image image =
        JavaPluginImages.get(
            JavaPluginImages
                .IMG_TOOL_DELETE); // JavaPlugin.getDefault().getWorkbench().getSharedImages().getImage(ISharedImages.IMG_TOOL_DELETE);
    ASTRewriteCorrectionProposal proposal =
        new ASTRewriteCorrectionProposal(
            label,
            context.getCompilationUnit(),
            rewrite,
            IProposalRelevance.REMOVE_SAFEVARARGS,
            image);
    proposals.add(proposal);
  }

