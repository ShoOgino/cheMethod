  /**
   * Checks if extra indentation for second line of string continuation is required.
   *
   * @param offset the offset for which the check is done
   * @return returns <code>true</code> if extra indentation for second line of string continuation
   *     is required
   * @since 3.7
   */
  private boolean isSecondLineOfStringContinuation(int offset) {
    try {
      int offsetLine = fDocument.getLineOfOffset(offset);
      fPosition = offset;
      while (true) {
        nextToken();
        switch (fToken) {
            // scopes: skip them
          case Symbols.TokenRPAREN:
          case Symbols.TokenRBRACKET:
          case Symbols.TokenRBRACE:
          case Symbols.TokenGREATERTHAN:
            skipScope();
            break;

          case Symbols.TokenPLUS:
            if ((offsetLine - fLine) > 1) {
              return false;
            }
            break;

          case Symbols.TokenCOMMA:
          case Symbols.TokenLPAREN:
          case Symbols.TokenLBRACE:
          case Symbols.TokenEQUAL:
            int stringStartingOffset =
                fScanner.findNonWhitespaceForwardInAnyPartition(
                    fPosition + 1, JavaHeuristicScanner.UNBOUND);
            int stringStartingLine = fDocument.getLineOfOffset(stringStartingOffset);
            if ((offsetLine - stringStartingLine) == 1) {
              fPosition = stringStartingOffset;
              return true;
            } else {
              return false;
            }
          case Symbols.TokenLBRACKET:
          case Symbols.TokenEOF:
            if ((offsetLine - fLine) == 1) return true;
            else return false;
        }
      }
    } catch (BadLocationException e) {
      JavaPlugin.log(e);
      return false;
    }
  }

