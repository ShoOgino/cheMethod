  @Override
  protected void doRename(IProgressMonitor pm) throws CoreException {
    IPackageFragment pack = getPackage();
    if (pack == null) return;

    if (!fRenameSubpackages) {
      renamePackage(pack, pm, createNewPath(), getNewName());

    } else {
      IPackageFragment[] allPackages = JavaElementUtil.getPackageAndSubpackages(pack);
      Arrays.sort(
          allPackages,
          new Comparator<IPackageFragment>() {
            public int compare(IPackageFragment o1, IPackageFragment o2) {
              String p1 = o1.getElementName();
              String p2 = o2.getElementName();
              return p1.compareTo(p2);
            }
          });
      int count = allPackages.length;
      pm.beginTask("", count); // $NON-NLS-1$
      // When renaming to subpackage (a -> a.b), do it inside-out:
      boolean insideOut = getNewName().startsWith(getOldName());
      try {
        for (int i = 0; i < count; i++) {
          IPackageFragment currentPackage = allPackages[insideOut ? count - i - 1 : i];
          renamePackage(
              currentPackage,
              new SubProgressMonitor(pm, 1),
              createNewPath(currentPackage),
              getNewName(currentPackage));
        }
      } finally {
        pm.done();
      }
    }
  }

