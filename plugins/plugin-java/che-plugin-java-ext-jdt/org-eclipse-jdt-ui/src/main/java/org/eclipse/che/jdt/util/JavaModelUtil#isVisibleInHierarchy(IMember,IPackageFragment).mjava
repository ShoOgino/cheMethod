    /**
     * Evaluates if a member in the focus' element hierarchy is visible from
     * elements in a package.
     * @param member The member to test the visibility for
     * @param pack The package of the focus element focus
     * @return returns <code>true</code> if the member is visible from the package
     * @throws JavaModelException thrown when the member can not be accessed
     */
    public static boolean isVisibleInHierarchy(IMember member, IPackageFragment pack) throws JavaModelException {
        int type= member.getElementType();
        if  (type == IJavaElement.INITIALIZER ||  (type == IJavaElement.METHOD && member.getElementName().startsWith("<"))) { //$NON-NLS-1$
            return false;
        }

        int otherflags= member.getFlags();

        IType declaringType= member.getDeclaringType();
        if (Flags.isPublic(otherflags) || Flags.isProtected(otherflags) || (declaringType != null && isInterfaceOrAnnotation(declaringType))) {
            return true;
        } else if (Flags.isPrivate(otherflags)) {
            return false;
        }

        IPackageFragment otherpack= (IPackageFragment) member.getAncestor(IJavaElement.PACKAGE_FRAGMENT);
        return (pack != null && pack.equals(otherpack));
    }

