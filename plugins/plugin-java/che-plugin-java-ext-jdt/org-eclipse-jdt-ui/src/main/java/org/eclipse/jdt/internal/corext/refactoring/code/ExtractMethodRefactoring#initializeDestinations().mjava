	private void initializeDestinations() {
		List<ASTNode> result= new ArrayList<ASTNode>();
		BodyDeclaration decl= fAnalyzer.getEnclosingBodyDeclaration();
		ASTNode current= ASTResolving.findParentType(decl.getParent());
		if (fAnalyzer.isValidDestination(current)) {
			result.add(current);
		}
		if (current != null && (decl instanceof MethodDeclaration || decl instanceof Initializer || decl instanceof FieldDeclaration)) {
			ITypeBinding binding= ASTNodes.getEnclosingType(current);
			ASTNode next= ASTResolving.findParentType(current.getParent());
			while (next != null && binding != null && binding.isNested()) {
				if (fAnalyzer.isValidDestination(next)) {
					result.add(next);
				}
				current= next;
				binding= ASTNodes.getEnclosingType(current);
				next= ASTResolving.findParentType(next.getParent());
			}
		}
		fDestinations= result.toArray(new ASTNode[result.size()]);
		fDestination= fDestinations[fDestinationIndex];
	}

