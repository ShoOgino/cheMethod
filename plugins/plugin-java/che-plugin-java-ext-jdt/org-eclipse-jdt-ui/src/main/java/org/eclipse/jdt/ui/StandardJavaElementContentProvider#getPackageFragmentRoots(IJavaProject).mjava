  /**
   * Evaluates all children of a given {@link IJavaProject}. Clients can override this method.
   *
   * @param project The Java project to evaluate the children for.
   * @return The children of the project. Typically these are package fragment roots but can also be
   *     other elements.
   * @exception JavaModelException if the Java project does not exist or if an exception occurs
   *     while accessing its corresponding resource
   */
  protected Object[] getPackageFragmentRoots(IJavaProject project) throws JavaModelException {
    if (!project.getProject().isOpen()) return NO_CHILDREN;

    IPackageFragmentRoot[] roots = project.getPackageFragmentRoots();
    List<Object> list = new ArrayList<Object>(roots.length);
    // filter out package fragments that correspond to projects and
    // replace them with the package fragments directly
    for (int i = 0; i < roots.length; i++) {
      IPackageFragmentRoot root = roots[i];
      if (isProjectPackageFragmentRoot(root)) {
        Object[] fragments = getPackageFragmentRootContent(root);
        for (int j = 0; j < fragments.length; j++) {
          list.add(fragments[j]);
        }
      } else {
        list.add(root);
      }
    }
    Object[] resources = project.getNonJavaResources();
    for (int i = 0; i < resources.length; i++) {
      list.add(resources[i]);
    }
    return list.toArray();
  }

