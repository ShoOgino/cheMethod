  /**
   * Creates edits that describe how to format the given string. Returns <code>null</code> if the
   * code could not be formatted for the given kind.
   *
   * @param kind Use to specify the kind of the code snippet to format. It can be any of the kind
   *     constants defined in {@link org.eclipse.jdt.core.formatter.CodeFormatter}
   * @param source The source to format
   * @param offset The given offset to start recording the edits (inclusive).
   * @param length the given length to stop recording the edits (exclusive).
   * @param indentationLevel The initial indentation level, used to shift left/right the entire
   *     source fragment. An initial indentation level of zero or below has no effect.
   * @param lineSeparator The line separator to use in formatted source, if set to <code>null</code>
   *     , then the platform default one will be used.
   * @param options The options map to use for formatting with the default code formatter.
   *     Recognized options are documented on {@link
   *     org.eclipse.jdt.core.JavaCore#getDefaultOptions()}. If set to <code>null</code>, then use
   *     the current settings from {@link org.eclipse.jdt.core.JavaCore#getOptions()}.
   * @return an TextEdit describing the changes required to format source
   * @throws IllegalArgumentException If the offset and length are not inside the string, a
   *     IllegalArgumentException is thrown.
   */
  public static TextEdit format2(
      int kind,
      String source,
      int offset,
      int length,
      int indentationLevel,
      String lineSeparator,
      Map<String, String> options) {
    if (offset < 0 || length < 0 || offset + length > source.length()) {
      throw new IllegalArgumentException(
          "offset or length outside of string. offset: "
              + offset
              + ", length: "
              + length
              + ", string size: "
              + source.length()); // $NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$
    }
    return ToolFactory.createCodeFormatter(options)
        .format(kind, source, offset, length, indentationLevel, lineSeparator);
  }

