  /**
   * @param e
   * @return int Checks.IS_RVALUE if e is an rvalue Checks.IS_RVALUE_GUESSED if e is guessed as an
   *     rvalue Checks.NOT_RVALUE_VOID if e is not an rvalue because its type is void
   *     Checks.NOT_RVALUE_MISC if e is not an rvalue for some other reason
   */
  public static int checkExpressionIsRValue(Expression e) {
    if (e instanceof Name) {
      if (!(((Name) e).resolveBinding() instanceof IVariableBinding)) {
        return NOT_RVALUE_MISC;
      }
    }
    if (e instanceof Annotation) return NOT_RVALUE_MISC;

    ITypeBinding tb = e.resolveTypeBinding();
    boolean guessingRequired = false;
    if (tb == null) {
      guessingRequired = true;
      tb = ASTResolving.guessBindingForReference(e);
    }
    if (tb == null) return NOT_RVALUE_MISC;
    else if (tb.getName().equals("void")) //$NON-NLS-1$
    return NOT_RVALUE_VOID;

    return guessingRequired ? IS_RVALUE_GUESSED : IS_RVALUE;
  }

