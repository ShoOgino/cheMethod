  /**
   * Returns a type argument proposal for a given type parameter. The proposal is:
   *
   * <ul>
   *   <li>the type bound for type parameters with a single bound
   *   <li>the type parameter name for all other (unbounded or more than one bound) type parameters
   * </ul>
   *
   * Type argument proposals for type parameters are always ambiguous.
   *
   * @param parameter the type parameter of the inserted type
   * @return a type argument proposal for <code>parameter</code>
   * @throws org.eclipse.jdt.core.JavaModelException if this element does not exist or if an
   *     exception occurs while accessing its corresponding resource
   */
  private TypeArgumentProposal computeTypeProposal(ITypeParameter parameter)
      throws JavaModelException {
    String[] bounds = parameter.getBounds();
    String elementName = parameter.getElementName();
    String displayName = computeTypeParameterDisplayName(parameter, bounds);
    if (bounds.length == 1 && !"java.lang.Object".equals(bounds[0])) //$NON-NLS-1$
    return new TypeArgumentProposal(Signature.getSimpleName(bounds[0]), true, displayName);
    else return new TypeArgumentProposal(elementName, true, displayName);
  }

