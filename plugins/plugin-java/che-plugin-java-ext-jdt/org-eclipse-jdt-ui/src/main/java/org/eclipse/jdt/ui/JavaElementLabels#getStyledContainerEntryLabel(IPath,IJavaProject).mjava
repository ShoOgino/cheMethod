  /**
   * Returns the styled label of a classpath container. The returned label is BiDi-processed with
   * {@link TextProcessor#process(String, String)}.
   *
   * @param containerPath the path of the container
   * @param project the project the container is resolved in
   * @return the label of the classpath container
   * @since 3.4
   */
  public static StyledString getStyledContainerEntryLabel(
      IPath containerPath, IJavaProject project) {
    try {
      IClasspathContainer container = JavaCore.getClasspathContainer(containerPath, project);
      String description = null;
      if (container != null) {
        description = container.getDescription();
      }
      if (description == null) {
        ClasspathContainerInitializer initializer =
            JavaCore.getClasspathContainerInitializer(containerPath.segment(0));
        if (initializer != null) {
          description = initializer.getDescription(containerPath, project);
        }
      }
      if (description != null) {
        StyledString str = new StyledString(description);
        //				if (containerPath.segmentCount() > 0 && JavaRuntime.JRE_CONTAINER.equals(containerPath.segment(0))) {
        //					int index= description.indexOf('[');
        //					if (index != -1) {
        //						str.setStyle(index, description.length() - index, DECORATIONS_STYLE);
        //					}
        //				}
        return Strings.markLTR(str);
      }
    } catch (JavaModelException e) {
      // ignore
    }
    return new StyledString(BasicElementLabels.getPathLabel(containerPath, false));
  }

