	/*
	 * @see IContentAssistProcessor#computeCompletionProposals(ITextViewer, int)
	 */
	public ICompletionProposal[] computeQuickAssistProposals(IQuickAssistInvocationContext quickAssistContext) {
//		ISourceViewer viewer= quickAssistContext.getSourceViewer();
//		int documentOffset= quickAssistContext.getOffset();
//
////		IEditorPart part= fAssistant.getEditor();
//
//		ICompilationUnit cu= JavaUI.getWorkingCopyManager().getWorkingCopy(part.getEditorInput());
//		IAnnotationModel model= JavaUI.getDocumentProvider().getAnnotationModel(part.getEditorInput());
//
//		AssistContext context= null;
//		if (cu != null) {
//			int length= viewer != null ? viewer.getSelectedRange().y : 0;
//			context= new AssistContext(cu, viewer, /*part, */documentOffset, length);
//		}
//
//		Annotation[] annotations= fAssistant.getAnnotationsAtOffset();
//
//		fErrorMessage= null;
//
//		ICompletionProposal[] res= null;
//		if (model != null && context != null && annotations != null) {
//			ArrayList<IJavaCompletionProposal> proposals= new ArrayList<IJavaCompletionProposal>(10);
//			IStatus status= collectProposals(context, model, annotations, true, !fAssistant.isUpdatedOffset(), proposals);
//			res= proposals.toArray(new ICompletionProposal[proposals.size()]);
//			if (!status.isOK()) {
//				fErrorMessage= status.getMessage();
//				JavaPlugin.log(status);
//			}
//		}
//
//		if (res == null || res.length == 0) {
//			return new ICompletionProposal[] { new ChangeCorrectionProposal(CorrectionMessages.NoCorrectionProposal_description, new
// NullChange(""), IProposalRelevance.NO_SUGGESSTIONS_AVAILABLE, null) }; //$NON-NLS-1$
//		}
//		if (res.length > 1) {
//			Arrays.sort(res, new CompletionProposalComparator());
//		}
//		return res;
		throw new UnsupportedOperationException("computeQuickAssistProposals");
	}

