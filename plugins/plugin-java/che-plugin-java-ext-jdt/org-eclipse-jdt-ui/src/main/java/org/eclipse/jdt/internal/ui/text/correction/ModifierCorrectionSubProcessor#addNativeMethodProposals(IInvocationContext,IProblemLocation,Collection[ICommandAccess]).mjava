  public static void addNativeMethodProposals(
      IInvocationContext context, IProblemLocation problem, Collection<ICommandAccess> proposals) {
    ICompilationUnit cu = context.getCompilationUnit();

    CompilationUnit astRoot = context.getASTRoot();

    ASTNode selectedNode = problem.getCoveringNode(astRoot);
    if (selectedNode == null) {
      return;
    }
    MethodDeclaration decl;
    if (selectedNode instanceof SimpleName) {
      decl = (MethodDeclaration) selectedNode.getParent();
    } else if (selectedNode instanceof MethodDeclaration) {
      decl = (MethodDeclaration) selectedNode;
    } else {
      return;
    }

    {
      AST ast = astRoot.getAST();
      ASTRewrite rewrite = ASTRewrite.create(ast);

      removeModifier(decl, rewrite, Modifier.NATIVE);

      Block newBody = ast.newBlock();
      rewrite.set(decl, MethodDeclaration.BODY_PROPERTY, newBody, null);

      Type returnType = decl.getReturnType2();
      if (returnType != null) {
        Expression expr =
            ASTNodeFactory.newDefaultExpression(ast, returnType, decl.getExtraDimensions());
        if (expr != null) {
          ReturnStatement returnStatement = ast.newReturnStatement();
          returnStatement.setExpression(expr);
          newBody.statements().add(returnStatement);
        }
      }

      String label = CorrectionMessages.ModifierCorrectionSubProcessor_removenative_description;
      Image image = JavaPluginImages.get(JavaPluginImages.IMG_CORRECTION_CHANGE);
      ASTRewriteCorrectionProposal proposal =
          new ASTRewriteCorrectionProposal(
              label, cu, rewrite, IProposalRelevance.REMOVE_NATIVE, image);
      proposals.add(proposal);
    }

    if (decl.getBody() != null) {
      ASTRewrite rewrite = ASTRewrite.create(decl.getAST());
      rewrite.remove(decl.getBody(), null);

      String label = CorrectionMessages.ModifierCorrectionSubProcessor_removebody_description;
      Image image = JavaPluginImages.get(JavaPluginImages.IMG_CORRECTION_CHANGE);
      ASTRewriteCorrectionProposal proposal2 =
          new ASTRewriteCorrectionProposal(
              label, cu, rewrite, IProposalRelevance.REMOVE_METHOD_BODY, image);
      proposals.add(proposal2);
    }
  }

