  private static void processReorgExecutionRecord(
      ReorgExecutionLog log, JavaRefactoringArguments arguments, String token) {
    final StringTokenizer tokenizer = new StringTokenizer(token, DELIMITER_ELEMENT, false);
    String value = null;
    if (tokenizer.hasMoreTokens()) {
      value = tokenizer.nextToken();
      Object element = JavaRefactoringDescriptorUtil.handleToElement(arguments.getProject(), value);
      if (element == null)
        element = JavaRefactoringDescriptorUtil.handleToResource(arguments.getProject(), value);
      if (tokenizer.hasMoreTokens()) {
        final boolean processed = Boolean.valueOf(tokenizer.nextToken()).booleanValue();
        if (processed) {
          log.markAsProcessed(element);
          if (element instanceof IJavaElement)
            log.markAsProcessed(JavaElementResourceMapping.create((IJavaElement) element));
        }
        if (tokenizer.hasMoreTokens()) {
          final boolean renamed = Boolean.valueOf(tokenizer.nextToken()).booleanValue();
          if (renamed && tokenizer.hasMoreTokens()) {
            final String name = tokenizer.nextToken();
            log.setNewName(element, name);
            if (element instanceof IJavaElement)
              log.setNewName(JavaElementResourceMapping.create((IJavaElement) element), name);
          }
        }
      }
    }
  }

