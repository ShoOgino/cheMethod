    /**
     * Method to visit a super class hierarchy defined by a given type.
     * The given type itself is not visited.
     *
     * @param type the type whose super class hierarchy is to be visited
     * @param visitor the visitor
     * @return <code>true</code> if all types were visited,
     *         or <code>false</code> if the visiting got aborted because the <code>visit</code>
     *         method returned <code>false</code> for a type
     */
    public static boolean visitSuperclasses(ITypeBinding type, TypeBindingVisitor visitor) {
        while ((type= type.getSuperclass()) != null) {
            if (!visitor.visit(type)) {
                return false;
            }
        }
        return true;
    }

