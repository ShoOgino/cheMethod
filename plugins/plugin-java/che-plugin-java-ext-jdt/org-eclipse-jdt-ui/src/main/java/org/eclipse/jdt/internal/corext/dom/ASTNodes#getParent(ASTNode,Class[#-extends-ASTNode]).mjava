  /**
   * Returns the closest ancestor of <code>node</code> that is an instance of <code>parentClass
   * </code>, or <code>null</code> if none.
   *
   * <p><b>Warning:</b> This method does not stop at any boundaries like parentheses, statements,
   * body declarations, etc. The resulting node may be in a totally different scope than the given
   * node. Consider using one of the {@link ASTResolving}<code>.find(..)</code> methods instead.
   *
   * @param node the node
   * @param parentClass the class of the sought ancestor node
   * @return the closest ancestor of <code>node</code> that is an instance of <code>parentClass
   *     </code>, or <code>null</code> if none
   */
  public static ASTNode getParent(ASTNode node, Class<? extends ASTNode> parentClass) {
    do {
      node = node.getParent();
    } while (node != null && !parentClass.isInstance(node));
    return node;
  }

