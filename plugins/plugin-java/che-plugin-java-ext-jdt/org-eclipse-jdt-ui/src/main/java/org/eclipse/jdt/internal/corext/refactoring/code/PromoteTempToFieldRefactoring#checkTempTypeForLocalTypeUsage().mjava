  private RefactoringStatus checkTempTypeForLocalTypeUsage() {
    VariableDeclarationStatement vds = getTempDeclarationStatement();
    if (vds == null)
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.PromoteTempToFieldRefactoring_cannot_promote);
    Type type = vds.getType();
    ITypeBinding binding = type.resolveBinding();
    if (binding == null)
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.PromoteTempToFieldRefactoring_cannot_promote);

    IMethodBinding declaringMethodBinding = getMethodDeclaration().resolveBinding();
    ITypeBinding[] methodTypeParameters =
        declaringMethodBinding == null
            ? new ITypeBinding[0]
            : declaringMethodBinding.getTypeParameters();
    LocalTypeAndVariableUsageAnalyzer analyzer =
        new LocalTypeAndVariableUsageAnalyzer(methodTypeParameters);
    type.accept(analyzer);
    boolean usesLocalTypes = !analyzer.getUsageOfEnclosingNodes().isEmpty();
    fTempTypeUsesClassTypeVariables = analyzer.getClassTypeVariablesUsed();
    if (usesLocalTypes)
      return RefactoringStatus.createFatalErrorStatus(
          RefactoringCoreMessages.PromoteTempToFieldRefactoring_uses_type_declared_locally);
    return null;
  }

