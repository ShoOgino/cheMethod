  private Expression newDefaultExpression(
      AST ast, ITypeBinding type, ImportRewriteContext context) {
    if (type.isPrimitive()) {
      String name = type.getName();
      if ("boolean".equals(name)) { // $NON-NLS-1$
        return ast.newBooleanLiteral(false);
      } else {
        return ast.newNumberLiteral("0"); // $NON-NLS-1$
      }
    }
    if (type == ast.resolveWellKnownType("java.lang.String")) { // $NON-NLS-1$
      return ast.newStringLiteral();
    }
    if (type.isArray()) {
      ArrayInitializer initializer = ast.newArrayInitializer();
      initializer.expressions().add(newDefaultExpression(ast, type.getElementType(), context));
      return initializer;
    }
    if (type.isAnnotation()) {
      MarkerAnnotation annotation = ast.newMarkerAnnotation();
      annotation.setTypeName(ast.newName(getImportRewrite().addImport(type, context)));
      return annotation;
    }
    return ast.newNullLiteral();
  }

