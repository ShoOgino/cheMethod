    /* (non-Javadoc)
     * @see org.eclipse.jdt.internal.corext.fix.PositionGroup.Proposal#computeEdits(int, org.eclipse.jface.text.link.LinkedPosition, char, int, org.eclipse.jface.text.link.LinkedModeModel)
     */
    @Override
    public TextEdit computeEdits(
        int offset,
        LinkedPosition currentPosition,
        char trigger,
        int stateMask,
        LinkedModeModel model)
        throws CoreException {
      try {
        IDocument document = currentPosition.getDocument();
        MultiTextEdit edit = new MultiTextEdit();
        int documentLen = document.getLength();
        if (fModifier == 0) {
          int end = currentPosition.offset + currentPosition.length; // current end position
          int k = end;
          while (k < documentLen && IndentManipulation.isIndentChar(document.getChar(k))) {
            k++;
          }
          // first remove space then replace range (remove space can destroy empty position)
          edit.addChild(new ReplaceEdit(end, k - end, new String())); // remove extra spaces
          edit.addChild(
              new ReplaceEdit(currentPosition.offset, currentPosition.length, new String()));
        } else {
          // first then replace range the insert space (insert space can destroy empty position)
          edit.addChild(
              new ReplaceEdit(
                  currentPosition.offset,
                  currentPosition.length,
                  ModifierKeyword.fromFlagValue(fModifier).toString()));
          int end = currentPosition.offset + currentPosition.length; // current end position
          if (end < documentLen && !Character.isWhitespace(document.getChar(end))) {
            edit.addChild(new ReplaceEdit(end, 0, String.valueOf(' '))); // insert extra space
          }
        }
        return edit;
      } catch (BadLocationException e) {
        throw new CoreException(
            new Status(IStatus.ERROR, JavaPlugin.ID_PLUGIN, IStatus.ERROR, e.getMessage(), e));
      }
    }

