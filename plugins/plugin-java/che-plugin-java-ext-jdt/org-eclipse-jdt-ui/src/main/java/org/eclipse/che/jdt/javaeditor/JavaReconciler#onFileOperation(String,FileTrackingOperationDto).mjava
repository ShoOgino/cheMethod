  private void onFileOperation(String endpointId, FileTrackingOperationDto operation) {
    try {
      Type operationType = operation.getType();
      switch (operationType) {
        case START:
          {
            String filePath = operation.getPath();
            VirtualFileEntry fileEntry = projectManager.getProjectsRoot().getChild(filePath);
            if (fileEntry == null) {
              throw new NotFoundException("The file is not found by path " + filePath);
            }

            String projectPath = fileEntry.getProject();
            if (isNullOrEmpty(projectPath)) {
              throw new NotFoundException("The project is not recognized for " + filePath);
            }

            reconcileAndTransmit(filePath, projectPath, endpointId);
            break;
          }

        case SUSPEND:
          {
            mode = DEACTIVATED;
            break;
          }

        case RESUME:
          {
            mode = ACTIVATED;
            break;
          }

        default:
          {
            break;
          }
      }
    } catch (ServerException e) {
      String errorMessage = "Can not handle file operation: " + e.getMessage();

      LOG.error(errorMessage);

      transmitError(500, errorMessage, endpointId);
    } catch (NotFoundException e) {
      String errorMessage = "Can not handle file operation: " + e.getMessage();

      LOG.error(errorMessage);

      transmitError(400, errorMessage, endpointId);
    }
  }

