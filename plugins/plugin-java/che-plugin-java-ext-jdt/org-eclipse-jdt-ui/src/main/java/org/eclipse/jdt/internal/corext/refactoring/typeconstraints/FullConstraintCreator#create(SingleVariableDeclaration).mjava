  /* (non-Javadoc)
   * @see org.eclipse.jdt.core.dom.ASTVisitor#visit(org.eclipse.jdt.core.dom.SingleVariableDeclaration)
   */
  @Override
  public ITypeConstraint[] create(SingleVariableDeclaration svd) {
    ITypeConstraint[] defines =
        fTypeConstraintFactory.createDefinesConstraint(
            fConstraintVariableFactory.makeExpressionOrTypeVariable(svd.getName(), getContext()),
            fConstraintVariableFactory.makeTypeVariable(svd.getType()));
    if (svd.getInitializer() == null) return defines;
    ITypeConstraint[] constraints =
        fTypeConstraintFactory.createSubtypeConstraint(
            fConstraintVariableFactory.makeExpressionOrTypeVariable(
                svd.getInitializer(), getContext()),
            fConstraintVariableFactory.makeExpressionOrTypeVariable(svd.getName(), getContext()));
    if (defines.length == 0 && constraints.length == 0) {
      return new ITypeConstraint[0];
    } else if (defines.length == 0) {
      return constraints;
    } else if (constraints.length == 0) {
      return defines;
    } else {
      List<ITypeConstraint> all = new ArrayList<ITypeConstraint>();
      all.addAll(Arrays.asList(defines));
      all.addAll(Arrays.asList(constraints));
      return (ITypeConstraint[]) all.toArray();
    }
  }

