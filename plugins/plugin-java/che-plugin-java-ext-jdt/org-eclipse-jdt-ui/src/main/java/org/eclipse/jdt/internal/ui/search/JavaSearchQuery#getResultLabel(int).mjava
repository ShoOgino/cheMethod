    public String getResultLabel(int nMatches) {
        int limitTo = getMaskedLimitTo();
        if (nMatches == 1) {
            String[] args = {getSearchPatternDescription(), fPatternData.getScopeDescription()};
            switch (limitTo) {
                case IJavaSearchConstants.IMPLEMENTORS:
                    return Messages.format(SearchMessages.JavaSearchOperation_singularImplementorsPostfix, args);
                case IJavaSearchConstants.DECLARATIONS:
                    return Messages.format(SearchMessages.JavaSearchOperation_singularDeclarationsPostfix, args);
                case IJavaSearchConstants.REFERENCES:
                    return Messages.format(SearchMessages.JavaSearchOperation_singularReferencesPostfix, args);
                case IJavaSearchConstants.ALL_OCCURRENCES:
                    return Messages.format(SearchMessages.JavaSearchOperation_singularOccurrencesPostfix, args);
                case IJavaSearchConstants.READ_ACCESSES:
                    return Messages.format(SearchMessages.JavaSearchOperation_singularReadReferencesPostfix, args);
                case IJavaSearchConstants.WRITE_ACCESSES:
                    return Messages.format(SearchMessages.JavaSearchOperation_singularWriteReferencesPostfix, args);
                default:
                    String matchLocations = MatchLocations.getMatchLocationDescription(limitTo, 3);
                    return Messages.format(SearchMessages.JavaSearchQuery_singularReferencesWithMatchLocations,
                                           new Object[]{args[0], args[1], matchLocations});
            }
        } else {
            Object[] args = {getSearchPatternDescription(), new Integer(nMatches), fPatternData.getScopeDescription()};
            switch (limitTo) {
                case IJavaSearchConstants.IMPLEMENTORS:
                    return Messages.format(SearchMessages.JavaSearchOperation_pluralImplementorsPostfix, args);
                case IJavaSearchConstants.DECLARATIONS:
                    return Messages.format(SearchMessages.JavaSearchOperation_pluralDeclarationsPostfix, args);
                case IJavaSearchConstants.REFERENCES:
                    return Messages.format(SearchMessages.JavaSearchOperation_pluralReferencesPostfix, args);
                case IJavaSearchConstants.ALL_OCCURRENCES:
                    return Messages.format(SearchMessages.JavaSearchOperation_pluralOccurrencesPostfix, args);
                case IJavaSearchConstants.READ_ACCESSES:
                    return Messages.format(SearchMessages.JavaSearchOperation_pluralReadReferencesPostfix, args);
                case IJavaSearchConstants.WRITE_ACCESSES:
                    return Messages.format(SearchMessages.JavaSearchOperation_pluralWriteReferencesPostfix, args);
                default:
                    String matchLocations = MatchLocations.getMatchLocationDescription(limitTo, 3);
                    return Messages.format(SearchMessages.JavaSearchQuery_pluralReferencesWithMatchLocations,
                                           new Object[]{args[0], args[1], args[2], matchLocations});
            }
        }
    }

