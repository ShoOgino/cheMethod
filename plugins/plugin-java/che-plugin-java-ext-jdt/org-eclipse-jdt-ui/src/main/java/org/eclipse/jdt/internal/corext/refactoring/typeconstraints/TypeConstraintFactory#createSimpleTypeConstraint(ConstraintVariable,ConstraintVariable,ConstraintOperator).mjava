	// Only to be called by the createXXXConstraint() methods
	private SimpleTypeConstraint createSimpleTypeConstraint(ConstraintVariable v1, ConstraintVariable v2, ConstraintOperator operator) {
		if (fSimpleConstraints.containsKey(v1)) {
			Map<ConstraintVariable, Map<ConstraintOperator, SimpleTypeConstraint>> m2 = fSimpleConstraints.get(v1);
			if (m2.containsKey(v2)) {
				Map<ConstraintOperator, SimpleTypeConstraint> m3 = m2.get(v2);
				if (m3.containsKey(operator)) {
					if (PRINT_STATS) fNrRetrieved++;
					if (PRINT_STATS) dumpStats();
					return m3.get(operator);
				} else {
					return storeConstraint(v1, v2, operator, m3);
				}
			} else {
				Map<ConstraintOperator, SimpleTypeConstraint> m3 = new HashMap<ConstraintOperator, SimpleTypeConstraint>();
				m2.put(v2, m3);
				return storeConstraint(v1, v2, operator, m3);
			}
		} else {
			Map<ConstraintVariable, Map<ConstraintOperator, SimpleTypeConstraint>> m2 =
					new HashMap<ConstraintVariable, Map<ConstraintOperator, SimpleTypeConstraint>>();
			fSimpleConstraints.put(v1, m2);
			Map<ConstraintOperator, SimpleTypeConstraint> m3 = new HashMap<ConstraintOperator, SimpleTypeConstraint>();
			m2.put(v2, m3);
			return storeConstraint(v1, v2, operator, m3);
		}
	}

