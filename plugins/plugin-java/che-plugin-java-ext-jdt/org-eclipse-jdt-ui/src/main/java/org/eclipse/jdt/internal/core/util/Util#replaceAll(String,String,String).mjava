    /**
     * Foundation replacement for <code>String#replaceAll(String,
     * String)</code>, but <strong>without support for regular
     * expressions</strong>.
     *
     * @param src the original string
     * @param find the string to find
     * @param replacement the replacement string
     * @return the new string, with all occurrences of <code>find</code>
     *         replaced by <code>replacement</code> (not using regular
     *         expressions)
     * @since 3.4
     */
    public static final String replaceAll(String src, String find, String replacement) {
        final int len = src.length();
        final int findLen = find.length();

        int idx = src.indexOf(find);
        if (idx < 0) {
            return src;
        }

        StringBuffer buf = new StringBuffer();
        int beginIndex = 0;
        while (idx != -1 && idx < len) {
            buf.append(src.substring(beginIndex, idx));
            buf.append(replacement);

            beginIndex = idx + findLen;
            if (beginIndex < len) {
                idx = src.indexOf(find, beginIndex);
            } else {
                idx = -1;
            }
        }
        if (beginIndex<len) {
            buf.append(src.substring(beginIndex, (idx==-1?len:idx)));
        }
        return buf.toString();
    }

