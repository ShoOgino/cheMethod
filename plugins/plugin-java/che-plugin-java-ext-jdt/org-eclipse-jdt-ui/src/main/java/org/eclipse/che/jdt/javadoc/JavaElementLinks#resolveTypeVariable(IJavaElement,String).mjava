  private static ITypeParameter resolveTypeVariable(
      IJavaElement baseElement, String typeVariableName) throws JavaModelException {
    while (baseElement != null) {
      switch (baseElement.getElementType()) {
        case IJavaElement.METHOD:
          IMethod method = (IMethod) baseElement;
          ITypeParameter[] typeParameters = method.getTypeParameters();
          for (int i = 0; i < typeParameters.length; i++) {
            ITypeParameter typeParameter = typeParameters[i];
            if (typeParameter.getElementName().equals(typeVariableName)) {
              return typeParameter;
            }
          }
          break;

        case IJavaElement.TYPE:
          IType type = (IType) baseElement;
          typeParameters = type.getTypeParameters();
          for (int i = 0; i < typeParameters.length; i++) {
            ITypeParameter typeParameter = typeParameters[i];
            if (typeParameter.getElementName().equals(typeVariableName)) {
              return typeParameter;
            }
          }
          break;

        case IJavaElement.JAVA_MODEL:
        case IJavaElement.JAVA_PROJECT:
        case IJavaElement.PACKAGE_FRAGMENT:
        case IJavaElement.PACKAGE_FRAGMENT_ROOT:

        case IJavaElement.CLASS_FILE:
        case IJavaElement.COMPILATION_UNIT:

        case IJavaElement.PACKAGE_DECLARATION:
        case IJavaElement.IMPORT_CONTAINER:
        case IJavaElement.IMPORT_DECLARATION:
          return null;

        default:
          break;
      }
      // look for type parameters in enclosing members:
      baseElement = baseElement.getParent();
    }
    return null;
  }

