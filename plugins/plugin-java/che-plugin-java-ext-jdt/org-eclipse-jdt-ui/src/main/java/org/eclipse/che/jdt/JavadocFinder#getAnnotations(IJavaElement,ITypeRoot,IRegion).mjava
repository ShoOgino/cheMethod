    private String getAnnotations(IJavaElement element, ITypeRoot editorInputElement, IRegion hoverRegion)
            throws URISyntaxException, JavaModelException {
        if (!(element instanceof IPackageFragment)) {
            if (!(element instanceof IAnnotatable))
                return null;

            if (((IAnnotatable)element).getAnnotations().length == 0)
                return null;
        }

        IBinding binding = null;
        //TODO
        ASTNode node = null; //getHoveredASTNode(editorInputElement, hoverRegion);

        if (node == null) {
            //todo use ast ported parser,that uses our java model
//            ASTParser p = ASTParser.newParser(ASTProvider.SHARED_AST_LEVEL);
//            p.setProject(element.getJavaProject());
//            p.setBindingsRecovery(true);
//            try {
//                binding = p.createBindings(new IJavaElement[]{element}, null)[0];
//            } catch (OperationCanceledException e) {
//                return null;
//            }

        } else {
            binding = resolveBinding(node);
        }

        if (binding == null)
            return null;

        IAnnotationBinding[] annotations = binding.getAnnotations();
        if (annotations.length == 0)
            return null;

        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < annotations.length; i++) {
            //TODO: skip annotations that don't have an @Documented annotation?
            addAnnotation(buf, element, annotations[i]);
            buf.append("<br>"); //$NON-NLS-1$
        }

        return buf.toString();
    }

