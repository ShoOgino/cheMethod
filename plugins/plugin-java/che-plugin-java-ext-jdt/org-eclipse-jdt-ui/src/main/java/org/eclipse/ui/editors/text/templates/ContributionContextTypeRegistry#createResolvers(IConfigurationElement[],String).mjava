  /**
   * Instantiates the resolvers contributed to the context type with id <code>contextTypeId</code>.
   * If instantiation of one resolver fails, the exception are logged and operation continues.
   *
   * @param extensions the configuration elements to parse
   * @param contextTypeId the id of the context type for which resolvers are instantiated
   * @return the instantiated resolvers
   */
  private static TemplateVariableResolver[] createResolvers(
      IConfigurationElement[] extensions, String contextTypeId) {
    List resolvers = new ArrayList();
    for (int i = 0; i < extensions.length; i++) {
      if (extensions[i].getName().equals(RESOLVER)) {
        String declaredId = extensions[i].getAttribute(CONTEXT_TYPE_ID);
        if (contextTypeId.equals(declaredId)) {
          try {
            TemplateVariableResolver resolver = createResolver(extensions[i]);
            if (resolver != null) resolvers.add(resolver);
          } catch (CoreException e) {
            JavaPlugin.log(e);
          }
        }
      }
    }

    return (TemplateVariableResolver[])
        resolvers.toArray(new TemplateVariableResolver[resolvers.size()]);
  }

