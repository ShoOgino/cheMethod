    private int appendMethodDeclaration(StringBuffer cuString, String[] types, int parameterCount)
        throws JavaModelException {
      int flags = fMethod.getFlags();
      if (Flags.isStatic(flags)) {
        cuString.append("static "); // $NON-NLS-1$
      } else if (Flags.isDefaultMethod(flags)) {
        cuString.append("default "); // $NON-NLS-1$
      }

      ITypeParameter[] methodTypeParameters = fMethod.getTypeParameters();
      if (methodTypeParameters.length != 0) {
        cuString.append('<');
        for (int i = 0; i < methodTypeParameters.length; i++) {
          ITypeParameter typeParameter = methodTypeParameters[i];
          if (i > 0) cuString.append(',');
          cuString.append(typeParameter.getElementName());
        }
        cuString.append("> "); // $NON-NLS-1$
      }

      cuString.append(types[parameterCount]).append(' ');
      int offsetBeforeMethodName = cuString.length();
      cuString.append(METHOD_NAME).append('(');
      for (int i = 0; i < parameterCount; i++) {
        if (i > 0) cuString.append(',');
        cuString.append(types[i]).append(" p").append(i); // $NON-NLS-1$
      }
      cuString.append(");"); // $NON-NLS-1$

      return offsetBeforeMethodName;
    }

