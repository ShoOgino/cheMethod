  /**
   * Finds and returns the <code>ASTNode</code> for the given source text selection, if it is an
   * entire constructor call or the class name portion of a constructor call or constructor
   * declaration, or null otherwise.
   *
   * @param unit The compilation unit in which the selection was made
   * @param offset The textual offset of the start of the selection
   * @param length The length of the selection in characters
   * @return ClassInstanceCreation or MethodDeclaration
   */
  private ASTNode getTargetNode(ICompilationUnit unit, int offset, int length) {
    ASTNode node = ASTNodes.getNormalizedNode(NodeFinder.perform(fCU, offset, length));
    if (node.getNodeType() == ASTNode.CLASS_INSTANCE_CREATION) return node;
    if (node.getNodeType() == ASTNode.METHOD_DECLARATION
        && ((MethodDeclaration) node).isConstructor()) return node;
    // we have some sub node. Make sure its the right child of the parent
    StructuralPropertyDescriptor location = node.getLocationInParent();
    ASTNode parent = node.getParent();
    if (location == ClassInstanceCreation.TYPE_PROPERTY) {
      return parent;
    } else if (location == MethodDeclaration.NAME_PROPERTY
        && ((MethodDeclaration) parent).isConstructor()) {
      return parent;
    }
    return null;
  }

