    @Override
    public void rewriteAST(CompilationUnitRewrite cuRewrite, LinkedProposalModel linkedModel)
        throws CoreException {
      TextEditGroup group =
          createTextEditGroup(
              FixMessages.NullAnnotationsRewriteOperations_remove_redundant_nullness_annotation,
              cuRewrite);
      ASTRewrite astRewrite = cuRewrite.getASTRewrite();

      CompilationUnit astRoot = fCompilationUnit;
      ASTNode selectedNode = fProblem.getCoveringNode(astRoot);

      if (fProblem.getProblemId() == IProblem.RedundantNullAnnotation) {
        List<IExtendedModifier> modifiers;
        if (selectedNode instanceof SingleVariableDeclaration) {
          SingleVariableDeclaration singleVariableDeclaration =
              (SingleVariableDeclaration) selectedNode;
          modifiers = singleVariableDeclaration.modifiers();
        } else if (selectedNode instanceof MethodDeclaration) {
          MethodDeclaration methodDeclaration = (MethodDeclaration) selectedNode;
          modifiers = methodDeclaration.modifiers();
        } else {
          return;
        }

        for (Iterator<IExtendedModifier> iterator = modifiers.iterator(); iterator.hasNext(); ) {
          IExtendedModifier modifier = iterator.next();
          if (modifier instanceof MarkerAnnotation) {
            MarkerAnnotation annotation = (MarkerAnnotation) modifier;
            IAnnotationBinding annotationBinding = annotation.resolveAnnotationBinding();
            String name = annotationBinding.getName();
            if (name.equals(
                NullAnnotationsFix.getNonNullAnnotationName(
                    fCompilationUnit.getJavaElement(), true))) {
              astRewrite.remove(annotation, group);
            }
          }
        }
      } else {
        if (!(selectedNode instanceof MarkerAnnotation)) return;
        MarkerAnnotation annotation = (MarkerAnnotation) selectedNode;
        IAnnotationBinding annotationBinding = annotation.resolveAnnotationBinding();
        String name = annotationBinding.getName();
        if (name.equals(
            NullAnnotationsFix.getNonNullByDefaultAnnotationName(
                fCompilationUnit.getJavaElement(), true))) {
          astRewrite.remove(annotation, group);
        }
      }
    }

