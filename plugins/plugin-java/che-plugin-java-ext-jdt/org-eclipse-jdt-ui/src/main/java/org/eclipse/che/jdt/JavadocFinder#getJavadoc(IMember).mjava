    private String getJavadoc(IMember element) {
        StringBuffer buffer = new StringBuffer();
        boolean hasContents = false;
        if (element instanceof IPackageFragment || element instanceof IMember) {
            HTMLPrinter.addSmallHeader(buffer, getInfoText(element, element.getTypeRoot(), true));
            buffer.append("<br>"); //$NON-NLS-1$
            addAnnotations(buffer, element, element.getTypeRoot(), null);
            Reader reader = null;
            try {
                String content = element instanceof IMember
                                 ? JavadocContentAccess2.getHTMLContent(element, true, baseHref)
                                 : null;//JavadocContentAccess2.getHTMLContent((IPackageFragment)element);
                IPackageFragmentRoot root = (IPackageFragmentRoot)element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);
                if (content != null) {
                    reader = new StringReader(content);
                } else {
                    String explanationForMissingJavadoc = JavaDocLocations.getExplanationForMissingJavadoc(element, root);
                    if (explanationForMissingJavadoc != null)
                        reader = new StringReader(explanationForMissingJavadoc);
                }
            } catch (CoreException ex) {
                reader = new StringReader(JavaDocLocations.handleFailedJavadocFetch(ex));
            }

            if (reader != null) {
                HTMLPrinter.addParagraph(buffer, reader);
            }
            hasContents = true;
        }

        if (!hasContents)
            return null;

        if (buffer.length() > 0) {
            HTMLPrinter.insertPageProlog(buffer, 0, getStyleSheet());
            HTMLPrinter.addPageEpilog(buffer);
            return buffer.toString();
        }

        return null;
    }

