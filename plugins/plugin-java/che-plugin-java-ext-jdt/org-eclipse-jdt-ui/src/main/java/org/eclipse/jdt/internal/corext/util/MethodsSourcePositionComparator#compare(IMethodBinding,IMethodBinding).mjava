  public int compare(IMethodBinding firstMethodBinding, IMethodBinding secondMethodBinding) {
    if (firstMethodBinding == null || secondMethodBinding == null) {
      return 0;
    }
    ITypeBinding firstMethodType = firstMethodBinding.getDeclaringClass();
    ITypeBinding secondMethodType = secondMethodBinding.getDeclaringClass();

    if (firstMethodType.equals(secondMethodType)) {
      return compareInTheSameType(firstMethodBinding, secondMethodBinding);
    }

    if (firstMethodType.equals(fTypeBinding)) {
      return 1;
    }
    if (secondMethodType.equals(fTypeBinding)) {
      return -1;
    }

    ITypeBinding type = fTypeBinding;
    int count = 0, firstCount = -1, secondCount = -1;
    while ((type = type.getSuperclass()) != null) {
      if (firstMethodType.equals(type)) {
        firstCount = count;
      }
      if (secondMethodType.equals(type)) {
        secondCount = count;
      }
      count++;
    }
    if (firstCount != -1 && secondCount != -1) {
      return (firstCount - secondCount);
    }
    if (firstCount != -1 && secondCount == -1) {
      return 1;
    }
    if (firstCount == -1 && secondCount != -1) {
      return -1;
    }

    ITypeBinding[] interfaces = fTypeBinding.getInterfaces();
    for (int i = 0; i < interfaces.length; i++) {
      if (firstMethodType.equals(interfaces[i])) {
        return 1;
      }
      if (secondMethodType.equals(interfaces[i])) {
        return -1;
      }
    }
    return 0;
  }

