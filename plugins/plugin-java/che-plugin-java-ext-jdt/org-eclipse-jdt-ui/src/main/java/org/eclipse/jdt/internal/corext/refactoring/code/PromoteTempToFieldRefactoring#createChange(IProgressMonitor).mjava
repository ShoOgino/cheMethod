  /*
   * @see org.eclipse.jdt.internal.corext.refactoring.base.IRefactoring#createChange(org.eclipse.core.runtime.IProgressMonitor)
   */
  @Override
  public Change createChange(IProgressMonitor pm) throws CoreException {
    pm.beginTask("", 1); // $NON-NLS-1$
    try {
      if (fFieldName.length() == 0) {
        fFieldName = getInitialFieldName();
      }

      ASTRewrite rewrite = ASTRewrite.create(fCompilationUnitNode.getAST());
      if (fInitializeIn == INITIALIZE_IN_METHOD && tempHasInitializer())
        addLocalDeclarationSplit(rewrite);
      else addLocalDeclarationRemoval(rewrite);
      if (fInitializeIn == INITIALIZE_IN_CONSTRUCTOR) addInitializersToConstructors(rewrite);
      addTempRenames(rewrite);
      addFieldDeclaration(rewrite);

      CompilationUnitChange result =
          new CompilationUnitChange(
              RefactoringCoreMessages.PromoteTempToFieldRefactoring_name, fCu);
      result.setDescriptor(new RefactoringChangeDescriptor(getRefactoringDescriptor()));
      TextEdit resultingEdits = rewrite.rewriteAST();
      TextChangeCompatibility.addTextEdit(
          result, RefactoringCoreMessages.PromoteTempToFieldRefactoring_editName, resultingEdits);
      return result;

    } finally {
      pm.done();
    }
  }

