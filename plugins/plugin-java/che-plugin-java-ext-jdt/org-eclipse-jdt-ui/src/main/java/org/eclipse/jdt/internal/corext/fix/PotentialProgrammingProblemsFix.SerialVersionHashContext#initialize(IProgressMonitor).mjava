    public RefactoringStatus initialize(IProgressMonitor monitor) throws CoreException {
      if (monitor == null) monitor = new NullProgressMonitor();

      RefactoringStatus result;
      try {
        monitor.beginTask("", 10); // $NON-NLS-1$

        IType[] types =
            findTypesWithMissingUID(
                fProject, fCompilationUnits, new SubProgressMonitor(monitor, 1));
        if (types.length == 0) return new RefactoringStatus();

        // TODO disable build
        //				fProject.getProject().build(IncrementalProjectBuilder.INCREMENTAL_BUILD, new
        // SubProgressMonitor(monitor, 60));
        if (monitor.isCanceled()) throw new OperationCanceledException();

        result = new RefactoringStatus();
        ASTParser parser = ASTParser.newParser(ASTProvider.SHARED_AST_LEVEL);
        parser.setProject(fProject);
        IBinding[] bindings = parser.createBindings(types, new SubProgressMonitor(monitor, 1));
        for (int i = 0; i < bindings.length; i++) {
          IBinding curr = bindings[i];
          if (curr instanceof ITypeBinding) {
            ITypeBinding typeBinding = (ITypeBinding) curr;
            //						try {
            Long id = 0L; // SerialVersionHashOperation.calculateSerialVersionId(typeBinding, new
            // SubProgressMonitor(monitor, 1));
            if (id != null) {
              setSerialVersionId(typeBinding, id);
            } else {
              result.addWarning(
                  Messages.format(
                      FixMessages.PotentialProgrammingProblemsFix_calculatingUIDFailed_unknown,
                      BasicElementLabels.getJavaElementName(typeBinding.getName())));
            }
            //						} catch (IOException e) {
            //
            //	result.addWarning(Messages.format(FixMessages.PotentialProgrammingProblemsFix_calculatingUIDFailed_exception,
            //															  new
            // String[]{BasicElementLabels.getJavaElementName(typeBinding.getName()),
            //																		   e.getLocalizedMessage()}), JavaStatusContext.create(types[i]));
            //						} catch (CoreException e) {
            //
            //	result.addWarning(Messages.format(FixMessages.PotentialProgrammingProblemsFix_calculatingUIDFailed_exception,
            //															  new
            // String[]{BasicElementLabels.getJavaElementName(typeBinding.getName()),
            //																		   e.getLocalizedMessage()}), JavaStatusContext.create(types[i]));
            //						}
          }
        }
      } finally {
        monitor.done();
      }
      return result;
    }

