  /*
   * @param projects a collection of IJavaProject
   * @return Array of IPackageFragmentRoot, one element for each packageFragmentRoot which lies within a project in <code> projects </code> .
   */
  private static IPackageFragmentRoot[] getAllScopeElements(
      IJavaProject project, boolean onlySourceRoots) throws JavaModelException {
    Collection<IJavaProject> referencingProjects = getReferencingProjects(project);
    List<IPackageFragmentRoot> result = new ArrayList<IPackageFragmentRoot>();
    for (Iterator<IJavaProject> it = referencingProjects.iterator(); it.hasNext(); ) {
      IJavaProject javaProject = it.next();
      IPackageFragmentRoot[] roots = javaProject.getPackageFragmentRoots();
      // Add all package fragment roots except archives
      for (int i = 0; i < roots.length; i++) {
        IPackageFragmentRoot root = roots[i];
        if (!onlySourceRoots || root.getKind() == IPackageFragmentRoot.K_SOURCE) result.add(root);
      }
    }
    return result.toArray(new IPackageFragmentRoot[result.size()]);
  }

