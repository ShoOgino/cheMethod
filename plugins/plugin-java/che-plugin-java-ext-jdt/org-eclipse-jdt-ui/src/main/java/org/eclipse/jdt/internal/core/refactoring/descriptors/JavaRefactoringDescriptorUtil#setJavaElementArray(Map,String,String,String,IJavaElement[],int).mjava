  /**
   * Inserts the resources into the map.
   *
   * @param arguments arguments the map with <code>&lt;String, String&gt;</code> mapping
   * @param countAttribute the attribute where the number of elements will be stored. Can be <code>
   *     null</code> if no count attribute should be created
   * @param arrayAttributePrefix the name prefix of the attributes where the elements will be stored
   * @param project the project of the elements or <code>null</code>
   * @param elements the elements to store
   * @param offset the offset to start at (usually 1)
   * @throws IllegalArgumentException if the attribute name is invalid or any of the elements are
   *     null
   */
  public static void setJavaElementArray(
      Map arguments,
      String countAttribute,
      String arrayAttributePrefix,
      String project,
      IJavaElement[] elements,
      int offset)
      throws IllegalArgumentException {
    if (elements == null)
      throw new IllegalArgumentException(
          "The elements for arrayAttribute '"
              + arrayAttributePrefix
              + "' may not be null"); // $NON-NLS-1$ //$NON-NLS-2$
    if (countAttribute != null) setInt(arguments, countAttribute, elements.length);
    for (int i = 0; i < elements.length; i++) {
      IJavaElement element = elements[i];
      setJavaElement(
          arguments, getAttributeName(arrayAttributePrefix, offset + i), project, element);
    }
  }

