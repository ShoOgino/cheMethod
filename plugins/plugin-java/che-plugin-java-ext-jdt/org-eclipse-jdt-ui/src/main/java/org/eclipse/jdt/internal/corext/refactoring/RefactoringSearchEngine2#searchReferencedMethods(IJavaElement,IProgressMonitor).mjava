  /**
   * Performs the search of referenced methods.
   *
   * @param element the java element whose referenced methods have to be found
   * @param monitor the progress monitor, or <code>null</code>
   * @throws JavaModelException if an error occurs during search
   */
  public final void searchReferencedMethods(final IJavaElement element, IProgressMonitor monitor)
      throws JavaModelException {
    Assert.isNotNull(element);
    if (monitor == null) monitor = new NullProgressMonitor();
    try {
      monitor.beginTask("", 1); //$NON-NLS-1$
      monitor.setTaskName(
          RefactoringCoreMessages.RefactoringSearchEngine_searching_referenced_methods);
      try {
        SearchEngine engine = null;
        if (fOwner != null) engine = new SearchEngine(fOwner);
        else engine = new SearchEngine(fWorkingCopies);
        engine.searchDeclarationsOfSentMessages(
            element,
            getCollector(),
            new SubProgressMonitor(monitor, 1, SubProgressMonitor.SUPPRESS_SUBTASK_LABEL));
      } catch (CoreException exception) {
        throw new JavaModelException(exception);
      }
    } finally {
      monitor.done();
    }
  }

