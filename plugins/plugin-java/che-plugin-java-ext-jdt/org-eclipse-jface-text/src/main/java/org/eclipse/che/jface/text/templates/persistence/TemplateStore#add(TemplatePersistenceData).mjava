  /**
   * Adds a template encapsulated in its persistent form.
   *
   * @param data the template to add
   */
  public void add(TemplatePersistenceData data) {

    if (!validateTemplate(data.getTemplate())) return;

    if (data.isUserAdded()) {
      fTemplates.add(data);
    } else {
      for (Iterator it = fTemplates.iterator(); it.hasNext(); ) {
        TemplatePersistenceData d2 = (TemplatePersistenceData) it.next();
        if (d2.getId() != null && d2.getId().equals(data.getId())) {
          d2.setTemplate(data.getTemplate());
          d2.setDeleted(data.isDeleted());
          d2.setEnabled(data.isEnabled());
          return;
        }
      }

      // add an id which is not contributed as add-on
      if (data.getTemplate() != null) {
        TemplatePersistenceData newData =
            new TemplatePersistenceData(data.getTemplate(), data.isEnabled());
        fTemplates.add(newData);
      }
    }
  }

