  /**
   * Performs the initial partitioning of the partitioner's document.
   *
   * <p>May be extended by subclasses.
   */
  protected void initialize() {
    fIsInitialized = true;
    clearPositionCache();
    fScanner.setRange(fDocument, 0, fDocument.getLength());

    try {
      IToken token = fScanner.nextToken();
      while (!token.isEOF()) {

        String contentType = getTokenContentType(token);

        if (isSupportedContentType(contentType)) {
          TypedPosition p =
              new TypedPosition(fScanner.getTokenOffset(), fScanner.getTokenLength(), contentType);
          fDocument.addPosition(fPositionCategory, p);
        }

        token = fScanner.nextToken();
      }
    } catch (BadLocationException x) {
      // cannot happen as offsets come from scanner
    } catch (BadPositionCategoryException x) {
      // cannot happen if document has been connected before
    }
  }

