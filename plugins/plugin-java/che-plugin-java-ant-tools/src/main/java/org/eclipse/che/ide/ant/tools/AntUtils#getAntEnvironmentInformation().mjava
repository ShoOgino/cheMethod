    public static Map<String, String> getAntEnvironmentInformation() throws IOException {
        final Map<String, String> versionInfo = new HashMap<>();
        final LineConsumer cmdOutput = new LineConsumer() {
            boolean end = false;

            @Override
            public void writeLine(String line) throws IOException {
                if (line.isEmpty()) {
                    end = true;
                }
                if (end) {
                    return;
                }
                String key = null;
                int keyEnd = 0;
                int valueStart = 0;
                final int l = line.length();
                while (keyEnd < l) {
                    if (line.charAt(keyEnd) == ':') {
                        valueStart = keyEnd + 1;
                        break;
                    }
                    keyEnd++;
                }
                if (keyEnd > 0) {
                    key = line.substring(0, keyEnd);
                }
                if (key != null) {
                    while (valueStart < l && Character.isWhitespace(line.charAt(valueStart))) {
                        valueStart++;
                    }
                    if ("Ant version".equals(key)) {
                        int valueEnd = line.indexOf("compiled on", valueStart);
                        final String value = line.substring(valueStart, valueEnd).trim();
                        versionInfo.put(key, value);
                    } else {
                        final String value = line.substring(valueStart);
                        versionInfo.put(key, value);
                    }
                }
            }

            @Override
            public void close() throws IOException {
            }
        };
        readAntEnvironmentInformation(cmdOutput);
        return versionInfo;
    }

