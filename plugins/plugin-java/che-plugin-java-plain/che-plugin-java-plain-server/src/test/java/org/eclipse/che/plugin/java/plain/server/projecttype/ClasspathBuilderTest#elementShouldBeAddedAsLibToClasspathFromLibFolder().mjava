    @Test
    public void elementShouldBeAddedAsLibToClasspathFromLibFolder() throws Exception {
        Path jarPath = new Path(LIBRARY + "/a.jar");

        library.add(LIBRARY);
        IFolder libraryFolder1 = mock(IFolder.class);
        IResourceProxy iResourceProxy = mock(IResourceProxy.class);
        IResource iResource = mock(IResource.class);

        when(iProject.getFolder(LIBRARY)).thenReturn(libraryFolder1);
        when(libraryFolder1.exists()).thenReturn(true);
        when(iResourceProxy.getType()).thenReturn(IResource.FILE);
        when(iResourceProxy.requestFullPath()).thenReturn(jarPath);
        when(iResourceProxy.requestResource()).thenReturn(iResource);
        when(iResource.getLocation()).thenReturn(jarPath);

        classpathBuilder.generateClasspath(iJavaProject, sourceFolders, library);

        ArgumentCaptor<IResourceProxyVisitor> resourceProxyVisitorArgumentCaptor = ArgumentCaptor.forClass(IResourceProxyVisitor.class);
        verify(libraryFolder1).accept(resourceProxyVisitorArgumentCaptor.capture(), eq(IContainer.INCLUDE_PHANTOMS));

        resourceProxyVisitorArgumentCaptor.getValue().visit(iResourceProxy);
        verify(iResourceProxy).getType();

        assertEquals(jarPath, iResource.getLocation());
    }

