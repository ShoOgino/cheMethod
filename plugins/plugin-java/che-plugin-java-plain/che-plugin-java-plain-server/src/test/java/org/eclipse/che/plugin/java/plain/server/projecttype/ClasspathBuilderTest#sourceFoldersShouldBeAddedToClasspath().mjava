    @Test
    public void sourceFoldersShouldBeAddedToClasspath() throws Exception {
        IFolder sourceFolder1 = mock(IFolder.class);
        IFolder sourceFolder2 = mock(IFolder.class);

        when(iProject.getFolder(SOURCE_FOLDER1)).thenReturn(sourceFolder1);
        when(iProject.getFolder(SOURCE_FOLDER2)).thenReturn(sourceFolder2);
        when(sourceFolder1.exists()).thenReturn(true);
        when(sourceFolder1.getFullPath()).thenReturn(new Path(SOURCE_FOLDER1));
        when(sourceFolder2.exists()).thenReturn(true);
        when(sourceFolder2.getFullPath()).thenReturn(new Path(SOURCE_FOLDER2));

        sourceFolders.add(SOURCE_FOLDER1);
        sourceFolders.add(SOURCE_FOLDER2);

        classpathBuilder.generateClasspath(iJavaProject, sourceFolders, library);

        verify(iProject, times(2)).getFolder(anyString());

        ArgumentCaptor<IClasspathEntry[]> classpathEntriesCapture = ArgumentCaptor.forClass(IClasspathEntry[].class);
        verify(iJavaProject).setRawClasspath(classpathEntriesCapture.capture(), eq(null));

        List<IClasspathEntry> classpathEntries = asList(classpathEntriesCapture.getValue());
        assertEquals(3, classpathEntries.size());
        assertThat(classpathEntries).onProperty("path").containsOnly(new Path(JREContainerInitializer.JRE_CONTAINER),
                                                                     new Path(SOURCE_FOLDER1),
                                                                     new Path(SOURCE_FOLDER2));
    }

