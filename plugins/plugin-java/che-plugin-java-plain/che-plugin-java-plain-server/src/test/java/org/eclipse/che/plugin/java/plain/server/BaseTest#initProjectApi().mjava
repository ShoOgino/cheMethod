    @BeforeClass
    protected void initProjectApi() throws Exception {
        JavaPlugin javaPlugin = new JavaPlugin(wsPath + "/set", null, null);
        EventService eventService = new EventService();

        TestWorkspaceHolder workspaceHolder = new TestWorkspaceHolder();

        if (root == null)
            root = new File(wsPath);

        if (root.exists()) {
            IoUtil.deleteRecursive(root);
        }
        root.mkdir();

        File indexDir = new File(INDEX_PATH);

        if (indexDir.exists()) {
            IoUtil.deleteRecursive(indexDir);
        }
        indexDir.mkdir();

        Set<PathMatcher> filters = new HashSet<>();
        filters.add(path -> true);

        FSLuceneSearcherProvider sProvider = new FSLuceneSearcherProvider(indexDir, filters);
        vfsProvider = new LocalVirtualFileSystemProvider(root, sProvider);
        ProjectTypeRegistry projectTypeRegistry = new ProjectTypeRegistry(new HashSet<>());

        projectTypeRegistry.registerProjectType(new JavaProjectType(new JavaValueProviderFactory()));
        projectTypeRegistry.registerProjectType(new PlainJavaProjectType(new PlainJavaValueProviderFactory()));

        ProjectHandlerRegistry projectHandlerRegistry = new ProjectHandlerRegistry(new HashSet<>());

        projectRegistry = new ProjectRegistry(workspaceHolder, vfsProvider, projectTypeRegistry, projectHandlerRegistry, eventService);
        projectRegistry.initProjects();

        ProjectImporterRegistry importerRegistry = new ProjectImporterRegistry(new HashSet<>());
        FileWatcherNotificationHandler fileWatcherNotificationHandler = new DefaultFileWatcherNotificationHandler(vfsProvider);
        FileTreeWatcher fileTreeWatcher = new FileTreeWatcher(root, new HashSet<>(), fileWatcherNotificationHandler);

        projectTreeChangesDetector = new ProjectTreeChangesDetector(null);

        projectManager = new ProjectManager(vfsProvider,
                                            eventService,
                                            projectTypeRegistry,
                                            projectRegistry,
                                            projectHandlerRegistry,
                                            importerRegistry,
                                            fileWatcherNotificationHandler,
                                            fileTreeWatcher,
                                            new TestWorkspaceHolder(new ArrayList<>()), projectTreeChangesDetector);

        ResourcesPlugin plugin = new ResourcesPlugin("target/index", wsPath, () -> projectRegistry, () -> projectManager);

        plugin.start();
        javaPlugin.start();
    }

