  @Override
  public void onCreateProject(
      Path projectPath, Map<String, AttributeValue> attributes, Map<String, String> options)
      throws ForbiddenException, ConflictException, ServerException {
    List<String> sourceFolders;
    if (attributes.containsKey(SOURCE_FOLDER) && !attributes.get(SOURCE_FOLDER).isEmpty()) {
      sourceFolders = attributes.get(SOURCE_FOLDER).getList();
    } else {
      sourceFolders = singletonList(DEFAULT_SOURCE_FOLDER_VALUE);
    }

    VirtualFileSystem vfs = virtualFileSystemProvider.getVirtualFileSystem();
    FolderEntry baseFolder = new FolderEntry(vfs.getRoot().createFolder(projectPath.toString()));
    baseFolder.createFolder(DEFAULT_OUTPUT_FOLDER_VALUE);
    FolderEntry sourceFolder = baseFolder.createFolder(sourceFolders.get(0));

    sourceFolder.createFile(
        FILE_NAME, getClass().getClassLoader().getResourceAsStream("files/main_class_content"));

    IProject project =
        ResourcesPlugin.getWorkspace().getRoot().getProject(baseFolder.getPath().toString());
    IJavaProject javaProject = JavaCore.create(project);

    classpathBuilder.generateClasspath(
        javaProject, sourceFolders, singletonList(DEFAULT_LIBRARY_FOLDER_VALUE));
  }

