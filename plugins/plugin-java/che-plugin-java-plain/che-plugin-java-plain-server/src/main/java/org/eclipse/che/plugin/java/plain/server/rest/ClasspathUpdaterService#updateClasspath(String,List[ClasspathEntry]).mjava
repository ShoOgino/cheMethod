  /**
   * Updates the information about classpath.
   *
   * @param projectPath path to the current project
   * @param entries list of classpath entries which need to set
   * @throws ServerException if some server error
   * @throws ForbiddenException if operation is forbidden
   * @throws ConflictException if update operation causes conflicts
   * @throws NotFoundException if Project with specified path doesn't exist in workspace
   */
  @POST
  @Consumes(MediaType.APPLICATION_JSON)
  public void updateClasspath(
      @QueryParam("projectpath") String projectPath, List<ClasspathEntry> entries)
      throws ServerException, ForbiddenException, ConflictException, NotFoundException, IOException,
          BadRequestException {
    try {
      extensionService.updateClasspathWithResult(prefixURI(projectPath), entries).get();
      updateProjectConfig(projectManager, projectPath).get();
    } catch (InterruptedException | ExecutionException e) {
      LOG.error(e.getMessage());
    }

    notifyClientOnProjectUpdate(notifyTransmitter, projectPath);
  }

