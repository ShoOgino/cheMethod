  @Override
  protected void initializeClasspath(IJavaProject javaProject) throws ServerException {
    IClasspathEntry[] projectClasspath;
    try {
      projectClasspath = javaProject.getRawClasspath();
    } catch (JavaModelException e) {
      LOG.warn(
          "Can't get classpath for: " + javaProject.getProject().getFullPath().toOSString(), e);
      throw new ServerException(e);
    }

    // default classpath
    IClasspathEntry[] defaultClasspath =
        new IClasspathEntry[] {JavaCore.newSourceEntry(javaProject.getPath())};
    if (!Arrays.equals(defaultClasspath, projectClasspath)) {
      // classpath is already initialized
      return;
    }

    String wsPath = absolutize(javaProject.getPath().toOSString());
    RegisteredProject project =
        projectRegistryProvider
            .get()
            .get(wsPath)
            .orElseThrow(() -> new ServerException("Can't find a project: " + wsPath));

    List<String> sourceFolders = project.getAttributes().get(Constants.SOURCE_FOLDER);
    List<String> library = project.getAttributes().get(LIBRARY_FOLDER);

    classpathBuilder.generateClasspath(javaProject, sourceFolders, library);
  }

