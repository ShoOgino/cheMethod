    // $ANTLR start "literal"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:940:1: literal returns [ExpressionValue value] : (
    // HEX_LITERAL | OCTAL_LITERAL | DECIMAL_LITERAL | FLOATING_POINT_LITERAL | CHARACTER_LITERAL | STRING_LITERAL | TRUE | FALSE | NULL );
    public final ExpressionValue literal() throws RecognitionException {
        ExpressionValue value = null;
        int literal_StartIndex = input.index();
        CommonTree HEX_LITERAL45 = null;
        CommonTree OCTAL_LITERAL46 = null;
        CommonTree DECIMAL_LITERAL47 = null;
        CommonTree FLOATING_POINT_LITERAL48 = null;
        CommonTree CHARACTER_LITERAL49 = null;
        CommonTree STRING_LITERAL50 = null;
        CommonTree TRUE51 = null;
        CommonTree FALSE52 = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 71)) {
                return value;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:941:3: ( HEX_LITERAL | OCTAL_LITERAL |
            // DECIMAL_LITERAL | FLOATING_POINT_LITERAL | CHARACTER_LITERAL | STRING_LITERAL | TRUE | FALSE | NULL )
            int alt112 = 9;
            switch (input.LA(1)) {
                case HEX_LITERAL: {
                    alt112 = 1;
                }
                break;
                case OCTAL_LITERAL: {
                    alt112 = 2;
                }
                break;
                case DECIMAL_LITERAL: {
                    alt112 = 3;
                }
                break;
                case FLOATING_POINT_LITERAL: {
                    alt112 = 4;
                }
                break;
                case CHARACTER_LITERAL: {
                    alt112 = 5;
                }
                break;
                case STRING_LITERAL: {
                    alt112 = 6;
                }
                break;
                case TRUE: {
                    alt112 = 7;
                }
                break;
                case FALSE: {
                    alt112 = 8;
                }
                break;
                case NULL: {
                    alt112 = 9;
                }
                break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return value;
                    }
                    NoViableAltException nvae =
                            new NoViableAltException("", 112, 0, input);

                    throw nvae;
            }

            switch (alt112) {
                case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:942:3: HEX_LITERAL
                {
                    HEX_LITERAL45 = (CommonTree)match(input, HEX_LITERAL, FOLLOW_HEX_LITERAL_in_literal5125);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.hexValue((HEX_LITERAL45 != null ? HEX_LITERAL45.getText() : null));

                    }

                }
                break;
                case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:946:5: OCTAL_LITERAL
                {
                    OCTAL_LITERAL46 = (CommonTree)match(input, OCTAL_LITERAL, FOLLOW_OCTAL_LITERAL_in_literal5149);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.octalValue((OCTAL_LITERAL46 != null ? OCTAL_LITERAL46.getText() : null));

                    }

                }
                break;
                case 3:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:950:5: DECIMAL_LITERAL
                {
                    DECIMAL_LITERAL47 = (CommonTree)match(input, DECIMAL_LITERAL, FOLLOW_DECIMAL_LITERAL_in_literal5173);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.decimalValue((DECIMAL_LITERAL47 != null ? DECIMAL_LITERAL47.getText() : null));

                    }

                }
                break;
                case 4:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:954:5: FLOATING_POINT_LITERAL
                {
                    FLOATING_POINT_LITERAL48 =
                            (CommonTree)match(input, FLOATING_POINT_LITERAL, FOLLOW_FLOATING_POINT_LITERAL_in_literal5197);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.floating_pointValue((FLOATING_POINT_LITERAL48 != null ? FLOATING_POINT_LITERAL48.getText() : null));

                    }

                }
                break;
                case 5:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:958:5: CHARACTER_LITERAL
                {
                    CHARACTER_LITERAL49 = (CommonTree)match(input, CHARACTER_LITERAL, FOLLOW_CHARACTER_LITERAL_in_literal5221);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.charValue((CHARACTER_LITERAL49 != null ? CHARACTER_LITERAL49.getText() : null));

                    }

                }
                break;
                case 6:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:962:5: STRING_LITERAL
                {
                    STRING_LITERAL50 = (CommonTree)match(input, STRING_LITERAL, FOLLOW_STRING_LITERAL_in_literal5245);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.stringValue((STRING_LITERAL50 != null ? STRING_LITERAL50.getText() : null));

                    }

                }
                break;
                case 7:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:966:5: TRUE
                {
                    TRUE51 = (CommonTree)match(input, TRUE, FOLLOW_TRUE_in_literal5269);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.booleanValue((TRUE51 != null ? TRUE51.getText() : null));

                    }

                }
                break;
                case 8:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:970:5: FALSE
                {
                    FALSE52 = (CommonTree)match(input, FALSE, FOLLOW_FALSE_in_literal5293);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.booleanValue((FALSE52 != null ? FALSE52.getText() : null));

                    }

                }
                break;
                case 9:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:974:5: NULL
                {
                    match(input, NULL, FOLLOW_NULL_in_literal5317);
                    if (state.failed) return value;
                    if (state.backtracking == 0) {

                        value = ev.nullValue();

                    }

                }
                break;

            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 71, literal_StartIndex);
            }
        }
        return value;
    }
    // $ANTLR end "literal"

