    // $ANTLR start "statement"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:462:1: statement : ( block | ^( ASSERT expression (
    // expression )? ) | ^( IF parenthesizedExpression statement ( statement )? ) | ^( FOR forInit forCondition forUpdater statement ) |
    // ^( FOR_EACH localModifierList type IDENT expression statement ) | ^( WHILE parenthesizedExpression statement ) | ^( DO statement
    // parenthesizedExpression ) | ^( TRY block ( catches )? ( block )? ) | ^( SWITCH parenthesizedExpression switchBlockLabels ) | ^(
    // SYNCHRONIZED parenthesizedExpression block ) | ^( RETURN ( expression )? ) | ^( THROW expression ) | ^( BREAK ( IDENT )? ) | ^(
    // CONTINUE ( IDENT )? ) | ^( LABELED_STATEMENT IDENT statement ) | expression | SEMI );
    public final void statement() throws RecognitionException {
        int statement_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 51)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:463:3: ( block | ^( ASSERT expression (
            // expression )? ) | ^( IF parenthesizedExpression statement ( statement )? ) | ^( FOR forInit forCondition forUpdater
            // statement ) | ^( FOR_EACH localModifierList type IDENT expression statement ) | ^( WHILE parenthesizedExpression statement
            // ) | ^( DO statement parenthesizedExpression ) | ^( TRY block ( catches )? ( block )? ) | ^( SWITCH parenthesizedExpression
            // switchBlockLabels ) | ^( SYNCHRONIZED parenthesizedExpression block ) | ^( RETURN ( expression )? ) | ^( THROW expression
            // ) | ^( BREAK ( IDENT )? ) | ^( CONTINUE ( IDENT )? ) | ^( LABELED_STATEMENT IDENT statement ) | expression | SEMI )
            int alt80 = 17;
            switch (input.LA(1)) {
                case BLOCK_SCOPE: {
                    alt80 = 1;
                }
                break;
                case ASSERT: {
                    alt80 = 2;
                }
                break;
                case IF: {
                    alt80 = 3;
                }
                break;
                case FOR: {
                    alt80 = 4;
                }
                break;
                case FOR_EACH: {
                    alt80 = 5;
                }
                break;
                case WHILE: {
                    alt80 = 6;
                }
                break;
                case DO: {
                    alt80 = 7;
                }
                break;
                case TRY: {
                    alt80 = 8;
                }
                break;
                case SWITCH: {
                    alt80 = 9;
                }
                break;
                case SYNCHRONIZED: {
                    alt80 = 10;
                }
                break;
                case RETURN: {
                    alt80 = 11;
                }
                break;
                case THROW: {
                    alt80 = 12;
                }
                break;
                case BREAK: {
                    alt80 = 13;
                }
                break;
                case CONTINUE: {
                    alt80 = 14;
                }
                break;
                case LABELED_STATEMENT: {
                    alt80 = 15;
                }
                break;
                case EXPR: {
                    alt80 = 16;
                }
                break;
                case SEMI: {
                    alt80 = 17;
                }
                break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return;
                    }
                    NoViableAltException nvae =
                            new NoViableAltException("", 80, 0, input);

                    throw nvae;
            }

            switch (alt80) {
                case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:464:3: block
                {
                    pushFollow(FOLLOW_block_in_statement1597);
                    block();

                    state._fsp--;
                    if (state.failed) return;

                }
                break;
                case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:466:3: ^( ASSERT expression ( expression
                    // )? )
                {
                    match(input, ASSERT, FOLLOW_ASSERT_in_statement1606);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_expression_in_statement1608);
                    expression();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:466:23: ( expression )?
                    int alt73 = 2;
                    int LA73_0 = input.LA(1);

                    if ((LA73_0 == EXPR)) {
                        alt73 = 1;
                    }
                    switch (alt73) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: expression
                        {
                            pushFollow(FOLLOW_expression_in_statement1610);
                            expression();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 3:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:468:3: ^( IF parenthesizedExpression
                    // statement ( statement )? )
                {
                    match(input, IF, FOLLOW_IF_in_statement1621);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_parenthesizedExpression_in_statement1623);
                    parenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_statement_in_statement1625);
                    statement();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:468:42: ( statement )?
                    int alt74 = 2;
                    int LA74_0 = input.LA(1);

                    if ((LA74_0 == SEMI || LA74_0 == ASSERT || LA74_0 == BREAK || LA74_0 == CONTINUE || LA74_0 == DO ||
                         (LA74_0 >= FOR && LA74_0 <= IF) || LA74_0 == RETURN || (LA74_0 >= SWITCH && LA74_0 <= SYNCHRONIZED) ||
                         LA74_0 == THROW || LA74_0 == TRY || LA74_0 == WHILE || LA74_0 == BLOCK_SCOPE || LA74_0 == EXPR ||
                         LA74_0 == FOR_EACH || LA74_0 == LABELED_STATEMENT)) {
                        alt74 = 1;
                    }
                    switch (alt74) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: statement
                        {
                            pushFollow(FOLLOW_statement_in_statement1627);
                            statement();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 4:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:470:3: ^( FOR forInit forCondition
                    // forUpdater statement )
                {
                    match(input, FOR, FOLLOW_FOR_in_statement1638);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_forInit_in_statement1640);
                    forInit();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_forCondition_in_statement1642);
                    forCondition();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_forUpdater_in_statement1644);
                    forUpdater();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_statement_in_statement1646);
                    statement();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 5:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:472:3: ^( FOR_EACH localModifierList
                    // type IDENT expression statement )
                {
                    match(input, FOR_EACH, FOLLOW_FOR_EACH_in_statement1656);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_localModifierList_in_statement1658);
                    localModifierList();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_type_in_statement1660);
                    type();

                    state._fsp--;
                    if (state.failed) return;
                    match(input, IDENT, FOLLOW_IDENT_in_statement1662);
                    if (state.failed) return;
                    pushFollow(FOLLOW_expression_in_statement1664);
                    expression();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_statement_in_statement1666);
                    statement();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 6:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:474:3: ^( WHILE parenthesizedExpression
                    // statement )
                {
                    match(input, WHILE, FOLLOW_WHILE_in_statement1676);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_parenthesizedExpression_in_statement1678);
                    parenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_statement_in_statement1680);
                    statement();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 7:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:476:3: ^( DO statement
                    // parenthesizedExpression )
                {
                    match(input, DO, FOLLOW_DO_in_statement1690);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_statement_in_statement1692);
                    statement();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_parenthesizedExpression_in_statement1694);
                    parenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 8:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:478:3: ^( TRY block ( catches )? ( block
                    // )? )
                {
                    match(input, TRY, FOLLOW_TRY_in_statement1704);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_block_in_statement1706);
                    block();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:478:15: ( catches )?
                    int alt75 = 2;
                    int LA75_0 = input.LA(1);

                    if ((LA75_0 == CATCH_CLAUSE_LIST)) {
                        alt75 = 1;
                    }
                    switch (alt75) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: catches
                        {
                            pushFollow(FOLLOW_catches_in_statement1708);
                            catches();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }

                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:478:24: ( block )?
                    int alt76 = 2;
                    int LA76_0 = input.LA(1);

                    if ((LA76_0 == BLOCK_SCOPE)) {
                        alt76 = 1;
                    }
                    switch (alt76) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: block
                        {
                            pushFollow(FOLLOW_block_in_statement1711);
                            block();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 9:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:480:3: ^( SWITCH parenthesizedExpression
                    // switchBlockLabels )
                {
                    match(input, SWITCH, FOLLOW_SWITCH_in_statement1723);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_parenthesizedExpression_in_statement1725);
                    parenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_switchBlockLabels_in_statement1727);
                    switchBlockLabels();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 10:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:482:3: ^( SYNCHRONIZED
                    // parenthesizedExpression block )
                {
                    match(input, SYNCHRONIZED, FOLLOW_SYNCHRONIZED_in_statement1737);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_parenthesizedExpression_in_statement1739);
                    parenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_block_in_statement1741);
                    block();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 11:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:484:3: ^( RETURN ( expression )? )
                {
                    match(input, RETURN, FOLLOW_RETURN_in_statement1751);
                    if (state.failed) return;

                    if (input.LA(1) == Token.DOWN) {
                        match(input, Token.DOWN, null);
                        if (state.failed) return;
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:484:12: ( expression )?
                        int alt77 = 2;
                        int LA77_0 = input.LA(1);

                        if ((LA77_0 == EXPR)) {
                            alt77 = 1;
                        }
                        switch (alt77) {
                            case 1:
                                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: expression
                            {
                                pushFollow(FOLLOW_expression_in_statement1753);
                                expression();

                                state._fsp--;
                                if (state.failed) return;

                            }
                            break;

                        }


                        match(input, Token.UP, null);
                        if (state.failed) return;
                    }

                }
                break;
                case 12:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:486:3: ^( THROW expression )
                {
                    match(input, THROW, FOLLOW_THROW_in_statement1764);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_expression_in_statement1766);
                    expression();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 13:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:488:3: ^( BREAK ( IDENT )? )
                {
                    match(input, BREAK, FOLLOW_BREAK_in_statement1776);
                    if (state.failed) return;

                    if (input.LA(1) == Token.DOWN) {
                        match(input, Token.DOWN, null);
                        if (state.failed) return;
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:488:11: ( IDENT )?
                        int alt78 = 2;
                        int LA78_0 = input.LA(1);

                        if ((LA78_0 == IDENT)) {
                            alt78 = 1;
                        }
                        switch (alt78) {
                            case 1:
                                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: IDENT
                            {
                                match(input, IDENT, FOLLOW_IDENT_in_statement1778);
                                if (state.failed) return;

                            }
                            break;

                        }


                        match(input, Token.UP, null);
                        if (state.failed) return;
                    }

                }
                break;
                case 14:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:490:3: ^( CONTINUE ( IDENT )? )
                {
                    match(input, CONTINUE, FOLLOW_CONTINUE_in_statement1789);
                    if (state.failed) return;

                    if (input.LA(1) == Token.DOWN) {
                        match(input, Token.DOWN, null);
                        if (state.failed) return;
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:490:14: ( IDENT )?
                        int alt79 = 2;
                        int LA79_0 = input.LA(1);

                        if ((LA79_0 == IDENT)) {
                            alt79 = 1;
                        }
                        switch (alt79) {
                            case 1:
                                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: IDENT
                            {
                                match(input, IDENT, FOLLOW_IDENT_in_statement1791);
                                if (state.failed) return;

                            }
                            break;

                        }


                        match(input, Token.UP, null);
                        if (state.failed) return;
                    }

                }
                break;
                case 15:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:492:3: ^( LABELED_STATEMENT IDENT
                    // statement )
                {
                    match(input, LABELED_STATEMENT, FOLLOW_LABELED_STATEMENT_in_statement1802);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    match(input, IDENT, FOLLOW_IDENT_in_statement1804);
                    if (state.failed) return;
                    pushFollow(FOLLOW_statement_in_statement1806);
                    statement();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 16:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:493:5: expression
                {
                    pushFollow(FOLLOW_expression_in_statement1813);
                    expression();

                    state._fsp--;
                    if (state.failed) return;

                }
                break;
                case 17:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:494:5: SEMI
                {
                    match(input, SEMI, FOLLOW_SEMI_in_statement1819);
                    if (state.failed) return;

                }
                break;

            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 51, statement_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "statement"

