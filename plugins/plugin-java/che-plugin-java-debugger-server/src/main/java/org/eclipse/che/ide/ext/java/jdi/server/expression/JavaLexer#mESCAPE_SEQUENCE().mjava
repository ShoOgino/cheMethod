    // $ANTLR start "ESCAPE_SEQUENCE"
    public final void mESCAPE_SEQUENCE() throws RecognitionException {
        try {
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1121:5: ( '\\\\' ( 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' |
            // '\\'' | '\\\\' ) | UNICODE_ESCAPE | OCTAL_ESCAPE )
            int alt22 = 3;
            int LA22_0 = input.LA(1);

            if ((LA22_0 == '\\')) {
                switch (input.LA(2)) {
                    case '\"':
                    case '\'':
                    case '\\':
                    case 'b':
                    case 'f':
                    case 'n':
                    case 'r':
                    case 't': {
                        alt22 = 1;
                    }
                    break;
                    case 'u': {
                        alt22 = 2;
                    }
                    break;
                    case '0':
                    case '1':
                    case '2':
                    case '3':
                    case '4':
                    case '5':
                    case '6':
                    case '7': {
                        alt22 = 3;
                    }
                    break;
                    default:
                        NoViableAltException nvae =
                                new NoViableAltException("", 22, 1, input);

                        throw nvae;
                }

            } else {
                NoViableAltException nvae =
                        new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1121:9: '\\\\' ( 'b' | 't' | 'n' | 'f' | 'r' |
                    // '\\\"' | '\\'' | '\\\\' )
                {
                    match('\\');
                    if (input.LA(1) == '\"' || input.LA(1) == '\'' || input.LA(1) == '\\' || input.LA(1) == 'b' || input.LA(1) == 'f' ||
                        input.LA(1) == 'n' || input.LA(1) == 'r' || input.LA(1) == 't') {
                        input.consume();

                    } else {
                        MismatchedSetException mse = new MismatchedSetException(null, input);
                        recover(mse);
                        throw mse;
                    }


                }
                break;
                case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1122:9: UNICODE_ESCAPE
                {
                    mUNICODE_ESCAPE();

                }
                break;
                case 3:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1123:9: OCTAL_ESCAPE
                {
                    mOCTAL_ESCAPE();

                }
                break;

            }
        } finally {
        }
    }
    // $ANTLR end "ESCAPE_SEQUENCE"

