    // $ANTLR start "genericTypeArgumentSimplified"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:630:1: genericTypeArgumentSimplified : ( type | QUESTION );
    public final JavaParser.genericTypeArgumentSimplified_return genericTypeArgumentSimplified() throws RecognitionException {
        JavaParser.genericTypeArgumentSimplified_return retval = new JavaParser.genericTypeArgumentSimplified_return();
        retval.start = input.LT(1);
        int genericTypeArgumentSimplified_StartIndex = input.index();
        CommonTree root_0 = null;

        Token QUESTION201 = null;
        JavaParser.type_return type200 = null;


        CommonTree QUESTION201_tree = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 54)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:631:5: ( type | QUESTION )
            int alt69 = 2;
            int LA69_0 = input.LA(1);

            if ((LA69_0 == BOOLEAN || LA69_0 == BYTE || LA69_0 == CHAR || LA69_0 == DOUBLE || LA69_0 == FLOAT ||
                 (LA69_0 >= INT && LA69_0 <= LONG) || LA69_0 == SHORT || LA69_0 == IDENT)) {
                alt69 = 1;
            } else if ((LA69_0 == QUESTION)) {
                alt69 = 2;
            } else {
                if (state.backtracking > 0) {
                    state.failed = true;
                    return retval;
                }
                NoViableAltException nvae =
                        new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:631:9: type
                {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_type_in_genericTypeArgumentSimplified7540);
                    type200 = type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (state.backtracking == 0) adaptor.addChild(root_0, type200.getTree());

                }
                break;
                case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:632:9: QUESTION
                {
                    root_0 = (CommonTree)adaptor.nil();

                    QUESTION201 = (Token)match(input, QUESTION, FOLLOW_QUESTION_in_genericTypeArgumentSimplified7550);
                    if (state.failed) return retval;
                    if (state.backtracking == 0) {
                        QUESTION201_tree = (CommonTree)adaptor.create(QUESTION201);
                        adaptor.addChild(root_0, QUESTION201_tree);
                    }

                }
                break;

            }
            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 54, genericTypeArgumentSimplified_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "genericTypeArgumentSimplified"

