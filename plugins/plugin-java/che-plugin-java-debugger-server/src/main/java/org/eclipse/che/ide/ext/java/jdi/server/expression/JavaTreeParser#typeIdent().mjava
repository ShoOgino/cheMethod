    // $ANTLR start "typeIdent"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:331:1: typeIdent : ^( IDENT ( genericTypeArgumentList )?
    // ) ;
    public final void typeIdent() throws RecognitionException {
        int typeIdent_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 30)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:332:3: ( ^( IDENT ( genericTypeArgumentList )? ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:333:3: ^( IDENT ( genericTypeArgumentList )? )
            {
                match(input, IDENT, FOLLOW_IDENT_in_typeIdent1039);
                if (state.failed) return;

                if (input.LA(1) == Token.DOWN) {
                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:333:11: ( genericTypeArgumentList )?
                    int alt54 = 2;
                    int LA54_0 = input.LA(1);

                    if ((LA54_0 == GENERIC_TYPE_ARG_LIST)) {
                        alt54 = 1;
                    }
                    switch (alt54) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: genericTypeArgumentList
                        {
                            pushFollow(FOLLOW_genericTypeArgumentList_in_typeIdent1041);
                            genericTypeArgumentList();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;
                }

            }

        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 30, typeIdent_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "typeIdent"

