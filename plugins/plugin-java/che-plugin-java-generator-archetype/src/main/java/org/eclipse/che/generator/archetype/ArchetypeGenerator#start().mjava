    /** Initialize generator. */
    @PostConstruct
    void start() throws IOException {
        archetypeGeneratorTempFolder = Files.createTempDirectory("archetype-generator");

        executor = Executors.newCachedThreadPool(new ThreadFactoryBuilder().setNameFormat("ArchetypeGenerator-[%d]").setDaemon(true).build());
        scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactoryBuilder().setNameFormat("ArchetypeGeneratorSchedulerPool-%d")
                                                                                         .setDaemon(true).build());
        scheduler.scheduleAtFixedRate(new Runnable() {
            public void run() {
                int num = 0;
                for (Iterator<GenerationTask> i = tasks.values().iterator(); i.hasNext(); ) {
                    if (Thread.currentThread().isInterrupted()) {
                        return;
                    }
                    final GenerationTask task = i.next();
                    if (task.isExpired()) {
                        i.remove();
                        try {
                            cleanup(task);
                        } catch (RuntimeException e) {
                            LOG.error(e.getMessage(), e);
                        }
                        num++;
                    }
                }
                if (num > 0) {
                    LOG.debug("Remove {} expired tasks", num);
                }
            }
        }, 1, 1, TimeUnit.MINUTES);
    }

