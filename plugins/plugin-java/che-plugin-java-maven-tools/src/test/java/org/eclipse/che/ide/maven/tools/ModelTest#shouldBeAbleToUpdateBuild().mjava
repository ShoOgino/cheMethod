    @Test
    public void shouldBeAbleToUpdateBuild() throws Exception {
        final File pom = getTestPomFile();
        write(pom, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                   "<project>\n" +
                   "    <build>\n" +
                   "        <sourceDirectory>src/main/java</sourceDirectory>\n" +
                   "        <testSourceDirectory>src/main/test</testSourceDirectory>\n" +
                   "        <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>\n" +
                   "        <testOutputDirectory>src/main/testOutput</testOutputDirectory>\n" +
                   "    </build>\n" +
                   "</project>");
        final Model model = Model.readFrom(pom);

        model.getBuild()
             .setSourceDirectory("src/main/groovy")
             .setOutputDirectory("output/path");

        model.writeTo(pom);

        assertEquals(read(pom), "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                                "<project>\n" +
                                "    <build>\n" +
                                "        <sourceDirectory>src/main/groovy</sourceDirectory>\n" +
                                "        <testSourceDirectory>src/main/test</testSourceDirectory>\n" +
                                "        <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>\n" +
                                "        <testOutputDirectory>src/main/testOutput</testOutputDirectory>\n" +
                                "        <outputDirectory>output/path</outputDirectory>\n" +
                                "    </build>\n" +
                                "</project>");
        assertEquals(model.getBuild().getSourceDirectory(), "src/main/groovy");
        assertEquals(model.getBuild().getTestSourceDirectory(), "src/main/test");
        assertEquals(model.getBuild().getOutputDirectory(), "output/path");
        assertEquals(model.getBuild().getTestOutputDirectory(), "src/main/testOutput");
        assertEquals(model.getBuild().getScriptSourceDirectory(), "src/main/scripts");
    }

