    // $ANTLR start "conditionalExpression"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:866:1: conditionalExpression : logicalOrExpression ( QUESTION
    // assignmentExpression COLON conditionalExpression )? ;
    public final JavaParser.conditionalExpression_return conditionalExpression() throws RecognitionException {
        JavaParser.conditionalExpression_return retval = new JavaParser.conditionalExpression_return();
        retval.start = input.LT(1);
        int conditionalExpression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token QUESTION383 = null;
        Token COLON385 = null;
        JavaParser.logicalOrExpression_return logicalOrExpression382 = null;

        JavaParser.assignmentExpression_return assignmentExpression384 = null;

        JavaParser.conditionalExpression_return conditionalExpression386 = null;


        CommonTree QUESTION383_tree = null;
        CommonTree COLON385_tree = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 90)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:867:5: ( logicalOrExpression ( QUESTION
            // assignmentExpression COLON conditionalExpression )? )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:867:9: logicalOrExpression ( QUESTION assignmentExpression
            // COLON conditionalExpression )?
            {
                root_0 = (CommonTree)adaptor.nil();

                pushFollow(FOLLOW_logicalOrExpression_in_conditionalExpression10803);
                logicalOrExpression382 = logicalOrExpression();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0) adaptor.addChild(root_0, logicalOrExpression382.getTree());
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:867:29: ( QUESTION assignmentExpression COLON
                // conditionalExpression )?
                int alt109 = 2;
                int LA109_0 = input.LA(1);

                if ((LA109_0 == QUESTION)) {
                    alt109 = 1;
                }
                switch (alt109) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:867:30: QUESTION assignmentExpression COLON
                        // conditionalExpression
                    {
                        QUESTION383 = (Token)match(input, QUESTION, FOLLOW_QUESTION_in_conditionalExpression10806);
                        if (state.failed) return retval;
                        if (state.backtracking == 0) {
                            QUESTION383_tree = (CommonTree)adaptor.create(QUESTION383);
                            root_0 = (CommonTree)adaptor.becomeRoot(QUESTION383_tree, root_0);
                        }
                        pushFollow(FOLLOW_assignmentExpression_in_conditionalExpression10809);
                        assignmentExpression384 = assignmentExpression();

                        state._fsp--;
                        if (state.failed) return retval;
                        if (state.backtracking == 0) adaptor.addChild(root_0, assignmentExpression384.getTree());
                        COLON385 = (Token)match(input, COLON, FOLLOW_COLON_in_conditionalExpression10811);
                        if (state.failed) return retval;
                        pushFollow(FOLLOW_conditionalExpression_in_conditionalExpression10814);
                        conditionalExpression386 = conditionalExpression();

                        state._fsp--;
                        if (state.failed) return retval;
                        if (state.backtracking == 0) adaptor.addChild(root_0, conditionalExpression386.getTree());

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 90, conditionalExpression_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "conditionalExpression"

