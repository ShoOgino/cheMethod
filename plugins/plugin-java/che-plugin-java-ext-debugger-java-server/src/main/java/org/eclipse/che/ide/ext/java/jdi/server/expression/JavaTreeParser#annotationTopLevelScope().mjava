    // $ANTLR start "annotationTopLevelScope"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:425:1: annotationTopLevelScope : ^(
    // ANNOTATION_TOP_LEVEL_SCOPE ( annotationScopeDeclarations )* ) ;
    public final void annotationTopLevelScope() throws RecognitionException {
        int annotationTopLevelScope_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 45)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:426:3: ( ^( ANNOTATION_TOP_LEVEL_SCOPE (
            // annotationScopeDeclarations )* ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:427:3: ^( ANNOTATION_TOP_LEVEL_SCOPE (
            // annotationScopeDeclarations )* )
            {
                match(input, ANNOTATION_TOP_LEVEL_SCOPE, FOLLOW_ANNOTATION_TOP_LEVEL_SCOPE_in_annotationTopLevelScope1439);
                if (state.failed) return;

                if (input.LA(1) == Token.DOWN) {
                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:427:32: ( annotationScopeDeclarations )*
                    loop68:
                    do {
                        int alt68 = 2;
                        int LA68_0 = input.LA(1);

                        if ((LA68_0 == AT || LA68_0 == CLASS || LA68_0 == ENUM || LA68_0 == INTERFACE || LA68_0 == ANNOTATION_METHOD_DECL ||
                             LA68_0 == VAR_DECLARATION)) {
                            alt68 = 1;
                        }


                        switch (alt68) {
                            case 1:
                                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0:
                                // annotationScopeDeclarations
                            {
                                pushFollow(FOLLOW_annotationScopeDeclarations_in_annotationTopLevelScope1441);
                                annotationScopeDeclarations();

                                state._fsp--;
                                if (state.failed) return;

                            }
                            break;

                            default:
                                break loop68;
                        }
                    } while (true);


                    match(input, Token.UP, null);
                    if (state.failed) return;
                }

            }

        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 45, annotationTopLevelScope_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "annotationTopLevelScope"

