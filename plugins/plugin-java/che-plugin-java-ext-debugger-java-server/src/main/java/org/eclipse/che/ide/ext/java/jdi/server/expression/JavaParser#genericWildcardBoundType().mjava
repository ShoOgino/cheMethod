    // $ANTLR start "genericWildcardBoundType"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:621:1: genericWildcardBoundType : ( EXTENDS | SUPER ) type ;
    public final JavaParser.genericWildcardBoundType_return genericWildcardBoundType() throws RecognitionException {
        JavaParser.genericWildcardBoundType_return retval = new JavaParser.genericWildcardBoundType_return();
        retval.start = input.LT(1);
        int genericWildcardBoundType_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set193 = null;
        JavaParser.type_return type194 = null;


        CommonTree set193_tree = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 52)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:622:5: ( ( EXTENDS | SUPER ) type )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:622:9: ( EXTENDS | SUPER ) type
            {
                root_0 = (CommonTree)adaptor.nil();

                set193 = (Token)input.LT(1);
                set193 = (Token)input.LT(1);
                if (input.LA(1) == EXTENDS || input.LA(1) == SUPER) {
                    input.consume();
                    if (state.backtracking == 0) root_0 = (CommonTree)adaptor.becomeRoot((CommonTree)adaptor.create(set193), root_0);
                    state.errorRecovery = false;
                    state.failed = false;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return retval;
                    }
                    MismatchedSetException mse = new MismatchedSetException(null, input);
                    throw mse;
                }

                pushFollow(FOLLOW_type_in_genericWildcardBoundType7468);
                type194 = type();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0) adaptor.addChild(root_0, type194.getTree());

            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 52, genericWildcardBoundType_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "genericWildcardBoundType"

