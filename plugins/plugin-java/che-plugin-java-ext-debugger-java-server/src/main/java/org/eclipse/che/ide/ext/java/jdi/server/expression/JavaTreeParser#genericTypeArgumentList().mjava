    // $ANTLR start "genericTypeArgumentList"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:348:1: genericTypeArgumentList : ^(
    // GENERIC_TYPE_ARG_LIST ( genericTypeArgument )+ ) ;
    public final void genericTypeArgumentList() throws RecognitionException {
        int genericTypeArgumentList_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 32)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:349:3: ( ^( GENERIC_TYPE_ARG_LIST (
            // genericTypeArgument )+ ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:350:3: ^( GENERIC_TYPE_ARG_LIST (
            // genericTypeArgument )+ )
            {
                match(input, GENERIC_TYPE_ARG_LIST, FOLLOW_GENERIC_TYPE_ARG_LIST_in_genericTypeArgumentList1116);
                if (state.failed) return;

                match(input, Token.DOWN, null);
                if (state.failed) return;
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:350:27: ( genericTypeArgument )+
                int cnt55 = 0;
                loop55:
                do {
                    int alt55 = 2;
                    int LA55_0 = input.LA(1);

                    if ((LA55_0 == QUESTION || LA55_0 == TYPE)) {
                        alt55 = 1;
                    }


                    switch (alt55) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: genericTypeArgument
                        {
                            pushFollow(FOLLOW_genericTypeArgument_in_genericTypeArgumentList1118);
                            genericTypeArgument();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                        default:
                            if (cnt55 >= 1) break loop55;
                            if (state.backtracking > 0) {
                                state.failed = true;
                                return;
                            }
                            EarlyExitException eee =
                                    new EarlyExitException(55, input);
                            throw eee;
                    }
                    cnt55++;
                } while (true);


                match(input, Token.UP, null);
                if (state.failed) return;

            }

        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 32, genericTypeArgumentList_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "genericTypeArgumentList"

