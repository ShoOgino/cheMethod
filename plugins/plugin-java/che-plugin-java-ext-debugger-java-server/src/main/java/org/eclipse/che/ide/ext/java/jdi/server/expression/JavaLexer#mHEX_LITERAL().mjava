    // $ANTLR start "HEX_LITERAL"
    public final void mHEX_LITERAL() throws RecognitionException {
        try {
            int _type = HEX_LITERAL;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1083:13: ( '0' ( 'x' | 'X' ) ( HEX_DIGIT )+ (
            // INTEGER_TYPE_SUFFIX )? )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1083:15: '0' ( 'x' | 'X' ) ( HEX_DIGIT )+ (
            // INTEGER_TYPE_SUFFIX )?
            {
                match('0');
                if (input.LA(1) == 'X' || input.LA(1) == 'x') {
                    input.consume();

                } else {
                    MismatchedSetException mse = new MismatchedSetException(null, input);
                    recover(mse);
                    throw mse;
                }

                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1083:29: ( HEX_DIGIT )+
                int cnt1 = 0;
                loop1:
                do {
                    int alt1 = 2;
                    int LA1_0 = input.LA(1);

                    if (((LA1_0 >= '0' && LA1_0 <= '9') || (LA1_0 >= 'A' && LA1_0 <= 'F') || (LA1_0 >= 'a' && LA1_0 <= 'f'))) {
                        alt1 = 1;
                    }


                    switch (alt1) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1083:29: HEX_DIGIT
                        {
                            mHEX_DIGIT();

                        }
                        break;

                        default:
                            if (cnt1 >= 1) break loop1;
                            EarlyExitException eee =
                                    new EarlyExitException(1, input);
                            throw eee;
                    }
                    cnt1++;
                } while (true);

                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1083:40: ( INTEGER_TYPE_SUFFIX )?
                int alt2 = 2;
                int LA2_0 = input.LA(1);

                if ((LA2_0 == 'L' || LA2_0 == 'l')) {
                    alt2 = 1;
                }
                switch (alt2) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1083:40: INTEGER_TYPE_SUFFIX
                    {
                        mINTEGER_TYPE_SUFFIX();

                    }
                    break;

                }


            }

            state.type = _type;
            state.channel = _channel;
        } finally {
        }
    }
    // $ANTLR end "HEX_LITERAL"

