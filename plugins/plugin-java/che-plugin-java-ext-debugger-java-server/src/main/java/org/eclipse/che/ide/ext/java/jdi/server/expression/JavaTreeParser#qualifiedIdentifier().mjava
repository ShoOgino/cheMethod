    // $ANTLR start "qualifiedIdentifier"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:382:1: qualifiedIdentifier : ( IDENT | ^( DOT
    // qualifiedIdentifier IDENT ) );
    public final void qualifiedIdentifier() throws RecognitionException {
        int qualifiedIdentifier_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 38)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:383:3: ( IDENT | ^( DOT qualifiedIdentifier
            // IDENT ) )
            int alt61 = 2;
            int LA61_0 = input.LA(1);

            if ((LA61_0 == IDENT)) {
                alt61 = 1;
            } else if ((LA61_0 == DOT)) {
                alt61 = 2;
            } else {
                if (state.backtracking > 0) {
                    state.failed = true;
                    return;
                }
                NoViableAltException nvae =
                        new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:384:3: IDENT
                {
                    match(input, IDENT, FOLLOW_IDENT_in_qualifiedIdentifier1263);
                    if (state.failed) return;

                }
                break;
                case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:386:3: ^( DOT qualifiedIdentifier IDENT )
                {
                    match(input, DOT, FOLLOW_DOT_in_qualifiedIdentifier1272);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_qualifiedIdentifier_in_qualifiedIdentifier1274);
                    qualifiedIdentifier();

                    state._fsp--;
                    if (state.failed) return;
                    match(input, IDENT, FOLLOW_IDENT_in_qualifiedIdentifier1276);
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;

            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 38, qualifiedIdentifier_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "qualifiedIdentifier"

