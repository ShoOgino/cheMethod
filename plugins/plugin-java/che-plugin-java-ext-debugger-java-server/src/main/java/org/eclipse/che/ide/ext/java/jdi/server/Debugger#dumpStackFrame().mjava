    /**
     * Get dump of fields and local variable of current object and current frame.
     *
     * @return dump of current stack frame
     * @throws DebuggerStateException
     *         when target JVM is not suspended
     * @throws DebuggerException
     *         when any other errors occur when try to access the current state of target JVM
     */
    public StackFrameDump dumpStackFrame() throws DebuggerStateException, DebuggerException {

        StackFrameDump dump = DtoFactory.getInstance().createDto(StackFrameDump.class);
        boolean existInformation = true;
        JdiLocalVariable[] variables = new JdiLocalVariable[0];
        try {
            variables = getCurrentFrame().getLocalVariables();
        } catch (DebuggerAbsentInformationException e) {
            existInformation = false;
        }

        for (JdiField f : getCurrentFrame().getFields()) {
            dump.getFields().add((Field)DtoFactory.getInstance().createDto(Field.class)
                                                  .withIsFinal(f.isFinal())
                                                  .withIsStatic(f.isStatic())
                                                  .withIsTransient(f.isTransient())
                                                  .withIsVolatile(f.isVolatile())
                                                  .withName(f.getName())
                                                  .withExistInformation(existInformation)
                                                  .withValue(f.getValue().getAsString())
                                                  .withType(f.getTypeName())
                                                  .withVariablePath(
                                                          DtoFactory.getInstance().createDto(VariablePath.class)
                                                                    .withPath(Arrays.asList(f.isStatic() ? "static" : "this", f.getName()))
                                                                   )
                                                  .withPrimitive(f.isPrimitive()));
        }
        for (JdiLocalVariable var : variables) {
            dump.getLocalVariables().add(DtoFactory.getInstance().createDto(Variable.class)
                                                   .withName(var.getName())
                                                   .withExistInformation(existInformation)
                                                   .withValue(var.getValue().getAsString())
                                                   .withType(var.getTypeName())
                                                   .withVariablePath(
                                                           DtoFactory.getInstance().createDto(VariablePath.class)
                                                                     .withPath(Collections.singletonList(var.getName()))
                                                                    )
                                                   .withPrimitive(var.isPrimitive()));
        }
        return dump;
    }

