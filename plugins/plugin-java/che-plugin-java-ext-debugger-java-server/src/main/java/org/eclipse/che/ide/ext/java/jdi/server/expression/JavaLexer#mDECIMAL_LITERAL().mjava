    // $ANTLR start "DECIMAL_LITERAL"
    public final void mDECIMAL_LITERAL() throws RecognitionException {
        try {
            int _type = DECIMAL_LITERAL;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:17: ( ( '0' | '1' .. '9' ( '0' .. '9' )* ) (
            // INTEGER_TYPE_SUFFIX )? )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:19: ( '0' | '1' .. '9' ( '0' .. '9' )* ) (
            // INTEGER_TYPE_SUFFIX )?
            {
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:19: ( '0' | '1' .. '9' ( '0' .. '9' )* )
                int alt4 = 2;
                int LA4_0 = input.LA(1);

                if ((LA4_0 == '0')) {
                    alt4 = 1;
                } else if (((LA4_0 >= '1' && LA4_0 <= '9'))) {
                    alt4 = 2;
                } else {
                    NoViableAltException nvae =
                            new NoViableAltException("", 4, 0, input);

                    throw nvae;
                }
                switch (alt4) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:20: '0'
                    {
                        match('0');

                    }
                    break;
                    case 2:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:26: '1' .. '9' ( '0' .. '9' )*
                    {
                        matchRange('1', '9');
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:35: ( '0' .. '9' )*
                        loop3:
                        do {
                            int alt3 = 2;
                            int LA3_0 = input.LA(1);

                            if (((LA3_0 >= '0' && LA3_0 <= '9'))) {
                                alt3 = 1;
                            }


                            switch (alt3) {
                                case 1:
                                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:35: '0' .. '9'
                                {
                                    matchRange('0', '9');

                                }
                                break;

                                default:
                                    break loop3;
                            }
                        } while (true);


                    }
                    break;

                }

                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:46: ( INTEGER_TYPE_SUFFIX )?
                int alt5 = 2;
                int LA5_0 = input.LA(1);

                if ((LA5_0 == 'L' || LA5_0 == 'l')) {
                    alt5 = 1;
                }
                switch (alt5) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1085:46: INTEGER_TYPE_SUFFIX
                    {
                        mINTEGER_TYPE_SUFFIX();

                    }
                    break;

                }


            }

            state.type = _type;
            state.channel = _channel;
        } finally {
        }
    }
    // $ANTLR end "DECIMAL_LITERAL"

