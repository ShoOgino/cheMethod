    // $ANTLR start "switchCaseLabels"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:804:1: switchCaseLabels : ( switchCaseLabel )* ;
    public final JavaParser.switchCaseLabels_return switchCaseLabels() throws RecognitionException {
        JavaParser.switchCaseLabels_return retval = new JavaParser.switchCaseLabels_return();
        retval.start = input.LT(1);
        int switchCaseLabels_StartIndex = input.index();
        CommonTree root_0 = null;

        JavaParser.switchCaseLabel_return switchCaseLabel349 = null;


        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 80)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:805:5: ( ( switchCaseLabel )* )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:805:9: ( switchCaseLabel )*
            {
                root_0 = (CommonTree)adaptor.nil();

                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:805:9: ( switchCaseLabel )*
                loop100:
                do {
                    int alt100 = 2;
                    int LA100_0 = input.LA(1);

                    if ((LA100_0 == CASE)) {
                        int LA100_2 = input.LA(2);

                        if ((synpred143_Java())) {
                            alt100 = 1;
                        }


                    }


                    switch (alt100) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: switchCaseLabel
                        {
                            pushFollow(FOLLOW_switchCaseLabel_in_switchCaseLabels10138);
                            switchCaseLabel349 = switchCaseLabel();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (state.backtracking == 0) adaptor.addChild(root_0, switchCaseLabel349.getTree());

                        }
                        break;

                        default:
                            break loop100;
                    }
                } while (true);


            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 80, switchCaseLabels_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "switchCaseLabels"

