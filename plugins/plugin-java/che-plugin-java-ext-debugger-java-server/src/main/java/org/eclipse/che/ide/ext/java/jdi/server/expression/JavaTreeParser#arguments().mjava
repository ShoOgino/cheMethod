    // $ANTLR start "arguments"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:924:1: arguments returns [List < com.sun.jdi.Value >
    // args] : ^( ARGUMENT_LIST (e= expression )* ) ;
    public final List<com.sun.jdi.Value> arguments() throws RecognitionException {
        List<com.sun.jdi.Value> args = null;
        int arguments_StartIndex = input.index();
        ExpressionValue e = null;


        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 70)) {
                return args;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:925:3: ( ^( ARGUMENT_LIST (e= expression )* ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:926:17: ^( ARGUMENT_LIST (e= expression )* )
            {
                if (state.backtracking == 0) {

                    args = new ArrayList<com.sun.jdi.Value>();

                }
                match(input, ARGUMENT_LIST, FOLLOW_ARGUMENT_LIST_in_arguments5060);
                if (state.failed) return args;

                if (input.LA(1) == Token.DOWN) {
                    match(input, Token.DOWN, null);
                    if (state.failed) return args;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:931:5: (e= expression )*
                    loop111:
                    do {
                        int alt111 = 2;
                        int LA111_0 = input.LA(1);

                        if ((LA111_0 == EXPR)) {
                            alt111 = 1;
                        }


                        switch (alt111) {
                            case 1:
                                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:932:7: e= expression
                            {
                                pushFollow(FOLLOW_expression_in_arguments5076);
                                e = expression();

                                state._fsp--;
                                if (state.failed) return args;
                                if (state.backtracking == 0) {

                                    args.add(e.getValue());

                                }

                            }
                            break;

                            default:
                                break loop111;
                        }
                    } while (true);


                    match(input, Token.UP, null);
                    if (state.failed) return args;
                }

            }

        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 70, arguments_StartIndex);
            }
        }
        return args;
    }
    // $ANTLR end "arguments"

