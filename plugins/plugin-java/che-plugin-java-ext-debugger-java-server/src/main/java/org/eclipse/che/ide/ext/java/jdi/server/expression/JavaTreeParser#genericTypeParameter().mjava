    // $ANTLR start "genericTypeParameter"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:183:1: genericTypeParameter : ^( IDENT ( bound )? ) ;
    public final void genericTypeParameter() throws RecognitionException {
        int genericTypeParameter_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 8)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:184:3: ( ^( IDENT ( bound )? ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:185:3: ^( IDENT ( bound )? )
            {
                match(input, IDENT, FOLLOW_IDENT_in_genericTypeParameter315);
                if (state.failed) return;

                if (input.LA(1) == Token.DOWN) {
                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:185:11: ( bound )?
                    int alt16 = 2;
                    int LA16_0 = input.LA(1);

                    if ((LA16_0 == EXTENDS_BOUND_LIST)) {
                        alt16 = 1;
                    }
                    switch (alt16) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: bound
                        {
                            pushFollow(FOLLOW_bound_in_genericTypeParameter317);
                            bound();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;
                }

            }

        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 8, genericTypeParameter_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "genericTypeParameter"

