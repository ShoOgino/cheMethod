    // $ANTLR start "genericTypeParameterList"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:178:1: genericTypeParameterList : ^(
    // GENERIC_TYPE_PARAM_LIST ( genericTypeParameter )+ ) ;
    public final void genericTypeParameterList() throws RecognitionException {
        int genericTypeParameterList_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 7)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:179:3: ( ^( GENERIC_TYPE_PARAM_LIST (
            // genericTypeParameter )+ ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:180:3: ^( GENERIC_TYPE_PARAM_LIST (
            // genericTypeParameter )+ )
            {
                match(input, GENERIC_TYPE_PARAM_LIST, FOLLOW_GENERIC_TYPE_PARAM_LIST_in_genericTypeParameterList295);
                if (state.failed) return;

                match(input, Token.DOWN, null);
                if (state.failed) return;
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:180:29: ( genericTypeParameter )+
                int cnt15 = 0;
                loop15:
                do {
                    int alt15 = 2;
                    int LA15_0 = input.LA(1);

                    if ((LA15_0 == IDENT)) {
                        alt15 = 1;
                    }


                    switch (alt15) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: genericTypeParameter
                        {
                            pushFollow(FOLLOW_genericTypeParameter_in_genericTypeParameterList297);
                            genericTypeParameter();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                        default:
                            if (cnt15 >= 1) break loop15;
                            if (state.backtracking > 0) {
                                state.failed = true;
                                return;
                            }
                            EarlyExitException eee =
                                    new EarlyExitException(15, input);
                            throw eee;
                    }
                    cnt15++;
                } while (true);


                match(input, Token.UP, null);
                if (state.failed) return;

            }

        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 7, genericTypeParameterList_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "genericTypeParameterList"

