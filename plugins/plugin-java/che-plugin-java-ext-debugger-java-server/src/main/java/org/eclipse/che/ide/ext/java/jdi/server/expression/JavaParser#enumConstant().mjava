    // $ANTLR start "enumConstant"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:426:1: enumConstant : annotationList IDENT ( arguments )? (
    // classBody )? ;
    public final JavaParser.enumConstant_return enumConstant() throws RecognitionException {
        JavaParser.enumConstant_return retval = new JavaParser.enumConstant_return();
        retval.start = input.LT(1);
        int enumConstant_StartIndex = input.index();
        CommonTree root_0 = null;

        Token IDENT63 = null;
        JavaParser.annotationList_return annotationList62 = null;

        JavaParser.arguments_return arguments64 = null;

        JavaParser.classBody_return classBody65 = null;


        CommonTree IDENT63_tree = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 20)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:427:5: ( annotationList IDENT ( arguments )? ( classBody )? )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:427:9: annotationList IDENT ( arguments )? ( classBody )?
            {
                root_0 = (CommonTree)adaptor.nil();

                pushFollow(FOLLOW_annotationList_in_enumConstant5458);
                annotationList62 = annotationList();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0) adaptor.addChild(root_0, annotationList62.getTree());
                IDENT63 = (Token)match(input, IDENT, FOLLOW_IDENT_in_enumConstant5460);
                if (state.failed) return retval;
                if (state.backtracking == 0) {
                    IDENT63_tree = (CommonTree)adaptor.create(IDENT63);
                    root_0 = (CommonTree)adaptor.becomeRoot(IDENT63_tree, root_0);
                }
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:427:31: ( arguments )?
                int alt20 = 2;
                int LA20_0 = input.LA(1);

                if ((LA20_0 == LPAREN)) {
                    alt20 = 1;
                }
                switch (alt20) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: arguments
                    {
                        pushFollow(FOLLOW_arguments_in_enumConstant5463);
                        arguments64 = arguments();

                        state._fsp--;
                        if (state.failed) return retval;
                        if (state.backtracking == 0) adaptor.addChild(root_0, arguments64.getTree());

                    }
                    break;

                }

                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:427:42: ( classBody )?
                int alt21 = 2;
                int LA21_0 = input.LA(1);

                if ((LA21_0 == LCURLY)) {
                    alt21 = 1;
                }
                switch (alt21) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: classBody
                    {
                        pushFollow(FOLLOW_classBody_in_enumConstant5466);
                        classBody65 = classBody();

                        state._fsp--;
                        if (state.failed) return retval;
                        if (state.backtracking == 0) adaptor.addChild(root_0, classBody65.getTree());

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 20, enumConstant_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "enumConstant"

