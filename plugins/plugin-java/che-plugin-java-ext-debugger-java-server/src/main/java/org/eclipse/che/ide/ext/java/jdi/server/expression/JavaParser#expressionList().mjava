    // $ANTLR start "expressionList"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:839:1: expressionList : expression ( COMMA expression )* ;
    public final JavaParser.expressionList_return expressionList() throws RecognitionException {
        JavaParser.expressionList_return retval = new JavaParser.expressionList_return();
        retval.start = input.LT(1);
        int expressionList_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA365 = null;
        JavaParser.expression_return expression364 = null;

        JavaParser.expression_return expression366 = null;


        CommonTree COMMA365_tree = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 87)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:840:5: ( expression ( COMMA expression )* )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:840:9: expression ( COMMA expression )*
            {
                root_0 = (CommonTree)adaptor.nil();

                pushFollow(FOLLOW_expression_in_expressionList10465);
                expression364 = expression();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0) adaptor.addChild(root_0, expression364.getTree());
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:840:20: ( COMMA expression )*
                loop106:
                do {
                    int alt106 = 2;
                    int LA106_0 = input.LA(1);

                    if ((LA106_0 == COMMA)) {
                        alt106 = 1;
                    }


                    switch (alt106) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:840:21: COMMA expression
                        {
                            COMMA365 = (Token)match(input, COMMA, FOLLOW_COMMA_in_expressionList10468);
                            if (state.failed) return retval;
                            pushFollow(FOLLOW_expression_in_expressionList10471);
                            expression366 = expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (state.backtracking == 0) adaptor.addChild(root_0, expression366.getTree());

                        }
                        break;

                        default:
                            break loop106;
                    }
                } while (true);


            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 87, expressionList_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "expressionList"

