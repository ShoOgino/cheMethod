    /** {@inheritDoc} */
    @Override
    public void actionPerformed(final Member member) {
        if (member.isBinary()) {
            javaNodeManager.getClassNode(context.getCurrentProject().getProjectConfig(), member.getLibId(), member.getRootPath())
                           .then(new Operation<Node>() {
                               @Override
                               public void apply(Node node) throws OperationException {
                                   if (node instanceof VirtualFile) {
                                       openFile((VirtualFile)node, member);
                                   }
                               }
                           });
        } else {
            projectExplorer.getNodeByPath(new HasStorablePath.StorablePath(member.getRootPath()))
                           .then(selectNode())
                           .then(openNode(member));
        }
        Scheduler.get().scheduleDeferred(new Scheduler.ScheduledCommand() {
            @Override
            public void execute() {
                setCursorPosition(member.getFileRegion());
            }
        });
        showInheritedMembers = false;
    }

