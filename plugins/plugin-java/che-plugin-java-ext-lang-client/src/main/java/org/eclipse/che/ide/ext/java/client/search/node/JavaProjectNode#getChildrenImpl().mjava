    @Override
    protected Promise<List<Node>> getChildrenImpl() {
        return createFromAsyncRequest(callback -> {
            final List<Node> childrenNodes = new ArrayList<>();
            for (PackageFragmentRoot packageFragmentRoot : project.getPackageFragmentRoots()) {
                final List<PackageFragment> packageFragments = packageFragmentRoot.getPackageFragments();
                final List<Node> nodes = packageFragments.stream()
                                                         .map(packageFragment -> nodeFactory.create(packageFragment,
                                                                                                    matches,
                                                                                                    packageFragmentRoot))
                                                         .collect(Collectors.toList());
                childrenNodes.addAll(nodes);
            }
            callback.onSuccess(childrenNodes);
        });
    }

