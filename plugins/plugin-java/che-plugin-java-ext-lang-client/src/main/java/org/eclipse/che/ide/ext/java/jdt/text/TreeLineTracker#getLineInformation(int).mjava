  /* @see org.eclipse.jface.text.ILineTracker#getLineInformation(int) */
  public final Region getLineInformation(int line) throws BadLocationException {
    try {
      // Inline nodeByLine start
      int remaining = line;
      int offset = 0;
      Node node = fRoot;

      while (true) {
        if (node == null) fail(line);

        if (remaining == node.line) {
          offset += node.offset;
          break;
        }
        if (remaining < node.line) {
          node = node.left;
        } else {
          remaining -= node.line + 1;
          offset += node.offset + node.length;
          node = node.right;
        }
      }
      // Inline nodeByLine end
      return new RegionImpl(offset, node.pureLength());
    } catch (BadLocationException x) {
      /*
       * FIXME: this really strange behavior is mandated by the previous line tracker implementation and included here for
       * compatibility. See LineTrackerTest3#testFunnyLastLineCompatibility().
       */
      if (line > 0 && line == getNumberOfLines()) {
        line = line - 1;
        // Inline nodeByLine start
        int remaining = line;
        int offset = 0;
        Node node = fRoot;

        while (true) {
          if (node == null) fail(line);

          if (remaining == node.line) {
            offset += node.offset;
            break;
          }
          if (remaining < node.line) {
            node = node.left;
          } else {
            remaining -= node.line + 1;
            offset += node.offset + node.length;
            node = node.right;
          }
        }
        Node last = node;
        // Inline nodeByLine end
        if (last.length > 0) return new RegionImpl(offset + last.length, 0);
      }
      throw x;
    }
  }

