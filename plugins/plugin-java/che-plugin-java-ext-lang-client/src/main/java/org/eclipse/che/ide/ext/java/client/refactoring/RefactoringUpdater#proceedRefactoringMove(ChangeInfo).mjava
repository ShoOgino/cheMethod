    /** Find node by new path and notify editors to re-read files if need. */
    private Function<Void, Promise<Void>> proceedRefactoringMove(final ChangeInfo changeInfo) {
        return new Function<Void, Promise<Void>>() {
            @Override
            public Promise<Void> apply(Void arg) throws FunctionException {
                FileReferenceNode editorFileToUpdate = getOpenedFileOrNull(changeInfo.getOldPath());

                return projectExplorer.getNodeByPath(new StorablePath(changeInfo.getPath()), true, false)
                                      .thenPromise(updateEditorContent(editorFileToUpdate))
                                      .catchError(onNodeNotFound());
            }
        };
    }

