    /**
     * Left rotation - the given node is rotated down, its right child is rotated up, taking the previous structural position of
     * <code>node</code>.
     *
     * @param node
     *         the node to rotate around
     */
    private void rotateLeft(Node node) {
        if (ASSERT)
            Assert.isNotNull(node);
        Node child = node.right;
        if (ASSERT)
            Assert.isNotNull(child);
        boolean leftChild = node.parent == null || node == node.parent.left;

        // restructure
        setChild(node.parent, child, leftChild);

        setChild(node, child.left, false);
        setChild(child, node, true);

        // update relative info
        // child becomes the new parent, its line and offset counts increase as the former parent
        // moves under child's left subtree
        child.line += node.line + 1;
        child.offset += node.offset + node.length;
    }

