    @Override
    public void computeCompletionProposals(final TextEditor textEditor, final int offset,
                                           final CodeAssistCallback callback) {
        if (errorMessage != null) {
            return;
        }
        final VirtualFile file = editor.getEditorInput().getFile();
        final String projectPath = file.getProject().getProjectConfig().getPath();
        String fqn = JavaSourceFolderUtil.getFQNForFile(file);
        Unmarshallable<Proposals> unmarshaller = unmarshallerFactory.newUnmarshaller(Proposals.class);
        client.computeProposals(projectPath, fqn, offset, textEditor.getDocument().getContents(),
                                new AsyncRequestCallback<Proposals>(unmarshaller) {
                                    @Override
                                    protected void onSuccess(Proposals proposals) {
                                        showProposals(callback, proposals);
                                    }

            @Override
            protected void onFailure(Throwable throwable) {
                Log.error(JavaCodeAssistProcessor.class, throwable);
            }
        });
    }

