  public void setMainClass(Resource resource, String fqn) {
    if (editedCommandModel.getMainClass().equals(resource.getLocation().toString())) {
      return;
    }

    final Optional<Project> project = resource.getRelatedProject();

    if (!project.isPresent()) {
      return;
    }

    final Path relPath =
        resource.getLocation().removeFirstSegments(project.get().getLocation().segmentCount());

    view.setMainClass(relPath.toString());

    String commandLine = editedCommandModel.getCommandLine();
    commandLine = commandLine.replace(editedCommandModel.getMainClass(), relPath.toString());
    commandLine = commandLine.replace(' ' + editedCommandModel.getMainClassFQN(), ' ' + fqn);

    editedCommandModel.setMainClass(view.getMainClass());
    editedCommandModel.setCommandLine(commandLine);

    editedCommand.setCommandLine(editedCommandModel.toCommandLine());
    listener.onDirtyStateChanged();
  }

