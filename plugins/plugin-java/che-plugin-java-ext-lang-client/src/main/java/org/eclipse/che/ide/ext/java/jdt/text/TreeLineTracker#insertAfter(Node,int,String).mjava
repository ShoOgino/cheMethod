    /**
     * Inserts a line with the given length and delimiter after <code>node</code> .
     *
     * @param node
     *         the predecessor of the inserted node
     * @param length
     *         the line length of the inserted node
     * @param delimiter
     *         the delimiter of the inserted node
     * @return the inserted node
     */
    private Node insertAfter(Node node, int length, String delimiter) {
      /*
       * An insertion really shifts the key of all succeeding nodes. Hence we insert the added node between node and the successor
       * of node. The added node becomes either the right child of the predecessor node, or the left child of the successor node.
       */
        Node added = new Node(length, delimiter);

        if (node.right == null)
            setChild(node, added, false);
        else
            setChild(successorDown(node.right), added, true);

        // parent chain update
        updateParentChain(added, length, 1);
        updateParentBalanceAfterInsertion(added);

        return added;
    }

