    /** {@inheritDoc} */
    @Override
    public void updatePresentation(@NotNull NodePresentation presentation) {
        StringBuilder presentableName = new StringBuilder(type.getLabel());
        if (isShowInheritedMembers && !type.isPrimary()) {
            String path = type.getRootPath();
            String className = type.isBinary() ? path.substring(path.lastIndexOf('.') + 1)
                                                 : path.substring(path.lastIndexOf('/') + 1, path.indexOf('.'));

            presentableName.append(" -> ").append(className);
        }

        updatePresentationField(isFromSuper, presentation, presentableName.toString(), resources);

        int flags = type.getFlags();
        SVGResource icon;
        if (Flags.isInterface(flags)) {
            icon = resources.interfaceItem();
        } else if (Flags.isEnum(flags)) {
            icon = resources.enumItem();
        } else if (Flags.isAnnotation(flags)) {
            icon = resources.annotationItem();
        } else {
            icon = resources.javaFile();
        }
        presentation.setPresentableIcon(icon);
    }

