    @Override
    public Promise<FindUsagesResponse> findUsages(final FindUsagesRequest request) {
        return createFromAsyncRequest(callback -> {
            loader.show();
            transmitter.newRequest()
                       .endpointId("ws-agent")
                       .methodName("javaSearch/findUsages")
                       .paramsAsDto(request)
                       .sendAndReceiveResultAsDto(FindUsagesResponse.class, 20_000)
                       .onSuccess(response -> {
                           loader.hide();
                           callback.onSuccess(response);
                       })
                       .onFailure(error -> {
                           notificationManager.notify("Find usage request failed", error.getMessage(), FAIL, EMERGE_MODE);
                           loader.hide();
                       })
                       .onTimeout(() -> {
                           notificationManager.notify("Find usage request failed", "Failed due timeout", FAIL, EMERGE_MODE);
                           loader.hide();
                       });
        });
    }

