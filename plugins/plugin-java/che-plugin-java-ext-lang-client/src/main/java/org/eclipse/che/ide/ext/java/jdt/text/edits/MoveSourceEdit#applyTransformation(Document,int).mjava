    private void applyTransformation(Document document, int style) throws MalformedTreeException {
        if ((style & TextEdit.UPDATE_REGIONS) != 0 && fSourceRoot != null) {
            Map<TextEdit, TextEdit> editMap = new HashMap<TextEdit, TextEdit>();
            TextEdit newEdit = createEdit(editMap);
            List<TextEdit> replaces = new ArrayList<TextEdit>(Arrays.asList(fModifier.getModifications(document.get())));
            insertEdits(newEdit, replaces);
            try {
                newEdit.apply(document, style);
            } catch (BadLocationException cannotHappen) {
                // Assert.isTrue(false);
            }
            restorePositions(editMap);
        } else {
            MultiTextEdit newEdit = new MultiTextEdit(0, document.getLength());
            TextEdit[] replaces = fModifier.getModifications(document.get());
            for (int i = 0; i < replaces.length; i++) {
                newEdit.addChild(replaces[i]);
            }
            try {
                newEdit.apply(document, style);
            } catch (BadLocationException cannotHappen) {
                // Assert.isTrue(false);
            }
        }
    }

