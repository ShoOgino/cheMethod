  /**
   * Debug-only method that validates the tree structure below <code>node</code>. I.e. it checks
   * whether all parent/child pointers are consistent and whether the AVL balance information is
   * correct.
   *
   * @param node the node to validate
   * @return the depth of the tree under <code>node</code>
   */
  private byte checkTreeStructure(Node node) {
    if (node == null) return 0;

    byte leftDepth = checkTreeStructure(node.left);
    byte rightDepth = checkTreeStructure(node.right);
    Assert.isTrue(node.balance == rightDepth - leftDepth);
    Assert.isTrue(node.left == null || node.left.parent == node);
    Assert.isTrue(node.right == null || node.right.parent == node);

    return (byte) (Math.max(rightDepth, leftDepth) + 1);
  }

