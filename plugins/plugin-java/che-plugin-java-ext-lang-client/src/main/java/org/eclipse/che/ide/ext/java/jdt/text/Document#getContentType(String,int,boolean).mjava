  /**
   * Returns the type of the document partition containing the given offset for the given
   * partitioning. This is a convenience method for <code>
   * getPartition(partitioning, offset, boolean).getType()</code>.
   *
   * <p>If <code>preferOpenPartitions</code> is <code>true</code>, precedence is given to an open
   * partition ending at <code>offset</code> over a delimited partition starting at <code>offset
   * </code>. If it is <code>false</code>, precedence is given to the partition that does not end at
   * <code>offset</code>. This is only supported if the connected <code>DocumentPartitioner</code>
   * supports it, i.e. implements <code>DocumentPartitionerExtension2</code>. Otherwise, <code>
   * preferOpenPartitions</code> is ignored.
   *
   * @param partitioning the partitioning
   * @param offset the document offset
   * @param preferOpenPartitions <code>true</code> if precedence should be given to a open partition
   *     ending at <code>offset</code> over a closed partition starting at <code>offset</code>
   * @return the partition type
   * @throws BadLocationException if offset is invalid in this document
   * @throws BadPartitioningException if partitioning is invalid for this document
   */
  String getContentType(String partitioning, int offset, boolean preferOpenPartitions)
      throws BadLocationException, BadPartitioningException;

