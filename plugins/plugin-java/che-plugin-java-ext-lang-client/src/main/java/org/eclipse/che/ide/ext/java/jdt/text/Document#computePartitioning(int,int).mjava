  /**
   * Computes the partitioning of the given document range using the document's partitioner.
   *
   * <p>Use {@link #computePartitioning(String, int, int, boolean)} when the document supports
   * multiple partitionings. In that case this method is equivalent:
   *
   * <pre>
   * DocumentExtension3 extension= (DocumentExtension3) document;
   * return extension.computePartitioning(DocumentExtension3.DEFAULT_PARTITIONING, offset, length, false);
   * </pre>
   *
   * @param offset the document offset at which the range starts
   * @param length the length of the document range
   * @return a specification of the range's partitioning
   * @throws BadLocationException if the range is invalid in this document
   */
  TypedRegion[] computePartitioning(int offset, int length) throws BadLocationException;

