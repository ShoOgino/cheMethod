  private void createTypeChildren(List<Node> child, Type type, boolean isFromSuper) {
    for (Method method : type.getMethods()) {
      if (!method.getLabel().startsWith("<")) {
        child.add(nodeFactory.create(method, isShowInheritedMembers, isFromSuper));
      }
    }

    for (Field field : type.getFields()) {
      child.add(nodeFactory.create(field, isShowInheritedMembers, isFromSuper));
    }

    for (Initializer initializer : type.getInitializers()) {
      child.add(nodeFactory.create(initializer, isShowInheritedMembers, isFromSuper));
    }

    for (Type subType : type.getTypes()) {
      child.add(nodeFactory.create(subType, compilationUnit, isShowInheritedMembers, isFromSuper));
    }
  }

