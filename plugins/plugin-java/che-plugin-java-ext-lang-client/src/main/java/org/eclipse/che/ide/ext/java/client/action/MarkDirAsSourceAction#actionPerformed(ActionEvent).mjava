  @Override
  public void actionPerformed(ActionEvent e) {
    final Resource resource = appContext.getResource();

    checkState(resource instanceof Container, "Parent should be a container");

    final Optional<Project> project = resource.getRelatedProject();

    checkState(project.isPresent());

    extensionService
        .classpathTree(project.get().getLocation().toString())
        .then(
            classpathEntries -> {
              classpathResolver.resolveClasspathEntries(classpathEntries);
              classpathResolver.getSources().add(resource.getLocation().toString());
              classpathResolver.updateClasspath();
            })
        .catchError(
            error -> {
              notificationManager.notify(
                  "Can't get classpath", error.getMessage(), FAIL, EMERGE_MODE);
            });
  }

