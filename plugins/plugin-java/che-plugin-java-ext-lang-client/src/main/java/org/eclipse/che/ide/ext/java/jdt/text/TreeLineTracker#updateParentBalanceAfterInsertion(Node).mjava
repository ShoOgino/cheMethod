    /**
     * Updates the balance information in the parent chain of node until it reaches the root or finds a node whose balance violates
     * the AVL constraint, which is the re-balanced.
     *
     * @param node
     *         the child of the first node that needs balance updating
     */
    private void updateParentBalanceAfterInsertion(Node node) {
        Node parent = node.parent;
        while (parent != null) {
            if (node == parent.left)
                parent.balance--;
            else
                parent.balance++;

            switch (parent.balance) {
                case 1:
                case -1:
                    node = parent;
                    parent = node.parent;
                    continue;
                case -2:
                    rebalanceAfterInsertionLeft(node);
                    break;
                case 2:
                    rebalanceAfterInsertionRight(node);
                    break;
                case 0:
                    break;
                default:
                    if (ASSERT)
                        Assert.isTrue(false);
            }
            return;
        }
    }

