    private RenameParams createRenameParams(RenameSettings renameSettings) {
      RenameParams renameParams = dtoFactory.createDto(RenameParams.class);
      renameParams.setNewName(view.getNewName());

      if (RefactoredItemType.JAVA_ELEMENT.equals(refactorInfo.getRefactoredItemType())) {
        EditorPartPresenter activeEditor = editorAgent.getActiveEditor();
        VirtualFile file = activeEditor.getEditorInput().getFile();
        TextDocumentIdentifier textDocumentIdentifier = dtoBuildHelper.createTDI(file);
        renameParams.setTextDocument(textDocumentIdentifier);

        TextPosition cursorPosition = ((TextEditor) activeEditor).getCursorPosition();
        org.eclipse.lsp4j.Position position =
            dtoFactory.createDto(org.eclipse.lsp4j.Position.class);
        position.setCharacter(cursorPosition.getCharacter());
        position.setLine(cursorPosition.getLine());
        renameParams.setPosition(position);
        renameSettings.setRenameKind(RenameKind.JAVA_ELEMENT);
      } else if (RefactoredItemType.COMPILATION_UNIT.equals(refactorInfo.getRefactoredItemType())) {
        renameSettings.setRenameKind(RenameKind.COMPILATION_UNIT);
        TextDocumentIdentifier textDocumentIdentifier =
            dtoFactory.createDto(TextDocumentIdentifier.class);
        textDocumentIdentifier.setUri(refactorInfo.getResources()[0].getLocation().toString());
        renameParams.setTextDocument(textDocumentIdentifier);
      } else if (RefactoredItemType.PACKAGE.equals(refactorInfo.getRefactoredItemType())) {
        renameSettings.setRenameKind(RenameKind.PACKAGE);
        TextDocumentIdentifier textDocumentIdentifier =
            dtoFactory.createDto(TextDocumentIdentifier.class);
        textDocumentIdentifier.setUri(refactorInfo.getResources()[0].getLocation().toString());
        renameParams.setTextDocument(textDocumentIdentifier);
      }
      return renameParams;
    }

