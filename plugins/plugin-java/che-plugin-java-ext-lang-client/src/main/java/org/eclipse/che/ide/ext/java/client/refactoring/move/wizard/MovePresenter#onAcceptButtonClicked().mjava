  /** {@inheritDoc} */
  @Override
  public void onAcceptButtonClicked() {
    final RefactoringSession session = dtoFactory.createDto(RefactoringSession.class);
    session.setSessionId(refactoringSessionId);
    prepareMovingChanges(session)
        .then(
            new Operation<ChangeCreationResult>() {
              @Override
              public void apply(ChangeCreationResult arg) throws OperationException {
                if (arg.isCanShowPreviewPage()) {
                  clientServerEventService
                      .sendFileTrackingSuspendEvent()
                      .then(
                          success -> {
                            applyRefactoring(session);
                          });
                } else {
                  view.showErrorMessage(arg.getStatus());
                }
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError error) throws OperationException {
                notificationManager.notify(
                    locale.applyMoveError(), error.getMessage(), Status.FAIL, FLOAT_MODE);
              }
            });
  }

