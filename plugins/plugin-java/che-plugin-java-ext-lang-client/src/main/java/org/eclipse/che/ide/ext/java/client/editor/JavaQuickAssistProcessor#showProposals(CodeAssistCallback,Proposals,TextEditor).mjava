    private void showProposals(final CodeAssistCallback callback, final Proposals responds, TextEditor editor) {
        List<ProposalPresentation> presentations = responds.getProposals();
        final List<CompletionProposal> proposals = new ArrayList<>(presentations.size());
        HasLinkedMode linkedEditor = editor instanceof HasLinkedMode ? (HasLinkedMode)editor : null;
        for (ProposalPresentation proposal : presentations) {
            CompletionProposal completionProposal;
            if (proposal.getActionId() != null) {
                completionProposal =
                        new ActionCompletionProposal(JavaCodeAssistProcessor.insertStyle(javaResources, proposal.getDisplayString()),
                                                     proposal.getActionId(), JavaCodeAssistProcessor.getIcon(proposal.getImage())
                        );
            } else {
                completionProposal = new JavaCompletionProposal(
                        proposal.getIndex(),
                        JavaCodeAssistProcessor.insertStyle(javaResources, proposal.getDisplayString()),
                        JavaCodeAssistProcessor.getIcon(proposal.getImage()),
                        client, responds.getSessionId(), linkedEditor, refactoringUpdater, editorAgent);
            }
            proposals.add(completionProposal);
        }

        callback.proposalComputed(proposals);
    }

