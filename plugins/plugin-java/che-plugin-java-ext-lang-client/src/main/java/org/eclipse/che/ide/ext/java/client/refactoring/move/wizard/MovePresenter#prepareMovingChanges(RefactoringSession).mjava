    private Promise<ChangeCreationResult> prepareMovingChanges(final RefactoringSession session) {
        MoveSettings moveSettings = dtoFactory.createDto(MoveSettings.class);
        moveSettings.setSessionId(refactoringSessionId);
        moveSettings.setUpdateReferences(view.isUpdateReferences());
        moveSettings.setUpdateQualifiedNames(view.isUpdateQualifiedNames());
        if (moveSettings.isUpdateQualifiedNames()) {
            moveSettings.setFilePatterns(view.getFilePatterns());
        }

        return refactorService.setMoveSettings(moveSettings).thenPromise(new Function<Void, Promise<ChangeCreationResult>>() {
            @Override
            public Promise<ChangeCreationResult> apply(Void arg) throws FunctionException {
                return refactorService.createChange(session);
            }
        });
    }

