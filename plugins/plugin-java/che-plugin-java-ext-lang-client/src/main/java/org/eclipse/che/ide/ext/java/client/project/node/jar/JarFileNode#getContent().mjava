    /** {@inheritDoc} */
    @Override
    public Promise<String> getContent() {
        return AsyncPromiseHelper.createFromAsyncRequest(new AsyncPromiseHelper.RequestCall<String>() {
            @Override
            public void makeCall(final AsyncCallback<String> callback) {
                JavaNavigationService javaService = nodeManager.getJavaService();
                if (libId != null) {
                    javaService.getContent(getProjectConfig().getPath(), libId, getData().getPath(),
                                           new AsyncRequestCallback<String>(new StringUnmarshaller()) {
                                               @Override
                                               protected void onSuccess(String result) {
                                                   callback.onSuccess(result);
                                               }

                                               @Override
                                               protected void onFailure(Throwable exception) {
                                                   callback.onFailure(exception);
                                               }
                                           });
                } else {
                    javaService.getContent(getProjectConfig().getPath(), getData().getPath(),
                                           new AsyncRequestCallback<String>(new StringUnmarshaller()) {
                                               @Override
                                               protected void onSuccess(String result) {
                                                   callback.onSuccess(result);
                                               }

                                               @Override
                                               protected void onFailure(Throwable exception) {
                                                   callback.onFailure(exception);
                                               }
                                           });
                }
            }
        });
    }

