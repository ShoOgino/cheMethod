  @Inject
  public PropertyNameManager(JavaLocalizationConstant locale) {
    names = new HashMap<>();

    names.put(COMPILER_UNUSED_LOCAL, locale.propertyUnusedLocal());
    names.put(COMPILER_UNUSED_IMPORT, locale.propertyUnusedImport());
    names.put(DEAD_CODE, locale.propertyDeadCode());
    names.put(METHOD_WITH_CONSTRUCTOR_NAME, locale.propertyWithConstructorName());
    names.put(UNNECESSARY_ELSE_STATEMENT, locale.propertyUnnecessaryElse());
    names.put(COMPARING_IDENTICAL_VALUES, locale.comparingIdenticalValues());
    names.put(NO_EFFECT_ASSIGNMENT, locale.noEffectAssignment());
    names.put(MISSING_SERIAL_VERSION_UID, locale.missingSerialVersionUid());
    names.put(TYPE_PARAMETER_HIDE_ANOTHER_TYPE, locale.typeParameterHideAnotherType());
    names.put(FIELD_HIDES_ANOTHER_VARIABLE, locale.fieldHidesAnotherField());
    names.put(MISSING_DEFAULT_CASE, locale.missingSwitchDefaultCase());
    names.put(UNUSED_PRIVATE_MEMBER, locale.unusedPrivateMember());
    names.put(UNCHECKED_TYPE_OPERATION, locale.uncheckedTypeOperation());
    names.put(USAGE_OF_RAW_TYPE, locale.usageRawType());
    names.put(MISSING_OVERRIDE_ANNOTATION, locale.missingOverrideAnnotation());
    names.put(NULL_POINTER_ACCESS, locale.nullPointerAccess());
    names.put(POTENTIAL_NULL_POINTER_ACCESS, locale.potentialNullPointerAccess());
    names.put(REDUNDANT_NULL_CHECK, locale.redundantNullCheck());
  }

