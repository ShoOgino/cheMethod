  /** {@inheritDoc} */
  @Override
  public void setTreeOfDestinations(
      RefactorInfo refactorInfo, List<JavaProjectStructure> projects) {
    final SingleSelectionModel<Object> selectionModel = new SingleSelectionModel<>();
    selectionModel.addSelectionChangeHandler(
        event -> {
          Object object = selectionModel.getSelectedObject();

          if (object instanceof PackageFragmentRoot) {
            PackageFragmentRoot fragmentRoot = (PackageFragmentRoot) object;
            delegate.setMoveDestinationPath(fragmentRoot.getUri(), fragmentRoot.getProjectUri());
          }

          if (object instanceof PackageFragment) {
            PackageFragment fragment = (PackageFragment) object;
            delegate.setMoveDestinationPath(fragment.getUri(), fragment.getProjectUri());
          }
        });
    CellTree tree =
        new CellTree(
            new ProjectsAndPackagesModel(projects, refactorInfo, selectionModel, resources),
            null,
            cellTreeResources);
    tree.setAnimationEnabled(true);
    treePanel.clear();
    treePanel.add(tree);
  }

