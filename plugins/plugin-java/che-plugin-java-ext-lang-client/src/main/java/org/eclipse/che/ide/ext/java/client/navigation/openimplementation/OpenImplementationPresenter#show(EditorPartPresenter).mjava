    /**
     * Shows the implementations of the selected element.
     *
     * @param editorPartPresenter
     *         the active editor
     */
    public void show(final EditorPartPresenter editorPartPresenter) {
        if (!(editorPartPresenter instanceof TextEditor)) {
            Log.error(getClass(), "Open Declaration support only TextEditor as editor");
            return;
        }
        activeEditor = ((TextEditor)editorPartPresenter);
        final VirtualFile file = activeEditor.getEditorInput().getFile();

        if (file instanceof Resource) {
            final Optional<Project> project = ((Resource)file).getRelatedProject();

            final Optional<Resource> srcFolder = ((Resource)file).getParentWithMarker(SourceFolderMarker.ID);

            if (!srcFolder.isPresent()) {
                return;
            }

            final String fqn = JavaUtil.resolveFQN((Container)srcFolder.get(), (Resource)file);

            service.getImplementations(project.get().getLocation(), fqn, activeEditor.getCursorOffset()).then(
                    new Operation<ImplementationsDescriptorDTO>() {
                        @Override
                        public void apply(ImplementationsDescriptorDTO impls) throws OperationException {
                            int overridingSize = impls.getImplementations().size();

                            String title = locale.openImplementationWindowTitle(impls.getMemberName(), overridingSize);
                            NoImplementationWidget noImplementationWidget = new NoImplementationWidget(popupResources,
                                                                                                       javaResources,
                                                                                                       locale,
                                                                                                       OpenImplementationPresenter.this,
                                                                                                       title);
                            if (overridingSize == 1) {
                                actionPerformed(impls.getImplementations().get(0));
                            } else if (overridingSize > 1) {
                                openOneImplementation(impls,
                                                      noImplementationWidget,
                                                      (TextEditor)editorPartPresenter);
                            } else if (!isNullOrEmpty(impls.getMemberName()) && overridingSize == 0) {
                                showNoImplementations(noImplementationWidget, (TextEditor)editorPartPresenter);
                            }
                        }
                    });
        }

    }

