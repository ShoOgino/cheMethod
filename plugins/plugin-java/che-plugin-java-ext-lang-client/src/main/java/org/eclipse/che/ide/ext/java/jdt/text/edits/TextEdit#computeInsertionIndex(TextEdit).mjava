  private int computeInsertionIndex(TextEdit edit) throws MalformedTreeException {
    int size = fChildren.size();
    if (size == 0) return 0;
    int lastIndex = size - 1;
    TextEdit last = (TextEdit) fChildren.get(lastIndex);
    if (last.getExclusiveEnd() <= edit.getOffset()) return size;
    try {

      int index = Collections.binarySearch(fChildren, edit, INSERTION_COMPARATOR);

      if (index < 0)
        // edit is not in fChildren
        return -index - 1;

      // edit is already in fChildren
      // make sure that multiple insertion points at the same offset are inserted last.
      while (index < lastIndex
          && INSERTION_COMPARATOR.compare(fChildren.get(index), fChildren.get(index + 1)) == 0)
        index++;

      return index + 1;

    } catch (MalformedTreeException e) {
      e.setParent(this);
      throw e;
    }
  }

