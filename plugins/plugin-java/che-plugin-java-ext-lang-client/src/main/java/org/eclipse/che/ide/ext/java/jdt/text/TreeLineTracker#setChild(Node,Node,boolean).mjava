    /**
     * Helper method for moving a child, ensuring that parent pointers are set correctly.
     *
     * @param parent
     *         the new parent of <code>child</code>, <code>null</code> to replace the root node
     * @param child
     *         the new child of <code>parent</code>, may be <code>null</code>
     * @param isLeftChild
     *         <code>true</code> if <code>child</code> shall become <code>parent</code>'s left child, <code>false</code>
     *         if it shall become <code>parent</code>'s right child
     */
    private void setChild(Node parent, Node child, boolean isLeftChild) {
        if (parent == null) {
            if (child == null)
                fRoot = new Node(0, NO_DELIM);
            else
                fRoot = child;
        } else {
            if (isLeftChild)
                parent.left = child;
            else
                parent.right = child;
        }
        if (child != null)
            child.parent = parent;
    }

