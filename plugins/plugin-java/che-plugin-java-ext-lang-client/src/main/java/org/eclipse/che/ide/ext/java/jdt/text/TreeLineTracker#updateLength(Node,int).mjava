  /**
   * Adjusts the length of a node by <code>delta</code>, also adjusting the parent chain of <code>
   * node</code>. If the node's length becomes zero and is not the last (incomplete) node, it is
   * deleted after the update.
   *
   * @param node the node to adjust
   * @param delta the character delta to add to the node's length
   */
  private void updateLength(Node node, int delta) {
    if (ASSERT) Assert.isTrue(node.length + delta >= 0);

    // update the node itself
    node.length += delta;

    // check deletion
    final int lineDelta;
    boolean delete = node.length == 0 && node.delimiter != NO_DELIM;
    if (delete) lineDelta = -1;
    else lineDelta = 0;

    // update parent chain
    if (delta != 0 || lineDelta != 0) updateParentChain(node, delta, lineDelta);

    if (delete) delete(node);
  }

