  /**
   * Checks the state for the given partitioner and stops the active rewrite session.
   *
   * @param partitioner the document partitioner to be checked
   * @param partitioning the document partitioning the partitioner is registered for
   * @since 3.1
   */
  protected final void checkStateOfPartitioner(
      DocumentPartitioner partitioner, String partitioning) {
    // if (!(partitioner instanceof IDocumentPartitionerExtension3))
    // return;
    //
    // IDocumentPartitionerExtension3 extension = (IDocumentPartitionerExtension3)partitioner;
    // DocumentRewriteSession session = extension.getActiveRewriteSession();
    // if (session != null)
    // {
    // extension.stopRewriteSession(session);
    //
    // if (DEBUG)
    //            System.out.println("AbstractDocument: Flushing rewrite session for partition type:
    // " + partitioning); //$NON-NLS-1$
    //
    // DocumentPartitioningChangedEvent event = new DocumentPartitioningChangedEvent(this);
    // event.setPartitionChange(partitioning, 0, getLength());
    // fireDocumentPartitioningChanged(event);
    // }
  }

