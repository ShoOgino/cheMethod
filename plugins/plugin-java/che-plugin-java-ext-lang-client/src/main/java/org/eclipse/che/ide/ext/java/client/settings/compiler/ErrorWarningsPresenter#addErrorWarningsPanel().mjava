    private void addErrorWarningsPanel() {
        Promise<Map<String, String>> propertiesPromise = service.getCompileParameters();

        propertiesPromise.then(new Operation<Map<String, String>>() {
            @Override
            public void apply(Map<String, String> properties) throws OperationException {
                ErrorWarningsPresenter.this.allProperties = properties;

                createAndAddWidget(COMPILER_UNUSED_LOCAL);

                createAndAddWidget(COMPILER_UNUSED_IMPORT);

                createAndAddWidget(DEAD_CODE);

                createAndAddWidget(METHOD_WITH_CONSTRUCTOR_NAME);

                createAndAddWidget(UNNECESSARY_ELSE_STATEMENT);

                createAndAddWidget(COMPARING_IDENTICAL_VALUES);

                createAndAddWidget(NO_EFFECT_ASSIGNMENT);

                createAndAddWidget(MISSING_SERIAL_VERSION_UID);

                createAndAddWidget(TYPE_PARAMETER_HIDE_ANOTHER_TYPE);

                createAndAddWidget(FIELD_HIDES_ANOTHER_VARIABLE);

                createAndAddWidget(MISSING_DEFAULT_CASE);

                createAndAddWidget(UNUSED_PRIVATE_MEMBER);

                createAndAddWidget(UNCHECKED_TYPE_OPERATION);

                createAndAddWidget(USAGE_OF_RAW_TYPE);

                createAndAddWidget(MISSING_OVERRIDE_ANNOTATION);

                createAndAddWidget(NULL_POINTER_ACCESS);

                createAndAddWidget(POTENTIAL_NULL_POINTER_ACCESS);

                createAndAddWidget(REDUNDANT_NULL_CHECK);
            }
        });
    }

