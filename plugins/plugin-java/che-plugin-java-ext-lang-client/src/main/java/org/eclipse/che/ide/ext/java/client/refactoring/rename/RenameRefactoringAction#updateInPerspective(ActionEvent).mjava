  @Override
  public void updateInPerspective(ActionEvent event) {
    event.getPresentation().setVisible(true);

    if (editorInFocus) {
      final EditorPartPresenter editorPart = editorAgent.getActiveEditor();
      if (editorPart == null || !(editorPart instanceof TextEditor)) {
        event.getPresentation().setEnabled(false);
        return;
      }

      final VirtualFile file = editorPart.getEditorInput().getFile();

      if (file instanceof File) {
        final Optional<Project> project = ((File) file).getRelatedProject();

        if (!project.isPresent()) {
          event.getPresentation().setEnabled(false);
          return;
        }

        event
            .getPresentation()
            .setEnabled(JavaUtil.isJavaProject(project.get()) && isJavaFile(file));
      } else {
        event.getPresentation().setEnabled(isJavaFile(file));
      }

    } else {
      final Resource[] resources = appContext.getResources();

      if (resources == null || resources.length > 1) {
        event.getPresentation().setEnabled(false);
        return;
      }

      final Resource resource = resources[0];

      final Optional<Project> project = resource.getRelatedProject();

      if (!project.isPresent()) {
        event.getPresentation().setEnabled(false);
        return;
      }

      final Optional<Resource> srcFolder = resource.getParentWithMarker(SourceFolderMarker.ID);

      if (resource.getResourceType() == FILE) {
        event
            .getPresentation()
            .setEnabled(
                JavaUtil.isJavaProject(project.get())
                    && srcFolder.isPresent()
                    && isJavaFile((File) resource));
      } else if (resource instanceof Container) {
        event
            .getPresentation()
            .setEnabled(JavaUtil.isJavaProject(project.get()) && srcFolder.isPresent());
      }
    }
  }

