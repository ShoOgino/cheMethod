    /** {@inheritDoc} */
    @Override
    public Promise<Void> applyCompileParameters(@NotNull final Map<String, String> parameters) {
        final String pathToProject = getPathToProject();

        return newPromise(new AsyncPromiseHelper.RequestCall<Void>() {
            @Override
            public void makeCall(AsyncCallback<Void> callback) {
                String url = extPath  + "/jdt/" + workspaceId + "/compiler-settings/set?projectpath=" + pathToProject;

                JsonSerializable data = new JsonSerializable() {
                    @Override
                    public String toJson() {
                        return JsonHelper.toJson(parameters);
                    }
                };

                asyncRequestFactory.createPostRequest(url, data)
                                   .header(ACCEPT, APPLICATION_JSON)
                                   .header(CONTENT_TYPE, APPLICATION_JSON)
                                   .send(newCallback(callback));
            }
        });
    }

