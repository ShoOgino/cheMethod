    @Override
    public void getCompletion(boolean insert, final CompletionCallback callback) {
        client.applyProposal(sessionId, id, insert, new AsyncCallback<ProposalApplyResult>() {
            @Override
            public void onFailure(Throwable caught) {
                Log.error(JavaCompletionProposal.class, caught);
            }

            @Override
            public void onSuccess(ProposalApplyResult result) {
                callback.onCompletion(new CompletionImpl(result.getChanges(), result.getSelection(), result.getLinkedModeModel()));
                ArrayList selectedItems = new ArrayList(1);
                selectedItems.add(editorAgent.getActiveEditor().getEditorInput().getFile());
                RefactorInfo refactorInfo = RefactorInfo.of(RefactoredItemType.JAVA_ELEMENT, selectedItems);

                ChangeInfo changeInfo = result.getChangeInfo();
                if (changeInfo == null) {
                    return;
                }
                ArrayList<ChangeInfo> changes = new ArrayList<>(1);
                changes.add(changeInfo);
                refactoringUpdater.updateAfterRefactoring(refactorInfo, changes);
            }
        });
    }

