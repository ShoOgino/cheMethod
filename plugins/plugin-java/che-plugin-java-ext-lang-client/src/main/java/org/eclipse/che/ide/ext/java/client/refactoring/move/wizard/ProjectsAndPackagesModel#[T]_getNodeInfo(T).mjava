    /** {@inheritDoc} */
    @Override
    public <T> NodeInfo<?> getNodeInfo(T value) {
        if (value == null) {
            return new DefaultNodeInfo<>(new ListDataProvider<>(projects), new AbstractCell<JavaProject>() {
                @Override
                public void render(Context context, JavaProject value, SafeHtmlBuilder sb) {
                    sb.appendHtmlConstant(resources.javaCategoryIcon().getSvg().getElement().getString()).appendEscaped(" ");
                    sb.appendEscaped(value.getName());
                }
            }, selectionModel, null);
        }

        if (value instanceof JavaProject) {
            final JavaProject project = (JavaProject)value;
            return new DefaultNodeInfo<>(new ListDataProvider<>(project.getPackageFragmentRoots()),
                                         new AbstractCell<PackageFragmentRoot>() {
                                             @Override
                                             public void render(Context context, PackageFragmentRoot value,
                                                                SafeHtmlBuilder sb) {
                                                 sb.appendHtmlConstant(resources.sourceFolder()
                                                                                .getSvg()
                                                                                .getElement()
                                                                                .getString())
                                                   .appendEscaped(" ");

                                                 sb.appendEscaped(value.getPath().substring(project.getPath().length()));
                                             }
                                         }, selectionModel, null);
        }

        if (value instanceof PackageFragmentRoot) {
            return new DefaultNodeInfo<>(new ListDataProvider<>(((PackageFragmentRoot)value).getPackageFragments()),
                                                        new AbstractCell<PackageFragment>() {
                                                            @Override
                                                            public void render(Context context, PackageFragment value, SafeHtmlBuilder sb) {
                                                                sb.appendHtmlConstant(resources.packageItem()
                                                                                               .getSvg()
                                                                                               .getElement()
                                                                                               .getString())
                                                                  .appendEscaped(" ");

                                                                if (value.getElementName().isEmpty()) {
                                                                    sb.appendEscaped("(default package)");
                                                                } else {
                                                                    sb.appendEscaped(value.getElementName());
                                                                }
                                                            }
                                                        }, selectionModel, null);
        }
        return null;
    }

