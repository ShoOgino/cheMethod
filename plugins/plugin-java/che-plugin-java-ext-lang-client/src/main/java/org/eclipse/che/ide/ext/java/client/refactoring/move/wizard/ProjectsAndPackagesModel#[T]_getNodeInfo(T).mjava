  /** {@inheritDoc} */
  @Override
  public <T> NodeInfo<?> getNodeInfo(T value) {
    if (value == null) {
      return new DefaultNodeInfo<>(
          new ListDataProvider<>(projects),
          new AbstractCell<JavaProjectStructure>() {
            @Override
            public void render(Context context, JavaProjectStructure value, SafeHtmlBuilder sb) {
              sb.appendHtmlConstant(resources.javaCategoryIcon().getSvg().getElement().getString())
                  .appendEscaped(" ");
              sb.appendEscaped(value.getName());
            }
          },
          selectionModel,
          null);
    }

    if (value instanceof JavaProjectStructure) {
      final JavaProjectStructure project = (JavaProjectStructure) value;
      return new DefaultNodeInfo<>(
          new ListDataProvider<>(project.getPackageRoots()),
          new AbstractCell<PackageFragmentRoot>() {
            @Override
            public void render(Context context, PackageFragmentRoot value, SafeHtmlBuilder sb) {
              sb.appendHtmlConstant(resources.sourceFolder().getSvg().getElement().getString())
                  .appendEscaped(" ");

              sb.appendEscaped(value.getUri().substring(project.getUri().length()));
            }
          },
          selectionModel,
          null);
    }

    if (value instanceof PackageFragmentRoot) {
      if (RefactoredItemType.PACKAGE.equals(refactorInfo.getRefactoredItemType())) {
        return null;
      }
      return new DefaultNodeInfo<>(
          new ListDataProvider<>(((PackageFragmentRoot) value).getPackages()),
          new AbstractCell<PackageFragment>() {
            @Override
            public void render(Context context, PackageFragment value, SafeHtmlBuilder sb) {
              sb.appendHtmlConstant(resources.packageItem().getSvg().getElement().getString())
                  .appendEscaped(" ");

              if (value.getName().isEmpty()) {
                sb.appendEscaped("(default package)");
              } else {
                sb.appendEscaped(value.getName());
              }
            }
          },
          selectionModel,
          null);
    }
    return null;
  }

