    /** {@inheritDoc} */
    @Override
    public Position[] getPositions(String category, int offset, int length, boolean canStartBefore,
                                   boolean canEndAfter) throws BadPositionCategoryException {
        if (canStartBefore && canEndAfter || (!canStartBefore && !canEndAfter)) {
            List<Position> documentPositions;
            if (canStartBefore && canEndAfter) {
                if (offset < getLength() / 2) {
                    documentPositions = getStartingPositions(category, 0, offset + length);
                } else {
                    documentPositions = getEndingPositions(category, offset, getLength() - offset + 1);
                }
            } else {
                documentPositions = getStartingPositions(category, offset, length);
            }

            ArrayList<Position> list = new ArrayList<Position>(documentPositions.size());

            Position region = new Position(offset, length);

            for (Iterator<Position> iterator = documentPositions.iterator(); iterator.hasNext(); ) {
                Position position = iterator.next();
                if (isWithinRegion(region, position, canStartBefore, canEndAfter)) {
                    list.add(position);
                }
            }

            Position[] positions = new Position[list.size()];
            list.toArray(positions);
            return positions;
        } else if (canStartBefore) {
            List<Position> list = getEndingPositions(category, offset, length);
            Position[] positions = new Position[list.size()];
            list.toArray(positions);
            return positions;
        } else {
            Assert.isLegal(canEndAfter && !canStartBefore);

            List<Position> list = getStartingPositions(category, offset, length);
            Position[] positions = new Position[list.size()];
            list.toArray(positions);
            return positions;
        }
    }

