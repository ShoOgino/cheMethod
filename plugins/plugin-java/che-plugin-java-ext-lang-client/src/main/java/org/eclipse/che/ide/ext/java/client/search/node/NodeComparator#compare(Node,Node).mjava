  @Override
  public int compare(Node o1, Node o2) {
    if (o1 instanceof MatchNode && o2 instanceof MatchNode) {
      return Integer.compare(
          ((MatchNode) o1).getMatch().getMatchLineNumber(),
          ((MatchNode) o2).getMatch().getMatchLineNumber());
    }

    if (o1 instanceof MethodNode && o2 instanceof MatchNode) {
      List<Match> matches = ((MethodNode) o1).getMatches();
      if (matches != null) {
        if (isHasGreaterLine(((MatchNode) o2).getMatch().getMatchLineNumber(), matches)) {
          return -1;
        } else {
          return 1;
        }
      }
    }

    if (o2 instanceof MethodNode && o1 instanceof MatchNode) {
      List<Match> matches = ((MethodNode) o2).getMatches();
      if (matches != null) {
        if (isHasGreaterLine(((MatchNode) o1).getMatch().getMatchLineNumber(), matches)) {
          return 1;
        } else {
          return -1;
        }
      }
    }

    if (o1 instanceof TypeNode && o2 instanceof MatchNode) {
      List<Match> matches = ((TypeNode) o1).getMatches();
      if (matches != null) {
        if (isHasGreaterLine(((MatchNode) o2).getMatch().getMatchLineNumber(), matches)) {
          return -1;
        } else {
          return 1;
        }
      }
    }
    if (o2 instanceof TypeNode && o1 instanceof MatchNode) {
      List<Match> matches = ((TypeNode) o2).getMatches();
      if (matches != null) {
        if (isHasGreaterLine(((MatchNode) o1).getMatch().getMatchLineNumber(), matches)) {
          return 1;
        } else {
          return -1;
        }
      }
    }

    if (o1 instanceof TypeNode && o2 instanceof MethodNode) {
      List<Match> typeMatches = ((TypeNode) o1).getMatches();
      List<Match> methodMatches = ((MethodNode) o2).getMatches();
      if (typeMatches == null) {
        return -1;
      }
      if (methodMatches == null) {
        return 1;
      }
      return compare(typeMatches, methodMatches);
    }

    if (o1 instanceof MethodNode && o2 instanceof TypeNode) {
      List<Match> methodMatches = ((TypeNode) o2).getMatches();
      List<Match> typeMatches = ((MethodNode) o1).getMatches();
      if (typeMatches == null) {
        return 1;
      }
      if (methodMatches == null) {
        return -1;
      }
      return compare(methodMatches, typeMatches);
    }

    if (o1 instanceof MethodNode && o2 instanceof MethodNode) {
      List<Match> methodMatches1 = ((MethodNode) o1).getMatches();
      List<Match> methodMatches2 = ((MethodNode) o2).getMatches();
      if (methodMatches1 == null) {
        return -1;
      }
      if (methodMatches2 == null) {
        return 1;
      }
      return compare(methodMatches1, methodMatches2);
    }

    if (o1 instanceof TypeNode && o2 instanceof TypeNode) {
      List<Match> first = ((TypeNode) o1).getMatches();
      List<Match> second = ((TypeNode) o2).getMatches();
      if (first == null) {
        return -1;
      }
      if (second == null) {
        return 1;
      }
      return compare(first, second);
    }

    return 0;
  }

