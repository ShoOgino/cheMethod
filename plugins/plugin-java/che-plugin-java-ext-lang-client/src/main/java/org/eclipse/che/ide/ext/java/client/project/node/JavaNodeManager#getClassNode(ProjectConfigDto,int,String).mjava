    public Promise<Node> getClassNode(final ProjectConfigDto projectConfig, final int libId, final String path) {
        return AsyncPromiseHelper.createFromAsyncRequest(new RequestCall<Node>() {
            @Override
            public void makeCall(final AsyncCallback<Node> callback) {
                Unmarshallable<JarEntry> u = dtoUnmarshaller.newUnmarshaller(JarEntry.class);
                javaService.getEntry(projectConfig.getPath(), libId, path, new AsyncRequestCallback<JarEntry>(u) {
                    @Override
                    protected void onSuccess(JarEntry entry) {
                        Node node = createNode(entry, libId, projectConfig, settingsProvider.getSettings());
                        callback.onSuccess(node);
                    }

                    @Override
                    protected void onFailure(Throwable exception) {
                        callback.onFailure(exception);
                    }
                });
            }
        });
    }

