    @Override
    protected Promise<List<Node>> getChildrenImpl() {
        return PromiseHelper.newPromise(new AsyncPromiseHelper.RequestCall<List<Node>>() {
            @Override
            public void makeCall(AsyncCallback<List<Node>> callback) {
                List<Node> children = new ArrayList<>();
                if (matches.containsKey(method.getHandleIdentifier())) {
                    for (Match match : matches.get(method.getHandleIdentifier())) {
                        children.add(nodeFactory.create(match, compilationUnit, classFile));
                    }
                }

                Collections.sort(children, new NodeComparator());
                callback.onSuccess(children);
            }
        });
    }

