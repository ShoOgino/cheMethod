  /**
   * Re-balances a node whose parent has a double positive balance.
   *
   * @param node the node to re-balance
   * @return <code>true</code> if the re-balancement leaves the height at <code>node.parent</code>
   *     constant, <code>false</code> if the height changed
   */
  private boolean rebalanceAfterDeletionLeft(Node node) {
    Node parent = node.parent;
    if (node.balance == 1) {
      singleLeftRotation(node, parent);
      return false;
    } else if (node.balance == -1) {
      rightLeftRotation(node, parent);
      return false;
    } else if (node.balance == 0) {
      rotateLeft(parent);
      node.balance = -1;
      parent.balance = 1;
      return true;
    } else {
      if (ASSERT) Assert.isTrue(false);
      return true;
    }
  }

