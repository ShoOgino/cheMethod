    void parse() {
        VirtualFile file = getFile();
        Project project = getProject(file);
        if (project == null) {
            return;
        }

        String fqn = resolveFQN(file);
        String projectPath = project.getPath();

        client.reconcile(fqn, projectPath).onSuccess(reconcileResult -> {
            if (isProjectResolving()) {
                disableReconciler(localizationConstant.codeAssistErrorMessageResolvingProject());
                return;
            } else {
                codeAssistProcessor.enableCodeAssistant();
            }

            if (reconcileResult == null) {
                return;
            }

            doReconcile(reconcileResult.getProblems());
            highlighter.reconcile(reconcileResult.getHighlightedPositions());
            eventBus.fireEvent(new JavaReconsilerEvent(editor));
        }).onFailure(jsonRpcError -> Log.info(getClass(), jsonRpcError.getMessage()));
    }

