  /**
   * Removes all connected document partitioners from the given document and stores them under their
   * partitioning name in a map. This map is returned. After this method has been called the given
   * document is no longer connected to any document partitioner.
   *
   * @param document the document
   * @return the map containing the removed partitioners (key type: {@link String}, value type:
   *     {@link DocumentPartitioner})
   */
  public static Map<String, DocumentPartitioner> removeDocumentPartitioners(Document document) {
    Map<String, DocumentPartitioner> partitioners = new HashMap<String, DocumentPartitioner>();

    String[] partitionings = document.getPartitionings();
    for (int i = 0; i < partitionings.length; i++) {
      DocumentPartitioner partitioner = document.getDocumentPartitioner(partitionings[i]);
      if (partitioner != null) {
        document.setDocumentPartitioner(partitionings[i], null);
        partitioner.disconnect();
        partitioners.put(partitionings[i], partitioner);
      }
    }
    //      }
    //      else
    //      {
    //         IDocumentPartitioner partitioner = document.getDocumentPartitioner();
    //         if (partitioner != null)
    //         {
    //            document.setDocumentPartitioner(null);
    //            partitioner.disconnect();
    //            partitioners.put(IDocumentExtension3.DEFAULT_PARTITIONING, partitioner);
    //         }
    //      }
    return partitioners;
  }

