  /**
   * Computes and returns the partitioning for the given region of the given document for the given
   * partitioning name.
   *
   * @param document the document
   * @param partitioning the partitioning name
   * @param offset the region offset
   * @param length the region length
   * @param includeZeroLengthPartitions whether to include zero-length partitions
   * @return the partitioning for the given region of the given document for the given partitioning
   *     name
   * @throws BadLocationException if the given region is invalid for the given document
   */
  public static TypedRegion[] computePartitioning(
      Document document,
      String partitioning,
      int offset,
      int length,
      boolean includeZeroLengthPartitions)
      throws BadLocationException {
    try {
      return document.computePartitioning(
          partitioning, offset, length, includeZeroLengthPartitions);
    } catch (BadPartitioningException x) {
      return new TypedRegion[0];
    }

    //      return document.computePartitioning(offset, length);
  }

