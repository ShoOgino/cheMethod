    /** {@inheritDoc} */
    @Override
    protected void configure() {
        bind(NewJavaSourceFileView.class).to(NewJavaSourceFileViewImpl.class).in(Singleton.class);
        bind(QuickDocumentation.class).to(QuickDocPresenter.class).in(Singleton.class);
        bind(JavaNavigationService.class).to(JavaNavigationServiceImpl.class);
        bind(JavaClasspathServiceClient.class).to(JavaClasspathServiceClientImpl.class);
        bind(JavaSearchService.class).to(JavaSearchServiceWS.class);

        bind(JavaNodeManager.class);

        GinMapBinder<String, SettingsProvider> mapBinder =
                GinMapBinder.newMapBinder(binder(), String.class, SettingsProvider.class);
        mapBinder.addBinding("java").to(JavaNodeSettingsProvider.class);

        GinMultibinder.newSetBinder(binder(), NodeInterceptor.class).addBinding().to(JavaClassInterceptor.class);
        GinMultibinder.newSetBinder(binder(), NodeInterceptor.class).addBinding().to(TestContentRootDecorator.class);


        install(new GinFactoryModuleBuilder().build(JavaNodeFactory.class));
        install(new GinFactoryModuleBuilder().implement(PropertyWidget.class, PropertyWidgetImpl.class)
                                             .build(PropertyWidgetFactory.class));

        install(new GinFactoryModuleBuilder().build(NodeFactory.class));
        install(new GinFactoryModuleBuilder().build(org.eclipse.che.ide.ext.java.client.navigation.factory.NodeFactory.class));

        GinMultibinder<SettingsPagePresenter> settingsBinder = GinMultibinder.newSetBinder(binder(), SettingsPagePresenter.class);
        settingsBinder.addBinding().to(ErrorWarningsPresenter.class);

        GinMultibinder.newSetBinder(binder(), CommandPropertyValueProvider.class).addBinding().to(CurrentClassFQNProvider.class);
    }

