  /**
   * Show Rename window with the special information.
   *
   * @param refactorInfo information about the rename operation
   */
  public void show(RefactorInfo refactorInfo) {
    this.refactorInfo = refactorInfo;
    final CreateRenameRefactoring createRenameRefactoring =
        createRenameRefactoringDto(refactorInfo);

    Promise<RenameRefactoringSession> createRenamePromise =
        refactorService.createRenameRefactoring(createRenameRefactoring);
    createRenamePromise
        .then(
            new Operation<RenameRefactoringSession>() {
              @Override
              public void apply(RenameRefactoringSession session) throws OperationException {
                show(session);
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError arg) throws OperationException {
                notificationManager.notify(
                    locale.failedToRename(), arg.getMessage(), FAIL, FLOAT_MODE);
              }
            });
  }

