    /** {@inheritDoc} */
    @Override
    public void onFinishButtonClicked() {
        selected.put(page, view.getSelectedImport());

        ConflictImportDTO result = dtoFactory.createDto(ConflictImportDTO.class).withTypeMatches(new ArrayList<>(selected.values()));

        String projectPath = file.getProject().getProjectConfig().getPath();
        String fqn = JavaSourceFolderUtil.getFQNForFile(file);

        javaCodeAssistClient.applyChosenImports(projectPath, fqn, result)
                            .then(new Operation<Void>() {
                                @Override
                                public void apply(Void arg) throws OperationException {
                                    applyChanges(file);
                                    view.hide();
                                    ((TextEditor)editor).setFocus();
                                }
                            })
                            .catchError(new Operation<PromiseError>() {
                                @Override
                                public void apply(PromiseError arg) throws OperationException {
                                    notificationManager.notify(locale.failedToProcessOrganizeImports(), arg.getMessage(), FAIL, FLOAT_MODE);
                                }
                            });
    }

