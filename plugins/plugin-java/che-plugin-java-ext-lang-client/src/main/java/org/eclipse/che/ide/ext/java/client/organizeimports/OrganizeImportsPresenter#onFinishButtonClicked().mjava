  /** {@inheritDoc} */
  @Override
  public void onFinishButtonClicked() {
    selected.put(page, view.getSelectedImport());

    OrganizeImportParams organizeImports = dtoFactory.createDto(OrganizeImportParams.class);
    organizeImports.setResourceUri(file.getLocation().toString());
    organizeImports.setChoices(new ArrayList<>(selected.values()));

    clientServerEventService
        .sendFileTrackingSuspendEvent()
        .then(
            successful -> {
              client
                  .organizeImports(organizeImports)
                  .then(
                      result -> {
                        try {
                          applyWorkspaceEditAction.applyWorkspaceEdit(result.getWorkspaceEdit());
                        } finally {
                          clientServerEventService.sendFileTrackingResumeEvent();
                          view.close();
                        }
                      })
                  .catchError(
                      error -> {
                        try {
                          String title = locale.failedToProcessOrganizeImports();
                          String message = error.getMessage();
                          notificationManager.notify(title, message, FAIL, FLOAT_MODE);
                        } finally {
                          clientServerEventService.sendFileTrackingResumeEvent();
                          view.close();
                        }
                      });
            });
  }

