    /** {@inheritDoc} */
    @Override
    public Promise<ChangeCreationResult> createChange(final RefactoringSession session) {
        final String url = pathToService + "create/change";

        return newPromise(new AsyncPromiseHelper.RequestCall<ChangeCreationResult>() {
            @Override
            public void makeCall(AsyncCallback<ChangeCreationResult> callback) {

                asyncRequestFactory.createPostRequest(url, session)
                                   .header(ACCEPT, APPLICATION_JSON)
                                   .header(CONTENT_TYPE, APPLICATION_JSON)
                                   .loader(loader)
                                   .send(newCallback(callback, unmarshallerFactory.newUnmarshaller(ChangeCreationResult.class)));
            }
        });
    }

