  private void applyChanges() {
    final RefactoringSession session = dtoFactory.createDto(RefactoringSession.class);
    session.setSessionId(renameRefactoringSession.getSessionId());

    prepareRenameChanges(session)
        .then(
            new Operation<ChangeCreationResult>() {
              @Override
              public void apply(ChangeCreationResult arg) throws OperationException {
                int severityCode = arg.getStatus().getSeverity();

                switch (severityCode) {
                  case WARNING:
                  case ERROR:
                    showWarningDialog(session, arg);
                    break;
                  case FATAL:
                    if (!arg.isCanShowPreviewPage()) {
                      view.showErrorMessage(arg.getStatus());
                    }
                    break;
                  default:
                    clientServerEventService
                        .sendFileTrackingSuspendEvent()
                        .then(
                            success -> {
                              applyRefactoring(session);
                            });
                }
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError arg) throws OperationException {
                notificationManager.notify(
                    locale.failedToRename(), arg.getMessage(), FAIL, FLOAT_MODE);
              }
            });
  }

