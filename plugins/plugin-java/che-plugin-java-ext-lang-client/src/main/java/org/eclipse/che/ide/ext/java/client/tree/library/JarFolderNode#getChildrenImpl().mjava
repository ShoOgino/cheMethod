  @NotNull
  @Override
  protected Promise<List<Node>> getChildrenImpl() {
    ExternalLibrariesParameters params = dtoFactory.createDto(ExternalLibrariesParameters.class);
    params.setProjectUri(project.toString());
    params.setNodeId(libId);
    params.setNodePath(getData().getPath());
    return service
        .externalLibrariesChildren(params)
        .then(
            (Function<List<JarEntry>, List<Node>>)
                entries -> {
                  List<Node> nodes = new ArrayList<>();

                  for (JarEntry entry : entries) {
                    if (FOLDER.name().equals(entry.getEntryType())
                        || PACKAGE.name().equals(entry.getEntryType())) {
                      nodes.add(nodeFactory.newJarFolderNode(entry, libId, project, getSettings()));
                    } else if (FILE.name().equals(entry.getEntryType())
                        || CLASS_FILE.name().equals(entry.getEntryType())) {
                      nodes.add(nodeFactory.newJarFileNode(entry, libId, project, getSettings()));
                    }
                  }

                  return nodes;
                });
  }

