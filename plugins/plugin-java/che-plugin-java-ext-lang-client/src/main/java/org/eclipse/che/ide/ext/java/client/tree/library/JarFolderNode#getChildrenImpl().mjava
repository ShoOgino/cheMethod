    @NotNull
    @Override
    protected Promise<List<Node>> getChildrenImpl() {
        return service.getChildren(project, libId, Path.valueOf(getData().getPath()))
                      .then(new Function<List<JarEntry>, List<Node>>() {
                          @Override
                          public List<Node> apply(List<JarEntry> entries) throws FunctionException {
                              List<Node> nodes = new ArrayList<>();

                              for (JarEntry entry : entries) {
                                  if (entry.getType() == FOLDER || entry.getType() == PACKAGE) {
                                      nodes.add(nodeFactory.newJarFolderNode(entry, libId, project, getSettings()));
                                  } else if (entry.getType() == FILE || entry.getType() == CLASS_FILE) {
                                      nodes.add(nodeFactory.newJarFileNode(entry, libId, project, getSettings()));
                                  }
                              }

                              return nodes;
                          }
                      });
    }

