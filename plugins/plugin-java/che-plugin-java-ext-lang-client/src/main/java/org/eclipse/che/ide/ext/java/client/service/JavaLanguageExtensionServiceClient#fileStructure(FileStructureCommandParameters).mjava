  public Promise<List<ExtendedSymbolInformation>> fileStructure(
      FileStructureCommandParameters params) {
    return Promises.create(
        (resolve, reject) -> {
          requestTransmitter
              .newRequest()
              .endpointId(WS_AGENT_JSON_RPC_ENDPOINT_ID)
              .methodName("java/filestructure")
              .paramsAsDto(params)
              .sendAndReceiveResultAsListOfDto(ExtendedSymbolInformation.class, 10000)
              .onSuccess(resolve::apply)
              .onTimeout(
                  () -> {
                    reject.apply(
                        new PromiseError() {
                          TimeoutException t = new TimeoutException("Timeout");

                          @Override
                          public String getMessage() {
                            return t.getMessage();
                          }

                          @Override
                          public Throwable getCause() {
                            return t;
                          }
                        });
                  })
              .onFailure(
                  error -> {
                    reject.apply(ServiceUtil.getPromiseError(error));
                  });
        });
  }

