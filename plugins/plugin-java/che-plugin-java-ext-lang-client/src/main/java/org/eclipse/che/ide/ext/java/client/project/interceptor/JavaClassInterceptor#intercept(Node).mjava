    private Function<Node, Node> intercept(final Node parent) {
        return new Function<Node, Node>() {
            @Nullable
            @Override
            public Node apply(@Nullable Node child) {
                if (!(child instanceof FileReferenceNode)) {
                    return child;
                }

                ItemReference data = ((FileReferenceNode)child).getData();

                if (!nodeManager.isJavaItemReference(data)) {
                    return child;
                }

                JavaFileNode node = nodeManager.getJavaNodeFactory()
                                               .newJavaFileNode(data,
                                                                ((HasProjectConfig)child).getProjectConfig(),
                                                                (JavaNodeSettings)nodeManager.getJavaSettingsProvider()
                                                                                             .getSettings());

                //fix parent
                node.setParent(parent);

                return node;
            }
        };
    }

