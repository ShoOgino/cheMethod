  void performSourceComputation(TextEditProcessor processor, Document document) {
    try {
      TextEdit[] children = removeChildren();
      if (children.length > 0) {
        String content = document.get(getOffset(), getLength());
        EditDocument subDocument = new EditDocument(content);
        fSourceRoot = new MultiTextEdit(getOffset(), getLength());
        fSourceRoot.addChildren(children);
        fSourceRoot.internalMoveTree(-getOffset());
        int processingStyle = getStyle(processor);
        TextEditProcessor subProcessor =
            TextEditProcessor.createSourceComputationProcessor(
                subDocument, fSourceRoot, processingStyle);
        subProcessor.performEdits();
        if (needsTransformation()) applyTransformation(subDocument, processingStyle);
        fSourceContent = subDocument.get();
      } else {
        fSourceContent = document.get(getOffset(), getLength());
        if (needsTransformation()) {
          EditDocument subDocument = new EditDocument(fSourceContent);
          applyTransformation(subDocument, getStyle(processor));
          fSourceContent = subDocument.get();
        }
      }
    } catch (BadLocationException cannotHappen) {
      // Assert.isTrue(false);
    }
  }

