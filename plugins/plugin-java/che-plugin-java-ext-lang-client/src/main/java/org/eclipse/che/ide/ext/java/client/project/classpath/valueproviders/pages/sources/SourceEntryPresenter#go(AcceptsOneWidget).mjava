  @Override
  public void go(AcceptsOneWidget container) {

    final Resource resource = appContext.getResource();

    Preconditions.checkState(resource != null);

    final Optional<Project> project = resource.getRelatedProject();

    isPlainJava = JAVAC.equals(project.get().getType());

    setReadOnlyMod();

    container.setWidget(view);

    if (!categories.isEmpty()) {
      view.renderNodes();
      return;
    }

    classpathContainer
        .getClasspathEntries(project.get().getLocation().toString())
        .then(
            new Operation<List<ClasspathEntryDto>>() {
              @Override
              public void apply(List<ClasspathEntryDto> entries) throws OperationException {
                categories.clear();
                for (ClasspathEntryDto entry : entries) {
                  if (SOURCE == entry.getEntryKind()) {
                    categories.put(entry.getPath(), entry);
                  }
                }
                view.setData(categories);
                view.renderNodes();
              }
            });
  }

