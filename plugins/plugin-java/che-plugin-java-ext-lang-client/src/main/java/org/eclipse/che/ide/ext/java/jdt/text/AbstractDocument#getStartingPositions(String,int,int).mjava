    /**
     * A list of positions in the given category with an offset inside the given region. The order of the positions is arbitrary.
     *
     * @param category
     *         the position category
     * @param offset
     *         the offset of the region
     * @param length
     *         the length of the region
     * @return a list of the positions in the region
     * @throws BadPositionCategoryException
     *         if category is undefined in this document
     */
    private List<Position> getStartingPositions(String category, int offset, int length)
            throws BadPositionCategoryException {
        List<Position> positions = fPositions.get(category);
        if (positions == null)
            throw new BadPositionCategoryException();

        int indexStart = computeIndexInPositionList(positions, offset, true);
        int indexEnd = computeIndexInPositionList(positions, offset + length, true);

        return positions.subList(indexStart, indexEnd);
    }

