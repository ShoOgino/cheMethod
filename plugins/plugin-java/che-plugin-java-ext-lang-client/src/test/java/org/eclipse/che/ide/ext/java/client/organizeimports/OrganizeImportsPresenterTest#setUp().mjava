    @Before
    public void setUp() throws Exception {
        when(editor.getEditorInput()).thenReturn(editorInput);
        when(editorInput.getFile()).thenReturn(file);
        when(editor.getDocument()).thenReturn(document);
        when(document.getContents()).thenReturn("content");
        when(file.getRelatedProject()).thenReturn(Optional.of(relatedProject));
        when(file.getParentWithMarker(eq(SourceFolderMarker.ID))).thenReturn(Optional.of(srcFolder));
        when(file.getName()).thenReturn("A.java");
        when(file.getLocation()).thenReturn(Path.valueOf("/project/src/a/b/A.java"));
        when(file.getExtension()).thenReturn("java");
        when(file.getResourceType()).thenReturn(Resource.FILE);
        when(srcFolder.getLocation()).thenReturn(Path.valueOf("/project/src"));
        when(relatedProject.getLocation()).thenReturn(Path.valueOf("/project"));

        when(javaCodeAssistClient.organizeImports(anyString(), anyString())).thenReturn(importsPromise);
        when(importsPromise.then(Matchers.<Operation<List<ConflictImportDTO>>>anyObject())).thenReturn(importsPromise);

        presenter = new OrganizeImportsPresenter(view,
                                                 javaCodeAssistClient,
                                                 dtoFactory,
                                                 locale,
                                                 notificationManager);

        prepareConflicts();

    }

