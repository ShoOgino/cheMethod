  @Test
  public void testShouldDisplayOneImplementationIsRealFile() throws Exception {
    when(editor.getEditorInput()).thenReturn(editorInput);
    when(editorInput.getFile()).thenReturn(file);
    when(file.getRelatedProject()).thenReturn(Optional.of(relatedProject));
    when(file.getParentWithMarker(eq(SourceFolderMarker.ID))).thenReturn(Optional.of(srcFolder));
    when(file.getLocation()).thenReturn(Path.valueOf("/a/b/c/d/file.java"));
    when(srcFolder.getLocation()).thenReturn(Path.valueOf("/a/b"));
    when(file.getResourceType()).thenReturn(Resource.FILE);
    when(file.getExtension()).thenReturn("java");
    when(file.getName()).thenReturn("file.java");
    when(relatedProject.getLocation()).thenReturn(Path.valueOf("/a"));
    when(editor.getCursorOffset()).thenReturn(123);
    when(implementationsPromise.then(any(Operation.class))).thenReturn(implementationsPromise);
    when(javaNavigationService.getImplementations(eq(Path.valueOf("/a")), eq("c.d.file"), eq(123)))
        .thenReturn(implementationsPromise);

    when(implementationDescriptor.getImplementations())
        .thenReturn(Collections.singletonList(type1));
    when(implementationDescriptor.getMemberName()).thenReturn("memberName");
    when(locale.openImplementationWindowTitle(eq("memberName"), eq(1))).thenReturn("foo");

    when(type1.isBinary()).thenReturn(false);
    when(type1.getRootPath()).thenReturn("/memberPath");
    when(appContext.getWorkspaceRoot()).thenReturn(workspaceRoot);
    when(workspaceRoot.getFile(anyString())).thenReturn(realFilePromise);
    when(realFilePromise.then(any(Operation.class))).thenReturn(realFilePromise);

    presenter.show(editor);
    verify(implementationsPromise).then(implementationsOperation.capture());
    implementationsOperation.getValue().apply(implementationDescriptor);

    verify(realFilePromise).then(realFileOperation.capture());
    realFileOperation.getValue().apply(Optional.of(file));

    verify(editorAgent)
        .openEditor(any(VirtualFile.class), any(EditorAgent.OpenEditorCallback.class));
  }

