  @Test
  public void renameRefactoringShouldBeWithWarningOrErrorStatus() throws OperationException {
    ConfirmDialog confirmDialog = mock(ConfirmDialog.class);

    when(result.getSeverity()).thenReturn(WARNING);
    when(dialogFactory.createConfirmDialog(
            anyString(),
            anyString(),
            anyString(),
            anyString(),
            Matchers.<ConfirmCallback>anyObject(),
            Matchers.<CancelCallback>anyObject()))
        .thenReturn(confirmDialog);

    refactoringRename.refactor(textEditor);

    verify(refactoringServiceClient).createRenameRefactoring(createRenameRefactoringDto);
    verify(createRenamePromise).then(renameRefCaptor.capture());
    renameRefCaptor.getValue().apply(session);

    verify(fileTrackingSuspendEventPromise).then(clientServerSuspendOperation.capture());
    clientServerSuspendOperation.getValue().apply(null);

    verify(linkedMode).addListener(inputArgumentCaptor.capture());
    inputArgumentCaptor.getValue().onLinkedModeExited(true, 0, 1);

    verify(refactoringServiceClient).applyLinkedModeRename(linkedRenameRefactoringApplyDto);

    verify(applyModelPromise).then(refactoringStatusCaptor.capture());
    refactoringStatusCaptor.getValue().apply(result);

    verify(locale).warningOperationTitle();
    verify(locale).renameWithWarnings();
    verify(locale).showRenameWizard();
    verify(locale).buttonCancel();
    verify(dialogFactory)
        .createConfirmDialog(
            anyString(),
            anyString(),
            anyString(),
            anyString(),
            Matchers.<ConfirmCallback>anyObject(),
            Matchers.<CancelCallback>anyObject());
    verify(confirmDialog).show();
  }

