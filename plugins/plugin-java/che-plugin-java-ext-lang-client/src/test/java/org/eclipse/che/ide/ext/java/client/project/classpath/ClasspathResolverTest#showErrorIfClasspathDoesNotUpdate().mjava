    @Test
    public void showErrorIfClasspathDoesNotUpdate() throws Exception {
        when(appContext.getCurrentProject()).thenReturn(currentProject);
        when(dtoFactory.createDto(ClasspathEntryDto.class)).thenReturn(entry);
        when(entry.withPath(PATH_TO_LIB1)).thenReturn(lib1);
        when(entry.withPath(PATH_TO_LIB2)).thenReturn(lib2);
        when(entry.withPath(PATH_TO_CONTAINER)).thenReturn(container);
        when(entry.withPath(PATH_TO_SOURCE)).thenReturn(source);
        when(currentProject.getProjectConfig()).thenReturn(projectConfig);
        when(projectConfig.getPath()).thenReturn(PATH_TO_PROJECT);
        when(promiseError.getMessage()).thenReturn("message");

        when(classpathUpdater.setRawClasspath(anyString(), anyObject())).thenReturn(classpathPromise);
        when(classpathPromise.then(Matchers.<Operation<Void>>anyObject())).thenReturn(classpathPromise);
        when(classpathPromise.catchError(Matchers.<Operation<PromiseError>>anyObject())).thenReturn(classpathPromise);

        classpathResolver.resolveClasspathEntries(entries);
        classpathResolver.updateClasspath();

        verify(classpathPromise).catchError(updateOperationError.capture());
        updateOperationError.getValue().apply(promiseError);

        verify(notificationManager).notify("Problems with updating classpath", "message", FAIL, EMERGE_MODE);
    }

