  @Test
  public void shouldUndoRenameRefactoringWhenUserEnterNewNameButEscapeRename()
      throws OperationException {
    //use case: user hit Refactoring -> Rename action, type a new name and press escape button

    refactoringRename.refactor(textEditor);

    verify(refactoringServiceClient).createRenameRefactoring(createRenameRefactoringDto);
    verify(createRenamePromise).then(renameRefCaptor.capture());
    renameRefCaptor.getValue().apply(session);

    verify(fileTrackingSuspendEventPromise).then(clientServerSuspendOperation.capture());
    clientServerSuspendOperation.getValue().apply(null);

    verify(linkedMode).addListener(inputArgumentCaptor.capture());
    inputArgumentCaptor.getValue().onLinkedModeExited(false, 0, 5);

    verify(fileTrackingResumeEventPromise).then(clientServerResumeOperation.capture());
    clientServerResumeOperation.getValue().apply(null);

    verify(refactoringServiceClient, never()).applyLinkedModeRename(anyObject());
    verify((UndoableEditor) textEditor).getUndoRedo();
    verify(undoRedo).undo();
    verify((EditorWithAutoSave) textEditor).enableAutoSave();
  }

