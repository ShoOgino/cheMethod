  @SuppressWarnings("unchecked")
  @Before
  public void setUp() throws Exception {
    when(editorAgent.getActiveEditor()).thenReturn(activeEditor);
    when(dtoFactory.createDto(ElementToMove.class)).thenReturn(javaElement);
    when(dtoFactory.createDto(CreateMoveRefactoring.class)).thenReturn(moveRefactoring);
    when(dtoFactory.createDto(ReorgDestination.class)).thenReturn(destination);
    when(refactorService.createMoveRefactoring(moveRefactoring)).thenReturn(sessionPromise);
    when(sessionPromise.then(any(Operation.class))).thenReturn(sessionPromise);
    when(refactorService.applyRefactoring(session)).thenReturn(refactoringResultPromise);
    when(refactorService.setDestination(destination)).thenReturn(refactoringStatusPromise);
    when(navigationService.getProjectsAndPackages(true)).thenReturn(projectsPromise);
    when(projectsPromise.then(any(Operation.class))).thenReturn(projectsPromise);
    when(dtoFactory.createDto(MoveSettings.class)).thenReturn(moveSettings);
    when(dtoFactory.createDto(RefactoringSession.class)).thenReturn(session);
    when(changeCreationResult.getStatus()).thenReturn(refactoringStatus);

    when(clientServerEventService.sendFileTrackingSuspendEvent())
        .thenReturn(fileTrackingSuspendEventPromise);
    List<ChangeInfo> changes = new ArrayList<>();
    when(refactoringResult.getChanges()).thenReturn(changes);
    when(refactoringUpdater.handleMovingFiles(anyList())).thenReturn(handleMovingFilesPromise);
    when(refactoringUpdater.updateAfterRefactoring(anyList()))
        .thenReturn(updateAfterRefactoringPromise);

    when(refactorService.setMoveSettings(moveSettings)).thenReturn(moveSettingsPromise);
    when(moveSettingsPromise.thenPromise(
            org.mockito.ArgumentMatchers
                .<Function<Void, Promise<ChangeCreationResult>>>anyObject()))
        .thenReturn(changeCreationResultPromise);
    when(changeCreationResultPromise.then(
            org.mockito.ArgumentMatchers.<Operation<ChangeCreationResult>>anyObject()))
        .thenReturn(changeCreationResultPromise);

    presenter =
        new MovePresenter(
            moveView,
            refactoringUpdater,
            editorAgent,
            previewPresenter,
            refactorService,
            navigationService,
            dtoFactory,
            locale,
            notificationManager,
            clientServerEventService);
  }

