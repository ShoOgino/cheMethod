    @Before
    public void setUp() throws Exception {
        EditorInput editorInput = mock(EditorInput.class);
        Optional project = mock(Optional.class);
        Project projectConfig = mock(Project.class);
        Optional<Resource> srcFolder = mock(Optional.class);
        Container startPoint = mock(Container.class);

        when(editor.getEditorInput()).thenReturn(editorInput);
        when(editorInput.getFile()).thenReturn(file);
        when(file.getName()).thenReturn(FILE_NAME);
        when(file.getRelatedProject()).thenReturn(project);
        when(file.getLocation()).thenReturn(Path.valueOf("some/path/to/file"));

        when(project.get()).thenReturn(projectConfig);
        when(projectConfig.getLocation()).thenReturn(Path.valueOf("some/path/to/project"));
        when(project.isPresent()).thenReturn(true);
        when(file.getParentWithMarker(any())).thenReturn(srcFolder);
        when(srcFolder.isPresent()).thenReturn(true);
        when(srcFolder.get()).thenReturn(startPoint);
        when(startPoint.getLocation()).thenReturn(Path.valueOf("some/path"));

        when(resolvingProjectStateHolderRegistry.getResolvingProjectStateHolder(anyString())).thenReturn(resolvingProjectStateHolder);
        when(localizationConstant.codeAssistErrorMessageResolvingProject()).thenReturn("error");

        javaReconcilerStrategy.setDocument(mock(Document.class));
    }

