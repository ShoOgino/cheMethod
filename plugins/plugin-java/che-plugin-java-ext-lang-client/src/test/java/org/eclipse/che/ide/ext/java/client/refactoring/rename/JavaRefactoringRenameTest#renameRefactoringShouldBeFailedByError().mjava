  @Test
  public void renameRefactoringShouldBeFailedByError() throws OperationException {
    ConfirmDialog confirmDialog = mock(ConfirmDialog.class);
    when(result.getSeverity()).thenReturn(ERROR);

    when(dialogFactory.createConfirmDialog(
            nullable(String.class),
            nullable(String.class),
            nullable(String.class),
            nullable(String.class),
            nullable(ConfirmCallback.class),
            nullable(CancelCallback.class)))
        .thenReturn(confirmDialog);

    refactoringRename.refactor(textEditor);

    verify(refactoringServiceClient).createRenameRefactoring(createRenameRefactoringDto);
    verify(createRenamePromise).then(renameRefCaptor.capture());
    renameRefCaptor.getValue().apply(session);

    verify(fileTrackingSuspendEventPromise).then(clientServerSuspendOperation.capture());
    clientServerSuspendOperation.getValue().apply(null);

    verify(linkedMode).addListener(inputArgumentCaptor.capture());
    inputArgumentCaptor.getValue().onLinkedModeExited(true, 0, 1);

    verify(refactoringServiceClient).applyLinkedModeRename(linkedRenameRefactoringApplyDto);

    verify(applyModelPromise).then(refactoringStatusCaptor.capture());
    refactoringStatusCaptor.getValue().apply(result);

    verify(locale).warningOperationTitle();
    verify(locale).renameWithWarnings();
    verify(locale).showRenameWizard();
    verify(locale).buttonCancel();
    verify(dialogFactory)
        .createConfirmDialog(
            nullable(String.class),
            nullable(String.class),
            nullable(String.class),
            nullable(String.class),
            org.mockito.ArgumentMatchers.<ConfirmCallback>anyObject(),
            org.mockito.ArgumentMatchers.<CancelCallback>anyObject());
    verify(confirmDialog).show();
  }

