    @Override
    public void onCreateModule(FolderEntry parentFolder,
                               String modulePath,
                               String moduleType,
                               Map<String, String> options) throws ForbiddenException, ConflictException, ServerException {
        configureClassPath(parentFolder, modulePath);

        if (!moduleType.equals(MavenAttributes.MAVEN_ID)) {
            LOG.warn("Module must be Maven project to able be added to Maven project");
            throw new IllegalArgumentException("Module must be Maven project to able be added to Maven project");
        }
        VirtualFileEntry pom = parentFolder.getChild("pom.xml");
        if (pom == null) {
            return;
        }
        try {
            Model model = Model.readFrom(pom.getVirtualFile());
            if ("pom".equals(model.getPackaging())) {
                final String relativePath = modulePath.substring(parentFolder.getPath().length() + 1);
                if (!model.getModules().contains(relativePath)) {
                    model.addModule(relativePath);
                    model.writeTo(pom.getVirtualFile());
                }
            } else {
                throw new IllegalArgumentException("Project must have packaging 'pom' in order to adding modules.");
            }
        } catch (IOException e) {
            throw new ServerException(e);
        }

    }

