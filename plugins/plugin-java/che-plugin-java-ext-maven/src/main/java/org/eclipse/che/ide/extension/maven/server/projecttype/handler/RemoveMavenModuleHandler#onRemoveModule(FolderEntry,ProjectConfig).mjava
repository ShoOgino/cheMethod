    @Override
    public void onRemoveModule(FolderEntry parentFolder, ProjectConfig moduleConfig) throws ForbiddenException,
                                                                                            ConflictException,
                                                                                            ServerException {
        if (!MavenAttributes.MAVEN_ID.equals(moduleConfig.getType())) {
            logger.warn("Module isn't Maven module");
            throw new IllegalArgumentException("Module isn't Maven module");
        }
        VirtualFileEntry pom = parentFolder.getChild("pom.xml");
        if (pom == null) {
            return;
        }
        try {
            Model model = Model.readFrom(pom.getVirtualFile());
            String moduleName = moduleConfig.getName();
            if (model.getModules().contains(moduleName)) {
                model.removeModule(moduleName);
                model.writeTo(pom.getVirtualFile());
            }
        } catch (IOException e) {
            throw new ServerException(e);
        }
    }

