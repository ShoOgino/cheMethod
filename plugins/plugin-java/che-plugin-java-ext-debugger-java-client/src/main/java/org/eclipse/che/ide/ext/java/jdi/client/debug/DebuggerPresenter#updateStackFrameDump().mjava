    private void updateStackFrameDump() {
        Debugger debugger = debuggerManager.getActiveDebugger();
        if (debugger != null && executionPoint != null) {
            Promise<String> promise = debugger.getStackFrameDump();
            promise.then(new Operation<String>() {
                @Override
                public void apply(String arg) throws OperationException {
                    StackFrameDump dump = dtoFactory.createDtoFromJson(arg, StackFrameDump.class);

                    List<Variable> variables = new ArrayList<>();
                    variables.addAll(dump.getFields());
                    variables.addAll(dump.getLocalVariables());

                    List<DebuggerVariable> debuggerVariables = getDebuggerVariables(variables);

                    view.setVariables(debuggerVariables);
                    if (!debuggerVariables.isEmpty()) {
                        view.setExecutionPoint(variables.get(0).isExistInformation(), executionPoint);
                    }

                    DebuggerPresenter.this.variables = debuggerVariables;
                }
            }).catchError(new Operation<PromiseError>() {
                @Override
                public void apply(PromiseError arg) throws OperationException {
                    Log.error(DebuggerPresenter.class, arg.getCause());
                }
            });
        }
    }

