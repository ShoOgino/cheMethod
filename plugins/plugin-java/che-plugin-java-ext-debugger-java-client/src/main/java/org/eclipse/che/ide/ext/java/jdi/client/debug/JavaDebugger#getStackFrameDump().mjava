    @Override
    public Promise<String> getStackFrameDump() {
        if (!isConnected()) {
            return Promises.reject(JsPromiseError.create("Debugger is not connected"));
        }

        Promise<StackFrameDump> promise = service.getStackFrameDump(javaDebuggerInfo.getId());
        return promise.then(new Function<StackFrameDump, String>() {
            @Override
            public String apply(StackFrameDump arg) throws FunctionException {
                return dtoFactory.toJson(arg);
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                Log.error(JavaDebugger.class, arg.getMessage());
                throw new OperationException(arg.getCause());
            }
        });
    }

