    @Override
    public void onDebuggerAttached(final DebuggerDescriptor debuggerDescriptor, Promise<Void> connect) {
        final String address = debuggerDescriptor.getAddress();
        final StatusNotification notification = notificationManager.notify(constant.debuggerConnectingTitle(address), PROGRESS, true);

        connect.then(new Operation<Void>() {
            @Override
            public void apply(Void arg) throws OperationException {
                DebuggerPresenter.this.debuggerDescriptor = debuggerDescriptor;

                notification.setTitle(constant.debuggerConnectedTitle());
                notification.setContent(constant.debuggerConnectedDescription(address));
                notification.setStatus(SUCCESS);

                showAndUpdateView();
                showDebuggerPanel();
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                notification.setTitle(constant.failedToConnectToRemoteDebuggerDescription(address));
                notification.setStatus(FAIL);
                notification.setBalloon(true);
            }
        });
    }

