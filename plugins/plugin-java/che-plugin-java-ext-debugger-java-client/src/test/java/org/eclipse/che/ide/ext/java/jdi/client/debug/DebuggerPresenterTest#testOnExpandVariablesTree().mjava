    @Test
    public void testOnExpandVariablesTree() throws OperationException {
        final String json = "json";

        List<DebuggerVariable> rootVariables = mock(List.class);
        doReturn(true).when(rootVariables).isEmpty();
        doReturn(rootVariables).when(selectedVariable).getVariables();

        Variable variable = mock(Variable.class);
        doReturn(variable).when(selectedVariable).getVariable();
        doReturn(json).when(dtoFactory).toJson(variable);

        List<Variable> variables = ImmutableList.of(variable);
        doReturn(variables).when(dtoFactory).createListDtoFromJson(json, Variable.class);

        doReturn(promiseString).when(debugger).getValue(json);
        doReturn(promiseString).when(promiseString).then((Operation<String>)any());

        presenter.onExpandVariablesTree();

        verify(promiseString).then(operationStringCaptor.capture());
        operationStringCaptor.getValue().apply(json);
        verify(view).setVariablesIntoSelectedVariable((List<DebuggerVariable>) any());
        verify(view).updateSelectedVariable();

        verify(promiseString).catchError(operationPromiseErrorCaptor.capture());
        operationPromiseErrorCaptor.getValue().apply(promiseError);
        notificationManager.notify(any(), eq(ERROR_MESSAGE), eq(FAIL), eq(true));
        verify(constant).failedToGetVariableValueTitle();
    }

