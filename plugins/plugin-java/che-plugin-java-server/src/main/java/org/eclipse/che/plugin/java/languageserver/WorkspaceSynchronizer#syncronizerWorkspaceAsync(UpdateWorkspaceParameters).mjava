  public void syncronizerWorkspaceAsync(UpdateWorkspaceParameters updateWorkspaceParameters) {
    executorService.submit(
        () -> {
          JobResult jobResult = service.updateWorkspace(updateWorkspaceParameters);

          switch (jobResult.getSeverity()) {
            case ERROR:
              LOG.error(
                  "Workspace updated. Result code: '{}', message: '{}'. Added projects: '{}', removed projects: '{}'",
                  jobResult.getResultCode(),
                  jobResult.getMessage(),
                  updateWorkspaceParameters.getAddedProjectsUri().toString(),
                  updateWorkspaceParameters.getRemovedProjectsUri().toString());
              break;
            case WARNING:
            case CANCEL:
              LOG.warn(
                  "Workspace updated. Result code: '{}', message: '{}'. Added projects: '{}', removed projects: '{}'",
                  jobResult.getResultCode(),
                  jobResult.getMessage(),
                  updateWorkspaceParameters.getAddedProjectsUri().toString(),
                  updateWorkspaceParameters.getRemovedProjectsUri().toString());
              break;
            default:
              LOG.info(
                  "Workspace updated. Result code: '{}', message: '{}'. Added projects: '{}', removed projects: '{}'",
                  jobResult.getResultCode(),
                  jobResult.getMessage(),
                  updateWorkspaceParameters.getAddedProjectsUri().toString(),
                  updateWorkspaceParameters.getRemovedProjectsUri().toString());
              break;
          }

          updateWorkspaceParameters
              .getAddedProjectsUri()
              .forEach(projectsSynchronizer::synchronize);
        });
  }

