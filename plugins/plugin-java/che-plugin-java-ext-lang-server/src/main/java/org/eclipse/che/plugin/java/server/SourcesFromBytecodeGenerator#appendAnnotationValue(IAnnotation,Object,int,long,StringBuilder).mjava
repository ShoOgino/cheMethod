  private void appendAnnotationValue(
      IAnnotation annotation, Object value, int valueKind, long flags, StringBuilder builder)
      throws JavaModelException {
    // Note: To be bug-compatible with Javadoc from Java 5/6/7, we currently don't escape HTML tags in String-valued annotations.
    if (value instanceof Object[]) {
      builder.append('{');
      Object[] values = (Object[]) value;
      for (int j = 0; j < values.length; j++) {
        if (j > 0) builder.append(JavaElementLabels.COMMA_STRING);
        value = values[j];
        appendAnnotationValue(annotation, value, valueKind, flags, builder);
      }
      builder.append('}');
    } else {
      switch (valueKind) {
        case IMemberValuePair.K_CLASS:
          appendTypeSignatureLabel(
              annotation, Signature.createTypeSignature((String) value, false), flags, builder);
          builder.append(".class"); //$NON-NLS-1$
          break;
        case IMemberValuePair.K_QUALIFIED_NAME:
          String name = (String) value;
          int lastDot = name.lastIndexOf('.');
          if (lastDot != -1) {
            String type = name.substring(0, lastDot);
            String field = name.substring(lastDot + 1);
            appendTypeSignatureLabel(
                annotation, Signature.createTypeSignature(type, false), flags, builder);
            builder.append('.');
            builder.append(getMemberName(annotation, type, field));
            break;
          }
          //				case IMemberValuePair.K_SIMPLE_NAME: // can't implement, since parent type is not known
          //$FALL-THROUGH$
        case IMemberValuePair.K_ANNOTATION:
          appendAnnotationLabel((IAnnotation) value, flags, builder);
          break;
        case IMemberValuePair.K_STRING:
          builder.append(ASTNodes.getEscapedStringLiteral((String) value));
          break;
        case IMemberValuePair.K_CHAR:
          builder.append(ASTNodes.getEscapedCharacterLiteral(((Character) value).charValue()));
          break;
        default:
          builder.append(String.valueOf(value));
          break;
      }
    }
  }

