    private List<ConflictImportDTO> createOrganizeImportOperation(ICompilationUnit compilationUnit,
                                                                 List<String> chosen) throws CoreException {
        CodeGenerationSettings settings = JavaPreferencesSettings.getCodeGenerationSettings(compilationUnit.getJavaProject());

        OrganizeImportsOperation operation = new OrganizeImportsOperation(compilationUnit,
                                                                          null,
                                                                          settings.importIgnoreLowercase,
                                                                          !compilationUnit.isWorkingCopy(),
                                                                          true,
                                                                          chosen,
                                                                          null);

        NullProgressMonitor monitor = new NullProgressMonitor();
        TextEdit edit = operation.createTextEdit(monitor);

        TypeNameMatch[][] choices = operation.getChoices();
        //Apply organize import declarations if operation doesn't have conflicts (choices.length == 0)
        //or all conflicts were resolved (!chosen.isEmpty())
        if ((chosen != null && !chosen.isEmpty()) || choices == null || choices.length == 0) {
            operation.applyChanges(edit, monitor);
            return Collections.emptyList();
        }

        return createListOfDTOMatches(choices);
    }

