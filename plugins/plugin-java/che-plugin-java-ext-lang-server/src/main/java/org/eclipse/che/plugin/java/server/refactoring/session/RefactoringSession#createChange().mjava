  public ChangeCreationResult createChange() throws RefactoringException {
    Change change =
        createChange(
            new CreateChangeOperation(
                new CheckConditionsOperation(
                    refactoring, CheckConditionsOperation.FINAL_CONDITIONS),
                RefactoringStatus.FATAL),
            true);
    // Status has been updated since we have passed true
    RefactoringStatus status = conditionCheckingStatus;
    // Creating the change has been canceled
    if (change == null && status == null) {
      internalSetChange(change);
      throw new RefactoringException("Creating the change has been canceled");
    }

    // Set change if we don't have fatal errors.
    if (!status.hasFatalError()) {
      internalSetChange(change);
    }

    ChangeCreationResult result = DtoFactory.newDto(ChangeCreationResult.class);
    result.setStatus(DtoConverter.toRefactoringStatusDto(status));
    result.setCanShowPreviewPage(status.isOK());
    return result;
  }

