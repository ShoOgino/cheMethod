    /**
     * Returns information about classpath.
     *
     * @param projectPath
     *         path to the current project
     * @return list of classpath entries
     * @throws JavaModelException
     *         when JavaModel has a failure
     */
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public List<ClasspathEntryDTO> getClasspath(@QueryParam("projectpath") String projectPath) throws JavaModelException {
        IJavaProject javaProject = model.getJavaProject(projectPath);
        IClasspathEntry[] entries = javaProject.getRawClasspath();

        if (entries.length == 0) {
            return emptyList();
        }

        List<ClasspathEntryDTO> entriesDTO = new ArrayList<>(entries.length);
        for (IClasspathEntry entry : entries) {
            ClasspathEntryDTO entryDTO = DtoFactory.getInstance().createDto(ClasspathEntryDTO.class);
            entryDTO.withEntryKind(entry.getEntryKind()).withPath(entry.getPath().toOSString());
            entriesDTO.add(entryDTO);
        }

        return entriesDTO;
    }

