  public FindUsagesResponse findUsage(IJavaProject javaProject, String fqn, int offset)
      throws SearchException {
    try {
      ICompilationUnit compilationUnit;
      IType type = javaProject.findType(fqn);
      if (type == null) {
        throw new SearchException("Can't find type: " + fqn);
      }
      if (type.isBinary()) {
        compilationUnit = type.getClassFile().getWorkingCopy(DefaultWorkingCopyOwner.PRIMARY, null);
        if (compilationUnit == null) {
          throw new SearchException("Can't find sources for: " + fqn + " type");
        }
      } else {
        compilationUnit = type.getCompilationUnit();
      }
      IJavaElement[] elements = compilationUnit.codeSelect(offset, 0);
      if (elements != null && elements.length == 1) {
        IJavaElement element = elements[0];
        if (isTypeValid(element, TYPES_FOR_FIND_USAGE)) {
          return performFindUsageSearch(element);
        } else {
          throw new SearchException(
              "Find usage can't search for element: " + element.getElementName());
        }

      } else {
        throw new SearchException(
            "Can't find element to search, try to move cursor to another place and invoke search again");
      }

    } catch (JavaModelException e) {
      LOG.error(e.getMessage(), e);
      throw new SearchException(
          String.format(
              "Can't find project: %s or file for FQN: %s",
              javaProject.getPath().toOSString(), fqn),
          e);
    } catch (BadLocationException e) {
      LOG.error(e.getMessage(), e);
      throw new SearchException("Some error happened when formatting search result", e);
    }
  }

