  private Type convertToDTOType(IType iType) throws JavaModelException {
    List<Type> types = new ArrayList<>();
    List<Method> methods = new ArrayList<>();
    List<Field> fields = new ArrayList<>();
    List<Initializer> initializers = new ArrayList<>();

    Type type = DtoFactory.newDto(Type.class);

    setRootPath(iType, type);

    type.setElementName(iType.getElementName());
    type.setLabel(
        org.eclipse.jdt.ui.JavaElementLabels.getElementLabel(
            iType, org.eclipse.jdt.ui.JavaElementLabels.ALL_DEFAULT));
    type.setHandleIdentifier(iType.getHandleIdentifier());
    type.setFlags(iType.getFlags());
    type.setFileRegion(convertToDTORegion(iType.getNameRange()));

    if (!iType.hasChildren()) {
      type.setTypes(types);
      return type;
    }

    IJavaElement[] children = iType.getChildren();
    for (IJavaElement child : children) {
      switch (child.getElementType()) {
        case 7: // type
          types.add(convertToDTOType((IType) child));
          break;
        case 8: // field
          fields.add(convertToDTOField((IField) child));
          break;
        case 9: // method
          methods.add(convertToDTOMethod((IMethod) child));
          break;
        case 10: // initializer
          initializers.add(convertToDTOInitializer((IInitializer) child));
          break;
        default:
          break;
      }
    }

    type.setFields(fields);
    type.setMethods(methods);
    type.setInitializers(initializers);
    type.setTypes(types);

    return type;
  }

