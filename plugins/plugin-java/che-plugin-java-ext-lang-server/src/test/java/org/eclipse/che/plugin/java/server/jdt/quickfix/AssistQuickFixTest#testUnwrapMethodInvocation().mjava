  @Test
  public void testUnwrapMethodInvocation() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public int foo() {\n");
    buf.append("        return Math.abs(9+ 8);\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    String str = "Math.abs(9+ 8)";
    AssistContext context = getCorrectionContext(cu, buf.toString().indexOf(str) + str.length(), 0);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 4);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public int foo() {\n");
    buf.append("        return 9+ 8;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public int foo() {\n");
    buf.append("        int abs = Math.abs(9+ 8);\n");
    buf.append("        return abs;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public int foo() {\n");
    buf.append("        int abs = Math.abs(9+ 8);\n");
    buf.append("        return abs;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected3 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    private static final int ABS = Math.abs(9+ 8);\n");
    buf.append("\n");
    buf.append("    public int foo() {\n");
    buf.append("        return ABS;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected4 = buf.toString();

    assertExpectedExistInProposals(
        proposals, new String[] {expected1, expected2, expected3, expected4});
  }

