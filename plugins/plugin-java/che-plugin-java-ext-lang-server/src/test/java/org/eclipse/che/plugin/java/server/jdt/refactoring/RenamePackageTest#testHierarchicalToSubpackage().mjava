    @Test
    @Ignore
    public void testHierarchicalToSubpackage() throws Exception {
        fRenameSubpackages = true;

        PackageRename rename = new PackageRename(
                new String[]{"a", "a.b", "a.b.c", "a.b.c.d", "p"},
                new String[][]{{}, {"B"}, {"C"}, {"D"}},
                "a.b",
                true
        );
        IPackageFragment thisPackage = rename.fPackages[0];

        IFolder src = (IFolder)getRoot().getResource();
        IFolder ab = src.getFolder("a/b");
        IFolder abc = ab.getFolder("c");
        IFolder abcd = abc.getFolder("d");

        IFolder abb = ab.getFolder("b");
        IFolder abbc = abb.getFolder("c");
        IFolder abbcd = abbc.getFolder("d");

        ParticipantTesting.reset();

        String[] createHandles = ParticipantTesting.createHandles(abb, abbc, abbcd);
        String[] deleteHandles = {};
        String[] moveHandles = ParticipantTesting.createHandles(ab.getFile("B.java"), abc.getFile("C.java"), abcd.getFile("D.java"));
        String[] renameHandles = ParticipantTesting.createHandles(JavaElementUtil.getPackageAndSubpackages(thisPackage));

        rename.createAndPerform(RefactoringStatus.WARNING);
        rename.checkExpectedState();

        ParticipantTesting.testCreate(createHandles);
        ParticipantTesting.testDelete(deleteHandles);
        ParticipantTesting.testMove(moveHandles, new MoveArguments[]{
                new MoveArguments(abb, true),
                new MoveArguments(abbc, true),
                new MoveArguments(abbcd, true),
        });
        ParticipantTesting.testRename(renameHandles, new RenameArguments[]{
                new RenameArguments(rename.getNewPackageName(rename.fPackageNames[0]), true),
                new RenameArguments(rename.getNewPackageName(rename.fPackageNames[1]), true),
                new RenameArguments(rename.getNewPackageName(rename.fPackageNames[2]), true),
                new RenameArguments(rename.getNewPackageName(rename.fPackageNames[3]), true),
        });

        performUndo();
        rename.checkOriginalState();
    }

