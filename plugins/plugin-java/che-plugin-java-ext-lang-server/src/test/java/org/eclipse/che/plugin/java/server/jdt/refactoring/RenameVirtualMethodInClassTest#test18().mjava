  @Test
  public void test18() throws Exception {
    ICompilationUnit cu = createCUfromTestFile(getPackageP(), "A");
    ICompilationUnit cuC = createCUfromTestFile(getPackageP(), "C");

    IType classB = getType(cu, "B");
    IMethod method = classB.getMethod("m", new String[] {"I"});

    final RenameJavaElementDescriptor descriptor =
        RefactoringSignatureDescriptorFactory.createRenameJavaElementDescriptor(
            IJavaRefactorings.RENAME_METHOD);
    descriptor.setJavaElement(method);
    descriptor.setNewName("kk");
    descriptor.setUpdateReferences(true);
    final RefactoringStatus status = new RefactoringStatus();
    final Refactoring refactoring = descriptor.createRefactoring(status);
    assertNotNull("Refactoring should not be null", refactoring);
    assertTrue("status should be ok", status.isOK());

    assertEquals("was supposed to pass", null, performRefactoring(refactoring));
    assertEqualLines(
        "invalid renaming A", getFileContents(getOutputTestFileName("A")), cu.getSource());
    assertEqualLines(
        "invalid renaming C", getFileContents(getOutputTestFileName("C")), cuC.getSource());
  }

