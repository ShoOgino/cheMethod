    @Test
	public void testConvertToIfReturn1() throws Exception {
		// positive cases
		IPackageFragment pack1= fSourceFolder.createPackageFragment("test1", false, null);
		StringBuffer buf= new StringBuffer();
		buf.append("package test1;\n");
		buf.append("public class E {\n");
		buf.append("    public void foo1() {\n");
		buf.append("        if (a) {\n");
		buf.append("            System.out.println(\"1\");\n");
		buf.append("            System.out.println(\"11\");\n");
		buf.append("        }\n");
		buf.append("    }\n\n");
		buf.append("    public void foo2() {\n");
		buf.append("        bar();\n");
		buf.append("        if (b) {\n");
		buf.append("            System.out.println(\"2\");\n");
		buf.append("            System.out.println(\"22\");\n");
		buf.append("        }\n");
		buf.append("    }\n\n");
		buf.append("    public void foo3() {\n");
		buf.append("        if (c) {\n");
		buf.append("            if (d) {\n");
		buf.append("                System.out.println(\"3\");\n");
		buf.append("                System.out.println(\"33\");\n");
		buf.append("        	}\n");
		buf.append("        }\n");
		buf.append("    }\n");
		buf.append("}\n");
		ICompilationUnit cu= pack1.createCompilationUnit("E.java", buf.toString(), false, null);

		String str= "if (a)";
		AssistContext context= getCorrectionContext(cu, buf.toString().indexOf(str) + str.length(), 0);
		List proposals= collectAssists(context, false);
		assertNumberOfProposals(proposals, 3);
		assertCorrectLabels(proposals);
		StringBuffer buf1= new StringBuffer();
		buf1.append("package test1;\n");
		buf1.append("public class E {\n");
		buf1.append("    public void foo1() {\n");
		buf1.append("        if (!a)\n");
		buf1.append("            return;\n");
		buf1.append("        System.out.println(\"1\");\n");
		buf1.append("        System.out.println(\"11\");\n");
		buf1.append("    }\n\n");
		buf1.append("    public void foo2() {\n");
		buf1.append("        bar();\n");
		buf1.append("        if (b) {\n");
		buf1.append("            System.out.println(\"2\");\n");
		buf1.append("            System.out.println(\"22\");\n");
		buf1.append("        }\n");
		buf1.append("    }\n\n");
		buf1.append("    public void foo3() {\n");
		buf1.append("        if (c) {\n");
		buf1.append("            if (d) {\n");
		buf1.append("                System.out.println(\"3\");\n");
		buf1.append("                System.out.println(\"33\");\n");
		buf1.append("        	}\n");
		buf1.append("        }\n");
		buf1.append("    }\n");
		buf1.append("}\n");
		String expected1= buf1.toString();
		assertExpectedExistInProposals(proposals, new String[] { expected1 });

		str= "if (b)";
		context= getCorrectionContext(cu, buf.toString().indexOf(str) + str.length(), 0);
		proposals= collectAssists(context, false);
		assertNumberOfProposals(proposals, 3);
		assertCorrectLabels(proposals);
		buf1= new StringBuffer();
		buf1.append("package test1;\n");
		buf1.append("public class E {\n");
		buf1.append("    public void foo1() {\n");
		buf1.append("        if (a) {\n");
		buf1.append("            System.out.println(\"1\");\n");
		buf1.append("            System.out.println(\"11\");\n");
		buf1.append("        }\n");
		buf1.append("    }\n\n");
		buf1.append("    public void foo2() {\n");
		buf1.append("        bar();\n");
		buf1.append("        if (!b)\n");
		buf1.append("            return;\n");
		buf1.append("        System.out.println(\"2\");\n");
		buf1.append("        System.out.println(\"22\");\n");
		buf1.append("    }\n\n");
		buf1.append("    public void foo3() {\n");
		buf1.append("        if (c) {\n");
		buf1.append("            if (d) {\n");
		buf1.append("                System.out.println(\"3\");\n");
		buf1.append("                System.out.println(\"33\");\n");
		buf1.append("        	}\n");
		buf1.append("        }\n");
		buf1.append("    }\n");
		buf1.append("}\n");
		String expected2= buf1.toString();
		assertExpectedExistInProposals(proposals, new String[] { expected2 });

		str= "if (d)";
		context= getCorrectionContext(cu, buf.toString().indexOf(str) + str.length(), 0);
		proposals= collectAssists(context, false);
		assertNumberOfProposals(proposals, 5);
		assertCorrectLabels(proposals);
		buf1= new StringBuffer();
		buf1.append("package test1;\n");
		buf1.append("public class E {\n");
		buf1.append("    public void foo1() {\n");
		buf1.append("        if (a) {\n");
		buf1.append("            System.out.println(\"1\");\n");
		buf1.append("            System.out.println(\"11\");\n");
		buf1.append("        }\n");
		buf1.append("    }\n\n");
		buf1.append("    public void foo2() {\n");
		buf1.append("        bar();\n");
		buf1.append("        if (b) {\n");
		buf1.append("            System.out.println(\"2\");\n");
		buf1.append("            System.out.println(\"22\");\n");
		buf1.append("        }\n");
		buf1.append("    }\n\n");
		buf1.append("    public void foo3() {\n");
		buf1.append("        if (c) {\n");
		buf1.append("            if (!d)\n");
		buf1.append("                return;\n");
		buf1.append("            System.out.println(\"3\");\n");
		buf1.append("            System.out.println(\"33\");\n");
		buf1.append("        }\n");
		buf1.append("    }\n");
		buf1.append("}\n");
		String expected3= buf1.toString();
		assertExpectedExistInProposals(proposals, new String[] { expected3 });
	}

