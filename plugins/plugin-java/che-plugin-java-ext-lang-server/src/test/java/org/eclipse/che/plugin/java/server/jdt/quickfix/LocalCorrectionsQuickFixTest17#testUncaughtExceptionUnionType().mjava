  @Test
  public void testUncaughtExceptionUnionType() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.io.IOException;\n");
    buf.append("import java.io.InterruptedIOException;\n");
    buf.append("public class E {\n");
    buf.append("    void foo(int a) {\n");
    buf.append("        try {\n");
    buf.append("            if (a < 10)\n");
    buf.append("                throw new FileNotFoundException();\n");
    buf.append("            else if (a < 20)\n");
    buf.append("                throw new InterruptedIOException();\n");
    buf.append("            else\n");
    buf.append("                throw new IOException();\n");
    buf.append("        } catch (FileNotFoundException | InterruptedIOException ex) {\n");
    buf.append("            ex.printStackTrace();\n");
    buf.append("        } \n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertNumberOfProposals(proposals, 4);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.io.IOException;\n");
    buf.append("import java.io.InterruptedIOException;\n");
    buf.append("public class E {\n");
    buf.append("    void foo(int a) throws IOException {\n");
    buf.append("        try {\n");
    buf.append("            if (a < 10)\n");
    buf.append("                throw new FileNotFoundException();\n");
    buf.append("            else if (a < 20)\n");
    buf.append("                throw new InterruptedIOException();\n");
    buf.append("            else\n");
    buf.append("                throw new IOException();\n");
    buf.append("        } catch (FileNotFoundException | InterruptedIOException ex) {\n");
    buf.append("            ex.printStackTrace();\n");
    buf.append("        } \n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.io.IOException;\n");
    buf.append("import java.io.InterruptedIOException;\n");
    buf.append("public class E {\n");
    buf.append("    void foo(int a) {\n");
    buf.append("        try {\n");
    buf.append("            if (a < 10)\n");
    buf.append("                throw new FileNotFoundException();\n");
    buf.append("            else if (a < 20)\n");
    buf.append("                throw new InterruptedIOException();\n");
    buf.append("            else\n");
    buf.append("                throw new IOException();\n");
    buf.append("        } catch (FileNotFoundException | InterruptedIOException ex) {\n");
    buf.append("            ex.printStackTrace();\n");
    buf.append("        } catch (IOException e) {\n");
    buf.append("        } \n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.io.IOException;\n");
    buf.append("import java.io.InterruptedIOException;\n");
    buf.append("public class E {\n");
    buf.append("    void foo(int a) {\n");
    buf.append("        try {\n");
    buf.append("            if (a < 10)\n");
    buf.append("                throw new FileNotFoundException();\n");
    buf.append("            else if (a < 20)\n");
    buf.append("                throw new InterruptedIOException();\n");
    buf.append("            else\n");
    buf.append("                throw new IOException();\n");
    buf.append(
        "        } catch (FileNotFoundException | InterruptedIOException | IOException ex) {\n");
    buf.append("            ex.printStackTrace();\n");
    buf.append("        } \n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected3 = buf.toString();

    assertExpectedExistInProposals(proposals, new String[] {expected1, expected2, expected3});
  }

