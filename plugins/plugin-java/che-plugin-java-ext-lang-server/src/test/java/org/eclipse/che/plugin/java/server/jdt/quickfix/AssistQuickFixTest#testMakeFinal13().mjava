  @Test
  public void testMakeFinal13() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        int i= 1, j= i + 1, h= j + 1;\n");
    buf.append("        System.out.println(i);\n");
    buf.append("        System.out.println(j);\n");
    buf.append("        System.out.println(h);\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    int offset = buf.toString().indexOf("j= i + 1");
    int length = "j= i + 1".length();
    AssistContext context = getCorrectionContext(cu, offset, length);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 2);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        int i= 1;\n");
    buf.append("        final int j= i + 1;\n");
    buf.append("        int h= j + 1;\n");
    buf.append("        System.out.println(i);\n");
    buf.append("        System.out.println(j);\n");
    buf.append("        System.out.println(h);\n");
    buf.append("    }\n");
    buf.append("}\n");
    String ex1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        int i= 1, j, h= j + 1;\n");
    buf.append("        j = i + 1;\n");
    buf.append("        System.out.println(i);\n");
    buf.append("        System.out.println(j);\n");
    buf.append("        System.out.println(h);\n");
    buf.append("    }\n");
    buf.append("}\n");
    String ex2 = buf.toString();

    assertExpectedExistInProposals(proposals, new String[] {ex1, ex2});
  }

