  @Test
  public void testMismatchingReturnTypeParameterized() throws Exception {
    // test for https://bugs.eclipse.org/bugs/show_bug.cgi?id=165913
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class Base {\n");
    buf.append("    public Number getVal() {\n");
    buf.append("        return null;\n");
    buf.append("    }\n");
    buf.append("}\n");
    pack1.createCompilationUnit("Base.java", buf.toString(), false, null);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E<T> extends Base {\n");
    buf.append("    public E<T> getVal() {\n");
    buf.append("        return null;\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertNumberOfProposals(proposals, 1);
    assertCorrectLabels(proposals);

    CUCorrectionProposal proposal = (CUCorrectionProposal) proposals.get(0);
    String preview1 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E<T> extends Base {\n");
    buf.append("    public Number getVal() {\n");
    buf.append("        return null;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    assertEqualStringsIgnoreOrder(new String[] {preview1}, new String[] {expected1});
  }

