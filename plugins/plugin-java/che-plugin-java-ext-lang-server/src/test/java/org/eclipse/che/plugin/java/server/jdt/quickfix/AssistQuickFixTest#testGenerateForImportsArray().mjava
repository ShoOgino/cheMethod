  @Test
  public void testGenerateForImportsArray() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    class Date {}\n");
    buf.append("    void foo() {\n");
    buf.append("        B.get();\n");
    buf.append("    }\n");
    buf.append("}\n");

    StringBuffer buf2 = new StringBuffer();
    buf2.append("package test1;\n");
    buf2.append("import java.util.Date;\n");
    buf2.append("public class B {\n");
    buf2.append("    static Date[] get() {\n");
    buf2.append("        return new Date[1];\n");
    buf2.append("    }\n");
    buf2.append("}");

    ICompilationUnit cu = pack1.createCompilationUnit("A.java", buf.toString(), false, null);
    pack1.createCompilationUnit("B.java", buf2.toString(), false, null);

    Map saveOptions = fJProject1.getOptions(false);
    Map newOptions = new HashMap();
    JavaCore.setComplianceOptions(org.eclipse.jdt.core.JavaCore.VERSION_1_5, newOptions);
    newOptions.put(DefaultCodeFormatterConstants.FORMATTER_PUT_EMPTY_STATEMENT_ON_NEW_LINE, "true");
    try {
      fJProject1.setOptions(newOptions);

      String selection = "B.get();";
      AssistContext context =
          getCorrectionContext(cu, buf.toString().lastIndexOf(selection) + selection.length(), 0);
      List proposals = collectAssists(context, false);

      assertNumberOfProposals(proposals, 4);
      assertCorrectLabels(proposals);

      String[] expected = new String[1];
      buf = new StringBuffer();
      buf.append("package test1;\n");
      buf.append("public class A {\n");
      buf.append("    class Date {}\n");
      buf.append("    void foo() {\n");
      buf.append("        for (java.util.Date date : B.get()) {\n");
      buf.append("            \n");
      buf.append("        }\n");
      buf.append("    }\n");
      buf.append("}\n");
      expected[0] = buf.toString();

      assertExpectedExistInProposals(proposals, expected);
    } finally {
      fJProject1.setOptions(saveOptions);
    }
  }

