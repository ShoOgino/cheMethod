  @Test
  public void testTypeMismatchInFieldDeclNoImport() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    private class StringBuffer { }\n");
    buf.append("    private final StringBuffer sb;\n");
    buf.append("    public E() {\n");
    buf.append("        sb= new java.lang.StringBuffer();\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertNumberOfProposals(proposals, 1);
    assertCorrectLabels(proposals);

    CUCorrectionProposal proposal = (CUCorrectionProposal) proposals.get(0);
    String preview1 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    private class StringBuffer { }\n");
    buf.append("    private final java.lang.StringBuffer sb;\n");
    buf.append("    public E() {\n");
    buf.append("        sb= new java.lang.StringBuffer();\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    assertEqualString(preview1, expected1);
  }

