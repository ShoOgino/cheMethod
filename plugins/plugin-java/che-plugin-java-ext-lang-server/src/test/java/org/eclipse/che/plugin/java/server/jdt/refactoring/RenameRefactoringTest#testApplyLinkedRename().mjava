  @Test
  public void testApplyLinkedRename() throws Exception {
    StringBuilder b = new StringBuilder();
    b.append("package p;\n");
    b.append("public class A{}\n");

    ICompilationUnit unit =
        getPackageP().createCompilationUnit("A.java", b.toString(), false, null);
    IType type = unit.getAllTypes()[0];
    RenameRefactoringSession refactoring =
        manager.createRenameRefactoring(type, unit, b.indexOf("A"), true);
    assertThat(refactoring).isNotNull();
    assertThat(refactoring.getSessionId()).isNotNull().isNotEmpty();
    LinkedRenameRefactoringApply apply = new DtoServerImpls.LinkedRenameRefactoringApplyImpl();
    apply.setSessionId(refactoring.getSessionId());
    apply.setNewName("Test");
    RefactoringStatus status = manager.applyLinkedRename(apply);
    assertThat(status).isNotNull();
    assertThat(status.getSeverity()).isEqualTo(RefactoringStatus.OK);
    assertThat(unit.exists()).isFalse();
    ICompilationUnit newUnit = getPackageP().getCompilationUnit("Test.java");
    assertThat(newUnit.exists()).isTrue();
  }

