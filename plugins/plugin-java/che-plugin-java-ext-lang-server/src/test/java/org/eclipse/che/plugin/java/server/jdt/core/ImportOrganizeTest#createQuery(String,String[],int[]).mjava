  protected IChooseImportQuery createQuery(
      final String name, final String[] choices, final int[] nEntries) {
    return new IChooseImportQuery() {
      public TypeNameMatch[] chooseImports(TypeNameMatch[][] openChoices, ISourceRange[] ranges) {
        assertTrue(name + "-query-nchoices1", choices.length == openChoices.length);
        assertTrue(name + "-query-nchoices2", nEntries.length == openChoices.length);
        for (int i = 0; i < nEntries.length; i++) {
          assertTrue(name + "-query-cnt" + i, openChoices[i].length == nEntries[i]);
        }
        TypeNameMatch[] res = new TypeNameMatch[openChoices.length];
        for (int i = 0; i < openChoices.length; i++) {
          TypeNameMatch[] selection = openChoices[i];
          assertNotNull(name + "-query-setset" + i, selection);
          assertTrue(name + "-query-setlen" + i, selection.length > 0);
          TypeNameMatch found = null;
          for (int k = 0; k < selection.length; k++) {
            if (selection[k].getFullyQualifiedName().equals(choices[i])) {
              found = selection[k];
            }
          }
          assertNotNull(name + "-query-notfound" + i, found);
          res[i] = found;
        }
        return res;
      }
    };
  }

