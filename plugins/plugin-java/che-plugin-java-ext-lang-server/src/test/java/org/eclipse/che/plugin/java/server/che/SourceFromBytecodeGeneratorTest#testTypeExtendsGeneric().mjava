  @Test
  public void testTypeExtendsGeneric() throws Exception {
    IType interfaceType = project.findType("com.sun.nio.zipfs.ZipDirectoryStream");
    String source = new SourcesFromBytecodeGenerator().generateSource(interfaceType);
    assertThat(source)
        .contains(
            "public class ZipDirectoryStream implements java.nio.file.DirectoryStream<java.nio.file.Path> {\n"
                + "    private final com.sun.nio.zipfs.ZipFileSystem zipfs;\n"
                + "    private final byte[] path;\n"
                + "    private final java.nio.file.DirectoryStream.Filter<? super java.nio.file.Path> filter;\n"
                + "    private volatile boolean isClosed;\n"
                + "    private volatile java.util.Iterator<java.nio.file.Path> itr;\n"
                + "\n"
                + "    ZipDirectoryStream(com.sun.nio.zipfs.ZipPath arg0, java.nio.file.DirectoryStream.Filter<? super java.nio.file.Path> "
                + "arg1) throws java.io.IOException { /* compiled code */ }\n"
                + "\n"
                + "    public synchronized java.util.Iterator<java.nio.file.Path> iterator() { /* compiled code */ }\n"
                + "\n"
                + "    public synchronized void close() throws java.io.IOException { /* compiled code */ }\n"
                + "\n"
                + "}");
  }

