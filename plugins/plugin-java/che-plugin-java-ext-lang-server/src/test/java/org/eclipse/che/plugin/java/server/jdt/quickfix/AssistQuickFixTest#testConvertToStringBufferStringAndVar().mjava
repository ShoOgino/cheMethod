  @Test
  public void testConvertToStringBufferStringAndVar() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String foo = \"foo\";\n");
    buf.append("        String fuu = \"fuu\";\n");
    buf.append("        String strX = foo+\"bar\"+fuu;\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("A.java", buf.toString(), false, null);

    AssistContext context = getCorrectionContext(cu, buf.toString().indexOf("strX ="), 0);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 5);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String foo = \"foo\";\n");
    buf.append("        String fuu = \"fuu\";\n");
    buf.append("        StringBuilder stringBuilder = new StringBuilder();\n");
    buf.append("        stringBuilder.append(foo);\n");
    buf.append("        stringBuilder.append(\"bar\");\n");
    buf.append("        stringBuilder.append(fuu);\n");
    buf.append("        String strX = stringBuilder.toString();\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String foo = \"foo\";\n");
    buf.append("        String fuu = \"fuu\";\n");
    buf.append("        String strX;\n");
    buf.append("        strX = foo+\"bar\"+fuu;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String foo = \"foo\";\n");
    buf.append("        String fuu = \"fuu\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected3 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    private String strX;\n");
    buf.append("\n");
    buf.append("    public void foo() {\n");
    buf.append("        String foo = \"foo\";\n");
    buf.append("        String fuu = \"fuu\";\n");
    buf.append("        strX = foo+\"bar\"+fuu;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected4 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("\n");
    buf.append("import java.text.MessageFormat;\n");
    buf.append("\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String foo = \"foo\";\n");
    buf.append("        String fuu = \"fuu\";\n");
    buf.append("        String strX = MessageFormat.format(\"{0}bar{1}\", foo, fuu);\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected5 = buf.toString();

    assertExpectedExistInProposals(
        proposals, new String[] {expected1, expected2, expected3, expected4, expected5});
  }

