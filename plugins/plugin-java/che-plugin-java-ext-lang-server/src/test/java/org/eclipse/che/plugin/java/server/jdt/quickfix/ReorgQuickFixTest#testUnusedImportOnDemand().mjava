  @Test
  public void testUnusedImportOnDemand() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("\n");
    buf.append("import java.util.Vector;\n");
    buf.append("import java.net.*;\n");
    buf.append("\n");
    buf.append("public class E {\n");
    buf.append("    Vector v;\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertNumberOfProposals(proposals, 2);
    assertCorrectLabels(proposals);

    Object p1 = proposals.get(0);
    if (!(p1 instanceof CUCorrectionProposal)) {
      p1 = proposals.get(1);
    }

    CUCorrectionProposal proposal = (CUCorrectionProposal) p1;
    String preview = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("\n");
    buf.append("import java.util.Vector;\n");
    buf.append("\n");
    buf.append("public class E {\n");
    buf.append("    Vector v;\n");
    buf.append("}\n");
    assertEqualString(preview, buf.toString());
  }

