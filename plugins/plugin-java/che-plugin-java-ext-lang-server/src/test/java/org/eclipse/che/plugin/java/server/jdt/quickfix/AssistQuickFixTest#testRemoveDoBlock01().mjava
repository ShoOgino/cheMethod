  @Test
  public void testRemoveDoBlock01() throws Exception {

    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        do {\n");
    buf.append("            ;\n");
    buf.append("        } while (true);\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    String str = "do {";
    AssistContext context = getCorrectionContext(cu, buf.toString().indexOf(str), 0);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 2);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        do; while (true);\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        ;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    assertExpectedExistInProposals(proposals, new String[] {expected1, expected2});
  }

