  @Test
  @Ignore
  public void testMakeFinal17() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("public class E {\n");
    buf.append("    private int i= 0;\n");
    buf.append("    private void foo() {\n");
    buf.append("        System.out.println(i);\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    int offset = buf.toString().indexOf("i=");
    AssistContext context = getCorrectionContext(cu, offset, 1);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 1);
    assertProposalDoesNotExist(proposals, CHANGE_MODIFIER_TO_FINAL);

    buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("public class E {\n");
    buf.append("    private int i= 0;\n");
    buf.append("    private void foo() {\n");
    buf.append("        System.out.println(getI());\n");
    buf.append("    }\n");
    buf.append("    public int getI() {\n");
    buf.append("        return i;\n");
    buf.append("    }\n");
    buf.append("    public void setI(int i) {\n");
    buf.append("        this.i = i;\n");
    buf.append("    }\n");
    buf.append("}\n");
    assertExpectedExistInProposals(proposals, new String[] {buf.toString()});
  }

