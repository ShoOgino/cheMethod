  @Test
  public void test1WithOrder() throws Exception {
    File junitSrcArchive =
        new File(
            JUnitSourceSetup.class
                .getClassLoader()
                .getResource(JavaProjectHelper.JUNIT_SRC_381.toOSString())
                .getFile());
    assertTrue("junit src not found", junitSrcArchive != null && junitSrcArchive.exists());

    JavaProjectHelper.addSourceContainerWithImport(
        fJProject1, "src", junitSrcArchive, JavaProjectHelper.JUNIT_SRC_ENCODING);

    ICompilationUnit cu =
        (ICompilationUnit) fJProject1.findElement(new Path("junit/runner/BaseTestRunner.java"));
    assertNotNull("BaseTestRunner.java", cu);

    IPackageFragmentRoot root = (IPackageFragmentRoot) cu.getParent().getParent();
    IPackageFragment pack = root.createPackageFragment("mytest", true, null);

    ICompilationUnit colidingCU = pack.getCompilationUnit("TestListener.java");
    colidingCU.createType("public abstract class TestListener {\n}\n", null, true, null);

    String[] order = new String[] {"junit", "java.text", "java.io", "java"};
    IChooseImportQuery query =
        createQuery("BaseTestRunner", new String[] {"junit.framework.TestListener"}, new int[] {2});

    OrganizeImportsOperation op = createOperation(cu, order, 99, false, true, true, query);
    op.run(null);

    assertImports(
        cu,
        new String[] {
          "junit.framework.AssertionFailedError",
          "junit.framework.Test",
          "junit.framework.TestListener",
          "junit.framework.TestSuite",
          "java.text.NumberFormat",
          "java.io.BufferedReader",
          "java.io.File",
          "java.io.FileInputStream",
          "java.io.FileOutputStream",
          "java.io.IOException",
          "java.io.InputStream",
          "java.io.PrintWriter",
          "java.io.StringReader",
          "java.io.StringWriter",
          "java.lang.reflect.InvocationTargetException",
          "java.lang.reflect.Method",
          "java.lang.reflect.Modifier",
          "java.util.Properties"
        });
  }

