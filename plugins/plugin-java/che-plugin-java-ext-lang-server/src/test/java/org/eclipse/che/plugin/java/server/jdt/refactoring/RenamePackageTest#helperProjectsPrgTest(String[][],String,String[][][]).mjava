  /**
   * 2 Projects with a root each: Project RenamePack2 (root: srcTest) requires project RenamePack1
   * (root: srcPrg).
   *
   * @param packageNames package names per root
   * @param newPackageName the new package name for packageNames[0][0]
   * @param cuNames cu names per package
   * @throws Exception if one of the resources cannot be created
   */
  private void helperProjectsPrgTest(
      String[][] packageNames, String newPackageName, String[][][] cuNames) throws Exception {
    IJavaProject projectPrg = null;
    IJavaProject projectTest = null;
    try {
      projectPrg = JavaProjectHelper.createJavaProject("RenamePack1", "bin");
      assertNotNull(JavaProjectHelper.addRTJar(projectPrg));
      IPackageFragmentRoot srcPrg = JavaProjectHelper.addSourceContainer(projectPrg, "srcPrg");
      Map optionsPrg = projectPrg.getOptions(false);
      JavaProjectHelper.set15CompilerOptions(optionsPrg);
      projectPrg.setOptions(optionsPrg);

      projectTest = JavaProjectHelper.createJavaProject("RenamePack2", "bin");
      assertNotNull(JavaProjectHelper.addRTJar(projectTest));
      IPackageFragmentRoot srcTest = JavaProjectHelper.addSourceContainer(projectTest, "srcTest");
      Map optionsTest = projectTest.getOptions(false);
      JavaProjectHelper.set15CompilerOptions(optionsTest);
      projectTest.setOptions(optionsTest);

      JavaProjectHelper.addRequiredProject(projectTest, projectPrg);

      helperMultiProjects(
          new IPackageFragmentRoot[] {srcPrg, srcTest}, packageNames, newPackageName, cuNames);
    } finally {
      JavaProjectHelper.delete(projectPrg);
      JavaProjectHelper.delete(projectTest);
    }
  }

