  @Test
  public void testInnerAndOuterIfConditions4() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public int foo(int a, Object b) {\n");
    buf.append("        if (a == 8)\n");
    buf.append("            if (b instanceof String) {\n");
    buf.append("                return 0;\n");
    buf.append("            }\n");
    buf.append("        return 1;\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    int offset = buf.toString().indexOf("if (b");
    AssistContext context = getCorrectionContext(cu, offset, 0);
    assertNoErrors(context);
    List proposals = collectAssists(context, false);

    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public int foo(int a, Object b) {\n");
    buf.append("        if (b instanceof String)\n");
    buf.append("            if (a == 8) {\n");
    buf.append("                return 0;\n");
    buf.append("            }\n");
    buf.append("        return 1;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    assertExpectedExistInProposals(proposals, new String[] {expected1});
  }

