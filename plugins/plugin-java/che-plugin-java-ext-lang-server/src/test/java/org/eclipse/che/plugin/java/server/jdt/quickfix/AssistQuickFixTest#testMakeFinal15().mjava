  @Test
  public void testMakeFinal15() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("import java.io.Serializable;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        Serializable ser= new Serializable() {\n");
    buf.append("            private int i= 0;\n");
    buf.append("            Serializable ser2= new Serializable() {\n");
    buf.append("                public void foo() {\n");
    buf.append("                    System.out.println(i);\n");
    buf.append("                }\n");
    buf.append("            };\n");
    buf.append("        };\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    int offset1 = buf.toString().indexOf("public");
    int offset2 = buf.toString().lastIndexOf("}");
    AssistContext context = getCorrectionContext(cu, offset1, offset2 - offset1);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 1);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test;\n");
    buf.append("import java.io.Serializable;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        final Serializable ser= new Serializable() {\n");
    buf.append("            private final int i= 0;\n");
    buf.append("            Serializable ser2= new Serializable() {\n");
    buf.append("                public void foo() {\n");
    buf.append("                    System.out.println(i);\n");
    buf.append("                }\n");
    buf.append("            };\n");
    buf.append("        };\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    String expected2 = null; // Wrap in buf.append() (to clipboard)

    assertExpectedExistInProposals(proposals, new String[] {expected1 /*, expected2*/});
  }

