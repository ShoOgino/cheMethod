  @Test
  public void testInferCollectionFromInitializers() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("		String[] array = {\"1\",\"2\"};\n");
    buf.append("		for (int i = 0, max = array.length; i < max; i++){\n");
    buf.append("			if (array[i].equals(\"2\"))\n");
    buf.append("				System.out.println(array[i]);\n");
    buf.append("			else if ((array[i] + 2) == \"4\"){\n");
    buf.append("				int k = Integer.parseInt(array[i]) - 2;\n");
    buf.append("			}\n");
    buf.append("		}\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("A.java", buf.toString(), false, null);

    List proposals = fetchConvertingProposal(buf, cu);

    assertNotNull(fConvertLoopProposal);

    assertCorrectLabels(proposals);

    String preview1 = getPreviewContent(fConvertLoopProposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("		String[] array = {\"1\",\"2\"};\n");
    buf.append("		for (String element : array) {\n");
    buf.append("			if (element.equals(\"2\"))\n");
    buf.append("				System.out.println(element);\n");
    buf.append("			else if ((element + 2) == \"4\"){\n");
    buf.append("				int k = Integer.parseInt(element) - 2;\n");
    buf.append("			}\n");
    buf.append("		}\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected = buf.toString();
    assertEqualString(preview1, expected);
  }

