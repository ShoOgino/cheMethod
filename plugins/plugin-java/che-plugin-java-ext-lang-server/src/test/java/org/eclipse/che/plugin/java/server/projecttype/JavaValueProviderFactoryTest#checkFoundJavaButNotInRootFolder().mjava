  /**
   * In this case we have a folder with a javascript file, but some sub folders contains java files
   */
  @Test
  public void checkFoundJavaButNotInRootFolder() throws Throwable {

    // we return a file entry that is a javascript file
    FileEntry fileEntry = mock(FileEntry.class);
    when(fileEntry.getName()).thenReturn("helloworld.js");
    when(rootProjectFolder.getChildFiles()).thenReturn(Collections.singletonList(fileEntry));

    FileEntry javaFileEntry = mock(FileEntry.class);
    when(javaFileEntry.getName()).thenReturn("helloworld.java");

    FolderEntry subFolder = mock(FolderEntry.class);
    when(subFolder.getChildFiles()).thenReturn(Collections.singletonList(javaFileEntry));
    when(rootProjectFolder.getChildFolders()).thenReturn(Collections.singletonList(subFolder));

    ValueProvider javaPropertiesValueProvider =
        new JavaValueProviderFactory().newInstance(rootProjectFolder);
    List<String> hasJavaFiles = javaPropertiesValueProvider.getValues(CONTAINS_JAVA_FILES);
    assertNotNull(hasJavaFiles);
    assertEquals(hasJavaFiles, Collections.singletonList("true"));
  }

