  @Test
  public void testCastMissingInVarDecl2() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.util.List;\n");
    buf.append("public class Container {\n");
    buf.append("    public List[] getLists() {\n");
    buf.append("        return null;\n");
    buf.append("    }\n");
    buf.append("}\n");
    pack1.createCompilationUnit("Container.java", buf.toString(), false, null);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.util.ArrayList;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo(Container c) {\n");
    buf.append("         ArrayList[] lists= c.getLists();\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertNumberOfProposals(proposals, 3);
    assertCorrectLabels(proposals);

    CUCorrectionProposal proposal = (CUCorrectionProposal) proposals.get(0);
    String preview1 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.util.ArrayList;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo(Container c) {\n");
    buf.append("         ArrayList[] lists= (ArrayList[]) c.getLists();\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    proposal = (CUCorrectionProposal) proposals.get(1);
    String preview2 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.util.ArrayList;\n");
    buf.append("import java.util.List;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo(Container c) {\n");
    buf.append("         List[] lists= c.getLists();\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    proposal = (CUCorrectionProposal) proposals.get(2);
    String preview3 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.util.ArrayList;\n");
    buf.append("import java.util.List;\n");
    buf.append("public class Container {\n");
    buf.append("    public ArrayList[] getLists() {\n");
    buf.append("        return null;\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected3 = buf.toString();

    assertEqualStringsIgnoreOrder(
        new String[] {preview1, preview2, preview3},
        new String[] {expected1, expected2, expected3});
  }

