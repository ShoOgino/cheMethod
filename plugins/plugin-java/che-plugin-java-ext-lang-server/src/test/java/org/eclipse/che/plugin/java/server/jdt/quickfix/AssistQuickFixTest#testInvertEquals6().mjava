  @Test
  public void testInvertEquals6() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("class A {\n");
    buf.append("    static String get() {\n");
    buf.append("        return \"a\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        \"a\".equals(A.get());\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    String str = "equals";
    AssistContext context = getCorrectionContext(cu, buf.toString().indexOf(str), 0);
    List proposals = collectAssists(context, FILTER_EQ);

    assertNumberOfProposals(proposals, 1);
    assertCorrectLabels(proposals);

    cu = pack1.createCompilationUnit("E.java", buf.toString(), true, null);
    CUCorrectionProposal proposal = (CUCorrectionProposal) proposals.get(0);
    String preview = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("class A {\n");
    buf.append("    static String get() {\n");
    buf.append("        return \"a\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        A.get().equals(\"a\");\n");
    buf.append("    }\n");
    buf.append("}\n");
    assertEqualString(preview, buf.toString());

    cu = pack1.createCompilationUnit("E.java", buf.toString(), true, null);
    context = getCorrectionContext(cu, buf.toString().indexOf(str), 0);
    proposals = collectAssists(context, FILTER_EQ);

    assertNumberOfProposals(proposals, 1);
    assertCorrectLabels(proposals);

    proposal = (CUCorrectionProposal) proposals.get(0);
    preview = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("class A {\n");
    buf.append("    static String get() {\n");
    buf.append("        return \"a\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        \"a\".equals(A.get());\n");
    buf.append("    }\n");
    buf.append("}\n");
    assertEqualString(preview, buf.toString());
  }

