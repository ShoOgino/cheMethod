  @Test
  @Ignore
  public void testPrimitiveTypeInFieldDecl() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    floot vec= 1.0;\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    double vec= 1.0;\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    Float vec= 1.0;\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    float vec= 1.0;\n");
    buf.append("}\n");
    String expected3 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("\n");
    buf.append("public class floot {\n");
    buf.append("\n");
    buf.append("}\n");
    String expected4 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("\n");
    buf.append("public interface floot {\n");
    buf.append("\n");
    buf.append("}\n");
    String expected5 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("\n");
    buf.append("public enum floot {\n");
    buf.append("\n");
    buf.append("}\n");
    String expected6 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E<floot> {\n");
    buf.append("    floot vec= 1.0;\n");
    buf.append("}\n");
    String expected7 = buf.toString();

    assertExpectedExistInProposals(
        proposals,
        new String[] {expected1, expected2, expected3, expected4, expected5, expected6, expected7});
  }

