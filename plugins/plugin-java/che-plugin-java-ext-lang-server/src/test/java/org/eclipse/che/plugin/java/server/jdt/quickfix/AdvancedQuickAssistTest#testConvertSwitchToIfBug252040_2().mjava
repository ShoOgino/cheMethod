  @Test
  public void testConvertSwitchToIfBug252040_2() throws Exception {
    //https://bugs.eclipse.org/bugs/show_bug.cgi?id=252040
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        if (true)\n");
    buf.append("            switch (getSomethingWithSideEffects()) {\n");
    buf.append("            case 1:\n");
    buf.append("                System.out.println();\n");
    buf.append("                break;\n");
    buf.append("            case 2:\n");
    buf.append("                System.out.println();\n");
    buf.append("                break;\n");
    buf.append("            }\n");
    buf.append("    }\n");
    buf.append("    private int getSomethingWithSideEffects() {\n");
    buf.append("        System.out.println(\"side effect\");\n");
    buf.append("        return 2;\n");
    buf.append("    }\n");
    buf.append("}\n");

    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    int offset = buf.toString().indexOf("switch");
    AssistContext context = getCorrectionContext(cu, offset, 0);
    assertNoErrors(context);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 1);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    public void foo() {\n");
    buf.append("        if (true) {\n");
    buf.append("            int somethingWithSideEffects = getSomethingWithSideEffects();\n");
    buf.append("            if (somethingWithSideEffects == 1) {\n");
    buf.append("                System.out.println();\n");
    buf.append("            } else if (somethingWithSideEffects == 2) {\n");
    buf.append("                System.out.println();\n");
    buf.append("            }\n");
    buf.append("        }\n");
    buf.append("    }\n");
    buf.append("    private int getSomethingWithSideEffects() {\n");
    buf.append("        System.out.println(\"side effect\");\n");
    buf.append("        return 2;\n");
    buf.append("    }\n");
    buf.append("}\n");

    String expected1 = buf.toString();

    assertExpectedExistInProposals(proposals, new String[] {expected1});
  }

