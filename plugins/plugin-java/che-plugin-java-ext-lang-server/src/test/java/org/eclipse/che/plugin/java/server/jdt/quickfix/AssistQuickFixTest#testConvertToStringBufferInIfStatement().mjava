  @Test
  public void testConvertToStringBufferInIfStatement() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) strX = \"foo\"+\"bar\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("A.java", buf.toString(), false, null);

    AssistContext context = getCorrectionContext(cu, buf.toString().indexOf("\"+\""), 0);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 6);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) {\n");
    buf.append("            StringBuilder stringBuilder = new StringBuilder();\n");
    buf.append("            stringBuilder.append(\"foo\");\n");
    buf.append("            stringBuilder.append(\"bar\");\n");
    buf.append("            strX = stringBuilder.toString();\n");
    buf.append("        }\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) {\n");
    buf.append("            String string = \"foo\";\n");
    buf.append("            strX = string+\"bar\";\n");
    buf.append("        }\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    private static final String FOO = \"foo\";\n");
    buf.append("\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) strX = FOO+\"bar\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected3 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) {\n");
    buf.append("            String string = \"foo\";\n");
    buf.append("            strX = string+\"bar\";\n");
    buf.append("        }\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected4 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) strX = (\"foo\"+\"bar\");\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected5 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class A {\n");
    buf.append("    public void foo() {\n");
    buf.append("        String strX;\n");
    buf.append("        if(true) strX = \"foobar\";\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected6 = buf.toString();

    //		buf= new StringBuffer();
    //		buf.append("package test1;\n");
    //		buf.append("public class A {\n");
    //		buf.append("    public void foo() {\n");
    //		buf.append("        String strX;\n");
    //		buf.append("        if(true) strX = \"FOO\"+\"bar\";\n");
    //		buf.append("    }\n");
    //		buf.append("}\n");
    //		String expected7= buf.toString();

    assertExpectedExistInProposals(
        proposals,
        new String[] {
          expected1, expected2, expected3, expected4, expected5, expected6 /*, expected7*/
        });
  }

