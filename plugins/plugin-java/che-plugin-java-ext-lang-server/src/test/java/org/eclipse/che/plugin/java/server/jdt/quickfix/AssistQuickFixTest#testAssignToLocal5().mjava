  @Test
  public void testAssignToLocal5() throws Exception {
    // test prefixes and this qualification on static method

    IPreferenceStore store = JavaPlugin.getDefault().getPreferenceStore();
    store.setValue(PreferenceConstants.CODEGEN_KEYWORD_THIS, true);
    //		Preferences corePrefs= JavaPlugin.getJavaCorePluginPreferences();
    fJProject1.setOption(org.eclipse.jdt.core.JavaCore.CODEASSIST_FIELD_PREFIXES, "f");
    fJProject1.setOption(org.eclipse.jdt.core.JavaCore.CODEASSIST_STATIC_FIELD_PREFIXES, "fg");
    fJProject1.setOption(org.eclipse.jdt.core.JavaCore.CODEASSIST_LOCAL_PREFIXES, "_");

    //		corePrefs.setValue(JavaCore.CODEASSIST_FIELD_PREFIXES, "f");
    //		corePrefs.setValue(JavaCore.CODEASSIST_STATIC_FIELD_PREFIXES, "fg");
    //		corePrefs.setValue(JavaCore.CODEASSIST_LOCAL_PREFIXES, "_");

    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("\n");
    buf.append("    private int fCount;\n");
    buf.append("\n");
    buf.append("    public static void foo() {\n");
    buf.append("        System.getSecurityManager();\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    int offset = buf.toString().indexOf("System");
    AssistContext context = getCorrectionContext(cu, offset, 0);
    List proposals = collectAssists(context, false);

    assertNumberOfProposals(proposals, 2);
    assertCorrectLabels(proposals);

    CUCorrectionProposal proposal = (CUCorrectionProposal) proposals.get(0);
    String preview1 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("\n");
    buf.append("    private int fCount;\n");
    buf.append("    private static SecurityManager fgSecurityManager;\n");
    buf.append("\n");
    buf.append("    public static void foo() {\n");
    buf.append("        E.fgSecurityManager = System.getSecurityManager();\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected1 = buf.toString();

    proposal = (CUCorrectionProposal) proposals.get(1);
    String preview2 = getPreviewContent(proposal);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("\n");
    buf.append("    private int fCount;\n");
    buf.append("\n");
    buf.append("    public static void foo() {\n");
    buf.append("        SecurityManager _securityManager = System.getSecurityManager();\n");
    buf.append("    }\n");
    buf.append("}\n");
    String expected2 = buf.toString();

    assertEqualStringsIgnoreOrder(
        new String[] {preview1, preview2}, new String[] {expected1, expected2});
  }

