  @Test
  @Ignore
  public void testImportFromMultiRoots7() throws Exception {
    IJavaProject prj = null;
    IJavaProject prjRef = null;
    IJavaProject prjOther = null;
    try {
      prj = JavaProjectHelper.createJavaProject("prj", "bin");
      assertNotNull(JavaProjectHelper.addRTJar(prj));
      IPackageFragmentRoot srcPrj =
          JavaProjectHelper.addSourceContainer(prj, "srcPrj"); //$NON-NLS-1$

      prjRef = JavaProjectHelper.createJavaProject("prj.ref", "bin");
      assertNotNull(JavaProjectHelper.addRTJar(prjRef));
      IPackageFragmentRoot srcPrjRef =
          JavaProjectHelper.addSourceContainer(prjRef, "srcPrj.ref"); //$NON-NLS-1$

      prjOther = JavaProjectHelper.createJavaProject("prj.other", "bin");
      assertNotNull(JavaProjectHelper.addRTJar(prjOther));
      IPackageFragmentRoot srcPrjOther =
          JavaProjectHelper.addSourceContainer(prjRef, "srcPrj.other"); //$NON-NLS-1$

      JavaProjectHelper.addRequiredProject(prjRef, prj);
      JavaProjectHelper.addRequiredProject(prjRef, prjOther);

      helperMultiProjects(
          new IPackageFragmentRoot[] {srcPrj, srcPrjRef, srcPrjOther},
          new String[][] {
            new String[] {"pack"}, new String[] {"pack", "pack.man"}, new String[] {"pack"}
          },
          "com.packt",
          new String[][][] {
            new String[][] {new String[] {"DingsDa"}},
            new String[][] {new String[] {"Referer"}, new String[] {"StarImporter"}},
            new String[][] {new String[] {"Namesake"}}
          });
    } finally {
      JavaProjectHelper.delete(prj);
      JavaProjectHelper.delete(prjRef);
      JavaProjectHelper.delete(prjOther);
    }
  }

