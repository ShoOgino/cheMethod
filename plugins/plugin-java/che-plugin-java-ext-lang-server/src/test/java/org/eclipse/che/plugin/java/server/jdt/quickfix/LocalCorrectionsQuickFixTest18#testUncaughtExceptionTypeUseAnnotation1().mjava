  @Test
  public void testUncaughtExceptionTypeUseAnnotation1() throws Exception {
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.lang.annotation.ElementType;\n");
    buf.append("import java.lang.annotation.Target;\n");
    buf.append("\n");
    buf.append("public class E {\n");
    buf.append("    void test(int a) {\n");
    buf.append("        throw new @Marker FileNotFoundException();\n");
    buf.append("    }\n");
    buf.append("}\n");
    buf.append("\n");
    buf.append("@Target(ElementType.TYPE_USE)\n");
    buf.append("@interface Marker { }\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);
    assertNumberOfProposals(proposals, 2);
    assertCorrectLabels(proposals);

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.lang.annotation.ElementType;\n");
    buf.append("import java.lang.annotation.Target;\n");
    buf.append("\n");
    buf.append("public class E {\n");
    buf.append("    void test(int a) throws @Marker FileNotFoundException {\n");
    buf.append("        throw new @Marker FileNotFoundException();\n");
    buf.append("    }\n");
    buf.append("}\n");
    buf.append("\n");
    buf.append("@Target(ElementType.TYPE_USE)\n");
    buf.append("@interface Marker { }\n");
    String expected1 = buf.toString();

    buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("import java.io.FileNotFoundException;\n");
    buf.append("import java.lang.annotation.ElementType;\n");
    buf.append("import java.lang.annotation.Target;\n");
    buf.append("\n");
    buf.append("public class E {\n");
    buf.append("    void test(int a) {\n");
    buf.append("        try {\n");
    buf.append("            throw new @Marker FileNotFoundException();\n");
    buf.append("        } catch (@Marker FileNotFoundException e) {\n");
    buf.append("        }\n");
    buf.append("    }\n");
    buf.append("}\n");
    buf.append("\n");
    buf.append("@Target(ElementType.TYPE_USE)\n");
    buf.append("@interface Marker { }\n");
    String expected2 = buf.toString();

    assertExpectedExistInProposals(proposals, new String[] {expected1, expected2});
  }

