  @Test
  public void testSuppressBug169446() throws Exception {

    IPackageFragment other = fSourceFolder.createPackageFragment("other", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package other; \n");
    buf.append("\n");
    buf.append("public @interface SuppressWarnings {\n");
    buf.append("    String value();\n");
    buf.append("}\n");
    other.createCompilationUnit("SuppressWarnings.java", buf.toString(), false, null);

    IPackageFragment pack1 = fSourceFolder.createPackageFragment("a.b", false, null);

    buf = new StringBuffer();
    buf.append("package a.b;\n");
    buf.append("\n");
    buf.append("public class E {\n");
    buf.append("    @Deprecated()\n");
    buf.append("    public void foo() {\n");
    buf.append("    }\n");
    buf.append("}\n");
    pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    buf = new StringBuffer();
    buf.append("package a.b;\n");
    buf.append("\n");
    buf.append("import other.SuppressWarnings;\n");
    buf.append("\n");
    buf.append("public class Test {\n");
    buf.append("    @SuppressWarnings(\"BC\")\n");
    buf.append("    public void foo() {\n");
    buf.append("        new E().foo();\n");
    buf.append("    }\n");
    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("Test.java", buf.toString(), false, null);

    CompilationUnit astRoot = getASTRoot(cu);
    ArrayList proposals = collectCorrections(cu, astRoot);

    assertCorrectLabels(proposals);
    assertNumberOfProposals(proposals, 1);

    String[] expected = new String[1];
    buf = new StringBuffer();
    buf.append("package a.b;\n");
    buf.append("\n");
    buf.append("import other.SuppressWarnings;\n");
    buf.append("\n");
    buf.append("public class Test {\n");
    buf.append("    @java.lang.SuppressWarnings(\"deprecation\")\n");
    buf.append("    @SuppressWarnings(\"BC\")\n");
    buf.append("    public void foo() {\n");
    buf.append("        new E().foo();\n");
    buf.append("    }\n");
    buf.append("}\n");
    expected[0] = buf.toString();

    assertExpectedExistInProposals(proposals, expected);
  }

