  @Test
  public void testTypeMismatchForParameterizedType() throws Exception {
    Map<String, String> options = fJProject1.getOptions(false);
    try {
      Map<String, String> tempOptions = new HashMap<String, String>(options);
      tempOptions.put(JavaCore.COMPILER_PB_UNCHECKED_TYPE_OPERATION, JavaCore.WARNING);
      tempOptions.put(JavaCore.COMPILER_PB_RAW_TYPE_REFERENCE, JavaCore.WARNING);
      fJProject1.setOptions(tempOptions);

      IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
      StringBuffer buf = new StringBuffer();
      buf.append("package test1;\n");
      buf.append("import java.util.*;\n");
      buf.append("public class E {\n");
      buf.append("    public void foo() {\n");
      buf.append("        List list= new ArrayList<Integer>();\n");
      buf.append("    }\n");
      buf.append("}\n");
      ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

      CompilationUnit astRoot = getASTRoot(cu);
      ArrayList proposals = collectCorrections(cu, astRoot);
      assertCorrectLabels(proposals);
      assertNumberOfProposals(proposals, 5);

      String[] expected = new String[2];

      buf = new StringBuffer();
      buf.append("package test1;\n");
      buf.append("import java.util.*;\n");
      buf.append("public class E {\n");
      buf.append("    public void foo() {\n");
      buf.append("        List<Integer> list= new ArrayList<Integer>();\n");
      buf.append("    }\n");
      buf.append("}\n");
      expected[0] = buf.toString();

      buf = new StringBuffer();
      buf.append("package test1;\n");
      buf.append("import java.util.*;\n");
      buf.append("public class E {\n");
      buf.append("    public void foo() {\n");
      buf.append("        ArrayList<Integer> list= new ArrayList<Integer>();\n");
      buf.append("    }\n");
      buf.append("}\n");
      expected[0] = buf.toString();

      assertExpectedExistInProposals(proposals, expected);

    } finally {
      fJProject1.setOptions(options);
    }
  }

