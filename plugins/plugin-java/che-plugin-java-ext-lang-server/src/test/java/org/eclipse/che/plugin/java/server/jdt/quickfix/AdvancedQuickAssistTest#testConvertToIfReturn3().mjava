  @Test
  public void testConvertToIfReturn3() throws Exception {
    // 'if' should be in a 'method' returning 'void'
    IPackageFragment pack1 = fSourceFolder.createPackageFragment("test1", false, null);
    StringBuffer buf = new StringBuffer();
    buf.append("package test1;\n");
    buf.append("public class E {\n");
    buf.append("    static {\n");
    buf.append("        if (a) {\n");
    buf.append("            System.out.println(\"1\");\n");
    buf.append("        }\n");
    buf.append("    }\n");
    buf.append("    public String foo1() {\n");
    buf.append("        if (b) {\n");
    buf.append("            System.out.println(\"1\");\n");
    buf.append("            return \"foo\"\n");
    buf.append("        }\n");
    buf.append("    }\n\n");

    buf.append("}\n");
    ICompilationUnit cu = pack1.createCompilationUnit("E.java", buf.toString(), false, null);

    String str = "if (a)"; // not in a method
    AssistContext context = getCorrectionContext(cu, buf.toString().indexOf(str) + str.length(), 0);
    List proposals = collectAssists(context, false);
    assertNumberOfProposals(proposals, 3);
    assertCorrectLabels(proposals);
    assertProposalDoesNotExist(
        proposals, CorrectionMessages.AdvancedQuickAssistProcessor_convertToIfReturn);

    str = "if (b)"; // method does not return 'void'
    context = getCorrectionContext(cu, buf.toString().indexOf(str) + str.length(), 0);
    proposals = collectAssists(context, false);
    assertNumberOfProposals(proposals, 2);
    assertCorrectLabels(proposals);
    assertProposalDoesNotExist(
        proposals, CorrectionMessages.AdvancedQuickAssistProcessor_convertToIfReturn);
  }

