    public void showAdd() {
        final Project project = appContext.getRootProject();

        checkState(project != null);

        final Resource[] resources = appContext.getResources();

        checkState(!Arrays.isNullOrEmpty(resources));

        final StatusNotification notification = new StatusNotification(constants.addStarted(resources.length), PROGRESS, FLOAT_MODE);
        notificationManager.notify(notification);

        service.add(project.getLocation(), toRelative(project, resources), null, false, true, false, false)
               .then(new Operation<CLIOutputResponse>() {
                    @Override
                    public void apply(CLIOutputResponse response) throws OperationException {
                        printResponse(response.getCommand(), response.getOutput(), response.getErrOutput(), constants.commandAdd());

                        if (response.getErrOutput() == null || response.getErrOutput().size() == 0) {
                            notification.setTitle(constants.addSuccessful());
                            notification.setStatus(SUCCESS);
                        } else {
                            notification.setTitle(constants.addWarning());
                            notification.setStatus(FAIL);
                        }
                    }
                })
                .catchError(new Operation<PromiseError>() {
                    @Override
                    public void apply(PromiseError error) throws OperationException {
                        notification.setTitle(constants.addFailed() + ": " + error.getMessage());
                        notification.setStatus(FAIL);
                    }
                });
    }

