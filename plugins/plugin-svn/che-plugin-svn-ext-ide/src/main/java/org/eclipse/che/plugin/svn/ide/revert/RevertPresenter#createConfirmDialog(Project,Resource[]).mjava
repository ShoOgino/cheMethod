    private ConfirmDialog createConfirmDialog(final Project project, final Resource[] resources) {
        final ConfirmCallback okCallback = new ConfirmCallback() {
            @Override
            public void accepted() {
                final StatusNotification notification = new StatusNotification(constants.revertStarted(), PROGRESS, FLOAT_MODE);
                notificationManager.notify(notification);

                service.revert(project.getLocation(), toRelative(project, resources), "infinity").then(new Operation<CLIOutputResponse>() {
                    @Override
                    public void apply(CLIOutputResponse response) throws OperationException {
                        List<String> errOutput = response.getErrOutput();
                        printResponse(response.getCommand(), response.getOutput(), errOutput, "svn revert");

                        if (errOutput == null || errOutput.size() == 0) {
                            notification.setTitle(constants.revertSuccessful());
                            notification.setStatus(SUCCESS);
                        } else {
                            notification.setTitle(constants.revertWarning());
                            notification.setStatus(SUCCESS);
                        }
                    }
                }).catchError(new Operation<PromiseError>() {
                    @Override
                    public void apply(PromiseError error) throws OperationException {
                        notification.setTitle(constants.revertFailed());
                        notification.setStatus(FAIL);
                    }
                });
            }
        };

        final CancelCallback cancelCallback = new CancelCallback() {
            @Override
            public void cancelled() {

            }
        };

        String pathsString = null;
        for (Resource resource : resources) {
            if (pathsString == null) {
                pathsString = resource.getLocation().toString();
            }
            else {
                pathsString += ", " + resource.getLocation().toString();
            }
        }

        String confirmText = resources.length > 0 ? constants.revertConfirmText(" to " + pathsString) : constants.revertConfirmText("");
        return dialogFactory.createConfirmDialog(constants.revertTitle(), confirmText, okCallback, cancelCallback);
    }

