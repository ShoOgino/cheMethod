    /**
     * Fetches the count of revisions and opens the popup.
     */
    public void showLog() {
        if (getActiveProject() == null) {
            return;
        }

        subversionClientService.info(getActiveProject().getRootProject().getPath(), getSelectedPaths().get(0), "HEAD", false,
                new AsyncRequestCallback<InfoResponse>(dtoUnmarshallerFactory.newUnmarshaller(InfoResponse.class)) {
                    @Override
                    protected void onSuccess(InfoResponse result) {
                        if (result.getErrorOutput() != null && !result.getErrorOutput().isEmpty()) {
                            printErrors(result.getErrorOutput(), constants.commandInfo());
                            notificationManager.notify("Unable to execute subversion command", FAIL, true);
                            return;
                        }

                        SubversionItem subversionItem = result.getItems().get(0);
                        view.setRevisionCount(subversionItem.getRevision());
                        view.rangeFiend().setValue("1:" + subversionItem.getRevision());
                        view.show();
                    }

                    @Override
                    protected void onFailure(Throwable exception) {
                        notificationManager.notify(exception.getMessage(), FAIL, true);
                    }
                });

    }

