    @Override
    public void resolve(final String projectPath,
                        final Map<String, String> resolutions,
                        final String depth,
                        final AsyncCallback<CLIOutputResponseList> callback) {
        final String url = baseHttpUrl + "/resolve";
        final ResolveRequest request = dtoFactory.createDto(ResolveRequest.class)
                                                 .withProjectPath(projectPath)
                                                 .withConflictResolutions(resolutions)
                                                 .withDepth(depth);
        asyncRequestFactory.createPostRequest(url, request).loader(loader)
                           .send(new AsyncRequestCallback<CLIOutputResponseList>(
                                   dtoUnmarshallerFactory.newUnmarshaller(CLIOutputResponseList.class)) {

                               @Override
                               protected void onSuccess(CLIOutputResponseList result) {
                                   if (result != null) {
                                       callback.onSuccess(result);
                                   } else {
                                       callback.onFailure(new Exception("resolve : no SvnResponse."));
                                   }
                               }

                               @Override
                               protected void onFailure(Throwable exception) {
                                   callback.onFailure(exception);
                               }
                           });
    }

