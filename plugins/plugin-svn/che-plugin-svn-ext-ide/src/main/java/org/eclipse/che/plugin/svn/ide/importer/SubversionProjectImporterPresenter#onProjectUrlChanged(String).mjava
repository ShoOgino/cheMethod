    /** {@inheritDoc} */
    @Override
    public void onProjectUrlChanged(final String projectUrl) {
        if (ignoreChanges) {
            return;
        }

        final String calcUrl = getUrl(projectUrl, view.getProjectRelativePath());
        dataObject.getSource().setLocation(calcUrl);

        if (isSubversionUrlCorrect(calcUrl)) {
            view.setProjectUrlErrorHighlight(false);
            view.setURLErrorMessage(null);


            if (isNullOrEmpty(view.getProjectName())) {
                final String projectName = Iterables.getLast(Splitter.on("/").omitEmptyStrings().split(projectUrl));
                if (!isNullOrEmpty(projectName)) {
                    view.setProjectName(projectName);
                    dataObject.setName(view.getProjectName());
                }
            }

        } else {
            view.setProjectUrlErrorHighlight(true);
            view.setURLErrorMessage(constants.importProjectUrlIncorrectMessage());
        }

        updateDelegate.updateControls();
    }

