        /**
         * Switch to a new {@link Widget}.
         *
         * @param oldWidget
         *         the {@link Widget} to hide
         * @param newWidget
         *         the {@link Widget} to show
         */
        public void showWidget(Widget oldWidget, Widget newWidget) {
            // Immediately complete previous animation
            cancel();

            // Get the container and index of the new widget
            Element newContainer = DOM.getParent(newWidget.getElement());
            int newIndex = DOM.getChildIndex(DOM.getParent(newContainer),
                                             newContainer);

            // If we aren't showing anything, don't bother with the animation
            if (oldWidget == null) {
                UIObject.setVisible(newContainer, true);
                newWidget.setVisible(true);
                return;
            }
            this.oldWidget = oldWidget;

            // Get the container and index of the old widget
            Element oldContainer = DOM.getParent(oldWidget.getElement());
            int oldIndex = DOM.getChildIndex(DOM.getParent(oldContainer),
                                             oldContainer);

            // Figure out whether to grow or shrink the container
            if (newIndex > oldIndex) {
                container1 = oldContainer;
                container2 = newContainer;
                growing = false;
            } else {
                container1 = newContainer;
                container2 = oldContainer;
                growing = true;
            }

            // Figure out if the deck panel has a fixed height
            com.google.gwt.dom.client.Element deckElem = container1.getParentElement();
            int deckHeight = deckElem.getOffsetHeight();
            if (growing) {
                fixedHeight = container2.getOffsetHeight();
                container2.getStyle().setPropertyPx("height", Math.max(1, fixedHeight - 1));
            } else {
                fixedHeight = container1.getOffsetHeight();
                container1.getStyle().setPropertyPx("height", Math.max(1, fixedHeight - 1));
            }
            if (deckElem.getOffsetHeight() != deckHeight) {
                fixedHeight = -1;
            }

            // Only scope to the deck if it's fixed height, otherwise it can affect
            // the rest of the page, even if it's not visible to the user.
            run(ANIMATION_DURATION, fixedHeight == -1 ? null : deckElem);


            // We call newWidget.setVisible(true) immediately after showing the
            // widget's container so users can delay render their widget. Ultimately,
            // we should have a better way of handling this, but we need to call
            // setVisible for legacy support.
            newWidget.setVisible(true);
        }

