    /**
     * Creates an instance of this presenter.
     */
    @Inject
    protected ShowLogPresenter(AppContext appContext,
                               SubversionOutputConsoleFactory consoleFactory,
                               AskCredentialsDialog subversionCredentialsDialog,
                               ProcessesPanelPresenter processesPanelPresenter,
                               SubversionClientService service,
                               NotificationManager notificationManager,
                               SubversionExtensionLocalizationConstants constants,
                               ShowLogsView view,
                               StatusColors statusColors) {
        super(appContext, consoleFactory, processesPanelPresenter, statusColors, constants, notificationManager, subversionCredentialsDialog);
        this.service = service;
        this.notificationManager = notificationManager;
        this.constants = constants;
        this.view = view;

        view.setDelegate(new ShowLogsView.Delegate() {
            @Override
            public void logClicked() {
                String range = ShowLogPresenter.this.view.rangeField().getValue();
                if (range != null && !range.trim().isEmpty()) {
                    ShowLogPresenter.this.view.hide();
                    showLogs(range);
                }
            }

            @Override
            public void cancelClicked() {
                ShowLogPresenter.this.view.hide();
            }
        });
    }

