    private Node getChangedItemDiffLink(final StatusItem item) {

      Button showDiff = new Button();
      showDiff.setText("Diff");

      TableCellElement htmlNode = Elements.createTDElement();
      htmlNode.appendChild((Element) showDiff.getElement());
      htmlNode.setWidth("1px");

      if (!(item.getFileState() == StatusItem.FileState.MODIFIED
          || item.getFileState() == StatusItem.FileState.DELETED
          || item.getFileState() == StatusItem.FileState.CONFLICTED)) {
        showDiff.setEnabled(false);

        Tooltip.create(
            (Element) showDiff.getElement(),
            PositionController.VerticalAlign.MIDDLE,
            PositionController.HorizontalAlign.LEFT,
            locale.commitDiffUnavailable());
      }

      MouseGestureListener.createAndAttach(
          (Element) showDiff.getElement(),
          new MouseGestureListener.Callback() {
            /** {@inheritDoc} */
            @Override
            public boolean onClick(int clickCount, MouseEvent event) {
              delegate.showDiff(item.getPath());
              return false;
            }

            /** {@inheritDoc} */
            @Override
            public void onDrag(MouseEvent event) {
              // stub
            }

            /** {@inheritDoc} */
            @Override
            public void onDragRelease(MouseEvent event) {
              // stub
            }
          });

      return htmlNode;
    }

