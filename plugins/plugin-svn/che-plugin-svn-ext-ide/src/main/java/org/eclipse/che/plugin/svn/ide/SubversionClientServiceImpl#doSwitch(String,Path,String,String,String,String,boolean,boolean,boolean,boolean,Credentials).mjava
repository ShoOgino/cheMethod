  @Override
  public Promise<CLIOutputWithRevisionResponse> doSwitch(
      String location,
      Path project,
      String revision,
      String depth,
      String setDepth,
      String accept,
      boolean ignoreExternals,
      boolean ignoreAncestry,
      boolean relocate,
      boolean force,
      @Nullable Credentials credentials) {
    SwitchRequest request =
        dtoFactory
            .createDto(SwitchRequest.class)
            .withLocation(location)
            .withProjectPath(project.toString())
            .withDepth(depth)
            .withSetDepth(setDepth)
            .withRelocate(relocate)
            .withIgnoreExternals(ignoreExternals)
            .withIgnoreAncestry(ignoreAncestry)
            .withRevision(revision)
            .withAccept(accept)
            .withForce(force);

    if (credentials != null) {
      request.setUsername(credentials.getUsername());
      request.setPassword(credentials.getPassword());
    }

    return asyncRequestFactory
        .createPostRequest(getBaseUrl() + "/switch", request)
        .loader(loader)
        .send(dtoUnmarshallerFactory.newUnmarshaller(CLIOutputWithRevisionResponse.class));
  }

