    /**
     * Fetches and displays commit log messages for specified range.
     *
     * @param range range to be logged
     */
    private void showLogs(String range) {
        subversionClientService.showLog(getActiveProject().getRootProject().getPath(), getSelectedPaths(), range,
                new AsyncRequestCallback<CLIOutputResponse>(dtoUnmarshallerFactory.newUnmarshaller(CLIOutputResponse.class)) {
                    @Override
                    protected void onSuccess(CLIOutputResponse result) {
                        printResponse(result.getCommand(), result.getOutput(), null, constants.commandLog());
                    }

                    @Override
                    protected void onFailure(Throwable exception) {
                        notificationManager.notify(exception.getMessage(), FAIL, FLOAT_MODE);
                    }
                });
    }

