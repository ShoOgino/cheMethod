    private void loadSelectionChanges() {
        Unmarshallable<CLIOutputResponse> unmarshaller = dtoUnmarshallerFactory.newUnmarshaller(CLIOutputResponse.class);
        subversionService.status(getCurrentProjectPath(), getSelectedPaths(), null, false, false, false, true, false, null,
                                 new AsyncRequestCallback<CLIOutputResponse>(unmarshaller) {
                                     @Override
                                     protected void onSuccess(CLIOutputResponse response) {
                                         List<StatusItem> statusItems = parseChangesList(response);
                                         view.setChangesList(statusItems);

                                         cache.put(Changes.SELECTION, statusItems);
                                     }

                                     @Override
                                     protected void onFailure(Throwable exception) {
                                         Log.error(CommitPresenter.class, exception);
                                     }
                                 });
    }

