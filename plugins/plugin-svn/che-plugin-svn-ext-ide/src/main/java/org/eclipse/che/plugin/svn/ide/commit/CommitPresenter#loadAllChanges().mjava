  private void loadAllChanges() {
    final Project project = appContext.getRootProject();

    checkState(project != null);

    service
        .status(project.getLocation(), new Path[0], null, false, false, false, true, false, null)
        .then(
            new Operation<CLIOutputResponse>() {
              @Override
              public void apply(CLIOutputResponse response) throws OperationException {
                List<StatusItem> statusItems = parseChangesList(response);
                view.setChangesList(statusItems);
                view.onShow();

                cache.put(Changes.ALL, statusItems);
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError error) throws OperationException {
                Log.error(CommitPresenter.class, error.getMessage());
              }
            });
  }

