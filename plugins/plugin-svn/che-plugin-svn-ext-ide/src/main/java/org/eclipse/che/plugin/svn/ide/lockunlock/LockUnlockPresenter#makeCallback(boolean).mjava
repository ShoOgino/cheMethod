    private AsyncRequestCallback<CLIOutputResponse> makeCallback(final boolean lock) {
        final Unmarshallable<CLIOutputResponse> unmarshaller = this.dtoUnmarshallerFactory.newUnmarshaller(CLIOutputResponse.class);
        return new AsyncRequestCallback<CLIOutputResponse>(unmarshaller) {
            @Override
            protected void onSuccess(final CLIOutputResponse result) {
                final List<String> commandList = new ArrayList<>();
                commandList.add(result.getCommand());
                print(commandList);
                print(result.getOutput());
                printAndSpace(result.getErrOutput());
            }
            @Override
            protected void onFailure(final Throwable exception) {
                handleError(exception);
            }
        };
    }

