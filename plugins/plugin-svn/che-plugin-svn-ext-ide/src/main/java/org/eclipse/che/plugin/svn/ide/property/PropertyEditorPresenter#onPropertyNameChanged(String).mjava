  @Override
  public void onPropertyNameChanged(String propertyName) {
    final Project project = appContext.getRootProject();

    checkState(project != null);

    final Resource[] resources = appContext.getResources();

    checkState(!Arrays.isNullOrEmpty(resources));
    checkState(resources.length == 1);

    service
        .propertyGet(project.getLocation(), propertyName, toRelative(project, resources[0]))
        .then(
            new Operation<CLIOutputResponse>() {
              @Override
              public void apply(CLIOutputResponse response) throws OperationException {
                view.setPropertyCurrentValue(response.getOutput());
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError error) throws OperationException {
                notificationManager.notify(error.getMessage(), FAIL, FLOAT_MODE);
              }
            });
  }

