    @Override
    public void obtainExistingPropertiesForPath() {
        final String projectPath = getCurrentProjectPath();

        if (projectPath == null) {
            return;
        }

        String headPath = getSelectedPaths().get(0);

        Unmarshallable<CLIOutputResponse> unmarshaller = dtoUnmarshallerFactory.newUnmarshaller(CLIOutputResponse.class);
        service.propertyList(projectPath, headPath, new AsyncRequestCallback<CLIOutputResponse>(unmarshaller) {
            @Override
            protected void onSuccess(CLIOutputResponse result) {
                List<String> properties = new ArrayList<String>();
                for (String property : result.getOutput()) {
                    properties.add(property.trim());
                }
                view.setExistingPropertiesForPath(properties);
            }

            @Override
            protected void onFailure(Throwable exception) {
                notificationManager.notify(notificationManager.notify(exception.getMessage(), FAIL, FLOAT_MODE));
            }
        });
    }

