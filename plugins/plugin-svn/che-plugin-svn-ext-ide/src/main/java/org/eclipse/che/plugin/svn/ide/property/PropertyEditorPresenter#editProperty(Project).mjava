    private void editProperty(Project project) {
        final String propertyName = view.getSelectedProperty();
        final Depth depth = view.getDepth();
        final String propertyValue = view.getPropertyValue();
        final boolean force = view.isForceSelected();

        final Resource[] resources = appContext.getResources();

        checkState(!Arrays.isNullOrEmpty(resources));
        checkState(resources.length == 1);

        final StatusNotification notification = new StatusNotification(constants.propertyModifyStart(), PROGRESS, FLOAT_MODE);
        notificationManager.notify(notification);

        service.propertySet(project.getLocation(), propertyName, propertyValue, depth, force, toRelative(project, resources[0]))
                .then(new Operation<CLIOutputResponse>() {
                    @Override
                    public void apply(CLIOutputResponse response) throws OperationException {
                        printResponse(response.getCommand(), response.getOutput(), response.getErrOutput(), constants.commandProperty());

                        notification.setTitle(constants.propertyModifyFinished());
                        notification.setStatus(SUCCESS);
                    }
                })
                .catchError(new Operation<PromiseError>() {
                    @Override
                    public void apply(PromiseError error) throws OperationException {
                        notification.setTitle(constants.propertyModifyFailed());
                        notification.setStatus(FAIL);
                    }
                });
    }

