    public void fetchConflictsList(boolean forCurrentSelection, final AsyncCallback<List<String>> callback) {
        CurrentProject currentProject = getActiveProject();
        if (currentProject == null) {
            return;
        }

        ProjectConfigDto project = currentProject.getRootProject();
        if (project == null) {
            return;
        }

        subversionClientService.showConflicts(project.getPath(),
                                              forCurrentSelection ? getSelectedPaths() : null,
                                              new AsyncCallback<List<String>>() {
                                                  @Override
                                                  public void onSuccess(List<String> conflictsList) {
                                                      callback.onSuccess(conflictsList);
                                                  }

                                                  @Override
                                                  public void onFailure(Throwable exception) {
                                                      notificationManager.notify(exception.getMessage(), FAIL, true);
                                                  }
                                              });
    }

