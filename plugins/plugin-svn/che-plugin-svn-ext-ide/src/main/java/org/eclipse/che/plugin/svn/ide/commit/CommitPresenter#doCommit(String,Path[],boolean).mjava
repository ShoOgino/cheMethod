  private void doCommit(String message, Path[] paths, boolean keepLocks) {
    final Project project = appContext.getRootProject();

    checkState(project != null);

    service
        .commit(project.getLocation(), paths, message, false, keepLocks)
        .then(
            new Operation<CLIOutputWithRevisionResponse>() {
              @Override
              public void apply(CLIOutputWithRevisionResponse response) throws OperationException {
                printResponse(
                    response.getCommand(),
                    response.getOutput(),
                    response.getErrOutput(),
                    constants.commandCommit());
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError error) throws OperationException {
                final StatusNotification notification =
                    new StatusNotification(error.getMessage(), FAIL, FLOAT_MODE);
                notificationManager.notify(notification);
              }
            });

    view.onClose();
  }

