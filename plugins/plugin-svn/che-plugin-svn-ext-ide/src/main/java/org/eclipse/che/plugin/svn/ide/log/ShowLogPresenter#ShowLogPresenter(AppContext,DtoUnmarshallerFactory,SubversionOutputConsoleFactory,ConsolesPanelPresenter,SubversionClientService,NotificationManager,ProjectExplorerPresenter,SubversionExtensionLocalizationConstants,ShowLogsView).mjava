    /**
     * Creates an instance of this presenter.
     */
    @Inject
    protected ShowLogPresenter(final AppContext appContext,
                               final DtoUnmarshallerFactory dtoUnmarshallerFactory,
                               final SubversionOutputConsoleFactory consoleFactory,
                               final ConsolesPanelPresenter consolesPanelPresenter,
                               final SubversionClientService subversionClientService,
                               final NotificationManager notificationManager,
                               final ProjectExplorerPresenter projectExplorerPart,
                               final SubversionExtensionLocalizationConstants constants,
                               final ShowLogsView view) {
        super(appContext, consoleFactory, consolesPanelPresenter, projectExplorerPart);

        this.dtoUnmarshallerFactory = dtoUnmarshallerFactory;
        this.subversionClientService = subversionClientService;
        this.notificationManager = notificationManager;
        this.constants = constants;
        this.view = view;

        view.setDelegate(new ShowLogsView.Delegate() {
            @Override
            public void logClicked() {
                String range = view.rangeFiend().getValue();
                if (range != null && !range.trim().isEmpty()) {
                    view.hide();
                    showLogs(range);
                }
            }

            @Override
            public void cancelClicked() {
                view.hide();
            }
        });
    }

