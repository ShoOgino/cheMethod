    /**
     * Perform an "svn add" based on the request.
     *
     * @param request
     *         the request
     * @return the response
     * @throws IOException
     *         if there is a problem executing the command
     * @throws SubversionException
     *         if there is a Subversion issue
     */
    public CLIOutputResponse add(final AddRequest request) throws IOException, SubversionException, UnauthorizedException {
        final File projectPath = new File(request.getProjectPath());

        final List<String> args = defaultArgs();

        // Flags
        addFlag(args, "--no-ignore", request.isAddIgnored());
        addFlag(args, "--parents", request.isAddParents());

        if (request.isAutoProps()) {
            args.add("--auto-props");
        }

        if (request.isNotAutoProps()) {
            args.add("--no-auto-props");
        }

        // Options
        addOption(args, "--depth", request.getDepth());

        // Command Name
        args.add("add");

        // Command Arguments

        final CommandLineResult result = runCommand(null, args, projectPath, request.getPaths());

        return DtoFactory.getInstance()
                         .createDto(CLIOutputResponse.class)
                         .withCommand(result.getCommandLine().toString())
                         .withOutput(result.getStdout())
                         .withErrOutput(result.getStderr());
    }

