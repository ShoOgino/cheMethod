    private CommandLineResult runCommand(final Map<String, String> env, final List<String> args, final File projectPath,
                                         final List<String> paths, final String[] credentials) throws IOException, SubversionException {
        final List<String> lines = new ArrayList<>();
        final CommandLineResult result;
        final StringBuffer buffer;
        boolean isWarning = false;

        // Add paths to the end of the list of arguments
        for (final String path : paths) {
            args.add(path);
        }

        String[] credentialsArgs;
        if (credentials != null && credentials.length == 2) {
            credentialsArgs = new String[]{"--username", credentials[0], "--password", credentials[1]};
        } else {
            credentialsArgs = null;
        }

        result = UpstreamUtils.executeCommandLine(env, "svn", args.toArray(new String[args.size()]),
                                                  credentialsArgs, -1, projectPath, svnOutputPublisherFactory);

        if (result.getExitCode() != 0) {
            buffer = new StringBuffer();

            lines.addAll(result.getStdout());
            lines.addAll(result.getStderr());

            for (final String line : lines) {
                // Subversion returns an error code of 1 even when the "error" is just a warning
                if (line.startsWith("svn: warning: ")) {
                    isWarning = true;
                }

                buffer.append(line);
                buffer.append("\n");
            }

            if (!isWarning) {
                throw new SubversionException(buffer.toString());
            }
        }

        return result;
    }

