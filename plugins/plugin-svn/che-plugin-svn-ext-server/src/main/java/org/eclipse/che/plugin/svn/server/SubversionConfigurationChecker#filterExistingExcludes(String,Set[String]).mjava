  private Iterable<String> filterExistingExcludes(
      String configLine, final Set<String> defaultExcludes) {
    if (!configLine.contains("=")) {
      throw new IllegalStateException("Wrong configuration parameter");
    }

    final String values = configLine.substring(configLine.indexOf('=') + 1).trim();
    if (values.isEmpty()) {
      return defaultExcludes;
    }

    return Iterables.filter(
        defaultExcludes,
        new Predicate<String>() {
          @Override
          public boolean apply(String defValue) {
            List<String> existValues = Splitter.on(' ').splitToList(values);
            return !existValues.contains(defValue);
          }
        });
  }

