  /**
   * Perform an "svn propset" based on the request.
   *
   * @param request the request
   * @return the response
   * @throws IOException if there is a problem executing the command
   * @throws ServerException if there is a Subversion issue
   */
  public CLIOutputResponse propset(final PropertySetRequest request)
      throws IOException, ServerException, UnauthorizedException {
    final File projectPath = new File(request.getProjectPath());

    final List<String> uArgs = defaultArgs();

    if (request.isForce()) {
      uArgs.add("--force");
    }

    addDepth(uArgs, request.getDepth().getValue());

    uArgs.add("propset");
    uArgs.add(request.getName());

    String value = request.getValue();
    Path valueFile = null;
    if (value.contains("\n")) {
      try {
        valueFile = java.nio.file.Files.createTempFile("svn-propset-value-", null);
        java.nio.file.Files.write(valueFile, value.getBytes());
        uArgs.add("-F");
        uArgs.add(valueFile.toString());
      } catch (IOException e) {
        uArgs.add(value);
      }
    } else {
      uArgs.add(value);
    }

    final CommandLineResult result =
        runCommand(null, uArgs, projectPath, Arrays.asList(request.getPath()));

    return DtoFactory.getInstance()
        .createDto(CLIOutputResponse.class)
        .withCommand(result.getCommandLine().toString())
        .withOutput(result.getStdout())
        .withErrOutput(result.getStderr());
  }

