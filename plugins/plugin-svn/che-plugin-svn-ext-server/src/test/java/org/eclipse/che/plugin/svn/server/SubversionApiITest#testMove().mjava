    /**
     * Tests for {@link SubversionApi#move(MoveRequest)}.
     *
     * @throws Exception
     *         if anything goes wrong
     */
    @Test
    public void testMove() throws Exception {
        this.subversionApi.checkout(DtoFactory.getInstance()
                                              .createDto(CheckoutRequest.class)
                                              .withProjectPath(tmpAbsolutePath)
                                              .withUrl(repoUrl));

        CLIOutputResponse response = this.subversionApi.move(DtoFactory.getInstance()
                                                                       .createDto(MoveRequest.class)
                                                                       .withProjectPath(tmpAbsolutePath)
                                                                       .withSource(Collections.singletonList("trunk/A/B/lambda"))
                                                                       .withDestination("trunk/A/B/E/lambda"));
        assertEquals(response.getOutput().size(), 2);
        assertTrue(response.getErrOutput().isEmpty());

        String expectedPath1 = "trunk" + File.separator + "A" + File.separator + "B" + File.separator + "E" + File.separator + "lambda";
        assertEquals(response.getOutput().get(0), "A         " + expectedPath1);

        String expectedPath2 = "trunk" + File.separator + "A" + File.separator + "B" + File.separator + "lambda";
        assertEquals(response.getOutput().get(1), "D         " + expectedPath2);
    }

