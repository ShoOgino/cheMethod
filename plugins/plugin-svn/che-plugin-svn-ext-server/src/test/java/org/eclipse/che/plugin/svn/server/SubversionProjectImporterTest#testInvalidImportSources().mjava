    /**
     * Test for {@link SubversionProjectImporter#importSources(org.eclipse.che.api.project.server.FolderEntry, org.eclipse.che.api.core.model.project.SourceStorage, org.eclipse.che.api.core.util.LineConsumerFactory)}
     * invalid url.
     *
     * @throws Exception if anything goes wrong
     */
    @Test
    public void testInvalidImportSources() throws Exception {
        final String projectName = NameGenerator.generate("project-", 3);
        final VirtualFile virtualFile = root.createFolder(projectName);//root.getChild(org.eclipse.che.api.vfs.Path.of(projectName));
        FolderEntry projectFolder = new FolderEntry(virtualFile);
        try {
            String fakeUrl = Paths.get(repoRoot.getAbsolutePath()).toUri() + "fake";
            when(sourceStorage.getLocation()).thenReturn(fakeUrl);
            projectImporter.importSources(projectFolder, sourceStorage, new TestUtils.SystemOutLineConsumerFactory());

            fail("The code above should had failed");
        } catch (SubversionException e) {
            final String message = e.getMessage();

            boolean assertBoolean = Pattern.matches("svn: (E[0-9]{6}: )?URL 'file://.*/fake' doesn't exist\n?", message.trim());
            assertTrue(message, assertBoolean);
        }
    }

