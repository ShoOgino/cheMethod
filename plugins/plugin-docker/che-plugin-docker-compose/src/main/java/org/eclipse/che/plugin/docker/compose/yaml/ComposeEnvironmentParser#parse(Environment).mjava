    /**
     * Parses compose file from {@link Environment} into {@link CheServicesEnvironmentImpl}.
     *
     * @param environment
     *         environment with {@link EnvironmentRecipe} to parse.
     *         {@link EnvironmentRecipe} contains {@link CheServicesEnvironmentImpl} definition.
     * @throws IllegalArgumentException
     *         when environment or environment recipe is invalid
     * @throws ServerException
     *         when environment recipe can not be retrieved
     */
    @Override
    public CheServicesEnvironmentImpl parse(Environment environment) throws ServerException {
        requireNonNull(environment, "Environment should not be null");
        EnvironmentRecipe recipe = environment.getRecipe();
        requireNonNull(environment.getRecipe(), "Environment recipe should not be null");

        String content = getContentOfRecipe(recipe);
        ComposeEnvironment composeEnvironment = parse(content, recipe.getContentType());
        return asCheEnvironment(composeEnvironment);
    }

