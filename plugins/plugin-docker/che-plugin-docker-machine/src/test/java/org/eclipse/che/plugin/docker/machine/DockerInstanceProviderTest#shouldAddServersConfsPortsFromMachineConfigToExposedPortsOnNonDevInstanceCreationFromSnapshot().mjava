    @Test
    public void shouldAddServersConfsPortsFromMachineConfigToExposedPortsOnNonDevInstanceCreationFromSnapshot() throws Exception {
        // given
        List<String> expectedExposedPorts = new ArrayList<>();
        final List<ServerConf> serversFromConf = asList(new ServerConfImpl("reference1", "8080", "http", null),
                                                        new ServerConfImpl("reference2", "8081", "ftp", null));
        expectedExposedPorts.addAll(serversFromConf.stream()
                                                   .map(ServerConf::getPort)
                                                   .collect(Collectors.toList()));

        dockerInstanceProvider = new DockerInstanceProvider(dockerConnector,
                                                            dockerConnectorConfiguration,
                                                            credentialsReader,
                                                            dockerMachineFactory,
                                                            dockerInstanceStopDetector,
                                                            containerNameGenerator,
                                                            recipeRetriever,
                                                            Collections.emptySet(),
                                                            Collections.emptySet(),
                                                            Collections.emptySet(),
                                                            Collections.emptySet(),
                                                            null,
                                                            workspaceFolderPathProvider,
                                                            PROJECT_FOLDER_PATH,
                                                            false,
                                                            false,
                                                            Collections.emptySet(),
                                                            Collections.emptySet(),
                                                            SNAPSHOT_USE_REGISTRY,
                                                            MEMORY_SWAP_MULTIPLIER);

        final boolean isDev = false;

        // when
        createInstanceFromSnapshot(getMachineBuilder().setConfig(getMachineConfigBuilder().setDev(isDev)
                                                                                          .setServers(serversFromConf)
                                                                                          .build())
                                                      .build());

        // then
        ArgumentCaptor<CreateContainerParams> argumentCaptor = ArgumentCaptor.forClass(CreateContainerParams.class);
        verify(dockerConnector).createContainer(argumentCaptor.capture());

        assertTrue(new ArrayList<>(argumentCaptor.getValue().getContainerConfig().getExposedPorts().keySet())
                                  .containsAll(expectedExposedPorts));
    }

