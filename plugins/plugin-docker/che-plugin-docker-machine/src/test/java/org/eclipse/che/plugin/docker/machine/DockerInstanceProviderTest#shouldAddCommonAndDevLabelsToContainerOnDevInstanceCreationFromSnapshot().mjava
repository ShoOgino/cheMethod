    @Test
    public void shouldAddCommonAndDevLabelsToContainerOnDevInstanceCreationFromSnapshot() throws Exception {
        final Map<String, String> expectedLabels = new HashMap<>();
        final Set<ServerConf> commonServers = new HashSet<>(asList(new ServerConf("reference1", "8080", "http"),
                                                                   new ServerConf("reference2", "8081", "ftp")));
        for (ServerConf server : commonServers) {
            expectedLabels.put("che:server:" + server.getPort() + ":ref", server.getRef());
            expectedLabels.put("che:server:" + server.getPort() + ":protocol", server.getProtocol());
        }

        final Set<ServerConf> devServers = new HashSet<>(asList(new ServerConf("reference3", "8082", "https"),
                                                                new ServerConf("reference4", "8083", "sftp")));
        for (ServerConf server : devServers) {
            expectedLabels.put("che:server:" + server.getPort() + ":ref", server.getRef());
            expectedLabels.put("che:server:" + server.getPort() + ":protocol", server.getProtocol());
        }

        dockerInstanceProvider = new DockerInstanceProvider(dockerConnector,
                                                            dockerConnectorConfiguration,
                                                            dockerMachineFactory,
                                                            dockerInstanceStopDetector,
                                                            devServers,
                                                            commonServers,
                                                            Collections.emptySet(),
                                                            Collections.emptySet(),
                                                            null,
                                                            workspaceFolderPathProvider,
                                                            PROJECT_FOLDER_PATH,
                                                            false,
                                                            Collections.emptySet(),
                                                            Collections.emptySet());

        final boolean isDev = true;


        createInstanceFromSnapshot(isDev);


        ArgumentCaptor<ContainerConfig> argumentCaptor = ArgumentCaptor.forClass(ContainerConfig.class);
        verify(dockerConnector).createContainer(argumentCaptor.capture(), anyString());
        assertEquals(argumentCaptor.getValue().getLabels(), expectedLabels);
    }

