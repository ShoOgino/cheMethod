    @Test
    public void shouldAddPathCorrectlyWithoutLeadingSlash() throws Exception {
        // given
        Map<String, List<PortBinding>> ports = getPorts();
        when(networkSettings.getPorts()).thenReturn(ports);

        serverConfs.put("8080",     new ServerConfImpl("myserv1", "8080", "http", "some"));
        serverConfs.put("9090/udp", new ServerConfImpl("myserv1-tftp", "9090/udp", "tftp", "some/path"));

        final HashMap<String, ServerImpl> expectedServers = new HashMap<>();
        expectedServers.put("8080/tcp", new ServerImpl("myserv1",
                                                       "http",
                                                       CONTAINERINFO_GATEWAY + ":32100",
                                                       "http://" + CONTAINERINFO_GATEWAY + ":32100/some",
                                                       new ServerPropertiesImpl("some",
                                                                                CONTAINERINFO_GATEWAY + ":32100",
                                                                                "http://" + CONTAINERINFO_GATEWAY + ":32100/some")));
        expectedServers.put("9090/udp", new ServerImpl("myserv1-tftp",
                                                       "tftp",
                                                       CONTAINERINFO_GATEWAY  + ":32101",
                                                       "tftp://" + CONTAINERINFO_GATEWAY  + ":32101/some/path",
                                                       new ServerPropertiesImpl("some/path",
                                                                                CONTAINERINFO_GATEWAY  + ":32101",
                                                                                "tftp://" + CONTAINERINFO_GATEWAY  + ":32101/some/path")));

        // when
        final Map<String, ServerImpl> servers = strategy.getServers(containerInfo, DEFAULT_HOSTNAME, serverConfs);

        // then
        assertEquals(servers, expectedServers);
    }

