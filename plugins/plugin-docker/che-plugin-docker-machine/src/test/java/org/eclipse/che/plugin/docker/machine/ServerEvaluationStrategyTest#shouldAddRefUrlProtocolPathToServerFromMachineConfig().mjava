    @Test
    public void shouldAddRefUrlProtocolPathToServerFromMachineConfig() throws Exception {
        // given
        Map<String, List<PortBinding>> ports = getPorts();
        when(networkSettings.getPorts()).thenReturn(ports);

        serverConfs.put("8080/tcp", new ServerConfImpl("myserv1", "8080/tcp", "http", null));
        serverConfs.put("9090/udp", new ServerConfImpl("myserv2", "9090/udp", "dhcp", "/some/path"));

        final HashMap<String, ServerImpl> expectedServers = new HashMap<>();
        expectedServers.put("8080/tcp", new ServerImpl("myserv1",
                                                       "http",
                                                       CONTAINERINFO_GATEWAY  + ":32100",
                                                       "http://" + CONTAINERINFO_GATEWAY  + ":32100",
                                                        new ServerPropertiesImpl(null,
                                                                                 CONTAINERINFO_GATEWAY  + ":32100",
                                                                                 "http://" + CONTAINERINFO_GATEWAY  + ":32100")));
        expectedServers.put("9090/udp", new ServerImpl("myserv2",
                                                       "dhcp",
                                                       CONTAINERINFO_GATEWAY  + ":32101",
                                                       "dhcp://" + CONTAINERINFO_GATEWAY  + ":32101/some/path",
                                                       new ServerPropertiesImpl("/some/path",
                                                                                CONTAINERINFO_GATEWAY  + ":32101",
                                                                                "dhcp://" + CONTAINERINFO_GATEWAY  + ":32101/some/path")));

        // when
        final Map<String, ServerImpl> servers = strategy.getServers(containerInfo, DEFAULT_HOSTNAME, serverConfs);

        // then
        assertEquals(servers, expectedServers);
    }

