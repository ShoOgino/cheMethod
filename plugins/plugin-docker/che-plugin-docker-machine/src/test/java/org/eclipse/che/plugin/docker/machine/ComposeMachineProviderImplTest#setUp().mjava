    @BeforeMethod
    public void setUp() throws Exception {
        when(dockerConnectorConfiguration.getDockerHostIp()).thenReturn("123.123.123.123");

        provider = spy(new ComposeMachineProviderImpl(dockerConnector,
                                                      dockerConnectorConfiguration,
                                                      credentialsReader,
                                                      dockerMachineFactory,
                                                      dockerInstanceStopDetector,
                                                      containerNameGenerator,
                                                      Collections.emptySet(),
                                                      Collections.emptySet(),
                                                      Collections.emptySet(),
                                                      Collections.emptySet(),
                                                      null,
                                                      workspaceFolderPathProvider,
                                                      PROJECT_FOLDER_PATH,
                                                      false,
                                                      false,
                                                      Collections.emptySet(),
                                                      Collections.emptySet(),
                                                      SNAPSHOT_USE_REGISTRY,
                                                      MEMORY_SWAP_MULTIPLIER));

        EnvironmentContext envCont = new EnvironmentContext();
        envCont.setSubject(new SubjectImpl(USER_NAME, "userId", USER_TOKEN, false));
        EnvironmentContext.setCurrent(envCont);


        when(recipeRetriever.getRecipe(any(MachineConfig.class)))
                .thenReturn(new RecipeImpl().withType(DOCKER_FILE_TYPE).withScript("FROM codenvy"));

        when(dockerMachineFactory.createNode(anyString(), anyString())).thenReturn(dockerNode);
        when(dockerConnector.createContainer(any(CreateContainerParams.class)))
                .thenReturn(new ContainerCreated(CONTAINER_ID, new String[0]));
        when(dockerConnector.inspectContainer(any(InspectContainerParams.class))).thenReturn(containerInfo);
        when(containerInfo.getState()).thenReturn(containerState);
        when(containerState.isRunning()).thenReturn(false);
    }

