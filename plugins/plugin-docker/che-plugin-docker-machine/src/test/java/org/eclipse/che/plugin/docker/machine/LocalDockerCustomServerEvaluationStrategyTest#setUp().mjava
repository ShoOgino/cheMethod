  @BeforeMethod
  public void setUp() {

    serverConfs = new HashMap<>();
    serverConfs.put(
        "4301/tcp", new ServerConfImpl("sysServer1-tcp", "4301/tcp", "http", "/some/path1"));
    serverConfs.put(
        "4305/udp", new ServerConfImpl("devSysServer1-udp", "4305/udp", null, "some/path4"));

    ports = new HashMap<>();
    ports.put(
        "4301/tcp",
        Collections.singletonList(
            new PortBinding().withHostIp(ALL_IP_ADDRESS).withHostPort("32100")));
    ports.put(
        "4305/udp",
        Collections.singletonList(
            new PortBinding().withHostIp(ALL_IP_ADDRESS).withHostPort("32103")));

    labels = new HashMap<>();
    labels.put("che:server:4301/tcp:ref", "sysServer1-tcp");
    labels.put("che:server:4305/udp:ref", "devSysServer1-udp");

    env = new String[] {"CHE_WORKSPACE_ID=" + WORKSPACE_ID};

    when(containerInfo.getNetworkSettings()).thenReturn(networkSettings);
    when(networkSettings.getIpAddress()).thenReturn(CONTAINERCONFIG_HOSTNAME);
    when(networkSettings.getPorts()).thenReturn(ports);
    when(containerInfo.getConfig()).thenReturn(containerConfig);
    when(containerConfig.getHostname()).thenReturn(CONTAINERCONFIG_HOSTNAME);
    when(containerConfig.getEnv()).thenReturn(env);
    when(containerConfig.getLabels()).thenReturn(labels);

    envContainerConfig =
        new String[] {WORKSPACE_ID_PROPERTY, MACHINE_NAME_PROPERTY, IS_DEV_MACHINE_PROPERTY};
    when(containerConfig.getEnv()).thenReturn(envContainerConfig);
  }

