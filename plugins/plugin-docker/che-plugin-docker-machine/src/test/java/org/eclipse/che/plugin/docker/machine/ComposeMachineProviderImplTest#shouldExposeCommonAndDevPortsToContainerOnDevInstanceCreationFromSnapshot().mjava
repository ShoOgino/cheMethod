    @Test
    public void shouldExposeCommonAndDevPortsToContainerOnDevInstanceCreationFromSnapshot() throws Exception {
        List<String> expectedExposedPorts = new ArrayList<>();
        final Set<ServerConf> commonServers =
                new HashSet<>(asList(new ServerConfImpl("reference1", "8080", "http", null),
                                     new ServerConfImpl("reference2", "8081", "ftp", null)));
        expectedExposedPorts.addAll(commonServers.stream()
                                                 .map(ServerConf::getPort)
                                                 .collect(Collectors.toList()));

        final Set<ServerConf> devServers = new HashSet<>(asList(new ServerConfImpl("reference3", "8082", "https", null),
                                                                new ServerConfImpl("reference4", "8083", "sftp",
                                                                                   null)));
        expectedExposedPorts.addAll(devServers.stream()
                                              .map(ServerConf::getPort)
                                              .collect(Collectors.toList()));

        provider = new ComposeMachineProviderImpl(dockerConnector,
                                                  dockerConnectorConfiguration,
                                                  credentialsReader,
                                                  dockerMachineFactory,
                                                  dockerInstanceStopDetector,
                                                  containerNameGenerator,
                                                  devServers,
                                                  commonServers,
                                                  Collections.emptySet(),
                                                  Collections.emptySet(),
                                                  null,
                                                  workspaceFolderPathProvider,
                                                  PROJECT_FOLDER_PATH,
                                                  false,
                                                  false,
                                                  Collections.emptySet(),
                                                  Collections.emptySet(),
                                                  SNAPSHOT_USE_REGISTRY,
                                                  MEMORY_SWAP_MULTIPLIER,
                                                  emptySet());

        final boolean isDev = true;


        createInstanceFromSnapshot(isDev);


        ArgumentCaptor<CreateContainerParams> argumentCaptor = ArgumentCaptor.forClass(CreateContainerParams.class);
        verify(dockerConnector).createContainer(argumentCaptor.capture());

        assertTrue(new ArrayList<>(argumentCaptor.getValue()
                                                 .getContainerConfig()
                                                 .getExposedPorts()
                                                 .keySet())
                           .containsAll(expectedExposedPorts));
    }

