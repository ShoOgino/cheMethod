  @BeforeMethod
  protected void setup() throws Exception {
    containerLabels = new HashMap<>();
    containerExposedPorts = new HashMap<>();
    networkExposedPorts = new HashMap<>();
    when(containerInfo.getConfig()).thenReturn(containerConfig);
    when(containerConfig.getLabels()).thenReturn(containerLabels);
    when(containerConfig.getExposedPorts()).thenReturn(containerExposedPorts);

    envContainerConfig =
        new String[] {WORKSPACE_ID_PROPERTY, MACHINE_NAME_PROPERTY, IS_DEV_MACHINE_PROPERTY_TRUE};
    when(containerConfig.getEnv()).thenReturn(envContainerConfig);

    when(containerInfo.getNetworkSettings()).thenReturn(networkSettings);
    when(networkSettings.getGateway()).thenReturn("127.0.0.1");
    when(networkSettings.getPorts()).thenReturn(networkExposedPorts);

    containerLabels.put("foo1", "bar");
    containerLabels.put("foo1/dummy", "bar");
    containerLabels.put("che:server:4401/tcp:protocol", "http");
    containerLabels.put("che:server:4401/tcp:ref", "wsagent");
    containerLabels.put("che:server:22/tcp:protocol", "ssh");
    containerLabels.put("che:server:22/tcp:ref", "ssh");
    containerLabels.put("che:server:22/tcp:path", "/api");
    containerLabels.put("che:server:4411/tcp:ref", "terminal");
    containerLabels.put("che:server:4411/tcp:protocol", "http");
    containerLabels.put("che:server:8080:protocol", "http");
    containerLabels.put("che:server:8080:ref", "tomcat8");
    containerLabels.put("anotherfoo1", "bar2");
    containerLabels.put("anotherfoo1/dummy", "bar2");

    containerExposedPorts.put("22/tcp", Collections.emptyMap());
    networkExposedPorts.put(
        "22/tcp",
        Collections.singletonList(
            new PortBinding().withHostIp(ALL_IP_ADDRESS).withHostPort("3222")));
    containerExposedPorts.put("4401/tcp", Collections.emptyMap());
    networkExposedPorts.put(
        "4401/tcp",
        Collections.singletonList(
            new PortBinding().withHostIp(ALL_IP_ADDRESS).withHostPort("324401")));
    containerExposedPorts.put("4411/tcp", Collections.emptyMap());
    networkExposedPorts.put(
        "4411/tcp",
        Collections.singletonList(
            new PortBinding().withHostIp(ALL_IP_ADDRESS).withHostPort("324411")));
    containerExposedPorts.put("8080/tcp", Collections.emptyMap());
    networkExposedPorts.put(
        "8080/tcp",
        Collections.singletonList(
            new PortBinding().withHostIp(ALL_IP_ADDRESS).withHostPort("328080")));
  }

