    @Test
    public void shouldAddEnvVarsFromMachineConfigToContainerOnNonDevInstanceCreationFromRecipe() throws Exception {
        // given
        Map<String, String> envVarsFromConfig = new HashMap<>();
        envVarsFromConfig.put("ENV_VAR1", "123");
        envVarsFromConfig.put("ENV_VAR2", "234");

        provider = new ComposeMachineProviderImpl(dockerConnector,
                                                  dockerConnectorConfiguration,
                                                  credentialsReader,
                                                  dockerMachineFactory,
                                                  dockerInstanceStopDetector,
                                                  containerNameGenerator,
                                                  Collections.emptySet(),
                                                  Collections.emptySet(),
                                                  Collections.emptySet(),
                                                  Collections.emptySet(),
                                                  null,
                                                  workspaceFolderPathProvider,
                                                  PROJECT_FOLDER_PATH,
                                                  false,
                                                  false,
                                                  Collections.emptySet(),
                                                  Collections.emptySet(),
                                                  SNAPSHOT_USE_REGISTRY,
                                                  MEMORY_SWAP_MULTIPLIER,
                                                  emptySet());

        final boolean isDev = false;
        ComposeServiceImpl service = createService();
        service.setEnvironment(envVarsFromConfig);

        // when
        createInstanceFromRecipe(service, isDev);

        // then
        ArgumentCaptor<CreateContainerParams> argumentCaptor = ArgumentCaptor.forClass(CreateContainerParams.class);
        verify(dockerConnector).createContainer(argumentCaptor.capture());
        assertTrue(asList(argumentCaptor.getValue()
                                        .getContainerConfig()
                                        .getEnv())
                           .containsAll(envVarsFromConfig.entrySet()
                                                         .stream()
                                                         .map(entry -> entry.getKey() +
                                                                       "=" +
                                                                       entry.getValue())
                                                         .collect(Collectors.toList())));
    }

