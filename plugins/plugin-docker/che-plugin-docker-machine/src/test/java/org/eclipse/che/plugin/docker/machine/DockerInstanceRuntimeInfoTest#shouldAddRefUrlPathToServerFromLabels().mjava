    @Test
    public void shouldAddRefUrlPathToServerFromLabels() throws Exception {
        // given
        runtimeInfo = new DockerInstanceRuntimeInfo(containerInfo,
                                                    machineConfig,
                                                    DEFAULT_HOSTNAME,
                                                    provider,
                                                    Collections.emptySet(),
                                                    Collections.emptySet());
        Map<String, List<PortBinding>> ports = new HashMap<>();
        when(networkSettings.getPorts()).thenReturn(ports);
        Map<String, String> labels = new HashMap<>();
        when(containerConfig.getLabels()).thenReturn(labels);
        ports.put("8080/tcp", Collections.singletonList(new PortBinding().withHostIp(ALL_IP_ADDRESS )
                                                                         .withHostPort("32100")));
        ports.put("100100/udp", Collections.singletonList(new PortBinding().withHostIp(ALL_IP_ADDRESS )
                                                                           .withHostPort("32101")));
        ports.put("8080/udp", Collections.singletonList(new PortBinding().withHostIp(ALL_IP_ADDRESS )
                                                                         .withHostPort("32102")));
        ports.put("8000/tcp", Collections.singletonList(new PortBinding().withHostIp(ALL_IP_ADDRESS )
                                                                         .withHostPort("32103")));
        labels.put(String.format(SERVER_CONF_LABEL_REF_KEY, "8080/tcp"), "myserv1");
        labels.put(String.format(SERVER_CONF_LABEL_PROTOCOL_KEY, "8080/tcp"), "http");
        labels.put(String.format(SERVER_CONF_LABEL_PATH_KEY, "8080/tcp"), "/some/path");
        labels.put(String.format(SERVER_CONF_LABEL_REF_KEY, "8080/udp"), "myserv1-tftp");
        labels.put(String.format(SERVER_CONF_LABEL_PROTOCOL_KEY, "8080/udp"), "tftp");
        labels.put(String.format(SERVER_CONF_LABEL_REF_KEY, "100100/udp"), "myserv2");
        labels.put(String.format(SERVER_CONF_LABEL_PROTOCOL_KEY, "100100/udp"), "dhcp");
        labels.put(String.format(SERVER_CONF_LABEL_PATH_KEY, "100100/udp"), "some/path");
        labels.put(String.format(SERVER_CONF_LABEL_PROTOCOL_KEY, "8000/tcp"), "tcp");
        final HashMap<String, ServerImpl> expectedServers = new HashMap<>();
        expectedServers.put("8080/tcp", new ServerImpl("myserv1",
                                                       "http",
                                                       CONTAINERINFO_GATEWAY  + ":32100",
                                                       "http://" + CONTAINERINFO_GATEWAY  + ":32100/some/path",
                                                       new ServerPropertiesImpl("/some/path",
                                                                 CONTAINERINFO_GATEWAY  + ":32100",
                                                                 "http://" + CONTAINERINFO_GATEWAY  + ":32100/some/path")));
        expectedServers.put("100100/udp", new ServerImpl("myserv2",
                                                         "dhcp",
                                                         CONTAINERINFO_GATEWAY  + ":32101",
                                                         "dhcp://" + CONTAINERINFO_GATEWAY  + ":32101/some/path",
                                                         new ServerPropertiesImpl("some/path",
                                                                 CONTAINERINFO_GATEWAY  + ":32101",
                                                                 "dhcp://" + CONTAINERINFO_GATEWAY  + ":32101/some/path")));
        expectedServers.put("8080/udp", new ServerImpl("myserv1-tftp",
                                                       "tftp",
                                                       CONTAINERINFO_GATEWAY  + ":32102",
                                                       "tftp://" + CONTAINERINFO_GATEWAY  + ":32102",
                                                       new ServerPropertiesImpl(null,
                                                               CONTAINERINFO_GATEWAY  + ":32102",
                                                               "tftp://" + CONTAINERINFO_GATEWAY  + ":32102")));
        expectedServers.put("8000/tcp", new ServerImpl("Server-8000-tcp",
                                                       "tcp",
                                                       CONTAINERINFO_GATEWAY  + ":32103",
                                                       "tcp://" + CONTAINERINFO_GATEWAY  + ":32103",
                                                       new ServerPropertiesImpl(null,
                                                               CONTAINERINFO_GATEWAY  + ":32103",
                                                               "tcp://" + CONTAINERINFO_GATEWAY  + ":32103")));

        // when
        final Map<String, ServerImpl> servers = runtimeInfo.getServers();

        // then
        assertEquals(servers, expectedServers);
    }

