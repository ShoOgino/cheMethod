    protected Instance createInstanceFromImage(Machine machine,
                                               String machineContainerName,
                                               LineConsumer creationLogsOutput) throws NotFoundException,
                                                                                       MachineException,
                                                                                       SourceNotFoundException {
        final DockerMachineSource dockerMachineSource = new DockerMachineSource(machine.getConfig().getSource());

        boolean isSnapshot = SNAPSHOT_LOCATION_PATTERN.matcher(dockerMachineSource.getLocation()).matches();
        if (!isSnapshot || snapshotUseRegistry) {
            pullImage(dockerMachineSource, creationLogsOutput);
        }

        final String machineImageName = "eclipse-che/" + machineContainerName;
        final String fullNameOfPulledImage = dockerMachineSource.getLocation(false);
        try {
            // tag image with generated name to allow sysadmin recognize it
            docker.tag(TagParams.create(fullNameOfPulledImage, machineImageName));
        } catch (ImageNotFoundException nfEx) {
            throw new SourceNotFoundException(nfEx.getLocalizedMessage(), nfEx);
        } catch (IOException ioEx) {
            LOG.error(ioEx.getLocalizedMessage(), ioEx);
            throw new MachineException("Can't create machine from snapshot.");
        }
        try {
            // remove unneeded tag if restoring snapshot from registry
            if (isSnapshot && snapshotUseRegistry){
                docker.removeImage(RemoveImageParams.create(fullNameOfPulledImage).withForce(false));
            }
        } catch (IOException e) {
            LOG.error(e.getLocalizedMessage(), e);
        }

        return createInstance(machineContainerName,
                              machine,
                              machineImageName,
                              creationLogsOutput);
    }

