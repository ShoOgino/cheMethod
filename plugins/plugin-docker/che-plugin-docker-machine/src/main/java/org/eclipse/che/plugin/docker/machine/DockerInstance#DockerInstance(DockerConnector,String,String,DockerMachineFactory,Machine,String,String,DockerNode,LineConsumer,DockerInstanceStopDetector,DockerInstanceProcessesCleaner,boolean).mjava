    @Inject
    public DockerInstance(DockerConnector docker,
                          @Named("machine.docker.registry") String registry,
                          @Named("docker.registry.auth.username") @Nullable String username,
                          DockerMachineFactory dockerMachineFactory,
                          @Assisted Machine machine,
                          @Assisted("container") String container,
                          @Assisted("image") String image,
                          @Assisted DockerNode node,
                          @Assisted LineConsumer outputConsumer,
                          DockerInstanceStopDetector dockerInstanceStopDetector,
                          DockerInstanceProcessesCleaner processesCleaner,
                          @Named("machine.docker.snapshot_use_registry") boolean snapshotUseRegistry) {
        super(machine);
        this.dockerMachineFactory = dockerMachineFactory;
        this.container = container;
        this.docker = docker;
        this.image = image;
        this.outputConsumer = outputConsumer;
        this.registry = registry;
        this.username = username;
        this.node = node;
        this.dockerInstanceStopDetector = dockerInstanceStopDetector;
        this.processesCleaner = processesCleaner;
        this.machineProcesses = new ConcurrentHashMap<>();
        processesCleaner.trackProcesses(this);
        this.snapshotUseRegistry = snapshotUseRegistry;
    }

