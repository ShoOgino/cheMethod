    @Inject
    public DockerInstance(DockerConnector docker,
                          @Named("machine.docker.registry") String registry,
                          DockerMachineFactory dockerMachineFactory,
                          @Assisted MachineState machineState,
                          @Assisted("container") String container,
                          @Assisted("image") String image,
                          @Assisted DockerNode node,
                          @Assisted LineConsumer outputConsumer,
                          DockerInstanceStopDetector dockerInstanceStopDetector,
                          DockerInstanceProcessesCleaner processesCleaner) {
        super(machineState);
        this.dockerMachineFactory = dockerMachineFactory;
        this.container = container;
        this.docker = docker;
        this.image = image;
        this.outputConsumer = outputConsumer;
        this.registry = registry;
        this.node = node;
        this.dockerInstanceStopDetector = dockerInstanceStopDetector;
        this.processesCleaner = processesCleaner;
        this.machineProcesses = new ConcurrentHashMap<>();
        processesCleaner.trackProcesses(this);
    }

