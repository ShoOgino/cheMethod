    @Override
    public MachineSource saveToSnapshot(String owner) throws MachineException {
        try {
            String image = generateImageName();
            if(!snapshotUseRegistry) {
                commitContainer(owner, image, LATEST_TAG);
                return new DockerMachineSource(image).withTag(LATEST_TAG);
            }

            if (username != null && DEFAULT_REGISTRY.contains(registry)) {
                image = username + '/' + image; // username is used only for docker hub
            }
            PushParams pushParams = PushParams.create(image)
                                              .withRegistry(registry)
                                              .withTag(LATEST_TAG);

            final String fullRepo = pushParams.getFullRepo();
            commitContainer(owner, fullRepo, LATEST_TAG);
            //TODO fix this workaround. Docker image is not visible after commit when using swarm
            Thread.sleep(2000);
            final ProgressLineFormatterImpl lineFormatter = new ProgressLineFormatterImpl();
            final String digest = docker.push(pushParams,
                                              progressMonitor -> {
                                                  try {
                                                      outputConsumer.writeLine(lineFormatter.format(progressMonitor));
                                                  } catch (IOException ignored) {
                                                  }
                                              });
            docker.removeImage(RemoveImageParams.create(fullRepo).withForce(false));
            return new DockerMachineSource(image).withRegistry(registry).withDigest(digest).withTag(LATEST_TAG);
        } catch (IOException ioEx) {
            throw new MachineException(ioEx);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            throw new MachineException(e.getLocalizedMessage(), e);
        }
    }

