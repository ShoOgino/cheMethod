    @Override
    public MachineSource saveToSnapshot(String owner) throws MachineException {
        try {
            final String repository = generateRepository();
            if(!snapshotUseRegistry) {
                commitContainer(owner, repository, LATEST_TAG);
                return new DockerMachineSource(repository).withTag(LATEST_TAG);
            }
            final String repositoryName = registry + '/' + repository;
            commitContainer(owner, repositoryName, LATEST_TAG);
            //TODO fix this workaround. Docker image is not visible after commit when using swarm
            Thread.sleep(2000);
            final ProgressLineFormatterImpl lineFormatter = new ProgressLineFormatterImpl();
            final String digest = docker.push(PushParams.create(repository)
                                                        .withTag(LATEST_TAG)
                                                        .withRegistry(registry),
                                              progressMonitor -> {
                                                  try {
                                                      outputConsumer.writeLine(lineFormatter.format(progressMonitor));
                                                  } catch (IOException ignored) {
                                                  }
                                              });
            docker.removeImage(RemoveImageParams.create(repositoryName).withForce(false));
            return new DockerMachineSource(repository).withRegistry(registry).withDigest(digest).withTag(LATEST_TAG);
        } catch (IOException ioEx) {
            throw new MachineException(ioEx);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            throw new MachineException(e.getLocalizedMessage(), e);
        }
    }

