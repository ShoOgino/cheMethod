    @ScheduleRate(periodParameterName = "machine.docker.unused_containers_cleanup_period_min",
                  initialDelayParameterName = "machine.docker.unused_containers_cleanup_period_min",
                  unit = TimeUnit.MINUTES)
    @Override
    public void run() {
        try {
            for (ContainerListEntry container : dockerConnector.listContainers()) {
                Optional<ContainerNameInfo> optional = nameGenerator.parse(container.getNames()[0]);
                if (optional.isPresent() && !machineRegistry.isExist(optional.get().getMachineId())) {
                    cleanUp(container);
                }
            }
        } catch (IOException e) {
            LOG.error("Failed to get list docker containers", e);
        } catch (Exception e) {
            LOG.error("Failed to clean up inactive containers", e);
        }
    }

