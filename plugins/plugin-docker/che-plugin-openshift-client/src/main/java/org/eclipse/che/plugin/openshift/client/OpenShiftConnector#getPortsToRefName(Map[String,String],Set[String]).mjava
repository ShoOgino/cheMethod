  /**
   * Gets the mapping between the port (with format 8080/tcp) and the associated label (if found)
   *
   * @param labels the mapping for known port labels
   * @param exposedPorts the ports that are exposed
   * @return a map that allow to get the service name for a given exposed port
   */
  protected Map<String, String> getPortsToRefName(
      Map<String, String> labels, Set<String> exposedPorts) {

    // Ports to known/unknown ref is map like : 8080/tcp <--> myCustomLabel
    Pattern pattern = Pattern.compile(LABEL_CHE_SERVER_REF_KEY);
    Map<String, String> portsToKnownRefName =
        labels
            .entrySet()
            .stream()
            .filter(map -> pattern.matcher(map.getKey()).matches())
            .collect(
                Collectors.toMap(
                    p -> {
                      Matcher matcher = pattern.matcher(p.getKey());
                      matcher.matches();
                      String val = matcher.group(1);
                      return val.contains("/") ? val : val.concat("/tcp");
                    },
                    p -> p.getValue()));

    // add to this map only port without a known ref name
    Map<String, String> portsToUnkownRefName =
        exposedPorts
            .stream()
            .filter((port) -> !portsToKnownRefName.containsKey(port))
            .collect(Collectors.toMap(p -> p, p -> "server-" + p.replace('/', '-')));

    // list of all ports with refName (known/unknown)
    Map<String, String> portsToRefName = new HashMap(portsToKnownRefName);
    portsToRefName.putAll(portsToUnkownRefName);

    return portsToRefName;
  }

