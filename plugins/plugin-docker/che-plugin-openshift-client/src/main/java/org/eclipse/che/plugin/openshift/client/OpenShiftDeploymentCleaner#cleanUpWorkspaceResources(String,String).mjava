    private void cleanUpWorkspaceResources(final String deploymentName, final String namespace) throws IOException {
        Deployment deployment = KubernetesResourceUtil.getDeploymentByName(deploymentName, namespace);
        Service service = KubernetesResourceUtil.getServiceBySelector(OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL, deploymentName, namespace);
        List<Route> routes = KubernetesResourceUtil.getRoutesByLabel(OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL, deploymentName, namespace);
        List<ReplicaSet> replicaSets = KubernetesResourceUtil.getReplicaSetByLabel(OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL, deploymentName, namespace);

        try (OpenShiftClient openShiftClient = new DefaultOpenShiftClient()) {

            if (deployment != null) {
                LOG.info("Removing OpenShift Deployment {}", deployment.getMetadata().getName());
                openShiftClient.resource(deployment).delete();
            }

            if (replicaSets != null && replicaSets.size() > 0) {
                LOG.info("Removing OpenShift ReplicaSets for deployment {}", deploymentName);
                replicaSets.forEach(rs -> openShiftClient.resource(rs).delete());
            }

            if (routes != null) {
                for (Route route: routes) {
                    LOG.info("Removing OpenShift Route {}", route.getMetadata().getName());
                    openShiftClient.resource(route).delete();
                }
            }

            if (service != null) {
                LOG.info("Removing OpenShift Service {}", service.getMetadata().getName());
                openShiftClient.resource(service).delete();
            }
        }
    }

