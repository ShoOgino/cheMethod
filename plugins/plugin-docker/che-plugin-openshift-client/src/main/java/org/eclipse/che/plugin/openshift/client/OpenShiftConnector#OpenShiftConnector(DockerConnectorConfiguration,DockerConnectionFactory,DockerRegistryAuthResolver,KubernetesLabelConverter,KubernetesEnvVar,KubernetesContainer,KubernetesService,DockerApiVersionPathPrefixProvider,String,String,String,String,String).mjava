    @Inject
    public OpenShiftConnector(DockerConnectorConfiguration connectorConfiguration,
                              DockerConnectionFactory connectionFactory,
                              DockerRegistryAuthResolver authResolver,
                              KubernetesLabelConverter kubernetesLabelConverter,
                              KubernetesEnvVar kubernetesEnvVar,
                              KubernetesContainer kubernetesContainer,
                              KubernetesService kubernetesService,
                              DockerApiVersionPathPrefixProvider dockerApiVersionPathPrefixProvider,
                              @Named("che.openshift.endpoint") String openShiftApiEndpoint,
                              @Named("che.openshift.username") String openShiftUserName,
                              @Named("che.openshift.password") String openShiftUserPassword,
                              @Named("che.openshift.project") String openShiftCheProjectName,
                              @Named("che.openshift.serviceaccountname") String openShiftCheServiceAccount) {
        super(connectorConfiguration, connectionFactory, authResolver, dockerApiVersionPathPrefixProvider);
        this.openShiftCheProjectName = openShiftCheProjectName;
        this.openShiftCheServiceAccount = openShiftCheServiceAccount;
        this.kubernetesLabelConverter = kubernetesLabelConverter;
        this.kubernetesEnvVar = kubernetesEnvVar;
        this.kubernetesContainer = kubernetesContainer;
        this.kubernetesService = kubernetesService;

        Config config = new ConfigBuilder().withMasterUrl(openShiftApiEndpoint)
                .withUsername(openShiftUserName)
                .withPassword(openShiftUserPassword).build();
        this.openShiftClient = new DefaultOpenShiftClient(config);
    }

