    @Inject
    public OpenShiftConnector(ConfigBuilder configBuilder,
                              DockerConnectorConfiguration connectorConfiguration,
                              DockerConnectionFactory connectionFactory,
                              DockerRegistryAuthResolver authResolver,
                              DockerApiVersionPathPrefixProvider dockerApiVersionPathPrefixProvider,
                              @Named("che.openshift.endpoint") String openShiftApiEndpoint,
                              @Nullable @Named("che.openshift.token") String openShiftToken,
                              @Nullable @Named("che.openshift.username") String openShiftUserName,
                              @Nullable @Named("che.openshift.password") String openShiftUserPassword,
                              @Named("che.openshift.project") String openShiftCheProjectName,
                              @Named("che.openshift.serviceaccountname") String openShiftCheServiceAccount,
                              @Named("che.openshift.liveness.probe.delay") int openShiftLivenessProbeDelay,
                              @Named("che.openshift.liveness.probe.timeout") int openShiftLivenessProbeTimeout) {

        super(connectorConfiguration, connectionFactory, authResolver, dockerApiVersionPathPrefixProvider);
        this.openShiftCheProjectName = openShiftCheProjectName;
        this.openShiftCheServiceAccount = openShiftCheServiceAccount;
        this.openShiftLivenessProbeDelay = openShiftLivenessProbeDelay;
        this.openShiftLivenessProbeTimeout = openShiftLivenessProbeTimeout;

        Config config = getOpenShiftConfig(configBuilder,
                                           openShiftApiEndpoint,
                                           openShiftToken,
                                           openShiftUserName,
                                           openShiftUserPassword);
        this.openShiftClient = new DefaultOpenShiftClient(config);
    }

