  private void cleanUpWorkspaceResources(final String deploymentName, final Subject subject)
      throws OpenShiftException {
    String openshiftNamespace =
        openshiftUserAccountProvider.getWorkspacesOpenshiftNamespace(subject);
    Config openshiftConfig = openshiftUserAccountProvider.getWorkspacesOpenshiftConfig(subject);
    Deployment deployment = null;
    try {
      deployment =
          KubernetesResourceUtil.getDeploymentByName(
              deploymentName, openshiftNamespace, openshiftConfig);
    } catch (IOException e) {
      LOG.error("Exception while retrieving the deployment to cleanup", e);
    }
    Service service =
        KubernetesResourceUtil.getServiceBySelector(
            OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL,
            deploymentName,
            openshiftNamespace,
            openshiftConfig);
    List<Route> routes = null;
    try {
      routes =
          KubernetesResourceUtil.getRoutesByLabel(
              OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL,
              deploymentName,
              openshiftNamespace,
              openshiftConfig);
    } catch (IOException e) {
      LOG.error("Exception while retrieving the routes to cleanup", e);
    }
    List<ReplicaSet> replicaSets =
        KubernetesResourceUtil.getReplicaSetByLabel(
            OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL,
            deploymentName,
            openshiftNamespace,
            openshiftConfig);

    try (OpenShiftClient openShiftClient =
        new DefaultOpenShiftClient(
            openshiftUserAccountProvider.getWorkspacesOpenshiftConfig(subject))) {
      if (routes != null) {
        for (Route route : routes) {
          LOG.info("Removing OpenShift Route {}", route.getMetadata().getName());
          openShiftClient.resource(route).delete();
        }
      }

      if (service != null) {
        LOG.info("Removing OpenShift Service {}", service.getMetadata().getName());
        openShiftClient.resource(service).delete();
      }

      if (deployment != null) {
        LOG.info("Removing OpenShift Deployment {}", deployment.getMetadata().getName());
        openShiftClient.resource(deployment).delete();
      }

      if (replicaSets != null && replicaSets.size() > 0) {
        LOG.info("Removing OpenShift ReplicaSets for deployment {}", deploymentName);
        replicaSets.forEach(rs -> openShiftClient.resource(rs).delete());
      }
    }
  }

