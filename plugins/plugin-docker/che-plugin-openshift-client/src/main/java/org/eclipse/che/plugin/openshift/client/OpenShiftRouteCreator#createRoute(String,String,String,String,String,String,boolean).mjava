  public void createRoute(
      final String namespace,
      final String openShiftNamespaceExternalAddress,
      final String serverRef,
      final String serviceName,
      final String deploymentName,
      final String routeId,
      final boolean enableTls) {

    if (openShiftNamespaceExternalAddress == null) {
      throw new IllegalArgumentException(
          "Property che.docker.ip.external must be set when using openshift.");
    }

    try (OpenShiftClient openShiftClient = new DefaultOpenShiftClient()) {
      String routeName = generateRouteName(routeId, serverRef);
      String serviceHost = generateRouteHost(routeName, openShiftNamespaceExternalAddress);

      SpecNested<DoneableRoute> routeSpec =
          openShiftClient
              .routes()
              .inNamespace(namespace)
              .createNew()
              .withNewMetadata()
              .withName(routeName)
              .addToLabels(OpenShiftConnector.OPENSHIFT_DEPLOYMENT_LABEL, deploymentName)
              .endMetadata()
              .withNewSpec()
              .withHost(serviceHost)
              .withNewTo()
              .withKind("Service")
              .withName(serviceName)
              .endTo()
              .withNewPort()
              .withNewTargetPort()
              .withStrVal(serverRef)
              .endTargetPort()
              .endPort();

      if (enableTls) {
        routeSpec
            .withNewTls()
            .withTermination(TLS_TERMINATION_EDGE)
            .withInsecureEdgeTerminationPolicy(REDIRECT_INSECURE_EDGE_TERMINATION_POLICY)
            .endTls();
      }

      Route route = routeSpec.endSpec().done();

      LOG.info("OpenShift route {} created", route.getMetadata().getName());
    }
  }

