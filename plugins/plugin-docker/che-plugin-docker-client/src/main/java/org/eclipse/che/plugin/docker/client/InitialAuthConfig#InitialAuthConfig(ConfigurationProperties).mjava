    @Inject
    public InitialAuthConfig(ConfigurationProperties configurationProperties) {
        String serverAddress = "https://index.docker.io/v1/";
        String username = null, password = null, email = null;
        for (Map.Entry<String, String> e : configurationProperties.getProperties(CONFIGURATION_PREFIX_PATTERN).entrySet()) {
            final String classifier = e.getKey().replaceFirst(CONFIGURATION_PREFIX, "");
            switch (classifier) {
                case "url": {
                    serverAddress = e.getValue();
                    break;
                }
                case "email": {
                    email = e.getValue();
                    break;
                }
                case "username": {
                    username = e.getValue();
                    break;
                }
                case "password": {
                    password = e.getValue();
                    break;
                }
            }
        }
        if (!isNullOrEmpty(serverAddress) && !isNullOrEmpty(username) && !isNullOrEmpty(password) && !isNullOrEmpty(email)) {
            predefinedConfig = DtoFactory.newDto(AuthConfig.class).withServeraddress(serverAddress)
                                         .withUsername(username)
                                         .withPassword(password)
                                         .withEmail(email);
        }
    }

