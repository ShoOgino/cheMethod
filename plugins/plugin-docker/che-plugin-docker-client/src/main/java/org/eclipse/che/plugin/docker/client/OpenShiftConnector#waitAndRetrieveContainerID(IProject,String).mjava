    private String waitAndRetrieveContainerID(IProject cheproject, String deploymentConfigName) {
        for (int i = 0; i < OPENSHIFT_WAIT_POD_TIMEOUT; i++) {
            try {
                Thread.sleep(OPENSHIFT_WAIT_POD_DELAY);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }

            List<IPod> pods = openShiftClient.list(ResourceKind.POD, cheproject.getNamespace(), Collections.emptyMap());

            for (IPod p : pods) {
                String status = p.getStatus();
                String dc = p.getLabels().get(OPENSHIFT_DEPLOYMENT_CONFIG);
                if (OPENSHIFT_POD_STATUS_RUNNING.equals(status) && deploymentConfigName.equals(dc)) {
                    ModelNode containerID = ((Pod) p).getNode().get("status").get("containerStatuses").get(0).get("containerID");
                    String normalizedID = normalizeContainerID(containerID.toString());
                    p.addLabel(CHE_CONTAINER_IDENTIFIER_LABEL_KEY, getLabelFromContainerID(normalizedID));
                    openShiftClient.update(p);
                    return normalizedID;
                }
            }
        }
        return null;
    }

