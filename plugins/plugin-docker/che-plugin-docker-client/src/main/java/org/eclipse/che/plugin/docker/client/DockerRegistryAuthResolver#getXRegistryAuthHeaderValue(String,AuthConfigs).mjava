    /**
     * Looks for auth credentials for specified registry and encode it in base64.
     * First searches in the passed params and then in the configured credentials.
     * If nothing found, empty encoded json will be returned.
     *
     * @param registry
     *         registry to which API call will be applied
     * @param paramAuthConfigs
     *         credentials for provided registry
     * @return base64 encoded X-Registry-Auth header value
     */
    public String getXRegistryAuthHeaderValue(@Nullable String registry, @Nullable AuthConfigs paramAuthConfigs) {
        String normalizedRegistry = DEFAULT_REGISTRY_SYNONYMS.contains(registry) ? DEFAULT_REGISTRY : registry;

        AuthConfig authConfig = null;
        if (paramAuthConfigs != null && paramAuthConfigs.getConfigs() != null) {
            authConfig = normalizeDockerHubRegistryUrl(paramAuthConfigs.getConfigs()).get(normalizedRegistry);
        }
        if (authConfig == null) {
            authConfig = normalizeDockerHubRegistryUrl(initialAuthConfig.getAuthConfigs().getConfigs()).get(normalizedRegistry);
        }

        String authConfigJson;
        if (authConfig == null) {
            // empty auth config
            authConfigJson = "{}";
        } else {
            authConfigJson = JsonHelper.toJson(authConfig);
        }

        return Base64.getEncoder().encodeToString(authConfigJson.getBytes());
    }

