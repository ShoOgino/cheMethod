    /**
     * List processes running inside the container.
     *
     * @return processes running inside the container
     * @throws IOException
     *          when a problem occurs with docker api calls
     */
    public ContainerProcesses top(final TopParams params) throws IOException {
        final String[] psArgs = params.getPsArgs();

        try (final DockerConnection connection = connectionFactory.openConnection(dockerDaemonUri)
                                                                  .method("GET")
                                                                  .path("/containers/" + params.getContainer() + "/top")) {
            if (psArgs != null && psArgs.length != 0) {
                StringBuilder psArgsQueryBuilder = new StringBuilder();
                for (int i = 0, l = psArgs.length; i < l; i++) {
                    if (i > 0) {
                        psArgsQueryBuilder.append('+');
                    }
                    psArgsQueryBuilder.append(URLEncoder.encode(psArgs[i], "UTF-8"));
                }
                connection.query("ps_args", psArgsQueryBuilder.toString());
            }

            final DockerResponse response = connection.request();
            if (OK.getStatusCode() != response.getStatus()) {
                throw getDockerException(response);
            }
            return parseResponseStreamAndClose(response.getInputStream(), ContainerProcesses.class);
        } catch (JsonParseException e) {
            throw new IOException(e.getLocalizedMessage(), e);
        }
    }

