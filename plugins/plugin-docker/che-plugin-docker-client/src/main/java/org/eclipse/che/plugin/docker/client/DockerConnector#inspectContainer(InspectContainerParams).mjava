    /**
     * Gets detailed information about docker container.
     *
     * @return detailed information about {@code container}
     * @throws ContainerNotFoundException
     *          when container not found by docker (docker api returns 404)
     * @throws IOException
     *          when a problem occurs with docker api calls
     */
    public ContainerInfo inspectContainer(final InspectContainerParams params) throws IOException {
        try (DockerConnection connection = connectionFactory.openConnection(dockerDaemonUri)
                                                            .method("GET")
                                                            .path(apiVersionPathPrefix + "/containers/" + params.getContainer() +
                                                                  "/json")) {
            addQueryParamIfNotNull(connection, "size", params.isReturnContainerSize());
            final DockerResponse response = connection.request();
            final int status = response.getStatus();
            if (status == NOT_FOUND.getStatusCode()) {
                throw new ContainerNotFoundException(readAndCloseQuietly(response.getInputStream()));
            }
            if (OK.getStatusCode() != status) {
                throw getDockerException(response);
            }
            return parseResponseStreamAndClose(response.getInputStream(), ContainerInfo.class);
        }
    }

