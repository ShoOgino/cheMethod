    /**
     * Lists docker images.
     *
     * @return list of docker images
     * @throws IOException
     *          when a problem occurs with docker api calls
     */
    public List<Image> listImages(ListImagesParams params) throws IOException {
        final Filters filters = params.getFilters();

        try (DockerConnection connection = connectionFactory.openConnection(dockerDaemonUri)
                                                            .method("GET")
                                                            .path(apiVersionPathPrefix + "/images/json")) {
            addQueryParamIfNotNull(connection, "all", params.getAll());
            addQueryParamIfNotNull(connection, "digests", params.getAll());
            if (filters != null) {
                connection.query("filters", urlPathSegmentEscaper().escape(toJson(filters.getFilters())));
            }
            final DockerResponse response = connection.request();
            if (OK.getStatusCode() != response.getStatus()) {
                throw getDockerException(response);
            }
            return parseResponseStreamAndClose(response.getInputStream(), new TypeToken<List<Image>>() {});
        }
    }

