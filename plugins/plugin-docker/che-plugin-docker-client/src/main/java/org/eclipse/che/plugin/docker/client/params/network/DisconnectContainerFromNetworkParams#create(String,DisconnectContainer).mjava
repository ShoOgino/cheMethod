    /**
     * Creates arguments holder with required parameters.
     *
     * @param netId
     *         network identifier
     * @param disconnectContainer
     *         container disconnection configuration
     * @return arguments holder with required parameters
     * @throws NullPointerException
     *         if {@code netId} or {@code disconnectContainer} is null
     */
    public static DisconnectContainerFromNetworkParams create(@NotNull String netId, @NotNull DisconnectContainer disconnectContainer) {
        return new DisconnectContainerFromNetworkParams().withNetworkId(netId)
                                                         .withDisconnectContainer(disconnectContainer);
    }

