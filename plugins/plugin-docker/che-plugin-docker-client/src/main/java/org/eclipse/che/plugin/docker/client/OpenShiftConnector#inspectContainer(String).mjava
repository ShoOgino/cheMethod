    /**
     * @param docker
     * @param container
     * @return
     * @throws IOException
     */
    @Override
    public ContainerInfo inspectContainer(String container) throws IOException {
        // Proxy to DockerConnector
        ContainerInfo info = super.inspectContainer(container);
        if (info == null) {
            return null;
        }

        IPod pod = getChePodByContainerId(info.getId());
        String deploymentConfig = pod.getLabels().get("deploymentConfig");
        IService svc = getCheServiceBySelector("deploymentConfig", deploymentConfig);
        Map<String, String> annotations = convertKubernetesNamesToLabels(svc.getAnnotations());
        Map<String, String> containerLabels = info.getConfig().getLabels();

        Map<String, String> labels = Stream.concat(annotations.entrySet().stream(), containerLabels.entrySet().stream())
                                           .filter(e -> e.getKey().startsWith(CHE_SERVER_LABEL_PREFIX))
                                           .collect(Collectors.toMap(e -> e.getKey(), e -> e.getValue()));

        info.getConfig().setLabels(labels);

        LOG.info("Container labels:");
        info.getConfig().getLabels().entrySet()
                        .stream().forEach(e -> LOG.info("- " + e.getKey() + "=" + e.getValue()));

        // Ignore portMapping for now: info.getNetworkSettings().setPortMapping();
        // replacePortMapping(info)
        replaceNetworkSettings(info);

        return info;
    }

