  @Test
  public void shouldCreateParamsObjectWithAllPossibleParametersFromRemote() {
    buildImageParams =
        BuildImageParams.create(REMOTE)
            .withRepository(REPOSITORY)
            .withTag(TAG)
            .withAuthConfigs(AUTH_CONFIGS)
            .withDoForcePull(DO_FORCE_PULL)
            .withMemoryLimit(MEMORY_LIMIT)
            .withMemorySwapLimit(MEMORY_SWAP_LIMIT)
            .withDockerfile(DOCKERFILE)
            .withQuiet(QUIET)
            .withNoCache(NO_CACHE)
            .withRemoveIntermediateContainers(REMOVE_INTERMEDIATE_CONTAINER)
            .withForceRemoveIntermediateContainers(FORCE_REMOVE_INTERMEDIATE_CONTAINERS)
            .withCpusetCpus(CPUSET_CPUS)
            .withCpuPeriod(CPU_PERIOD)
            .withCpuQuota(CPU_QUOTA)
            .withBuildArgs(BUILD_ARGS);

    assertNull(buildImageParams.getFiles());

    assertEquals(buildImageParams.getRemote(), REMOTE);
    assertEquals(buildImageParams.getTag(), TAG);
    assertEquals(buildImageParams.getRepository(), REPOSITORY);
    assertEquals(buildImageParams.getAuthConfigs(), AUTH_CONFIGS);
    assertEquals(buildImageParams.isDoForcePull(), DO_FORCE_PULL);
    assertEquals(buildImageParams.getMemoryLimit(), MEMORY_LIMIT);
    assertEquals(buildImageParams.getMemorySwapLimit(), MEMORY_SWAP_LIMIT);
    assertEquals(buildImageParams.getDockerfile(), DOCKERFILE);
    assertEquals(buildImageParams.isQuiet(), QUIET);
    assertEquals(buildImageParams.isNoCache(), NO_CACHE);
    assertEquals(buildImageParams.isRemoveIntermediateContainer(), REMOVE_INTERMEDIATE_CONTAINER);
    assertEquals(
        buildImageParams.isForceRemoveIntermediateContainers(),
        FORCE_REMOVE_INTERMEDIATE_CONTAINERS);
    assertEquals(buildImageParams.getBuildArgs(), BUILD_ARGS);
    assertEquals(buildImageParams.getCpusetCpus(), CPUSET_CPUS);
    assertEquals(buildImageParams.getCpuPeriod(), CPU_PERIOD);
    assertEquals(buildImageParams.getCpuQuota(), CPU_QUOTA);
  }

