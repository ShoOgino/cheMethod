    @Test
    public void shouldBeAbleToDisconnectContainerFromNetworkWithParams() throws Exception {
        // given
        String netId = "net_id";
        DisconnectContainerFromNetworkParams disconnectFromNetworkParams =
                DisconnectContainerFromNetworkParams.create(netId, new DisconnectContainer().withContainer("container_id")
                                                                                            .withForce(true));

        // when
        dockerConnector.disconnectContainerFromNetwork(disconnectFromNetworkParams);

        // then
        verify(dockerConnectionFactory).openConnection(any(URI.class));
        verify(dockerConnection).method(REQUEST_METHOD_POST);
        verify(dockerConnection).path("/networks/" + netId + "/disconnect");
        verify(dockerConnection).header("Content-Type", MediaType.APPLICATION_JSON);
        verify(dockerConnection).header(eq("Content-Length"), anyInt());
        ArgumentCaptor<byte[]> argumentCaptor = ArgumentCaptor.forClass(byte[].class);
        verify(dockerConnection).entity(argumentCaptor.capture());
        assertEquals(argumentCaptor.getValue(), GSON.toJson(disconnectFromNetworkParams.getDisconnectContainer()).getBytes());
        verify(dockerConnection).request();
        verify(dockerResponse).getStatus();
    }

