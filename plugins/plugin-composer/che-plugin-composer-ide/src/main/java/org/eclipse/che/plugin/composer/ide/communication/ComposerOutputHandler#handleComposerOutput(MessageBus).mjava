    private void handleComposerOutput(final MessageBus messageBus)  {
        final DefaultOutputConsole outputConsole = (DefaultOutputConsole) commandConsoleFactory.create("Composer");

        try {
            messageBus.subscribe(COMPOSER_CHANNEL_NAME, new MessageHandler() {
                @Override
                public void onMessage(String message) {
                    Log.info(getClass(), message);
                    ComposerOutput archetypeOutput = factory.createDtoFromJson(message, ComposerOutput.class);
                    processesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), outputConsole);
                    switch (archetypeOutput.getState()) {
                        case START:
                            outputConsole.clearOutputsButtonClicked();
                            outputConsole.printText(archetypeOutput.getOutput(),"green");
                            break;
                        case IN_PROGRESS:
                            outputConsole.printText(archetypeOutput.getOutput());
                            break;
                        case DONE:
                            outputConsole.printText(archetypeOutput.getOutput(),"green");
                            break;
                        case ERROR:
                            outputConsole.printText(archetypeOutput.getOutput(),"red");
                            break;
                        default:
                            break;
                    }
                }
            });
        } catch (WebSocketException e) {
            e.printStackTrace();
        }
    }

