  @Override
  public void addBreakpoint(final VirtualFile file, final int lineNumber) {
    if (isConnected()) {
      String fqn = pathToFqn(file);
      if (fqn == null) {
        return;
      }

      final String filePath = file.getLocation().toString();
      LocationDto locationDto =
          dtoFactory
              .createDto(LocationDto.class)
              .withLineNumber(lineNumber + 1)
              .withTarget(fqn)
              .withResourcePath(filePath)
              .withResourceProjectPath(getProject(file).getPath());

      BreakpointDto breakpointDto =
          dtoFactory.createDto(BreakpointDto.class).withLocation(locationDto).withEnabled(true);

      Promise<Void> promise = service.addBreakpoint(debugSessionDto.getId(), breakpointDto);
      promise
          .then(
              it -> {
                Breakpoint breakpoint =
                    new Breakpoint(Breakpoint.Type.BREAKPOINT, lineNumber, filePath, file, true);
                for (DebuggerObserver observer : observers) {
                  observer.onBreakpointAdded(breakpoint);
                }
              })
          .catchError(
              error -> {
                Log.error(AbstractDebugger.class, error.getMessage());
              });
    } else {
      Breakpoint breakpoint =
          new Breakpoint(
              Breakpoint.Type.BREAKPOINT, lineNumber, file.getLocation().toString(), file, false);
      for (DebuggerObserver observer : observers) {
        observer.onBreakpointAdded(breakpoint);
      }
    }
  }

