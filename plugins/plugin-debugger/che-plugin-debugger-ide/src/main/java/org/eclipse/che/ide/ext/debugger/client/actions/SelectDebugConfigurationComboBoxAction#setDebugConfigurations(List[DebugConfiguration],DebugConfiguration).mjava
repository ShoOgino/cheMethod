    /**
     * Sets debug configurations to the drop-down list.
     *
     * @param debugConfigurations
     *         collection of debug configurations to set
     * @param configurationToSelect
     *         configuration that should be selected or {@code null} if none
     */
    private void setDebugConfigurations(List<DebugConfiguration> debugConfigurations,
                                        @Nullable DebugConfiguration configurationToSelect) {
        final DefaultActionGroup configurationsList = (DefaultActionGroup)actionManager.getAction(GROUP_DEBUG_CONFIGURATIONS_LIST);

        configurations.clear();

        configurationActions.removeAll();
        if (configurationsList != null) {
            configurationActions.addAll(configurationsList);
        }
        Collections.sort(debugConfigurations, CONFIGURATIONS_COMPARATOR);
        DebugConfiguration prevConf = null;
        for (DebugConfiguration configuration : debugConfigurations) {
            if (prevConf == null || !configuration.getType().getId().equals(prevConf.getType().getId())) {
                configurationActions.addSeparator(configuration.getType().getDisplayName());
            }
            configurationActions
                    .add(dropDownHeaderWidget.createAction(configuration.getName(), configuration.getName()));
            prevConf = configuration;
        }
        configurations.addAll(debugConfigurations);

        if (configurationToSelect != null) {
            setSelectedConfiguration(configurationToSelect);
        } else {
            selectLastUsedConfiguration();
        }
    }

