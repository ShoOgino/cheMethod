  @Inject
  protected DebuggerViewImpl(
      PartStackUIResources partStackUIResources,
      DebuggerResources resources,
      DebuggerLocalizationConstant locale,
      Resources coreRes,
      VariableTreeNodeRenderer.Resources rendererResources,
      DebuggerViewImplUiBinder uiBinder) {
    super(partStackUIResources);

    this.locale = locale;
    this.debuggerResources = resources;
    this.coreRes = coreRes;

    setContentWidget(uiBinder.createAndBindUi(this));

    this.breakpoints = createBreakpointList();
    this.breakpointsPanel.add(breakpoints);

    this.frames = createFramesList();
    this.framesPanel.add(frames);

    this.variables =
        Tree.create(
            rendererResources,
            new VariableNodeDataAdapter(),
            new VariableTreeNodeRenderer(rendererResources));
    this.variables.setTreeEventHandler(
        new Tree.Listener<MutableVariable>() {
          @Override
          public void onNodeAction(@NotNull TreeNodeElement<MutableVariable> node) {}

          @Override
          public void onNodeClosed(@NotNull TreeNodeElement<MutableVariable> node) {
            selectedVariable = node;
          }

          @Override
          public void onNodeContextMenu(
              int mouseX, int mouseY, @NotNull TreeNodeElement<MutableVariable> node) {}

          @Override
          public void onNodeDragStart(
              @NotNull TreeNodeElement<MutableVariable> node, @NotNull MouseEvent event) {}

          @Override
          public void onNodeDragDrop(
              @NotNull TreeNodeElement<MutableVariable> node, @NotNull MouseEvent event) {}

          @Override
          public void onNodeExpanded(@NotNull final TreeNodeElement<MutableVariable> node) {
            selectedVariable = node;
            delegate.onExpandVariablesTree(node.getData());
          }

          @Override
          public void onNodeSelected(
              @NotNull TreeNodeElement<MutableVariable> node, @NotNull SignalEvent event) {
            selectedVariable = node;
          }

          @Override
          public void onRootContextMenu(int mouseX, int mouseY) {}

          @Override
          public void onRootDragDrop(@NotNull MouseEvent event) {}

          @Override
          public void onKeyboard(@NotNull KeyboardEvent event) {}
        });

    this.variablesPanel.add(variables);
    minimizeButton.ensureDebugId("debugger-minimizeBut");
  }

