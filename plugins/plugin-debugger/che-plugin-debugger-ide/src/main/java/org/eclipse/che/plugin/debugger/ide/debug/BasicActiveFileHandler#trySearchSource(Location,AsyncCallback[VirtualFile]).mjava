    protected void trySearchSource(final Location location, final AsyncCallback<VirtualFile> callback) {
        appContext.getWorkspaceRoot().search(location.getTarget(), "").then(new Operation<Resource[]>() {
            @Override
            public void apply(Resource[] resources) throws OperationException {
                if (resources.length == 0) {
                    callback.onFailure(new IllegalArgumentException(location.getTarget() + " not found."));
                    return;
                }

                appContext.getWorkspaceRoot().getFile(resources[0].getLocation()).then(new Operation<Optional<File>>() {
                    @Override
                    public void apply(Optional<File> file) throws OperationException {
                        if (file.isPresent()) {
                            openFileAndScrollToLine(file.get(), location.getLineNumber(), callback);
                        } else {
                            callback.onFailure(new IllegalArgumentException(location.getTarget() + " not found."));
                        }
                    }
                }).catchError(new Operation<PromiseError>() {
                    @Override
                    public void apply(PromiseError arg) throws OperationException {
                        callback.onFailure(new IllegalArgumentException(location.getTarget() + " not found."));
                    }
                });
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                callback.onFailure(new IllegalArgumentException(location.getTarget() + " not found."));
            }
        });
    }

