    @Inject
    public RemoteDebugViewImpl(final DebuggerLocalizationConstant locale,
                               final DebuggerResources resources,
                               final DialogFactory dialogFactory,
                               final NotificationManager notificationManager) {
        this.locale = locale;
        this.resources = resources;

        initWidget(UI_BINDER.createAndBindUi(this));

        ConfirmCallback confirmCallback = new ConfirmCallback() {
            @Override
            public void accepted() {
                try {
                    delegate.onConfirmClicked(host.getValue(), Integer.parseInt(port.getValue()));
                } catch (NumberFormatException exception) {
                    dialog.show();
                    notificationManager.notify(locale.failedToConnectToRemoteDebuggerTitle(),
                                               locale.failedToConnectToRemoteDebuggerWrongPort(port.getValue()), FAIL, true);
                }
            }
        };

        CancelCallback cancelCallback = new CancelCallback() {
            @Override
            public void cancelled() {
                //do nothing
            }
        };

        bind();
        this.dialog = dialogFactory.createConfirmDialog(locale.connectToRemote(), this, confirmCallback, cancelCallback);
        this.devHost.setValue(true);
        this.ports = new ArrayList<Pair<String, String>>();
        updateDialog();
    }

