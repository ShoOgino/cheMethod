    private void updateStackFrameDump() {
        Debugger debugger = debuggerManager.getActiveDebugger();
        if (debugger != null && executionPoint != null) {
            Promise<StackFrameDump> promise = debugger.dumpStackFrame();
            promise.then(new Operation<StackFrameDump>() {
                @Override
                public void apply(StackFrameDump arg) throws OperationException {
                    variables = new ArrayList<>();
                    variables.addAll(arg.getFields());
                    variables.addAll(arg.getVariables());

                    view.setVariables(variables);
                }
            }).catchError(new Operation<PromiseError>() {
                @Override
                public void apply(PromiseError arg) throws OperationException {
                    Log.error(DebuggerPresenter.class, arg.getCause());
                }
            });
        }
    }

