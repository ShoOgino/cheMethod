  protected void refreshVariables(long threadId, int frameIndex) {
    view.removeAllVariables();

    Debugger debugger = debuggerManager.getActiveDebugger();
    if (debugger != null && debugger.isSuspended()) {
      Promise<? extends StackFrameDump> promise = debugger.getStackFrameDump(threadId, frameIndex);
      promise
          .then(
              stackFrameDump -> {
                if (isSameSelection(threadId, frameIndex) || view.getSelectedThreadId() == -1) {
                  variables = new LinkedList<>();
                  variables.addAll(stackFrameDump.getFields());
                  variables.addAll(stackFrameDump.getVariables());
                  view.setVariables(variables);
                }
              })
          .catchError(
              error -> {
                Log.error(DebuggerPresenter.class, error.getCause());
              });
    }
  }

