  protected void searchSource(final Location location, final AsyncCallback<VirtualFile> callback) {
    appContext
        .getWorkspaceRoot()
        .search(getPath(location), "")
        .then(
            new Operation<List<SearchResult>>() {
              @Override
              public void apply(List<SearchResult> resources) throws OperationException {
                if (resources.isEmpty()) {
                  callback.onFailure(
                      new IllegalArgumentException(location.getTarget() + " not found."));
                  return;
                }

                appContext
                    .getWorkspaceRoot()
                    .getFile(resources.get(0).getPath())
                    .then(
                        new Operation<Optional<File>>() {
                          @Override
                          public void apply(Optional<File> file) throws OperationException {
                            if (file.isPresent()) {
                              openFileAndScrollToLine(
                                  file.get(), location.getLineNumber(), callback);
                            } else {
                              callback.onFailure(
                                  new IllegalArgumentException(location + " not found."));
                            }
                          }
                        })
                    .catchError(
                        error -> {
                          callback.onFailure(
                              new IllegalArgumentException(location + " not found."));
                        });
              }
            })
        .catchError(
            error -> {
              callback.onFailure(new IllegalArgumentException(location + " not found."));
            });
  }

