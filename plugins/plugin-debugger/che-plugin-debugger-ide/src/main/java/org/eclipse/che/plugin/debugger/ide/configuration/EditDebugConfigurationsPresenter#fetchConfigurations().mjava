    /** Fetch configurations and update view. */
    private void fetchConfigurations() {
        final String originName = editedConfigurationOriginName;

        reset();
        view.setCancelButtonState(false);
        view.setSaveButtonState(false);
        view.setDebugButtonState(view.getSelectedConfiguration() != null);

        final List<DebugConfiguration> configurationsList = debugConfigurationsManager.getConfigurations();

        final Map<DebugConfigurationType, List<DebugConfiguration>> categories = new HashMap<>();

        for (DebugConfigurationType type : debugConfigurationTypeRegistry.getTypes()) {
            final List<DebugConfiguration> settingsCategory = new ArrayList<>();
            for (DebugConfiguration configuration : configurationsList) {
                if (type.getId().equals(configuration.getType().getId())) {
                    settingsCategory.add(configuration);
                    if (configuration.getName().equals(originName)) {
                        view.setSelectedConfiguration(configuration);
                    }
                }
            }

            Collections.sort(settingsCategory, new Comparator<DebugConfiguration>() {
                @Override
                public int compare(DebugConfiguration o1, DebugConfiguration o2) {
                    return o1.getName().compareTo(o2.getName());
                }
            });

            categories.put(type, settingsCategory);
        }

        view.setData(categories);
        view.setFilterState(!configurationsList.isEmpty());

        view.focusCloseButton();
    }

