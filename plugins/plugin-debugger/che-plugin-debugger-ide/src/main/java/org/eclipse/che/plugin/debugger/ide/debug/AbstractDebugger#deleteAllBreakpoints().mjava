    @Override
    public void deleteAllBreakpoints() {
        if (!isConnected()) {
            return;
        }
        Promise<Void> promise = service.deleteAllBreakpoints(debugSessionDto.getId());

        promise.then(new Operation<Void>() {
            @Override
            public void apply(Void arg) throws OperationException {
                for (DebuggerObserver observer : observers) {
                    observer.onAllBreakpointsDeleted();
                }
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                Log.error(AbstractDebugger.class, arg.getMessage());
            }
        });
    }

