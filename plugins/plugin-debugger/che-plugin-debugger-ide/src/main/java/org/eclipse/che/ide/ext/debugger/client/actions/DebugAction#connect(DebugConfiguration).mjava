    private void connect(DebugConfiguration debugConfiguration) {
        if (debuggerManager.getActiveDebugger() != null) {
            dialogFactory.createMessageDialog(localizationConstants.connectToRemote(),
                                              localizationConstants.debuggerAlreadyConnected(),
                                              null).show();
            return;
        }

        final Debugger debugger = debuggerManager.getDebugger(debugConfiguration.getType().getId());
        if (debugger != null) {
            debuggerManager.setActiveDebugger(debugger);

            Map<String, String> connectionProperties = new HashMap<>(2 + debugConfiguration.getConnectionProperties().size());
            connectionProperties.put("HOST", debugConfiguration.getHost());
            connectionProperties.put("PORT", String.valueOf(debugConfiguration.getPort()));
            connectionProperties.putAll(debugConfiguration.getConnectionProperties());

            debugger.attachDebugger(connectionProperties).catchError(new Operation<PromiseError>() {
                @Override
                public void apply(PromiseError arg) throws OperationException {
                    debuggerManager.setActiveDebugger(null);
                }
            });
        }
    }

