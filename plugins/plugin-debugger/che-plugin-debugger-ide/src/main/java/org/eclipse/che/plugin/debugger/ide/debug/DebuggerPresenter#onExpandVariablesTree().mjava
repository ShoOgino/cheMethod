  @Override
  public void onExpandVariablesTree() {
    List<? extends Variable> rootVariables = selectedVariable.getVariables();
    if (rootVariables.isEmpty()) {
      Debugger debugger = debuggerManager.getActiveDebugger();
      if (debugger != null) {
        Promise<SimpleValue> promise = debugger.getValue(selectedVariable);

        promise
            .then(
                new Operation<SimpleValue>() {
                  @Override
                  public void apply(SimpleValue arg) throws OperationException {
                    selectedVariable.setValue(arg.getValue());
                    view.setVariablesIntoSelectedVariable(arg.getVariables());
                    view.updateSelectedVariable();
                  }
                })
            .catchError(
                new Operation<PromiseError>() {
                  @Override
                  public void apply(PromiseError arg) throws OperationException {
                    notificationManager.notify(
                        constant.failedToGetVariableValueTitle(),
                        arg.getMessage(),
                        FAIL,
                        FLOAT_MODE);
                  }
                });
      }
    }
  }

