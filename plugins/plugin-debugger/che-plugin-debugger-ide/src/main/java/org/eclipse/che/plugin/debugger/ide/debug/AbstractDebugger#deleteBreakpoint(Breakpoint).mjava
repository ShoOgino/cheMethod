  @Override
  public Promise<Void> deleteBreakpoint(final Breakpoint breakpoint) {
    if (!isConnected()) {
      promiseProvider.reject("Debugger is not connected");
    }

    return service
        .deleteBreakpoint(debugSessionDto.getId(), toDto(breakpoint.getLocation()))
        .then(
            it -> {
              for (DebuggerObserver observer : observers) {
                observer.onBreakpointDeleted(breakpoint);
              }
            })
        .catchError(
            error -> {
              Log.error(AbstractDebugger.class, error.getMessage());
            });
  }

