    @Override
    public void deleteBreakpoint(final VirtualFile file, final int lineNumber) {
        if (!isConnected()) {
            return;
        }
        LocationDto locationDto = dtoFactory.createDto(LocationDto.class);
        locationDto.setLineNumber(lineNumber + 1);

        String fqn = pathToFqn(file);
        if (fqn == null) {
            return;
        }
        locationDto.setTarget(fqn);

        Promise<Void> promise = service.deleteBreakpoint(debugSessionDto.getId(), locationDto);
        promise.then(it -> {
            for (DebuggerObserver observer : observers) {
                Breakpoint breakpoint =
                        new Breakpoint(Breakpoint.Type.BREAKPOINT, lineNumber, file.getLocation().toString(), file, false);
                observer.onBreakpointDeleted(breakpoint);
            }
        }).catchError(error -> {
            Log.error(AbstractDebugger.class, error.getMessage());
        });
    }

