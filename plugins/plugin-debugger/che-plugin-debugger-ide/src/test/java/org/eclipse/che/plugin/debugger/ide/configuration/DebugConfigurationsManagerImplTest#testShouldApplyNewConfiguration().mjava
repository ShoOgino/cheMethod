    @Test
    public void testShouldApplyNewConfiguration() throws Exception {
        final String debugId = "debug";
        final String host = "localhost";
        final int port = 9000;

        when(debugConfiguration.getConnectionProperties()).thenReturn(ImmutableMap.of("prop", "value"));
        when(debugConfigurationType.getId()).thenReturn(debugId);
        when(debugConfiguration.getHost()).thenReturn(host);
        when(debugConfiguration.getPort()).thenReturn(port);
        when(debugConfiguration.getType()).thenReturn(debugConfigurationType);
        when(debuggerManager.getDebugger(debugId)).thenReturn(debugger);
        when(debugger.connect(anyMap())).thenReturn(mock(Promise.class));

        ArgumentCaptor<Map> properties = ArgumentCaptor.forClass(Map.class);

        debugConfigurationsManager.apply(debugConfiguration);

        verify(debuggerManager).setActiveDebugger(debugger);
        verify(debugger).connect(properties.capture());

        Map<String, String> m = properties.getValue();
        assertEquals(m.get("HOST"), host);
        assertEquals(m.get("PORT"), String.valueOf(port));
        assertEquals(m.get("prop"), "value");
    }

