    @Test
    public void testDeleteBreakpoint() throws Exception {
        doReturn(promiseVoid).when(service).deleteBreakpoint(DEBUGGER_ID, breakpoint);
        doReturn(promiseVoid).when(promiseVoid).then((Operation<Void>)any());

        debugger.deleteBreakpoint(file, LINE_NUMBER);

        verify(location).setLineNumber(LINE_NUMBER + 1);
        verify(location).setClassName(FQN);

        verify(breakpoint).setLocation(location);
        verify(breakpoint).setEnabled(true);

        verify(promiseVoid).then(operationVoidCaptor.capture());
        operationVoidCaptor.getValue().apply(null);
        verify(observer).onBreakpointDeleted(breakpointCaptor.capture());
        assertEquals(TEST_BREAKPOINT, breakpointCaptor.getValue());

        verify(promiseVoid).catchError(operationPromiseErrorCaptor.capture());
        operationPromiseErrorCaptor.getValue().apply(promiseError);
        verify(promiseError).getMessage();
    }

