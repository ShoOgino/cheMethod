    @Test
    public void actionShouldBePerformed() {
        DebugConfiguration debugConfiguration = mock(DebugConfiguration.class);
        when(debugConfiguration.getType()).thenReturn(mock(DebugConfigurationType.class));
        when(debugConfiguration.getHost()).thenReturn("localhost");
        when(debugConfiguration.getPort()).thenReturn(8000);
        Map<String, String> connectionProperties = new HashMap<>();
        connectionProperties.put("prop1", "val1");
        connectionProperties.put("prop2", "val2");
        when(debugConfiguration.getConnectionProperties()).thenReturn(connectionProperties);
        when(selectConfigurationAction.getSelectedConfiguration()).thenReturn(debugConfiguration);

        Debugger debugger = mock(Debugger.class);
        when(debugger.attachDebugger(anyMap())).thenReturn(mock(Promise.class));
        when(debuggerManager.getDebugger(anyString())).thenReturn(debugger);

        action.actionPerformed(null);

        ArgumentCaptor<Map> mapArgumentCaptor = ArgumentCaptor.forClass(Map.class);
        verify(debugger).attachDebugger(mapArgumentCaptor.capture());

        Map actualConnectionProperties = mapArgumentCaptor.getValue();
        assertEquals("localhost", actualConnectionProperties.get("HOST"));
        assertEquals("8000", actualConnectionProperties.get("PORT"));
        assertEquals("val1", actualConnectionProperties.get("prop1"));
        assertEquals("val2", actualConnectionProperties.get("prop2"));
    }

