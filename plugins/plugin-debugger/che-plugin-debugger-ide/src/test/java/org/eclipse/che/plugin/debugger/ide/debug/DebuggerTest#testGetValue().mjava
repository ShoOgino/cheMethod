    @Test
    public void testGetValue() throws Exception {
        final VariableDto variableDto = mock(VariableDto.class);
        final Variable variable = mock(Variable.class);
        final Promise<SimpleValueDto> promiseValue = mock(Promise.class);

        doReturn(variableDto).when(dtoFactory).createDto(VariableDto.class);
        doReturn(mock(VariablePathDto.class)).when(dtoFactory).createDto(VariablePathDto.class);
        doReturn(mock(VariablePathDto.class)).when(variable).getVariablePath();
        doReturn(Collections.emptyList()).when(variable).getVariables();
        doReturn(promiseValue).when(service).getValue(SESSION_ID, variableDto);
        doReturn(promiseValue).when(promiseValue).then((Function<SimpleValueDto, Object>)any());
        doReturn(promiseValue).when(promiseValue).catchError((Operation<PromiseError>)any());

        Promise<SimpleValue> result = debugger.getValue(variable);
        assertEquals(promiseValue, result);
    }

