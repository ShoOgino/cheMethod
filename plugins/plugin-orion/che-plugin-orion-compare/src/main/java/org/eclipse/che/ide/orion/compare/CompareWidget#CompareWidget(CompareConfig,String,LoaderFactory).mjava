  public CompareWidget(
      final CompareConfig compareConfig, final String themeId, LoaderFactory loaderFactory) {
    this.compareConfig = compareConfig;
    this.frame = new Frame(GWT.getModuleBaseURL() + "/Compare.html");
    initWidget(frame);
    setSize("100%", "100%");
    final MessageLoader loader = loaderFactory.newLoader();
    loader.show();
    frame.getElement().getStyle().setBorderStyle(Style.BorderStyle.NONE);
    AsyncPromiseHelper.RequestCall<Window> call =
        new AsyncPromiseHelper.RequestCall<Window>() {
          @Override
          public void makeCall(final AsyncCallback<Window> callback) {
            frame.addLoadHandler(
                new LoadHandler() {
                  @Override
                  public void onLoad(LoadEvent event) {
                    frame.getElement().cast();
                    iFrame = frame.getElement().cast();
                    callback.onSuccess(iFrame.getContentWindow());
                  }
                });
          }
        };
    framePromise = createFromAsyncRequest(call);
    framePromise.then(
        arg -> {
          sendThemeId(arg, themeId);
        });
    framePromise.then(
        arg -> {
          final EventListener eventListener =
              evt -> {
                sendConfig(arg, compareConfig);
                loader.hide();
              };
          arg.getDocument().addEventListener("onThemeLoaded", eventListener, false);
        });
  }

