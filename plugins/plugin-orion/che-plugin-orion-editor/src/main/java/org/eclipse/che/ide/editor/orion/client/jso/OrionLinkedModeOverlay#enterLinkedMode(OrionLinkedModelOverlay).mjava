    /** Starts Linked Mode, selects the first position and registers the listeners.
     * @param linkedModel linkedModeModel An object describing the model to be used by linked mode.
     * Contains one or more position groups. If a position in a group is edited, the other positions in
     * the same group are edited the same way. The model structure is as follows:
     * <pre>{
     *		groups: [{
     *			data: {},
     *			positions: [{
     *				offset: 10, // Relative to the text buffer
     *				length: 3
     *			}]
     *		}],
     *		escapePosition: 19, // Relative to the text buffer
     * }</pre>
     *
     * Each group in the model has an optional <code>data</code> property which can be
     * used to provide additional content assist for the group.  The <code>type</code> in
     * data determines what kind of content assist is provided. These are the support
     * structures for the <code>data</code> property.
     * <pre>{
     *		type: "link"
     *		values: ["proposal0", "proposal1", ...]
     * }</pre>
     *
     * The "link" data struture provides static content assist proposals stored in the
     * <code>values</code> property.
     */

    public final native void enterLinkedMode(OrionLinkedModelOverlay linkedModel) /*-{
        this.enterLinkedMode(linkedModel);
    }-*/;

