    public void require(final RequirejsCallback callback,
                        final RequirejsErrorHandler errorHandler,
                        final RequirejsConfig config,
                        final String[] requiredScripts,
                        final String[] moduleKeys) {
        if (!requirejsLoaded && !requirejsLoadFailed) {
            Log.debug(RequireJsLoader.class, "Loading require.js.");
            /** Using GWT.getModuleBaseForStaticFiles() blocks CodeMirror to run under Super Dev Mode */
            ScriptInjector.fromUrl(GWT.getModuleBaseURL() + "require.js")
                    .setWindow(ScriptInjector.TOP_WINDOW)
                    .setCallback(new Callback<Void, Exception>() {
                        @Override
                        public void onSuccess(final Void result) {
                            Log.debug(RequireJsLoader.class, "require.js loaded.");
                            configureGlobalErrorCallback();
                            requireScripts(callback, errorHandler, config, requiredScripts, moduleKeys);
                            requirejsLoaded = true;
                        }

                        @Override
                        public void onFailure(final Exception e) {
                            Log.error(RequireJsLoader.class, "Unable to load require.js", e);
                            requirejsLoadFailed = true;
                              }
                          }).inject();
        } else if (!requirejsLoadFailed) {
            requireScripts(callback, null, config, requiredScripts, moduleKeys);
        } else {
            Log.error(RequireJsLoader.class, "Require.js load failed, cannot require scripts.");
        }
    }

