    @Override
    public void handleEvent(Event evt) {
        if (evt instanceof KeyboardEvent) {
            final KeyboardEvent keyEvent = (KeyboardEvent)evt;
            switch (keyEvent.getKeyCode()) {
                case KeyCodes.KEY_ESCAPE:
                    Scheduler.get().scheduleDeferred(new Scheduler.ScheduledCommand() {
                        @Override
                        public void execute() {
                            hide();
                        }
                    });
                    break;

                case KeyCodes.KEY_DOWN:
                    selectNext();
                    evt.preventDefault();
                    break;

                case KeyCodes.KEY_UP:
                    selectPrevious();
                    evt.preventDefault();
                    break;

                case KeyCodes.KEY_HOME:
                    selectElement(listElement.getFirstElementChild());
                    break;

                case KeyCodes.KEY_END:
                    selectElement(listElement.getLastElementChild());
                    break;

                case KeyCodes.KEY_ENTER:
                    evt.preventDefault();
                    evt.stopImmediatePropagation();
                    validateItem(true);
                    break;

                case KeyCodes.KEY_TAB:
                    evt.preventDefault();
                    evt.stopImmediatePropagation();
                    validateItem(false);
                    break;
            }
        }
    }

