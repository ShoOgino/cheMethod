    public void showSignature(Promise<Optional<SignatureHelp>> promise, final int x, final int y) {
        this.x = x;
        this.y = y;
        promise.then(new Operation<Optional<SignatureHelp>>() {
            @Override
            public void apply(Optional<SignatureHelp> arg) throws OperationException {
                if (arg.isPresent() && !arg.get().getSignatures().isEmpty()) {
                    activeSignature = 0;
                    signatureHelp = arg.get();
                    if (signatureHelp.getActiveSignature().isPresent()) {
                        activeSignature = signatureHelp.getActiveSignature().get();
                    }

                    show();
                    render();
                    select(activeSignature);
                }
            }
        });

    }

