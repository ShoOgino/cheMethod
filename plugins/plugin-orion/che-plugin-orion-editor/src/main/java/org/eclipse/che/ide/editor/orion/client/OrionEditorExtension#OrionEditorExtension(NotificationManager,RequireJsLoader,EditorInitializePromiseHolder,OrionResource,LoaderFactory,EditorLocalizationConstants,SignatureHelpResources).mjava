    @Inject
    public OrionEditorExtension(final NotificationManager notificationManager,
                                final RequireJsLoader requireJsLoader,
                                final EditorInitializePromiseHolder editorModule,
                                final OrionResource orionResource,
                                final LoaderFactory loaderFactory,
                                final EditorLocalizationConstants constants,
                                final SignatureHelpResources signatureHelpResources) {
        this.notificationManager = notificationManager;
        this.requireJsLoader = requireJsLoader;
        this.orionResource = orionResource;
        this.loader = loaderFactory.newLoader();
        this.waitEditorMessage = constants.waitEditorInitMessage();
        signatureHelpResources.css().ensureInjected();

        Promise<Void> promise = AsyncPromiseHelper.createFromAsyncRequest(new AsyncPromiseHelper.RequestCall<Void>() {
            @Override
            public void makeCall(AsyncCallback<Void> callback) {
                injectOrion(callback);
            }
        });
        editorModule.setInitializerPromise(promise);

        KeyMode.init();
    }

