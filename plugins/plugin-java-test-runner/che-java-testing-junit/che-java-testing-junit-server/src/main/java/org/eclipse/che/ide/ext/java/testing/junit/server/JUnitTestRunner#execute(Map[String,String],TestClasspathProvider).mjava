    /**
     * {@inheritDoc}
     */
    @Override
    public TestResult execute(Map<String, String> testParameters,
                              TestClasspathProvider classpathProvider) throws Exception {

        projectPath = testParameters.get("absoluteProjectPath");
        boolean updateClasspath = Boolean.valueOf(testParameters.get("updateClasspath"));
        boolean runClass = Boolean.valueOf(testParameters.get("runClass"));
        projectClassLoader = classpathProvider.getClassLoader(projectPath, updateClasspath);
        TestResult testResult;

        try {
            Class.forName(JUNIT4X_RUNNER_CLASS, true, projectClassLoader);
            if (runClass) {
                String fqn = testParameters.get("fqn");
                testResult = run4x(fqn);
            } else {
                testResult = runAll4x();
            }
            return testResult;
        } catch (Exception ignored) {
        }

        try {
            Class.forName(JUNIT3X_RUNNER_CLASS, true, projectClassLoader);
            if (runClass) {
                String fqn = testParameters.get("fqn");
                testResult = run3x(fqn);
            } else {
                testResult = runAll3x();
            }
            return testResult;
        } catch (Exception ignored) {
        }
        return null;
    }

