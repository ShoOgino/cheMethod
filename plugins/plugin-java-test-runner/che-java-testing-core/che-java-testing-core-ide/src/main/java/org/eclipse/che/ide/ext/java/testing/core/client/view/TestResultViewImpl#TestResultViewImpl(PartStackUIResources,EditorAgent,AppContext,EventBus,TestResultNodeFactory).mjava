    @Inject
    public TestResultViewImpl(PartStackUIResources resources,
                              EditorAgent editorAgent,
                              AppContext appContext,
                              EventBus eventBus,
                              TestResultNodeFactory nodeFactory) {
        super(resources);
        this.editorAgent = editorAgent;
        this.appContext = appContext;
        this.eventBus = eventBus;
        this.nodeFactory = nodeFactory;
        splitLayoutPanel = new SplitLayoutPanel(1);
        setContentWidget(UI_BINDER.createAndBindUi(this));

        NodeUniqueKeyProvider idProvider = new NodeUniqueKeyProvider() {
            @NotNull
            @Override
            public String getKey(@NotNull Node item) {
                return String.valueOf(item.hashCode());
            }
        };

        NodeStorage nodeStorage = new NodeStorage(idProvider);
        NodeLoader nodeLoader = new NodeLoader(Collections.<NodeInterceptor>emptySet());

        resultTree = new Tree(nodeStorage, nodeLoader);

        resultTree.getSelectionModel().addSelectionHandler(new SelectionHandler<Node>() {
            @Override
            public void onSelection(SelectionEvent<Node> event) {
                Node methodNode = event.getSelectedItem();
                if (methodNode instanceof TestResultMethodNode) {
                    outputResult.setText(((TestResultMethodNode) methodNode).getStackTrace());
                }
                //Log.info(TestResultViewImpl.class, event.getSelectedItem().getName());
            }
        });

        resultTree.getElement().getStyle().setWidth(100, Style.Unit.PCT);
        resultTree.getElement().getStyle().setHeight(100, Style.Unit.PCT);
        navigationPanel.add(resultTree);

    }

