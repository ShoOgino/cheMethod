    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException,
                                                                                                                         ServletException {
        final HttpServletRequest httpRequest = (HttpServletRequest)servletRequest;
        HttpSession session = httpRequest.getSession(false);
        User user = null;
        if (session != null) {
            user = (User)session.getAttribute("codenvy_user");
        }
        if (user == null) {
            final String query = httpRequest.getQueryString();
            String username = null;
            String password = null;
            if (query != null) {
                username = getParameter("username", query);
                password = getParameter("password", query);
            }
            if (username == null) {
                username = "che@eclipse.org";
            }
            org.eclipse.che.api.user.server.dao.User daoUser;
            try {
                daoUser = userDao.getByAlias(username);
                if (password != null) {
                    userDao.authenticate(username, password);
                }
            } catch (NotFoundException | ServerException | UnauthorizedException e) {
                throw new ServletException(e);
            }
            final List<String> roles = new LinkedList<>();
            Collections.addAll(roles, "workspace/admin", "workspace/developer", "system/admin", "system/manager", "user");
            user = new UserImpl(daoUser.getName(), daoUser.getId(), "dummy_token", roles, false);
            session = httpRequest.getSession();
            session.setAttribute("codenvy_user", user);
        }
        final EnvironmentContext env = EnvironmentContext.getCurrent();
        try {
            setWorkspaceIdToContext(env, httpRequest);
            env.setUser(user);
            filterChain.doFilter(addUserInRequest(httpRequest, user), servletResponse);
        } finally {
            EnvironmentContext.reset();
        }
    }

