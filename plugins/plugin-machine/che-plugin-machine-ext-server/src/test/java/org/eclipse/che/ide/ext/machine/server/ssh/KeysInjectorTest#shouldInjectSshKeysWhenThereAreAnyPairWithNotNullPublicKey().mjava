    @Test
    public void shouldInjectSshKeysWhenThereAreAnyPairWithNotNullPublicKey() throws Exception {
        when(sshManager.getPairs(anyString(), anyString()))
                .thenReturn(Arrays.asList(new SshPairImpl("machine", "myPair", "publicKey1", null),
                                          new SshPairImpl("machine", "myPair", "publicKey2", null)));

        subscriber.onEvent(newDto(MachineStatusEvent.class).withEventType(MachineStatusEvent.EventType.RUNNING)
                                                           .withMachineId(MACHINE_ID));

        verify(machineManager).getInstance(eq(MACHINE_ID));
        verify(sshManager).getPairs(eq(OWNER_ID), eq("machine"));

        ArgumentCaptor<CreateExecParams> argumentCaptor = ArgumentCaptor.forClass(CreateExecParams.class);
        verify(docker).createExec(argumentCaptor.capture());
        assertEquals(argumentCaptor.getValue().getCmd(), new String[] {"/bin/bash", "-c", "mkdir ~/.ssh/ -p" +
                                                                                          "&& echo 'publicKey1' >> ~/.ssh/authorized_keys" +
                                                                                          "&& echo 'publicKey2' >> ~/.ssh/authorized_keys"});
        verify(docker).startExec(eq(StartExecParams.create(EXEC_ID)), anyObject());
        verifyZeroInteractions(docker, machineManager, sshManager);
    }

