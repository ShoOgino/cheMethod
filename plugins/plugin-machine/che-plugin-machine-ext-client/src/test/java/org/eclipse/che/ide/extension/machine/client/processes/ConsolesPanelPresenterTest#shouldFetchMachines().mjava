    @Test
    public void shouldFetchMachines() throws Exception {
        MachineDto machineDto = mock(MachineDto.class);
        MachineConfigDto machineConfigDto = mock(MachineConfigDto.class);
        when(machineDto.getConfig()).thenReturn(machineConfigDto);
        when(machineConfigDto.isDev()).thenReturn(true);
        when(machineDto.getStatus()).thenReturn(MachineStatus.RUNNING);
        List<MachineDto> machines = new ArrayList<>(2);
        machines.add(machineDto);

        when(appContext.getWorkspaceId()).thenReturn("workspaceID");
        DevMachineStateEvent devMachineStateEvent = mock(DevMachineStateEvent.class);
        verify(eventBus, times(4)).addHandler(anyObject(), devMachineStateHandlerCaptor.capture());

        verify(machineService).getMachines(eq(WORKSPACE_ID));
        verify(machinesPromise).then(machinesCaptor.capture());
        machinesCaptor.getValue().apply(machines);
        verify(view).setProcessesData(anyObject());
    }

