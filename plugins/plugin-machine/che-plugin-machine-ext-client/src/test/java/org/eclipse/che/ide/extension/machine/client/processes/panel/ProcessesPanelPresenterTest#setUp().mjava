    @Before
    public void setUp() {
        DevMachine devMachine = mock(DevMachine.class);
        when(devMachine.getId()).thenReturn(WORKSPACE_ID);
        when(appContext.getDevMachine()).thenReturn(devMachine);
        when(appContext.getWorkspace()).thenReturn(workspace);
        when(workspace.getRuntime()).thenReturn(workspaceRuntime);

        when(machineService.getProcesses(anyString(), anyString())).thenReturn(processesPromise);
        when(processesPromise.then(Matchers.<Operation<List<MachineProcessDto>>>anyObject())).thenReturn(processesPromise);
        when(commandConsoleFactory.create(anyString())).thenReturn(mock(OutputConsole.class));

        when(appContext.getWorkspaceId()).thenReturn(WORKSPACE_ID);

        presenter = new ProcessesPanelPresenter(view,
                                                localizationConstant,
                                                resources,
                                                eventBus,
                                                machineService,
                                                workspaceAgent,
                                                appContext,
                                                notificationManager,
                                                entityFactory,
                                                terminalFactory,
                                                commandConsoleFactory,
                                                dialogFactory,
                                                consoleTreeContextMenuFactory,
                                                commandTypeRegistry,
                                                sshService);
    }

