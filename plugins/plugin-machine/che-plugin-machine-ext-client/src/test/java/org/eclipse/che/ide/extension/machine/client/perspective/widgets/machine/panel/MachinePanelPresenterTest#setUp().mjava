    @Before
    public void setUp() {
        when(entityFactory.createMachine(machineDtoFromAPI1)).thenReturn(machine1);
        when(entityFactory.createMachine(machineDtoFromAPI2)).thenReturn(machine2);

        MachineConfigDto machineConfig1 = mock(MachineConfigDto.class);
        MachineConfigDto machineConfig2 = mock(MachineConfigDto.class);
        when(selectedMachine1.getConfig()).thenReturn(machineConfig1);
        when(selectedMachine2.getConfig()).thenReturn(machineConfig2);

        when(entityFactory.createMachineNode(isNull(MachineTreeNode.class),
                                             anyString(),
                                             Matchers.<List<MachineTreeNode>>anyObject())).thenReturn(rootNode);

        //noinspection unchecked
        when(entityFactory.createMachineNode(eq(rootNode),
                                             eq(machine2),
                                             isNull(List.class))).thenReturn(machineNode2);
        //noinspection unchecked
        when(entityFactory.createMachineNode(eq(rootNode),
                                             eq(machine1),
                                             isNull(List.class))).thenReturn(machineNode1);

        presenter = new MachinePanelPresenter(view, entityFactory, locale, appliance, eventBus, resources, appContext);

        when(appContext.getWorkspace()).thenReturn(usersWorkspace);
        when(usersWorkspace.getRuntime()).thenReturn(workspaceRuntime);
        when(usersWorkspace.getId()).thenReturn(TEXT);
    }

