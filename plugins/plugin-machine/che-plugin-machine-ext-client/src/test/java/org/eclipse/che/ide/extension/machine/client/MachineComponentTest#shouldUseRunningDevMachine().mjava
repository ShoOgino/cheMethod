    @Test
    public void shouldUseRunningDevMachine() throws Exception {
        when(machineServiceClient.getMachinesStates(anyString())).thenReturn(machinesPromise);
        when(machinesPromise.then(any(Operation.class))).thenReturn(machinesPromise);
        when(machineStateDescriptor.isDev()).thenReturn(true);
        when(machineStateDescriptor.getStatus()).thenReturn(MachineStatus.RUNNING);
        when(machineStateDescriptor.getId()).thenReturn(DEV_MACHINE_ID);
        when(appContext.getWorkspace()).thenReturn(usersWorkspaceDto);
        when(usersWorkspaceDto.getId()).thenReturn(TEXT);

        machineComponent.start(componentCallback);

        verify(machineServiceClient).getMachinesStates(anyString());
        verify(machinesPromise).then(machinesCaptor.capture());
        machinesCaptor.getValue().apply(Collections.singletonList(machineStateDescriptor));
        verify(machineStateDescriptor).isDev();
        verify(machineStateDescriptor).getStatus();
        verify(appContext).setDevMachineId(eq(DEV_MACHINE_ID));
        verify(machineManager).onMachineRunning(eq(DEV_MACHINE_ID));
        verify(componentCallback).onSuccess(eq(machineComponent));
    }

