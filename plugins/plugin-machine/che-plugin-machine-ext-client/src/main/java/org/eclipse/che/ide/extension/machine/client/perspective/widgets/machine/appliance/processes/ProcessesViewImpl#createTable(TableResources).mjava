    private CellTable<MachineProcessDto> createTable(@NotNull TableResources tableResources) {
        CellTable<MachineProcessDto> table = new CellTable<>(0, tableResources);

        TextColumn<MachineProcessDto> name = new TextColumn<MachineProcessDto>() {
            @Override
            public String getValue(MachineProcessDto descriptor) {
                return "Process " + descriptor.getPid();
            }
        };

        TextColumn<MachineProcessDto> protocol = new TextColumn<MachineProcessDto>() {
            @Override
            public String getValue(MachineProcessDto descriptor) {
                //TODO it's stub. Need add real value
                return "tcp";
            }
        };

        TextColumn<MachineProcessDto> port = new TextColumn<MachineProcessDto>() {
            @Override
            public String getValue(MachineProcessDto descriptor) {
                //TODO it's stub. Need add real value
                return "8000";
            }
        };

        TextColumn<MachineProcessDto> time = new TextColumn<MachineProcessDto>() {
            @Override
            public String getValue(MachineProcessDto descriptor) {
                //TODO it's stub. Need add real value
                return "10:12:24";
            }
        };

        TextColumn<MachineProcessDto> active = new TextColumn<MachineProcessDto>() {
            @Override
            public String getValue(MachineProcessDto descriptor) {
                boolean isActive = descriptor.isAlive();

                //TODO it's stub. Need add real value
                return isActive ? locale.processActive() : locale.processActive();
            }
        };

        table.addColumn(name, locale.processTableName());
        table.addColumn(protocol, locale.processTableProtocol());
        table.addColumn(port, locale.processTablePort());
        table.addColumn(time, locale.processTableTime());
        table.addColumn(active, locale.processTableActive());

        final SingleSelectionModel<MachineProcessDto> selectionModel = new SingleSelectionModel<>();
        selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler() {
            @Override
            public void onSelectionChange(SelectionChangeEvent event) {
                delegate.onProcessClicked(selectionModel.getSelectedObject());
            }
        });
        table.setSelectionModel(selectionModel);
        table.setLoadingIndicator(null);

        return table;
    }

