    @Inject
    public MachineExtension(MachineResources machineResources,
                            final EventBus eventBus,
                            final WorkspaceAgent workspaceAgent,
                            final ConsolesPanelPresenter consolesPanelPresenter,
                            final Provider<ServerPortProvider> machinePortProvider,
                            final OutputsContainerPresenter outputsContainerPresenter,
                            final PerspectiveManager perspectiveManager,
                            IconRegistry iconRegistry,
                            CustomCommandType arbitraryCommandType) {
        machineResources.getCss().ensureInjected();

        workspaceAgent.openPart(outputsContainerPresenter, PartStackType.INFORMATION);
        workspaceAgent.openPart(consolesPanelPresenter, PartStackType.INFORMATION);

        eventBus.addHandler(WsAgentStateEvent.TYPE, new WsAgentStateHandler() {
            @Override
            public void onWsAgentStarted(WsAgentStateEvent event) {
                machinePortProvider.get();
                perspectiveManager.setPerspectiveId(PROJECT_PERSPECTIVE_ID);
            }

            @Override
            public void onWsAgentStopped(WsAgentStateEvent event) {
            }
        });

        iconRegistry.registerIcon(new Icon(arbitraryCommandType.getId() + ".commands.category.icon", machineResources.customCommandType()));
    }

