    @Inject
    public ProcessTreeNode(@Assisted ProcessNodeType type,
                           @Assisted ProcessTreeNode parent,
                           @Assisted("data") Object data,
                           @Assisted SVGResource icon,
                           @Assisted Collection<ProcessTreeNode> children) {
        this.type = type;
        this.parent = parent;
        this.data = data;
        this.icon = icon;
        this.children = children;

        switch (type) {
            case MACHINE_NODE:
                if (data instanceof MachineEntity) {
                    MachineEntity machine = (MachineEntity)data;
                    id = machine.getId();
                    displayName = machine.getDisplayName();
                } else {
                    throw new IllegalArgumentException("Data type is not a machine setting default value");
                }

                break;
            case COMMAND_NODE:
                id = data + UUID.uuid();
                displayName = (String)data;
                break;
            case TERMINAL_NODE:
                id = data + UUID.uuid();
                displayName = (String)data;
                break;
            default:
                id = ROOT;
                displayName = ROOT;
        }
    }

