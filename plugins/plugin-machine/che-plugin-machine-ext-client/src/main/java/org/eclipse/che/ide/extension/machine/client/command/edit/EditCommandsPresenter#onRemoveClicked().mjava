    @Override
    public void onRemoveClicked() {
        final CommandImpl selectedCommand = view.getSelectedCommand();
        if (selectedCommand == null) {
            return;
        }

        final ConfirmCallback confirmCallback = new ConfirmCallback() {
            @Override
            public void accepted() {
                commandManager.remove(selectedCommand.getName()).then(new Operation<Void>() {
                    @Override
                    public void apply(Void arg) throws OperationException {
                        view.selectNeighborCommand(selectedCommand);
                        commandProcessingCallback = getCommandProcessingCallback();
                        refreshView();
                    }
                }).catchError(new Operation<PromiseError>() {
                    @Override
                    public void apply(PromiseError arg) throws OperationException {
                        dialogFactory.createMessageDialog("Error", arg.getMessage(), null).show();
                    }
                });
            }
        };

        ConfirmDialog confirmDialog = dialogFactory.createConfirmDialog(
                machineLocale.editCommandsViewRemoveTitle(),
                machineLocale.editCommandsRemoveConfirmation(selectedCommand.getName()),
                confirmCallback, null);
        confirmDialog.show();
    }

