    @Inject
    protected EditCommandsViewImpl(org.eclipse.che.ide.Resources resources,
                                   final EditCommandResources commandResources,
                                   MachineLocalizationConstant machineLocale,
                                   CoreLocalizationConstant coreLocale,
                                   IconRegistry iconRegistry) {
        this.commandResources = commandResources;
        this.machineLocale = machineLocale;
        this.coreLocale = coreLocale;
        this.iconRegistry = iconRegistry;

        commandRenderer = new CategoryRenderer<CommandImpl>() {
            @Override
            public void renderElement(Element element, CommandImpl data) {
                UIObject.ensureDebugId(element, "commandsManager-type-" + data.getType());

                element.addClassName(commandResources.getCss().categorySubElementHeader());
                element.setInnerText(data.getName().trim().isEmpty() ? "<none>" : data.getName());
                element.appendChild(createCommandButtons());
            }

            @Override
            public SpanElement renderCategory(Category<CommandImpl> category) {
                return createCategoryHeaderForCommandType(category.getTitle());
            }
        };

        commandEventDelegate = new Category.CategoryEventDelegate<CommandImpl>() {
            @Override
            public void onListItemClicked(Element listItemBase, CommandImpl itemData) {
                onCommandSelected(itemData);
            }
        };

        categories = new HashMap<>();

        commandResources.getCss().ensureInjected();

        setWidget(UI_BINDER.createAndBindUi(this));
        setTitle(machineLocale.editCommandsViewTitle());
        getWidget().getElement().setId("commandsManagerView");

        hintLabel = new Label(machineLocale.editCommandsViewHint());
        hintLabel.addStyleName(commandResources.getCss().hintLabel());

        filterInputField.getElement().setAttribute("placeholder", machineLocale.editCommandsViewPlaceholder());
        filterInputField.getElement().addClassName(commandResources.getCss().filterPlaceholder());

        categoriesList = new CategoriesList(resources);
        categoriesList.addDomHandler(new KeyDownHandler() {
            @Override
            public void onKeyDown(KeyDownEvent event) {
                switch (event.getNativeKeyCode()) {
                    case KeyboardEvent.KeyCode.INSERT:
                        delegate.onAddClicked();
                        resetFilter();
                        break;
                    case KeyboardEvent.KeyCode.DELETE:
                        delegate.onRemoveClicked();
                        break;
                }
            }
        }, KeyDownEvent.getType());
        categoriesPanel.add(categoriesList);

        createButtons();

        getWidget().getElement().getStyle().setPadding(0, Style.Unit.PX);
    }

