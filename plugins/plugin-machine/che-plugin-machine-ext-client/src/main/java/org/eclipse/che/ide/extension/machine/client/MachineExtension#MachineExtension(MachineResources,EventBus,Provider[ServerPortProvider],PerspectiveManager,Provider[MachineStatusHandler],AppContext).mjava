    @Inject
    public MachineExtension(final MachineResources machineResources,
                            final EventBus eventBus,
                            final Provider<ServerPortProvider> machinePortProvider,
                            final PerspectiveManager perspectiveManager,
                            final Provider<MachineStatusHandler> machineStatusHandlerProvider,
                            final AppContext appContext) {
        this.perspectiveManager = perspectiveManager;

        machineResources.getCss().ensureInjected();
        machineStatusHandlerProvider.get();

        eventBus.addHandler(WsAgentStateEvent.TYPE, new WsAgentStateHandler() {
            @Override
            public void onWsAgentStarted(WsAgentStateEvent event) {
                restoreTerminal();

                machinePortProvider.get();
            }

            @Override
            public void onWsAgentStopped(WsAgentStateEvent event) {
            }
        });

        eventBus.addHandler(WorkspaceStartingEvent.TYPE, new WorkspaceStartingEvent.Handler() {
            @Override
            public void onWorkspaceStarting(WorkspaceStartingEvent event) {
                maximizeTerminal();
            }
        });

        eventBus.addHandler(WorkspaceStoppedEvent.TYPE, new WorkspaceStoppedEvent.Handler() {
            @Override
            public void onWorkspaceStopped(WorkspaceStoppedEvent event) {
                maximizeTerminal();
            }
        });

        if (appContext.getWorkspace() == null || WorkspaceStatus.RUNNING != appContext.getWorkspace().getStatus()) {
            maximizeTerminal();
        }
    }

