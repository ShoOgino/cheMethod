    @Inject
    public MachineAppliancePresenter(EventBus eventBus,
                                     PartsComparator partsComparator,
                                     PartStackEventHandler partStackEventHandler,
                                     MachineApplianceView view,
                                     final MachineLocalizationConstant locale,
                                     WidgetsFactory widgetsFactory,
                                     EntityFactory entityFactory,
                                     TabItemFactory tabItemFactory,
                                     final TerminalContainer terminalContainer,
                                     MachineInfoPresenter infoPresenter,
                                     RecipesContainerPresenter recipesContainer,
                                     ServerPresenter serverPresenter,
                                     RecipeTabPresenter recipeTabPresenter,
                                     TabContainerPresenter tabContainer) {
        super(eventBus, partStackEventHandler, tabItemFactory, partsComparator, view, null);

        this.view = view;
        this.tabContainer = tabContainer;
        this.terminalContainer = terminalContainer;
        this.recipesContainerPresenter = recipesContainer;
        this.infoPresenter = infoPresenter;
        this.recipeTabPresenter = recipeTabPresenter;
        this.serverPresenter = serverPresenter;
        this.widgetsFactory = widgetsFactory;
        this.entityFactory = entityFactory;
        this.locale = locale;

        final String terminalTabName = locale.tabTerminal();
        final String infoTabName = locale.tabInfo();
        final String serverTabName = locale.tabServer();

        TabSelectHandler terminalHandler = new TabSelectHandler() {
            @Override
            public void onTabSelected() {
                selectedMachine.setActiveTabName(terminalTabName);

                terminalContainer.addOrShowTerminal(selectedMachine);
            }
        };
        createAndAddTab(terminalTabName, terminalContainer, terminalHandler);

        TabSelectHandler infoHandler = new TabSelectHandler() {
            @Override
            public void onTabSelected() {
                selectedMachine.setActiveTabName(infoTabName);
            }
        };
        createAndAddTab(infoTabName, infoPresenter, infoHandler);

        TabSelectHandler serverHandler = new TabSelectHandler() {
            @Override
            public void onTabSelected() {
                selectedMachine.setActiveTabName(serverTabName);
            }
        };
        createAndAddTab(serverTabName, serverPresenter, serverHandler);

        this.view.addContainer(tabContainer.getView());
        this.view.addContainer(recipesContainer.getView());

        eventBus.addHandler(ActivePartChangedEvent.TYPE, this);
    }

