    @Inject
    public CommandOutputConsolePresenter(OutputConsoleView view,
                                         DtoUnmarshallerFactory dtoUnmarshallerFactory,
                                         final MessageBusProvider messageBusProvider,
                                         MachineServiceClient machineServiceClient,
                                         MachineResources resources,
                                         CommandManager commandManager,
                                         EventBus eventBus,
                                         @Assisted CommandConfiguration commandConfiguration,
                                         @Assisted String machineId) {
        this.view = view;
        this.dtoUnmarshallerFactory = dtoUnmarshallerFactory;
        this.machineServiceClient = machineServiceClient;
        this.resources = resources;
        this.commandConfiguration = commandConfiguration;
        this.machineId = machineId;
        this.messageBus = messageBusProvider.getMessageBus();
        this.eventBus = eventBus;

        view.setDelegate(this);

        final String previewUrl = commandConfiguration.getAttributes().get(PREVIEW_URL_ATTR);
        if (!isNullOrEmpty(previewUrl)) {
            view.printPreviewUrl(commandManager.substituteProperties(previewUrl));
        } else {
            view.hidePreview();
        }
    }

