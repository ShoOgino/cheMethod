    @Inject
    public SelectCommandComboBox(MachineLocalizationConstant locale,
                                 MachineResources resources,
                                 ActionManager actionManager,
                                 EventBus eventBus,
                                 DropDownListFactory dropDownListFactory,
                                 WorkspaceServiceClient workspaceServiceClient,
                                 MachineServiceClient machineServiceClient,
                                 CommandTypeRegistry commandTypeRegistry,
                                 EditCommandsPresenter editCommandsPresenter,
                                 AppContext appContext) {
        super(Collections.singletonList(PROJECT_PERSPECTIVE_ID),
              locale.selectCommandControlTitle(),
              locale.selectCommandControlDescription(),
              null, null);
        this.locale = locale;
        this.resources = resources;
        this.actionManager = actionManager;
        this.workspaceServiceClient = workspaceServiceClient;
        this.machineServiceClient = machineServiceClient;
        this.commandTypeRegistry = commandTypeRegistry;
        this.workspaceId = appContext.getWorkspaceId();

        this.registeredMachineMap = new HashMap<>();
        this.commands = new ArrayList<>();

        this.machinesListWidget = dropDownListFactory.createDropDown(GROUP_MACHINES);
        this.commandsListWidget = dropDownListFactory.createDropDown(GROUP_COMMANDS);

        editCommandsPresenter.addConfigurationsChangedListener(this);

        commandActions = new DefaultActionGroup(GROUP_COMMANDS, false, actionManager);
        actionManager.registerAction(GROUP_COMMANDS, commandActions);

        machinesActions = new DefaultActionGroup(GROUP_MACHINES, false, actionManager);
        actionManager.registerAction(GROUP_MACHINES, machinesActions);

        eventBus.addHandler(WsAgentStateEvent.TYPE, this);
        eventBus.addHandler(MachineStateEvent.TYPE, this);
    }

