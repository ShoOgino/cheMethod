    @Inject
    public MachineAppliancePresenter(EventBus eventBus,
                                     PartMenu partMenu,
                                     PartsComparator partsComparator,
                                     PartStackEventHandler partStackEventHandler,
                                     MachineApplianceView view,
                                     final MachineLocalizationConstant locale,
                                     WidgetsFactory widgetsFactory,
                                     EntityFactory entityFactory,
                                     TabItemFactory tabItemFactory,
                                     MachineInfoPresenter infoPresenter,
                                     RecipesContainerPresenter recipesContainer,
                                     ServerPresenter serverPresenter,
                                     RecipeTabPresenter recipeTabPresenter,
                                     TabContainerPresenter tabContainer) {
        super(eventBus, partMenu, partStackEventHandler, tabItemFactory, partsComparator, view, null);

        this.view = view;
        this.tabContainer = tabContainer;
        this.recipesContainerPresenter = recipesContainer;
        this.infoPresenter = infoPresenter;
        this.recipeTabPresenter = recipeTabPresenter;
        this.serverPresenter = serverPresenter;
        this.widgetsFactory = widgetsFactory;
        this.entityFactory = entityFactory;
        this.locale = locale;
        this.activeTabs = new HashMap<>();

        final String infoTabName = locale.tabInfo();
        final String serverTabName = locale.tabServer();

        TabSelectHandler infoHandler = new TabSelectHandler() {
            @Override
            public void onTabSelected() {
                activeTabs.put(selectedMachine.getId(), infoTabName);
            }
        };
        createAndAddTab(infoTabName, infoPresenter, infoHandler);

        TabSelectHandler serverHandler = new TabSelectHandler() {
            @Override
            public void onTabSelected() {
                activeTabs.put(selectedMachine.getId(), serverTabName);
            }
        };
        createAndAddTab(serverTabName, serverPresenter, serverHandler);

        this.view.addContainer(tabContainer.getView());
        this.view.addContainer(recipesContainer.getView());

        eventBus.addHandler(ActivePartChangedEvent.TYPE, this);
    }

