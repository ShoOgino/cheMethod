    @Inject
    public OperationsPerspective(PerspectiveViewImpl view,
                                 PartStackViewFactory partViewFactory,
                                 WorkBenchControllerFactory controllerFactory,
                                 PartStackPresenterFactory stackPresenterFactory,
                                 MachinePanelPresenter machinePanel,
                                 RecipePartPresenter recipePanel,
                                 NotificationManager notificationManager,
                                 MachineAppliancePresenter infoContainer,
                                 EventBus eventBus,
                                 DynaProvider dynaProvider) {
        super(OPERATIONS_PERSPECTIVE_ID, view, stackPresenterFactory, partViewFactory, controllerFactory, eventBus, dynaProvider);

        notificationManager.addRule(OPERATIONS_PERSPECTIVE_ID);

        //central panel
        partStacks.put(EDITING, infoContainer);

        addPart(notificationManager, INFORMATION, FIRST);
        addPart(machinePanel, NAVIGATION);
        addPart(recipePanel, NAVIGATION);

        setActivePart(machinePanel);
        PartStack information = getPartStack(INFORMATION);
        PartStack navigation = getPartStack(NAVIGATION);
        PartStack editing = getPartStack(EDITING);

        if (information == null || navigation == null || editing == null) {
            return;
        }

        information.updateStack();

        information.go(view.getInformationPanel());
        navigation.go(view.getNavigationPanel());
        editing.go(view.getEditorPanel());
        openActivePart(INFORMATION);
        openActivePart(NAVIGATION);
    }

