    private void addToolButtons() {
        String toolButtonStyle = machineResources.getCss().consolesActiveToolButton();
        splitVerticallyButton = new ToolButton(FontAwesome.COLUMNS);
        splitVerticallyButton.addClickHandler(new ClickHandler() {
            @Override
            public void onClick(ClickEvent event) {
                delegate.onSplitVerticallyClick();
            }
        });
        addToolButton(splitVerticallyButton);
        addToolTip(splitVerticallyButton, localizationConstant.consolesSplitVerticallyTooltip());
        splitVerticallyButton.getElement().getFirstChildElement().addClassName(toolButtonStyle);

        splitHorizontallyButton = new ToolButton(FontAwesome.MINUS_SQUARE_O);
        splitHorizontallyButton.getElement().getFirstChildElement().addClassName(toolButtonStyle);
        splitHorizontallyButton.addClickHandler(new ClickHandler() {
            @Override
            public void onClick(ClickEvent event) {
                delegate.onSplitHorizontallyClick();
            }
        });
        addToolButton(splitHorizontallyButton);
        addToolTip(splitHorizontallyButton, localizationConstant.consolesSplitHorizontallyTooltip());

        defaultModeButton = new ToolButton(FontAwesome.SQUARE_O);
        defaultModeButton.getElement().getFirstChildElement().addClassName(toolButtonStyle);
        defaultModeButton.addClickHandler(new ClickHandler() {
            @Override
            public void onClick(ClickEvent event) {
                delegate.onDefaultModeClick();
            }
        });
        addToolButton(defaultModeButton);
        addToolTip(defaultModeButton, localizationConstant.consolesDefaultModeTooltip());
    }

