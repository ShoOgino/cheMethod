    private void updateMachineActions() {
        machinesActions.removeAll();
        final DefaultActionGroup actionList = (DefaultActionGroup)actionManager.getAction(GROUP_MACHINES_LIST);
        if (actionList != null) {
            machinesActions.addAll(actionList);
        }
        if (registeredMachineMap.isEmpty()) {
            return;
        }

        final List<Map.Entry<String, MachineDto>> machineEntryList = new LinkedList(registeredMachineMap.entrySet());
        // defined MachineDto Comparator here
        Collections.sort(machineEntryList, new MachineDtoListEntryComparator());

        String machineCategory = null;
        for (Map.Entry<String, MachineDto> machineEntry : machineEntryList) {
            final MachineDto machine = machineEntry.getValue();
            final MachineConfigDto machineConfig = machine.getConfig();

            if (!this.getMachineCategory(machineConfig).equals(machineCategory)) {
                machineCategory = this.getMachineCategory(machineConfig);
                machinesActions.addSeparator(machineCategory);
            }
            machinesActions.add(machinesListWidget.createAction(machine.getId(), machineConfig.getName()));
        }

        machinesListWidget.updatePopup();

        if (machinesListWidget.getSelectedName() == null && machinesActions.getChildrenCount() > 0) {
            MachineDto firstMachine = machineEntryList.get(0).getValue();
            if (firstMachine == null) {
                return;
            }
            machinesListWidget.selectElement(firstMachine.getId(), firstMachine.getConfig().getName());
        }
    }

