    private void renderCategoriesList(Map<CommandType, List<CommandConfiguration>> categories) {
        if (categories == null) {
            return;
        }

        final List<Category<?>> categoriesList = new ArrayList<>();

        for (CommandType type : categories.keySet()) {
            List<CommandConfiguration> configurations = new ArrayList<>();
            if (filterTextValue.isEmpty()) {
                configurations = categories.get(type);
            } else {  // filtering List
                for (final CommandConfiguration configuration : categories.get(type)) {
                    if (configuration.getName().contains(filterTextValue)) {
                        configurations.add(configuration);
                    }
                }
            }
            Category<CommandConfiguration> category =
                    new Category<>(type.getId(), commandConfigurationRenderer, configurations, commandConfigurationDelegate);
            categoriesList.add(category);
        }
        list.clear();
        list.render(categoriesList);
        if (selectConfiguration != null) {
            list.selectElement(selectConfiguration);
            if (filterTextValue.isEmpty()) {
                selectText(configurationName.getElement());
            }
        } else {
            contentPanel.clear();
            contentPanel.add(hintLabel);
            savePanel.setVisible(false);
            previewUrlPanel.setVisible(false);
        }
    }

