    /**
     * Deletes specified  target.
     *
     * @param target
     *          target to delete
     */
    private void deleteTarget(final Target target) {
        Promise<Void> deletePromice = recipeServiceClient.removeRecipe(target.getRecipe().getId());
        deletePromice.then(new Operation<Void>() {
            @Override
            public void apply(Void arg) throws OperationException {
                targets.remove(target);
                view.showTargets(targets);

                view.selectTarget(null);
                view.showHintPanel();

                notificationManager.notify(machineLocale.targetsViewDeleteSuccess(target.getName()), SUCCESS, FLOAT_MODE);
            }
        });

        deletePromice.catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                dialogFactory.createMessageDialog("Error", machineLocale.targetsViewDeleteError(target.getName()), null).show();
            }
        });
    }

