    /** Get the list of all available machines. */
    public void fetchMachines() {
        String workspaceId = appContext.getWorkspaceId();

        Promise<List<MachineDto>> machinesPromise = machineService.getWorkspaceMachines(workspaceId);

        machinesPromise.then(new Operation<List<MachineDto>>() {
            @Override
            public void apply(List<MachineDto> machines) throws OperationException {
                List<ProcessTreeNode> rootChildren = new ArrayList<>();

                rootNode = new ProcessTreeNode(ROOT_NODE, null, null, null, rootChildren);
                for (MachineDto descriptor : machines) {
                    if (descriptor.isDev()) {
                        List<ProcessTreeNode> processTreeNodes = new ArrayList<ProcessTreeNode>();
                        ProcessTreeNode machineNode = new ProcessTreeNode(MACHINE_NODE, rootNode, descriptor, null, processTreeNodes);
                        rootChildren.add(machineNode);
                        view.setProcessesData(rootNode);

                        restoreState(descriptor.getId());
                    }
                }

            }
        });
    }

