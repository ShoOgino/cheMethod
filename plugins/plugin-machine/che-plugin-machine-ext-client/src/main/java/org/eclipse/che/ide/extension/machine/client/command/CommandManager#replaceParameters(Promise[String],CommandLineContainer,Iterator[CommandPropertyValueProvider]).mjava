    private Promise<String> replaceParameters(Promise<String> promise,
                                              CommandLineContainer commandLineContainer,
                                              Iterator<CommandPropertyValueProvider> iterator) {
        if (!iterator.hasNext()) {
            return promise;
        }

        final CommandPropertyValueProvider provider = iterator.next();

        Promise<String> derivedPromise = promise.thenPromise(proceedRefactoringMove(commandLineContainer, provider));

        return replaceParameters(derivedPromise, commandLineContainer, iterator);
    }

