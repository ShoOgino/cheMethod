    @Inject
    public RecipeEditorViewImpl(MachineResources resources, MachineLocalizationConstant locale, WidgetsFactory widgetFactory) {
        this.resources = resources;
        this.widgetFactory = widgetFactory;

        initWidget(UI_BINDER.createAndBindUi(this));

        EditorButtonWidget.ActionDelegate createDelegate = new EditorButtonWidget.ActionDelegate() {
            @Override
            public void onButtonClicked() {
                delegate.onNewButtonClicked();
            }
        };
        createButton(locale.editorButtonNew(), createDelegate, EditorButtonWidgetImpl.Background.BLUE);

        EditorButtonWidget.ActionDelegate cloneDelegate = new EditorButtonWidget.ActionDelegate() {
            @Override
            public void onButtonClicked() {
                delegate.onCloneButtonClicked();
            }
        };
        cloneBtn = createButton(locale.editorButtonClone(), cloneDelegate, EditorButtonWidgetImpl.Background.GREY);

        EditorButtonWidget.ActionDelegate saveDelegate = new EditorButtonWidget.ActionDelegate() {
            @Override
            public void onButtonClicked() {
                delegate.onSaveButtonClicked();
            }
        };
        saveBtn = createButton(locale.editorButtonSave(), saveDelegate, EditorButtonWidgetImpl.Background.GREY);

        EditorButtonWidget.ActionDelegate deleteDelegate = new EditorButtonWidget.ActionDelegate() {
            @Override
            public void onButtonClicked() {
                delegate.onDeleteButtonClicked();
            }
        };
        deleteBtn = createButton(locale.editorButtonDelete(), deleteDelegate, EditorButtonWidgetImpl.Background.GREY);

        EditorButtonWidget.ActionDelegate cancelDelegate = new EditorButtonWidget.ActionDelegate() {
            @Override
            public void onButtonClicked() {
                delegate.onCancelButtonClicked();
            }
        };
        cancelBtn = createButton(locale.editorButtonCancel(), cancelDelegate, EditorButtonWidgetImpl.Background.GREY);
    }

