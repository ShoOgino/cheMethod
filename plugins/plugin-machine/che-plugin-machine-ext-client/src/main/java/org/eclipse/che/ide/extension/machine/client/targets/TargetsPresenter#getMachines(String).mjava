    public Promise<List<MachineEntity>> getMachines(String workspaceId) {
        return workspaceServiceClient.getWorkspace(workspaceId).then(new Function<WorkspaceDto, List<MachineEntity>>() {
            @Override
            public List<MachineEntity> apply(WorkspaceDto workspace) throws FunctionException {
                WorkspaceRuntimeDto workspaceRuntime = workspace.getRuntime();
                if (workspaceRuntime == null) {
                    return emptyList();
                }

                List<MachineDto> runtimeMachines = workspaceRuntime.getMachines();
                List<MachineEntity> machines = new ArrayList<>(runtimeMachines.size());
                for (MachineDto machineDto : runtimeMachines) {
                    MachineEntity machineEntity = entityFactory.createMachine(machineDto);
                    machines.add(machineEntity);
                }
                return machines;
            }
        });
    }

