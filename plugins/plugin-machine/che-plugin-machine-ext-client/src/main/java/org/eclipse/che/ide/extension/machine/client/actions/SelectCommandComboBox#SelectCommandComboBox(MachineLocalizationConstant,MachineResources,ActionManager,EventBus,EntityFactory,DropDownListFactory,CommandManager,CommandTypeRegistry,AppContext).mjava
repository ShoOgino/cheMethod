    @Inject
    public SelectCommandComboBox(MachineLocalizationConstant locale,
                                 MachineResources resources,
                                 ActionManager actionManager,
                                 EventBus eventBus,
                                 EntityFactory entityFactory,
                                 DropDownListFactory dropDownListFactory,
                                 CommandManager commandManager,
                                 CommandTypeRegistry commandTypeRegistry,
                                 AppContext appContext) {
        super(Collections.singletonList(PROJECT_PERSPECTIVE_ID),
              locale.selectCommandControlTitle(),
              locale.selectCommandControlDescription(),
              null, null);

        this.locale = locale;
        this.resources = resources;
        this.actionManager = actionManager;
        this.commandManager = commandManager;
        this.entityFactory = entityFactory;
        this.commandTypeRegistry = commandTypeRegistry;
        this.appContext = appContext;

        this.registeredMachineMap = new HashMap<>();
        this.commands = new ArrayList<>();

        this.machinesListWidget = dropDownListFactory.createDropDown(GROUP_MACHINES);
        this.commandsListWidget = dropDownListFactory.createDropDown(GROUP_COMMANDS);

        commandManager.addCommandChangedListener(this);

        commandActions = new DefaultActionGroup(GROUP_COMMANDS, false, actionManager);
        actionManager.registerAction(GROUP_COMMANDS, commandActions);

        machinesActions = new DefaultActionGroup(GROUP_MACHINES, false, actionManager);
        actionManager.registerAction(GROUP_MACHINES, machinesActions);

        eventBus.addHandler(WsAgentStateEvent.TYPE, this);
        eventBus.addHandler(MachineStateEvent.TYPE, this);
        eventBus.addHandler(WorkspaceStartedEvent.TYPE, this);
        eventBus.addHandler(WorkspaceStoppedEvent.TYPE, this);
    }

