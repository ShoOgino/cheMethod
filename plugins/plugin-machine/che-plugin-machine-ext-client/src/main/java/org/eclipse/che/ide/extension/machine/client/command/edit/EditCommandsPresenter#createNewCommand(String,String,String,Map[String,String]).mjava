    private void createNewCommand(final String type,
                                  final String commandLine,
                                  final String name,
                                  final Map<String, String> attributes) {
        if (!isViewModified()) {
            createCommand(type, commandLine, name, attributes);
            return;
        }

        final ConfirmCallback saveCallback = new ConfirmCallback() {
            @Override
            public void accepted() {
                updateCommand(editedCommand).then(new Operation<CommandImpl>() {
                    @Override
                    public void apply(CommandImpl arg) throws OperationException {
                        createCommand(type, commandLine, name, attributes);
                    }
                });
            }
        };

        final ConfirmCallback discardCallback = new ConfirmCallback() {
            @Override
            public void accepted() {
                refreshView();
                createCommand(type, commandLine, name, attributes);
            }
        };

        ChoiceDialog dialog = dialogFactory.createChoiceDialog(
                machineLocale.editCommandsSaveChangesTitle(),
                machineLocale.editCommandsSaveChangesConfirmation(editedCommand.getName()),
                coreLocale.save(),
                machineLocale.editCommandsSaveChangesDiscard(),
                saveCallback, discardCallback);
        dialog.show();
    }

