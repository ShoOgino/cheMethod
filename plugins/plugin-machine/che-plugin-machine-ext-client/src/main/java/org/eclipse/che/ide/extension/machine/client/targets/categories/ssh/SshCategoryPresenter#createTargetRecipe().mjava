    /**
     * Create a new target recipe and save it.
     */
    private void createTargetRecipe() {
        List<String> tags = new ArrayList<>();
        tags.add(this.getCategory());

        NewRecipe newRecipe = dtoFactory.createDto(NewRecipe.class)
                                        .withName(selectedTarget.getName())
                                        .withType(getCategory())
                                        .withScript("{" +
                                                    "\"host\": \"" + selectedTarget.getHost() + "\", " +
                                                    "\"port\": \"" + selectedTarget.getPort() + "\", " +
                                                    "\"username\": \"" + selectedTarget.getUserName() + "\", " +
                                                    "\"password\": \"" + selectedTarget.getPassword() + "\"" +
                                                    "}")
                                        .withTags(tags);

        Promise<RecipeDescriptor> createRecipe = recipeServiceClient.createRecipe(newRecipe);
        createRecipe.then(new Operation<RecipeDescriptor>() {
            @Override
            public void apply(RecipeDescriptor recipe) throws OperationException {
                onTargetSaved(recipe);
            }
        });

        createRecipe.catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                dialogFactory.createMessageDialog("Error", machineLocale.targetsViewSaveError(), null).show();
            }
        });
    }

