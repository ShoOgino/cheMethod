    @Test
    public void testSteps() throws Exception {
        debugger.stepOver(new StepOverActionImpl());

        ArgumentCaptor<SuspendEvent> suspendEventCaptor = ArgumentCaptor.forClass(SuspendEvent.class);
        verify(callback, atLeastOnce()).onEvent(suspendEventCaptor.capture());
        SuspendEvent suspendEvent = suspendEventCaptor.getValue();
        assertEquals(suspendEvent.getLocation().getLineNumber(), 2);
        assertTrue(suspendEvent.getLocation().getTarget().endsWith("app.js"));

        debugger.stepInto(new StepIntoActionImpl());
        verify(callback, atLeastOnce()).onEvent(suspendEventCaptor.capture());
        suspendEvent = suspendEventCaptor.getValue();
        assertEquals(suspendEvent.getLocation().getLineNumber(), 5);
        assertTrue(suspendEvent.getLocation().getTarget().endsWith("app.js"));

        debugger.stepOut(new StepOutActionImpl());
        verify(callback, atLeastOnce()).onEvent(suspendEventCaptor.capture());
        suspendEvent = suspendEventCaptor.getValue();
        assertEquals(suspendEvent.getLocation().getLineNumber(), 9);
        assertTrue(suspendEvent.getLocation().getTarget().endsWith("app.js"));
    }

