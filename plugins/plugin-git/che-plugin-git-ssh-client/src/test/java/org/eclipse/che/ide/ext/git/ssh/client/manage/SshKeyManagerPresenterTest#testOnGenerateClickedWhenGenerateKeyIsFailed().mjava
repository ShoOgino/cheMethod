    @Test
    public void testOnGenerateClickedWhenGenerateKeyIsFailed() throws OperationException {
        InputDialog inputDialog = mock(InputDialog.class);
        when(dialogFactory.createInputDialog(anyString(), anyString(), (InputCallback)anyObject(), (CancelCallback)anyObject()))
                .thenReturn(inputDialog);

        presenter.onGenerateClicked();

        verify(dialogFactory).createInputDialog(anyString(), anyString(),
                                                inputCallbackCaptor.capture(), cancelCallbackCaptor.capture());
        InputCallback inputCallback = inputCallbackCaptor.getValue();
        inputCallback.accepted(GITHUB_HOST);

        verify(sshPairDTOPromise).catchError(operationErrorCapture.capture());
        operationErrorCapture.getValue().apply(JsPromiseError.create(""));

        verify(service).generatePair(Matchers.eq(SshKeyManagerPresenter.GIT_SSH_SERVICE), eq(GITHUB_HOST));
        verify(service, never()).getPairs(Matchers.eq(SshKeyManagerPresenter.GIT_SSH_SERVICE));
        verify(view, never()).setPairs((List<SshPairDto>)anyObject());
        verify(notificationManager).notify(anyString(), anyString(), any(StatusNotification.Status.class), anyBoolean());
    }

