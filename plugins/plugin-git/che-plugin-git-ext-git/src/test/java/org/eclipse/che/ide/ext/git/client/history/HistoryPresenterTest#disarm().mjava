    @Override
    public void disarm() {
        super.disarm();

        Resource resource = mock(Resource.class);
        when(resource.getLocation()).thenReturn(EMPTY);
        when(appContext.getResource()).thenReturn(resource);
        when(appContext.getRootProject()).thenReturn(project);

        when(service.log(any(DevMachine.class),
                         any(Path.class),
                         any(Path[].class),
                         anyInt(),
                         anyInt(),
                         anyBoolean()))
                .thenReturn(logPromise);
        when(service.diff(any(DevMachine.class),
                          any(Path.class),
                          anyList(),
                          any(DiffType.class),
                          anyBoolean(),
                          anyInt(),
                          anyString(),
                          anyString()))
                .thenReturn(stringPromise);
        when(service.showFileContent(any(DevMachine.class),
                                     any(Path.class),
                                     any(Path.class),
                                     anyString()))
                .thenReturn(showPromise);
        when(stringPromise.then(any(Operation.class))).thenReturn(stringPromise);
        when(stringPromise.catchError(any(Operation.class))).thenReturn(stringPromise);
        when(logPromise.then(any(Operation.class))).thenReturn(logPromise);
        when(logPromise.catchError(any(Operation.class))).thenReturn(logPromise);
        when(constant.historyTitle()).thenReturn("title");
        when(constant.historyNothingToDisplay()).thenReturn("error message");
        when(constant.compareReadOnlyTitle()).thenReturn("(Read only)");
    }

