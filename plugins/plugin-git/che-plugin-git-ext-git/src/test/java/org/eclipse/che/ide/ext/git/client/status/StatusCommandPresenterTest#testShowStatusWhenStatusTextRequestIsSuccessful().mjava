    @Test
    public void testShowStatusWhenStatusTextRequestIsSuccessful() throws Exception {
        doAnswer(new Answer<AsyncRequestCallback<String>>() {
            @Override
            public AsyncRequestCallback<String> answer(InvocationOnMock invocation) throws Throwable {
                Object[] arguments = invocation.getArguments();
                AsyncRequestCallback<String> callback = (AsyncRequestCallback<String>)arguments[2];
                Method onSuccess = GwtReflectionUtils.getMethod(callback.getClass(), "onSuccess");
                onSuccess.invoke(callback, EMPTY_TEXT);
                return callback;
            }
        }).when(service).statusText(devMachine,
                                    Matchers.<ProjectConfigDto>anyObject(),
                                    Matchers.<StatusFormat>anyObject(),
                                    Matchers.<AsyncRequestCallback<String>>anyObject());

        presenter.showStatus();

        verify(appContext).getCurrentProject();
        verify(service).statusText(eq(devMachine),
                                   eq(rootProjectConfig),
                                   eq(IS_NOT_FORMATTED),
                                   Matchers.<AsyncRequestCallback<String>>anyObject());
    }

