    @Test
    public void testShowListOfRemoteBranchesAndSelectUpstreamBranch() throws Exception {
        final List<Branch> remoteBranches = new ArrayList<>();
        remoteBranches.add(remoteBranch);

        final String upstreamBranchName = "upstream";
        Map<String, String> configs = new HashMap<>();
        configs.put("branch." + view.getLocalBranch() + ".remote", REPOSITORY_NAME);
        configs.put("branch." + view.getLocalBranch() + ".merge", upstreamBranchName);

        Branch upstream = mock(Branch.class);
        when(dtoFactory.createDto(eq(Branch.class))).thenReturn(upstream);
        when(upstream.withActive(anyBoolean())).thenReturn(upstream);
        when(upstream.withRemote(anyBoolean())).thenReturn(upstream);
        when(upstream.withDisplayName(anyString())).thenReturn(upstream);
        when(upstream.withName(anyString())).thenReturn(upstream);

        when(upstream.getDisplayName()).thenReturn(upstreamBranchName);
        when(upstream.getName()).thenReturn("refs/remotes/" + REPOSITORY_NAME + "/" + upstreamBranchName);
        when(upstream.isRemote()).thenReturn(true);

        List<String> list = new ArrayList<>();
        list.add(remoteBranch.getDisplayName());
        when(branchSearcher.getRemoteBranchesToDisplay((BranchFilterByRemote)anyObject(), (List<Branch>)anyObject())).thenReturn(list);

        presenter.updateRemoteBranches();

        verify(service).branchList(anyString(), anyObject(), eq("r"), asyncRequestCallbackArrayBranchCaptor.capture());
        AsyncRequestCallback<List<Branch>> value = asyncRequestCallbackArrayBranchCaptor.getValue();
        Method onSuccessRemotes = GwtReflectionUtils.getMethod(value.getClass(), "onSuccess");
        onSuccessRemotes.invoke(value, remoteBranches);

        verify(service).config(anyString(), anyObject(), anyListOf(String.class), anyBoolean(),
                               asyncRequestCallbackMapCaptor.capture());
        AsyncRequestCallback<Map<String, String>> mapCallback = asyncRequestCallbackMapCaptor.getValue();
        Method onSuccessConfig = GwtReflectionUtils.getMethod(mapCallback.getClass(), "onSuccess");
        onSuccessConfig.invoke(mapCallback, configs);

        verify(branchSearcher).getRemoteBranchesToDisplay((BranchFilterByRemote)anyObject(), eq(remoteBranches));
        verify(view).setRemoteBranches((List<String>)anyObject());
        verify(view).selectRemoteBranch(upstreamBranchName);
    }

