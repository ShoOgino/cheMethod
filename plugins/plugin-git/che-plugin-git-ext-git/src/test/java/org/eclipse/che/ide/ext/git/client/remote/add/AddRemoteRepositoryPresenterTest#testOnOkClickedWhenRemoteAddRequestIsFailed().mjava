    @Test
    public void testOnOkClickedWhenRemoteAddRequestIsFailed() throws Exception {
        doAnswer(new Answer() {
            @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                Object[] arguments = invocation.getArguments();
                AsyncRequestCallback<String> callback = (AsyncRequestCallback<String>)arguments[3];
                Method onFailure = GwtReflectionUtils.getMethod(callback.getClass(), "onFailure");
                onFailure.invoke(callback, mock(Throwable.class));
                return callback;
            }
        }).when(service).remoteAdd(devMachine, anyObject(), anyString(), anyString(), (AsyncRequestCallback<String>)anyObject());


        presenter.showDialog(callback);
        presenter.onOkClicked();

        verify(service).remoteAdd(eq(devMachine), anyObject(), eq(REMOTE_NAME), eq(REMOTE_URI), (AsyncRequestCallback<String>)anyObject());
        verify(callback).onFailure((Throwable)anyObject());
    }

