    @Test
    public void testShowErrorNotificationWhenUpstreanBranchFailedToLoad() throws Exception {
        presenter.updateRemoteBranches();

        verify(service).branchList(anyString(), anyObject(), eq("r"), asyncRequestCallbackArrayBranchCaptor.capture());
        AsyncRequestCallback<List<Branch>> remoteBranches = asyncRequestCallbackArrayBranchCaptor.getValue();
        Method onSuccess = GwtReflectionUtils.getMethod(remoteBranches.getClass(), "onSuccess");
        onSuccess.invoke(remoteBranches, new ArrayList<>());

        verify(service).config(anyString(), anyObject(), anyListOf(String.class), anyBoolean(),
                               asyncRequestCallbackMapCaptor.capture());
        AsyncRequestCallback<Map<String, String>> mapCallback = asyncRequestCallbackMapCaptor.getValue();
        Method onFailureConfig = GwtReflectionUtils.getMethod(mapCallback.getClass(), "onFailure");
        onFailureConfig.invoke(mapCallback, mock(Throwable.class));


        verify(constant, times(2)).failedGettingConfig();
        verify(gitOutputConsoleFactory).create(anyString());
        verify(console).printError(anyString());
        verify(consolesPanelPresenter).addCommandOutput(anyString(), eq(console));
        verify(notificationManager).notify(anyString(), rootProjectConfig);
    }

