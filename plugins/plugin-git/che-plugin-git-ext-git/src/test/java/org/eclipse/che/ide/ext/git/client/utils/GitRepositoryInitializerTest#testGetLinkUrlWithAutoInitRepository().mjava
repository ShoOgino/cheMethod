    @Test
    public void testGetLinkUrlWithAutoInitRepository() throws Exception {
        final HashMap<String, List<String>> attributes = new HashMap<>();
        doReturn(attributes).when(rootProjectConfig).getAttributes();

        doAnswer(new Answer() {
            @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                Object[] arguments = invocation.getArguments();
                RequestCallback<Void> callback = (RequestCallback<Void>)arguments[2];
                @SuppressWarnings("NonJREEmulationClassesInClientCode")
                Method onSuccess = GwtReflectionUtils.getMethod(callback.getClass(), "onSuccess");
                onSuccess.invoke(callback, (Void)null);
                return callback;
            }
        }).when(service).init(devMachine, anyObject(), anyBoolean(), (RequestCallback<Void>)anyObject());


        gitRepositoryInitializer.getGitUrlWithAutoInit(rootProjectConfig, stringCallback);

        verify(service).init(eq(devMachine), eq(rootProjectConfig), eq(BARE), (RequestCallback<Void>)anyObject());
        verify(stringCallback).onSuccess(eq(REMOTE_URI));
    }

