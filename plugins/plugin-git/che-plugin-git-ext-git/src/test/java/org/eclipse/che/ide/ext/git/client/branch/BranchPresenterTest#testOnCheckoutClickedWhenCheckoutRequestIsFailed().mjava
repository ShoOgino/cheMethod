    @Test
    public void testOnCheckoutClickedWhenCheckoutRequestIsFailed() throws Exception {
        when(dtoFactory.createDto(CheckoutRequest.class)).thenReturn(checkoutRequest);
        selectBranch();
        presenter.onCheckoutClicked();

        verify(checkoutRequest).setTrackBranch(eq(BRANCH_NAME));
        verifyNoMoreInteractions(checkoutRequest);
        verify(service).checkout(eq(devMachine), eq(rootProjectConfig),
                                       eq(checkoutRequest),
                                       asyncRequestCallbackCaptor.capture());
        AsyncRequestCallback<String> checkoutBranchCallback = asyncRequestCallbackCaptor.getValue();
        GwtReflectionUtils.callOnFailure(checkoutBranchCallback, mock(Throwable.class));

        verify(selectedBranch, times(2)).getDisplayName();
        verify(selectedBranch).isRemote();
        verify(notificationManager).notify(anyString(), eq(StatusNotification.Status.FAIL), eq(true), eq(rootProjectConfig));
    }

