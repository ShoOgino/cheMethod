    @Test
    public void testOnDeleteClickedWhenBranchDeleteRequestIsFailed() throws Exception {
        selectBranch();
        presenter.onDeleteClicked();

        verify(service).branchDelete(eq(devMachine), eq(rootProjectConfig), eq(BRANCH_NAME), eq(NEED_DELETING), asyncRequestCallbackCaptor.capture());
        AsyncRequestCallback<String> deleteBranchCallback = asyncRequestCallbackCaptor.getValue();
        GwtReflectionUtils.callOnFailure(deleteBranchCallback, mock(Throwable.class));

        verify(selectedBranch).getName();
        verify(constant, times(2)).branchDeleteFailed();
        verify(gitOutputConsoleFactory).create(BRANCH_DELETE_COMMAND_NAME);
        verify(console).printError(anyString());
        verify(consolesPanelPresenter).addCommandOutput(anyString(), eq(console));
        verify(notificationManager).notify(anyString(), anyObject(), eq(true), eq(rootProjectConfig));
    }

