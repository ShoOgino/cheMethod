    @Test
    public void testOnResetClickedWhenFileIsNotExistInCommitToReset()
            throws Exception {
        // Only in the cases of <code>ResetRequest.ResetType.HARD</code>  or <code>ResetRequest.ResetType.MERGE</code>
        // must change the workdir
        when(view.isMixMode()).thenReturn(false);
        when(view.isHardMode()).thenReturn(true);

        doAnswer(new Answer() {
            @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                Object[] arguments = invocation.getArguments();
                AsyncRequestCallback<Void> callback = (AsyncRequestCallback<Void>)arguments[4];
                Method onSuccess = GwtReflectionUtils.getMethod(callback.getClass(), "onSuccess");
                onSuccess.invoke(callback, (Void)null);
                return callback;
            }
        }).when(service)
          .reset(anyString(), anyObject(), anyString(), (ResetRequest.ResetType)anyObject(), (List<String>)anyObject(),
                 (AsyncRequestCallback<Void>)anyObject());

        presenter.onRevisionSelected(selectedRevision);
        presenter.onResetClicked();

        verify(view).close();
        verify(selectedRevision).getId();
        verify(appContext).getCurrentProject();
        verify(service).reset(anyString(), anyObject(), eq(PROJECT_PATH), eq(HARD), (List<String>)anyObject(),
                              (AsyncRequestCallback<Void>)anyObject());
        verify(eventBus).fireEvent(Matchers.<Event<OpenProjectEvent>>anyObject());
        verify(console).print(anyString());
        verify(notificationManager).notify(anyString(), rootProjectConfig);
    }

