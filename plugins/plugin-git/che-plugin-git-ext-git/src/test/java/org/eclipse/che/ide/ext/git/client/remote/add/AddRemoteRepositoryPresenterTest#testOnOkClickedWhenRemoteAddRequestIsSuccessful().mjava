    @Test
    public void testOnOkClickedWhenRemoteAddRequestIsSuccessful() throws Exception {
        doAnswer(new Answer() {
            @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                Object[] arguments = invocation.getArguments();
                AsyncRequestCallback<String> callback = (AsyncRequestCallback<String>)arguments[3];
                Method onSuccess = GwtReflectionUtils.getMethod(callback.getClass(), "onSuccess");
                onSuccess.invoke(callback, EMPTY_TEXT);
                return callback;
            }
        }).when(service).remoteAdd(anyString(), anyObject(), anyString(), anyString(), (AsyncRequestCallback<String>)anyObject());

        presenter.showDialog(callback);
        presenter.onOkClicked();

        verify(service).remoteAdd(anyString(), anyObject(), eq(REMOTE_NAME), eq(REMOTE_URI), (AsyncRequestCallback<String>)anyObject());
        verify(callback).onSuccess(eq((Void)null));
        verify(callback, never()).onFailure((Throwable)anyObject());
        verify(view).close();
    }

