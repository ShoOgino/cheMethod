  private void reloadRepositoryData(Project project) {
    service
        .diff(project.getLocation(), null, NAME_STATUS, false, 0, REVISION, false)
        .then(
            diff -> {
              MutableAlteredFiles alteredFiles = new MutableAlteredFiles(project, diff);
              changes.put(project.getName(), alteredFiles);
              view.updateRepositoryChanges(project.getName(), alteredFiles.getFilesQuantity());
              // update changed files list if this repository is selected
              if (project.getName().equals(view.getSelectedRepository())) {
                updateChangedFiles(alteredFiles);
              }
            })
        .catchError(
            arg -> {
              notificationManager.notify(locale.diffFailed(), FAIL, NOT_EMERGE_MODE);
            });
  }

