  @Override
  public void onMergeClicked() {
    view.close();

    final GitOutputConsole console = gitOutputConsoleFactory.create(MERGE_COMMAND_NAME);

    service
        .merge(project.getLocation(), selectedReference.getDisplayName())
        .then(
            result -> {
              console.print(formMergeMessage(result));
              consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
              notificationManager.notify(formMergeMessage(result));

              project.synchronize();
            })
        .catchError(
            error -> {
              if (error.getCause() instanceof ServerException
                  && ((ServerException) error.getCause()).getErrorCode()
                      == ErrorCodes.NO_COMMITTER_NAME_OR_EMAIL_DEFINED) {
                dialogFactory
                    .createMessageDialog(
                        constant.mergeTitle(),
                        constant.committerIdentityInfoEmpty(),
                        () -> {
                          // do nothing
                        })
                    .show();
                return;
              }
              console.printError(error.getMessage());
              consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
              notificationManager.notify(constant.mergeFailed(), FAIL, FLOAT_MODE);
            });
  }

