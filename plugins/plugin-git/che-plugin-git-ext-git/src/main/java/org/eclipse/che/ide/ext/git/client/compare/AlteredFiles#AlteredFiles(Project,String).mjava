  /**
   * Parses raw git diff string and creates advanced representation.
   *
   * @param project the project under diff operation
   * @param diff plain result of git diff operation
   */
  public AlteredFiles(Project project, String diff) {
    this.project = project;

    alteredFilesStatuses = new LinkedHashMap<>();
    if (!isNullOrEmpty(diff)) {
      for (String item : diff.split("\n")) {
        if (item.length() < 3 || item.charAt(1) != '\t') {
          throw new IllegalArgumentException("Invalid git diff format. Invalid record: " + item);
        }
        alteredFilesStatuses.put(
            item.substring(2, item.length()), defineStatus(item.substring(0, 1)));
      }
    }

    alteredFilesList = new ArrayList<>(alteredFilesStatuses.keySet());
  }

