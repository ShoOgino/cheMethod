  /**
   * Initialize the columns of the grid.
   *
   * @param ideResources
   */
  private void initRepositoriesTable(org.eclipse.che.ide.Resources ideResources) {
    repositories = new CellTable<>(15, ideResources);

    Column<Remote, String> nameColumn =
        new Column<Remote, String>(new TextCell()) {
          @Override
          public String getValue(Remote remote) {
            return remote.getName();
          }

          @Override
          public void render(Cell.Context context, Remote remote, SafeHtmlBuilder sb) {
            sb.appendHtmlConstant(
                "<div id=\""
                    + UIObject.DEBUG_ID_PREFIX
                    + "git-remotes-remotes-cellTable-"
                    + context.getIndex()
                    + "\">");
            super.render(context, remote, sb);
          }
        };
    Column<Remote, String> urlColumn =
        new Column<Remote, String>(new TextCell()) {
          @Override
          public String getValue(Remote remote) {
            return remote.getUrl();
          }
        };

    repositories.addColumn(nameColumn, locale.remoteGridNameField());
    repositories.setColumnWidth(nameColumn, "20%");
    repositories.addColumn(urlColumn, locale.remoteGridLocationField());
    repositories.setColumnWidth(urlColumn, "80%");

    final SingleSelectionModel<Remote> selectionModel = new SingleSelectionModel<Remote>();
    selectionModel.addSelectionChangeHandler(
        new SelectionChangeEvent.Handler() {
          @Override
          public void onSelectionChange(SelectionChangeEvent event) {
            selectedObject = selectionModel.getSelectedObject();
            delegate.onRemoteSelected(selectedObject);
          }
        });
    repositories.setSelectionModel(selectionModel);
  }

