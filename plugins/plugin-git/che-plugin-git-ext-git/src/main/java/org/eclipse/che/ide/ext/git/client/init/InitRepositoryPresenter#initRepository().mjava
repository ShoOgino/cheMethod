    public void initRepository() {
        final CurrentProject currentProject = appContext.getCurrentProject();

        if (currentProject == null || currentProject.getRootProject() == null) {
            Log.error(getClass(), "Open the project before initialize repository");
            return;
        }
        final GitOutputConsole console = gitOutputConsoleFactory.create(INIT_COMMAND_NAME);
        gitRepositoryInitializer.initGitRepository(currentProject.getRootProject(), new AsyncCallback<Void>() {
            @Override
            public void onFailure(Throwable caught) {
                handleError(caught, console);
                consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
            }

            @Override
            public void onSuccess(Void result) {
                console.print(constant.initSuccess());
                consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
                notificationManager.notify(constant.initSuccess(), currentProject.getRootProject());
                getRootProject(currentProject.getRootProject());
            }
        });
    }

