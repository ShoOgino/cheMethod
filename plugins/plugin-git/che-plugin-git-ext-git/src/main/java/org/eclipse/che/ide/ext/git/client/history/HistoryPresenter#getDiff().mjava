    /** Get the changes between revisions. On success - display diff in text format, otherwise - show the error message in output panel. */
    private void getDiff() {
        String pattern = "";
        ProjectConfigDto project = appContext.getCurrentProject().getRootProject();
        if (!showChangesInProject && project != null) {
            String path;

            Selection<HasStorablePath> selection = (Selection<HasStorablePath>)selectionAgent.getSelection();

            if (selection == null || selection.getHeadElement() == null) {
                path = project.getPath();
            } else {
                path = selection.getHeadElement().getStorablePath();
            }

            pattern = path.replaceFirst(project.getPath(), "");
            pattern = (pattern.startsWith("/")) ? pattern.replaceFirst("/", "") : pattern;
        }

        if (DiffWith.DIFF_WITH_INDEX.equals(diffType) || DiffWith.DIFF_WITH_WORK_TREE.equals(diffType)) {
            boolean isCached = DiffWith.DIFF_WITH_INDEX.equals(diffType);
            doDiffWithNotCommitted((pattern.length() > 0) ? new ArrayList<>(Arrays.asList(pattern)) : new ArrayList<String>(),
                                   selectedRevision, isCached);
        } else {
            doDiffWithPrevVersion((pattern.length() > 0) ? new ArrayList<>(Arrays.asList(pattern)) : new ArrayList<String>(),
                                  selectedRevision);
        }
    }

