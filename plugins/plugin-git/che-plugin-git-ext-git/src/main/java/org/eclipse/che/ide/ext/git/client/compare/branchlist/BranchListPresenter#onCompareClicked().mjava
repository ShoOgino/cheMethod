  @Override
  public void onCompareClicked() {

    final String selectedItemPath =
        selectedItem
            .getLocation()
            .removeFirstSegments(project.getLocation().segmentCount())
            .removeTrailingSeparator()
            .toString();

    service
        .diff(
            project.getLocation(),
            selectedItemPath.isEmpty() ? null : singletonList(selectedItemPath),
            NAME_STATUS,
            false,
            0,
            selectedBranch.getName(),
            false)
        .then(
            diff -> {
              if (diff.isEmpty()) {
                dialogFactory
                    .createMessageDialog(
                        locale.compareMessageIdenticalContentTitle(),
                        locale.compareMessageIdenticalContentText(),
                        null)
                    .show();
              } else {
                final String[] changedFiles = diff.split("\n");
                if (changedFiles.length == 1) {
                  project
                      .getFile(changedFiles[0].substring(2))
                      .then(
                          file -> {
                            if (file.isPresent()) {
                              comparePresenter.showCompareWithLatest(
                                  file.get(),
                                  defineStatus(changedFiles[0].substring(0, 1)),
                                  selectedBranch.getName());
                            }
                          });
                } else {
                  Map<String, Status> items = new HashMap<>();
                  for (String item : changedFiles) {
                    items.put(item.substring(2, item.length()), defineStatus(item.substring(0, 1)));
                  }
                  changesListPresenter.show(items, selectedBranch.getName(), null, project);
                }
              }
            })
        .catchError(
            error -> {
              notificationManager.notify(locale.diffFailed(), FAIL, NOT_EMERGE_MODE);
            });

    view.close();
  }

