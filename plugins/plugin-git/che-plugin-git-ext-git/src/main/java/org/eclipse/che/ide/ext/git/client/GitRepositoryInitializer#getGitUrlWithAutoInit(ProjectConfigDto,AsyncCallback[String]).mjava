    /**
     * Returns git url using callback. If the project has no repository then method initializes it.
     */
    public void getGitUrlWithAutoInit(final ProjectConfigDto project, final AsyncCallback<String> callback) {
        if (!GitRepositoryInitializer.isGitRepository(project)) {
            initGitRepository(project, new AsyncCallback<Void>() {
                @Override
                public void onSuccess(Void result) {
                    notificationManager.notify(gitLocale.initSuccess(), project);
                    getGitUrlWithAutoInit(appContext.getCurrentProject().getRootProject(), callback);
                }

                @Override
                public void onFailure(Throwable throwable) {
                    callback.onFailure(throwable);
                }
            });

            return;
        }

        gitService.getGitReadOnlyUrl(appContext.getDevMachine(),
                                     project,
                                     new AsyncRequestCallback<String>(new StringUnmarshaller()) {
                                         @Override
                                         protected void onSuccess(String result) {
                                             callback.onSuccess(result);
                                         }

                                         @Override
                                         protected void onFailure(Throwable exception) {
                                             callback.onFailure(exception);
                                         }
                                     });
    }

