    /** Delete Git repository. */
    public void deleteRepository(final Project project) {
        final GitOutputConsole console = gitOutputConsoleFactory.create(DELETE_REPO_COMMAND_NAME);

        service.deleteRepository(appContext.getDevMachine(), project.getLocation()).then(new Operation<Void>() {
            @Override
            public void apply(Void ignored) throws OperationException {
                console.print(constant.deleteGitRepositorySuccess());
                consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
                notificationManager.notify(constant.deleteGitRepositorySuccess());

                project.synchronize();
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError error) throws OperationException {
                console.printError(error.getMessage());
                consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
                notificationManager.notify(constant.failedToDeleteRepository(), FAIL, FLOAT_MODE);
            }
        });
    }

