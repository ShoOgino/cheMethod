  /** {@inheritDoc} */
  @Override
  public void onPushClicked() {
    final StatusNotification notification =
        notificationManager.notify(locale.pushProcess(), PROGRESS, FLOAT_MODE);

    final String repository = view.getRepository();
    final GitOutputConsole console = gitOutputConsoleFactory.create(PUSH_COMMAND_NAME);

    performOperationWithTokenRequestIfNeeded(
            new RemoteGitOperation<PushResponse>() {
              @Override
              public Promise<PushResponse> perform(Credentials credentials) {
                return service.push(
                    project.getLocation(),
                    getRefs(),
                    repository,
                    view.isForcePushSelected(),
                    credentials);
              }
            })
        .then(
            response -> {
              console.print(response.getCommandOutput());
              processesPanelPresenter.addCommandOutput(console);
              notification.setStatus(SUCCESS);
              if (response.getCommandOutput().contains("Everything up-to-date")) {
                notification.setTitle(locale.pushUpToDate());
              } else {
                notification.setTitle(locale.pushSuccess(repository));
              }
            })
        .catchError(
            error -> {
              handleError(error.getCause(), notification, console);
              processesPanelPresenter.addCommandOutput(console);
            });
    view.close();
  }

