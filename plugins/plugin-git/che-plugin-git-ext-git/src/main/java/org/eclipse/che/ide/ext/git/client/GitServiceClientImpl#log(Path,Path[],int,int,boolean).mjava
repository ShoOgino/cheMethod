    @Override
    public Promise<LogResponse> log(Path project, Path[] fileFilter, int skip, int maxCount, boolean plainText) {
        StringBuilder params = new StringBuilder().append("?projectPath=").append(project.toString());
        if (fileFilter != null) {
            for (Path file : fileFilter) {
                params.append("&fileFilter=").append(file.toString());
            }
        }
        params.append("&skip=").append(skip);
        params.append("&maxCount=").append(maxCount);
        String url = appContext.getDevAgentEndpoint() + LOG + params;
        if (plainText) {
            return asyncRequestFactory.createGetRequest(url)
                                      .send(dtoUnmarshallerFactory.newUnmarshaller(LogResponse.class));
        } else {
            return asyncRequestFactory.createGetRequest(url)
                                      .header(ACCEPT, APPLICATION_JSON)
                                      .send(dtoUnmarshallerFactory.newUnmarshaller(LogResponse.class));
        }
    }

