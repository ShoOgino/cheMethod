    /**
     * Get upstream branch for selected local branch. Can invoke {@code onSuccess(null)} if upstream branch isn't set
     */
    private void getUpstreamBranch(final AsyncCallback<Branch> result) {

        final String configBranchRemote = "branch." + view.getLocalBranch() + ".remote";
        final String configUpstreamBranch = "branch." + view.getLocalBranch() + ".merge";
        service.config(project.getLocation(), Arrays.asList(configUpstreamBranch, configBranchRemote))
               .then(configs -> {
                   if (configs.containsKey(configBranchRemote) && configs.containsKey(configUpstreamBranch)) {
                       String displayName = configs.get(configBranchRemote) + "/" + configs.get(configUpstreamBranch);
                       Branch upstream = dtoFactory.createDto(Branch.class)
                                                   .withActive(false)
                                                   .withRemote(true)
                                                   .withDisplayName(displayName)
                                                   .withName("refs/remotes/" + displayName);

                       result.onSuccess(upstream);
                   } else {
                       result.onSuccess(null);
                   }
               })
               .catchError(error -> {
                   result.onFailure(error.getCause());
               });
    }

