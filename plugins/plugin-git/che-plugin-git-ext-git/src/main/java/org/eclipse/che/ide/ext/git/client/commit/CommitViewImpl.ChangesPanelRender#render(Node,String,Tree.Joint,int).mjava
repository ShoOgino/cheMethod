        @Override
        public Element render(final Node node, final String domID, final Tree.Joint joint, final int depth) {
            //Initialize HTML elements.
            final Element rootContainer = super.render(node, domID, joint, depth);
            final Element nodeContainer = rootContainer.getFirstChildElement();
            final Element checkBoxElement = new CheckBox().getElement();
            final InputElement checkBoxInputElement = (InputElement)checkBoxElement.getElementsByTagName("input").getItem(0);

            //Set check-box state.
            final Path nodePath = node instanceof ChangedFileNode ? Path.valueOf(node.getName()) : ((ChangedFolderNode)node).getPath();
            checkBoxInputElement.setChecked(!unselectedNodePaths.contains(nodePath));

            //Add check-box click handler.
            Event.sinkEvents(checkBoxElement, Event.ONCLICK);
            Event.setEventListener(checkBoxElement, event -> {
                if (Event.ONCLICK == event.getTypeInt() && event.getTarget().getTagName().equalsIgnoreCase("label")) {
                    handleCheckBoxSelection(nodePath, checkBoxInputElement.isChecked());
                    changesPanelView.refreshNodes();
                    delegate.onValueChanged();
                }
            });

            //Paste check-box element to node container.
            nodeContainer.insertAfter(checkBoxElement, nodeContainer.getFirstChild());

            return rootContainer;
        }

