    /**
     * Update the list of remote repositories for local one. If remote repositories are found, then update the list of branches (remote and
     * local).
     */
    private void updateRemotes() {
        view.setEnablePullButton(true);

        gitServiceClient.remoteList(appContext.getDevMachine(), project.getRootProject(), null, true,
                                    new AsyncRequestCallback<List<Remote>>(dtoUnmarshallerFactory.newListUnmarshaller(Remote.class)) {
                                        @Override
                                        protected void onSuccess(List<Remote> result) {
                                            updateBranches(LIST_REMOTE);
                                            view.setRepositories(result);
                                            view.setEnablePullButton(!result.isEmpty());
                                            view.showDialog();
                                        }

                                        @Override
                                        protected void onFailure(Throwable exception) {
                                            handleError(exception, REMOTE_REPO_COMMAND_NAME);
                                            view.setEnablePullButton(false);
                                        }
                                    }
                                   );
    }

