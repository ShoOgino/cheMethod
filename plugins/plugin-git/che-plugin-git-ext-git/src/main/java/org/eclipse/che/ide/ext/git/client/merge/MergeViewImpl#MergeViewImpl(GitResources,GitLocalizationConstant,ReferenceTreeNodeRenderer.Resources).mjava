  /**
   * Create view.
   *
   * @param resources
   * @param locale
   * @param rendererResources
   */
  @Inject
  protected MergeViewImpl(
      GitResources resources,
      GitLocalizationConstant locale,
      ReferenceTreeNodeRenderer.Resources rendererResources) {
    this.res = resources;
    this.locale = locale;
    this.ensureDebugId("git-merge-window");

    Widget widget = ourUiBinder.createAndBindUi(this);

    this.setTitle(locale.mergeTitle());
    this.setWidget(widget);

    this.references =
        Tree.create(
            rendererResources,
            new ReferenceTreeNodeDataAdapter(),
            new ReferenceTreeNodeRenderer(rendererResources, resources));
    this.references.setTreeEventHandler(
        new Tree.Listener<Reference>() {
          @Override
          public void onNodeAction(TreeNodeElement<Reference> node) {}

          @Override
          public void onNodeClosed(TreeNodeElement<Reference> node) {
            // do nothing
          }

          @Override
          public void onNodeContextMenu(int mouseX, int mouseY, TreeNodeElement<Reference> node) {
            // do nothing
          }

          @Override
          public void onNodeDragStart(TreeNodeElement<Reference> node, MouseEvent event) {
            // do nothing
          }

          @Override
          public void onNodeDragDrop(TreeNodeElement<Reference> node, MouseEvent event) {
            // do nothing
          }

          @Override
          public void onNodeExpanded(final TreeNodeElement<Reference> node) {
            delegate.onReferenceSelected(node.getData());
          }

          @Override
          public void onNodeSelected(TreeNodeElement<Reference> node, SignalEvent event) {
            delegate.onReferenceSelected(node.getData());
          }

          @Override
          public void onRootContextMenu(int mouseX, int mouseY) {
            // do nothing
          }

          @Override
          public void onRootDragDrop(MouseEvent event) {
            // do nothing
          }

          @Override
          public void onKeyboard(KeyboardEvent event) {
            // do nothing
          }
        });
    this.referencesPanel.add(references.asWidget());

    Reference root = references.getModel().getRoot();
    if (root == null) {
      root = new Reference("", "", null);
      references.getModel().setRoot(root);
    }

    localBranch = new Reference(LOCAL_BRANCHES_TITLE, LOCAL_BRANCHES_TITLE, LOCAL_BRANCH);

    remoteBranch = new Reference(REMOTE_BRANCHES_TITLE, REMOTE_BRANCHES_TITLE, REMOTE_BRANCH);

    List<Reference> branches = new ArrayList<>();
    branches.add(localBranch);
    branches.add(remoteBranch);
    root.setBranches(branches);

    btnMerge =
        createButton(
            locale.buttonMerge(),
            "git-merge-merge",
            new ClickHandler() {

              @Override
              public void onClick(ClickEvent event) {
                delegate.onMergeClicked();
              }
            });
    btnMerge.addStyleName(super.resources.windowCss().primaryButton());
    addButtonToFooter(btnMerge);

    btnCancel =
        createButton(
            locale.buttonCancel(),
            "git-merge-cancel",
            new ClickHandler() {

              @Override
              public void onClick(ClickEvent event) {
                delegate.onCancelClicked();
              }
            });
    addButtonToFooter(btnCancel);
  }

