    private void compare() {
        final String revisionA = revisions.indexOf(selectedRevision) + 1 == revisions.size() ? null :
                                 revisions.get(revisions.indexOf(selectedRevision) + 1).getId();
        final String revisionB = selectedRevision.getId();
        service.diff(project.getLocation(),
                     singletonList(selectedPath.toString()),
                     NAME_STATUS,
                     true,
                     0,
                     revisionA,
                     revisionB)
               .then(new Operation<String>() {
                   @Override
                   public void apply(final String diff) throws OperationException {
                       if (diff.isEmpty()) {
                           dialogFactory.createMessageDialog(locale.historyTitle(), locale.historyNothingToDisplay(), null).show();
                           return;
                       }
                       final String[] changedFiles = diff.split("\n");
                       if (changedFiles.length == 1) {
                           comparePresenter.showCompareBetweenRevisions(Path.valueOf(diff.substring(2)),
                                                                        defineStatus(diff.substring(0, 1)),
                                                                        revisionA,
                                                                        revisionB);
                       } else {
                           Map<String, FileStatus.Status> items = new HashMap<>();
                           for (String item : changedFiles) {
                               items.put(item.substring(2, item.length()), defineStatus(item.substring(0, 1)));
                           }
                           changesListPresenter.show(items, revisionA, revisionB, project);
                       }
                   }
               })
               .catchError(new Operation<PromiseError>() {
                   @Override
                   public void apply(PromiseError error) throws OperationException {
                       notificationManager.notify(locale.diffFailed(), FAIL, EMERGE_MODE);
                   }
               });
    }

