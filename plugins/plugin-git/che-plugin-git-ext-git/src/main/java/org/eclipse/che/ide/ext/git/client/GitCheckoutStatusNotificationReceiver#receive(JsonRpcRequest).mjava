    @Override
    public void receive(JsonRpcRequest request) {
        final String params = request.getParams();
        final GitCheckoutEventDto gitCheckoutEventDto = dtoFactory.createDtoFromJson(params, GitCheckoutEventDto.class);

        final Type type = gitCheckoutEventDto.getType();
        final String name = gitCheckoutEventDto.getName();

        switch (type) {
            case BRANCH: {
                Log.debug(getClass(), "Received git branch checkout event: " + name);

                final NotificationManager notificationManager = notificationManagerProvider.get();
                if (notificationManager != null) {
                    notificationManager.notify("Git operation", "Branch '" + name + "' is checked out", SUCCESS, EMERGE_MODE);
                }

                break;
            }
            case REVISION: {
                Log.debug(getClass(), "Received git revision checkout event: " + name);

                final NotificationManager notificationManager = notificationManagerProvider.get();
                if (notificationManager != null) {
                    notificationManager.notify("Git operation", "Revision '" + name + "' is checked out", SUCCESS, EMERGE_MODE);
                }

                break;
            }
        }
    }

