  /**
   * Handler some action whether some exception happened.
   *
   * @param throwable exception what happened
   */
  void handleError(
      @NotNull Throwable throwable, StatusNotification notification, GitOutputConsole console) {
    notification.setStatus(FAIL);
    if (throwable instanceof UnauthorizedException) {
      console.printError(locale.messagesNotAuthorizedTitle());
      console.print(locale.messagesNotAuthorizedContent());
      notification.setTitle(locale.messagesNotAuthorizedTitle());
      notification.setContent(locale.messagesNotAuthorizedContent());
      return;
    }

    String errorMessage = throwable.getMessage();
    if (errorMessage == null) {
      console.printError(locale.pushFail());
      notification.setTitle(locale.pushFail());
      return;
    }

    try {
      errorMessage = dtoFactory.createDtoFromJson(errorMessage, ServiceError.class).getMessage();
      if (errorMessage.equals("Unable get private ssh key")) {
        console.printError(locale.messagesUnableGetSshKey());
        notification.setTitle(locale.messagesUnableGetSshKey());
        return;
      }
      console.printError(errorMessage);
      notification.setTitle(errorMessage);
    } catch (Exception e) {
      console.printError(errorMessage);
      notification.setTitle(errorMessage);
    }
  }

