    /**
     * Handler some action whether some exception happened.
     *
     * @param throwable
     *         exception what happened
     */
    void handleError(@NotNull Throwable throwable, StatusNotification notification, GitOutputConsole console) {
        notification.setStatus(FAIL);
        if (throwable instanceof UnauthorizedException) {
            console.printError(constant.messagesNotAuthorized());
            notification.setTitle(constant.messagesNotAuthorized());
            return;
        }

        String errorMessage = throwable.getMessage();
        if (errorMessage == null) {
            console.printError(constant.pushFail());
            notification.setTitle(constant.pushFail());
            return;
        }

        try {
            errorMessage = dtoFactory.createDtoFromJson(errorMessage, ServiceError.class).getMessage();
            if (errorMessage.equals("Unable get private ssh key")) {
                console.printError(constant.messagesUnableGetSshKey());
                notification.setTitle(constant.messagesUnableGetSshKey());
                return;
            }
            console.printError(errorMessage);
            notification.setTitle(errorMessage);
        } catch (Exception e) {
            console.printError(errorMessage);
            notification.setTitle(errorMessage);
        }
    }

