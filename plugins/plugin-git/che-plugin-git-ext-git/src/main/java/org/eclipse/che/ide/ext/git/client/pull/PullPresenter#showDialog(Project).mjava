    public void showDialog(Project project) {
        this.project = project;

        view.setEnablePullButton(false);

        service.remoteList(project.getLocation(), null, true)
               .then(new Operation<List<Remote>>() {
                   @Override
                   public void apply(List<Remote> remotes) throws OperationException {
                       updateBranches(LIST_REMOTE);
                       view.setRepositories(remotes);
                       view.setEnablePullButton(!remotes.isEmpty());
                       view.showDialog();
                   }
               })
               .catchError(new Operation<PromiseError>() {
                   @Override
                   public void apply(PromiseError error) throws OperationException {
                       handleError(error.getCause(), REMOTE_REPO_COMMAND_NAME);
                       view.setEnablePullButton(false);
                   }
               });
    }

