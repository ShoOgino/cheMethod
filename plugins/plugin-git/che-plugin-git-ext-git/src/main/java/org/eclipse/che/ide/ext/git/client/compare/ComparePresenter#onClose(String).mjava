    /** {@inheritDoc} */
    @Override
    public void onClose(final String newContent) {
        if (this.newContent == null || newContent.equals(this.newContent)) {
            view.hide();
            return;
        }

        ConfirmCallback confirmCallback = new ConfirmCallback() {
            @Override
            public void accepted() {
                final String path = appContext.getCurrentProject().getRootProject().getName() + "/" + item;
                projectService.updateFile(appContext.getDevMachine(), path, newContent, new AsyncRequestCallback<Void>() {
                    @Override
                    protected void onSuccess(Void result) {
                        eventBus.fireEvent(new FileContentUpdateEvent("/" + path));
                    }

                    @Override
                    protected void onFailure(Throwable exception) {
                        notificationManager.notify(exception.getMessage(), FAIL, false);
                    }
                });
                view.hide();
            }
        };

        CancelCallback cancelCallback = new CancelCallback() {
            @Override
            public void cancelled() {
                view.hide();
            }
        };

        dialogFactory.createConfirmDialog(locale.compareSaveTitle(), locale.compareSaveQuestion(), locale.buttonYes(), locale.buttonNo(),
                                          confirmCallback, cancelCallback).show();
    }

