    @Override
    public void setAmendCommitMessage() {
        final ProjectConfigDto project = appContext.getCurrentProject().getRootProject();
        final Unmarshallable<LogResponse> unmarshall = dtoUnmarshallerFactory.newUnmarshaller(LogResponse.class);
        this.service.log(workspaceId, project, null, false,
                         new AsyncRequestCallback<LogResponse>(unmarshall) {
                             @Override
                             protected void onSuccess(final LogResponse result) {
                                 final List<Revision> commits = result.getCommits();
                                 String message = "";
                                 if (commits != null && (!commits.isEmpty())) {
                                     final Revision tip = commits.get(0);
                                     if (tip != null) {
                                         message = tip.getMessage();
                                     }
                                 }
                                 CommitPresenter.this.view.setMessage(message);
                                 CommitPresenter.this.view.setEnableCommitButton(!message.isEmpty());
                             }

                             @Override
                             protected void onFailure(final Throwable exception) {
                                 if (getErrorCode(exception) == ErrorCodes.INIT_COMMIT_WAS_NOT_PERFORMED) {
                                     dialogFactory.createMessageDialog(constant.commitTitle(),
                                                                       constant.initCommitWasNotPerformed(),
                                                                       null).show();
                                 } else {
                                     Log.warn(CommitPresenter.class, "Git log failed", exception);
                                     CommitPresenter.this.view.setMessage("");
                                     notificationManager.notify(constant.logFailed(), FAIL, false, project);
                                 }
                             }
                         });
    }

