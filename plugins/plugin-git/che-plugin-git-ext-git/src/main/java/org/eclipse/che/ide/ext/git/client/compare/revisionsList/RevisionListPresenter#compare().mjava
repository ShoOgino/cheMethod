    private void compare() {
        service.diff(appContext.getDevMachine(),
                     project.getLocation(),
                     singletonList(selectedPath.toString()),
                     NAME_STATUS,
                     false,
                     0,
                     selectedRevision.getId(),
                     false)
                .then(new Operation<String>() {
                    @Override
                    public void apply(final String diff) throws OperationException {
                        if (diff.isEmpty()) {
                            dialogFactory.createMessageDialog(locale.compareMessageIdenticalContentTitle(),
                                                              locale.compareMessageIdenticalContentText(), null).show();
                        } else {
                            project.getFile(diff.substring(2)).then(new Operation<Optional<File>>() {
                                @Override
                                public void apply(Optional<File> file) throws OperationException {
                                    if (file.isPresent()) {
                                        comparePresenter.show(file.get(), defineStatus(diff.substring(0, 1)), selectedRevision.getId());
                                    }
                                }
                            });

                        }
                    }
                })
                .catchError(new Operation<PromiseError>() {
                    @Override
                    public void apply(PromiseError arg) throws OperationException {
                        notificationManager.notify(locale.diffFailed(), FAIL, NOT_EMERGE_MODE);
                    }
                });
    }

