  /** {@inheritDoc} */
  @Override
  public void onFetchClicked() {
    final String remoteUrl = view.getRepositoryUrl();

    final StatusNotification notification =
        notificationManager.notify(locale.fetchProcess(), PROGRESS, FLOAT_MODE);
    final GitOutputConsole console = gitOutputConsoleFactory.create(FETCH_COMMAND_NAME);

    performOperationWithTokenRequestIfNeeded(
            new RemoteGitOperation<Void>() {
              @Override
              public Promise<Void> perform(Credentials credentials) {
                return service.fetch(
                    project.getLocation(),
                    view.getRepositoryName(),
                    getRefs(),
                    view.isRemoveDeletedRefs(),
                    credentials);
              }
            })
        .then(
            ignored -> {
              console.print(locale.fetchSuccess(remoteUrl));
              processesPanelPresenter.addCommandOutput(console);
              notification.setStatus(SUCCESS);
              notification.setTitle(locale.fetchSuccess(remoteUrl));
            })
        .catchError(
            error -> {
              handleError(error.getCause(), remoteUrl, notification, console);
              processesPanelPresenter.addCommandOutput(console);
            });
    view.close();
  }

