    /** Get list of revisions. */
    private void getRevisions() {
        service.log(appContext.getDevMachine(), project.getLocation(), new Path[]{selectedFilePath}, false)
               .then(new Operation<LogResponse>() {
                   @Override
                   public void apply(LogResponse log) throws OperationException {
                       view.setRevisions(log.getCommits());
                       view.showDialog();
                   }
               }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError error) throws OperationException {
                if (getErrorCode(error.getCause()) == ErrorCodes.INIT_COMMIT_WAS_NOT_PERFORMED) {
                    dialogFactory.createMessageDialog(locale.compareWithRevisionTitle(),
                                                      locale.initCommitWasNotPerformed(),
                                                      null).show();
                } else {
                    notificationManager.notify(locale.logFailed(), FAIL, NOT_EMERGE_MODE);
                }
            }
        });
    }

