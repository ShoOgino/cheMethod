    /** Get list of revisions. */
    private void getRevisions() {
        gitService.log(appContext.getDevMachine(), project, Collections.singletonList(selectedFile), false,
                       new AsyncRequestCallback<LogResponse>(dtoUnmarshallerFactory.newUnmarshaller(LogResponse.class)) {

                           @Override
                           protected void onSuccess(LogResponse result) {
                               view.setRevisions(result.getCommits());
                               view.showDialog();
                           }

                           @Override
                           protected void onFailure(Throwable exception) {
                               if (getErrorCode(exception) == ErrorCodes.INIT_COMMIT_WAS_NOT_PERFORMED) {
                                   dialogFactory.createMessageDialog(locale.compareWithRevisionTitle(),
                                                                     locale.initCommitWasNotPerformed(),
                                                                     null).show();
                               } else {
                                   notificationManager.notify(locale.logFailed(), FAIL, NOT_EMERGE_MODE);
                               }

                           }
                       });
    }

