    /**
     * Get the list of branches.
     *
     * @param remoteMode
     *         is a remote mode
     */
    void getBranchesForCurrentProject(@NotNull final BranchListMode remoteMode, final AsyncCallback<List<Branch>> asyncResult) {
        service.branchList(appContext.getDevMachine(), project.getLocation(), remoteMode).then(new Operation<List<Branch>>() {
            @Override
            public void apply(List<Branch> branches) throws OperationException {
                asyncResult.onSuccess(branches);
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError error) throws OperationException {
                asyncResult.onFailure(error.getCause());
            }
        });
    }

