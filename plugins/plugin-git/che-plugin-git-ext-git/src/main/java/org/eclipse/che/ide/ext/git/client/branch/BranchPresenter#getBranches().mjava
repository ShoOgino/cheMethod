    /** Get the list of branches. */
    private void getBranches() {
        service.branchList(appContext.getDevMachine(), project.getLocation(), LIST_ALL).then(new Operation<List<Branch>>() {
            @Override
            public void apply(List<Branch> branches) throws OperationException {
                if (branches.isEmpty()) {
                    dialogFactory.createMessageDialog(constant.branchTitle(),
                                                      constant.initCommitWasNotPerformed(),
                                                      null).show();
                } else {
                    view.setBranches(branches);
                    view.showDialogIfClosed();
                }
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError error) throws OperationException {
                handleError(error.getCause(), BRANCH_LIST_COMMAND_NAME);
            }
        });
    }

