    /** Get the list of branches. */
    private void getBranches() {
        service.branchList(appContext.getDevMachine(), project.getRootProject(), LIST_ALL,
                           new AsyncRequestCallback<List<Branch>>(dtoUnmarshallerFactory.newListUnmarshaller(Branch.class)) {
                               @Override
                               protected void onSuccess(List<Branch> result) {
                                   if (result.isEmpty()) {
                                       dialogFactory.createMessageDialog(constant.branchTitle(),
                                                                         constant.initCommitWasNotPerformed(),
                                                                         null).show();
                                   } else {
                                       view.setBranches(result);
                                       view.showDialogIfClosed();
                                   }
                               }

                               @Override
                               protected void onFailure(Throwable exception) {
                                   handleError(exception, BRANCH_LIST_COMMAND_NAME);
                               }
                           }
                          );
    }

