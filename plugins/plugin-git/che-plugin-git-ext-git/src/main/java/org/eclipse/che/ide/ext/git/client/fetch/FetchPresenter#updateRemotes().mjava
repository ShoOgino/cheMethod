  /**
   * Update the list of remote repositories for local one. If remote repositories are found, then
   * update the list of branches (remote and local).
   */
  private void updateRemotes() {
    service
        .remoteList(project.getLocation(), null, true)
        .then(
            remotes -> {
              view.setRepositories(remotes);
              updateBranches(LIST_REMOTE);
              view.setEnableFetchButton(!remotes.isEmpty());
              view.showDialog();
            })
        .catchError(
            error -> {
              GitOutputConsole console = gitOutputConsoleFactory.create(FETCH_COMMAND_NAME);
              console.printError(constant.remoteListFailed());
              processesPanelPresenter.addCommandOutput(console);
              notificationManager.notify(constant.remoteListFailed(), FAIL, FLOAT_MODE);
              view.setEnableFetchButton(false);
            });
  }

