    @Override
    public void onCheckoutClicked(final String reference) {

        service.checkout(project.getLocation(), dtoFactory.createDto(CheckoutRequest.class).withName(reference))
               .then(branchName -> {
                   appContext.getRootProject().synchronize()
                             .then(arg -> {
                                 view.close();
                             });
               })
               .catchError(error -> {
                   final String errorMessage = (error.getMessage() != null)
                                               ? error.getMessage()
                                               : constant.checkoutFailed();
                   GitOutputConsole console = gitOutputConsoleFactory.create(CHECKOUT_COMMAND_NAME);
                   console.printError(errorMessage);
                   consolesPanelPresenter.addCommandOutput(console);
                   notificationManager.notify(constant.checkoutFailed(), FAIL, FLOAT_MODE);
                   view.close();
               });
    }

