  /** Reset current HEAD to the specified state and refresh project in the success case. */
  private void reset() {
    ResetRequest.ResetType type = view.isMixMode() ? ResetRequest.ResetType.MIXED : null;
    type = (type == null && view.isSoftMode()) ? ResetRequest.ResetType.SOFT : type;
    type = (type == null && view.isHardMode()) ? ResetRequest.ResetType.HARD : type;

    final GitOutputConsole console = gitOutputConsoleFactory.create(RESET_COMMAND_NAME);

    service
        .reset(project.getLocation(), selectedRevision.getId(), type, null)
        .then(
            ignored -> {
              console.print(constant.resetSuccessfully());
              consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
              notificationManager.notify(constant.resetSuccessfully());

              project.synchronize();
            })
        .catchError(
            error -> {
              String errorMessage =
                  (error.getMessage() != null) ? error.getMessage() : constant.resetFail();
              console.printError(errorMessage);
              consolesPanelPresenter.addCommandOutput(appContext.getDevMachine().getId(), console);
              notificationManager.notify(constant.resetFail(), FAIL, FLOAT_MODE);
            });
  }

