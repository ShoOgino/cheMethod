    /** Get list of branches from selected project. */
    private void getBranches() {
        gitService.branchList(workspaceId, project.getRootProject(), LIST_ALL,
                              new AsyncRequestCallback<List<Branch>>(dtoUnmarshallerFactory.newListUnmarshaller(Branch.class)) {
                                  @Override
                                  protected void onSuccess(List<Branch> result) {
                                      view.setBranches(result);
                                      view.showDialog();
                                  }

                                  @Override
                                  protected void onFailure(Throwable exception) {
                                      final String errorMessage =
                                              (exception.getMessage() != null) ? exception.getMessage() : locale.branchesListFailed();
                                      GitOutputConsole console = gitOutputConsoleFactory.create(BRANCH_LIST_COMMAND_NAME);
                                      console.printError(errorMessage);
                                      consolesPanelPresenter.addCommandOutput(appContext.getDevMachineId(), console);
                                      notificationManager.notify(locale.branchesListFailed(), FAIL, false);
                                  }
                              }
                             );
    }

