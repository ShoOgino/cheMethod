  /**
   * Mark all related to node check-boxes checked or unchecked according to node path and value.
   * E.g. if parent check-box is marked as checked, all child check-boxes will be checked too, and
   * vise-versa.
   */
  void handleCheckBoxSelection(Path nodePath, boolean value) {
    allNodePaths
        .stream()
        .sorted(Comparator.comparing(Path::toString))
        .filter(
            path ->
                !(path.equals(nodePath) || path.isEmpty())
                    && path.isPrefixOf(nodePath)
                    && !hasSelectedChildren(path))
        .forEach(path -> handleCheckBoxState(path, value));

    allNodePaths
        .stream()
        .sorted((path1, path2) -> path2.toString().compareTo(path1.toString()))
        .filter(path -> !path.isEmpty() && (nodePath.isPrefixOf(path) || path.isPrefixOf(nodePath)))
        .forEach(path -> handleCheckBoxState(path, value));
  }

