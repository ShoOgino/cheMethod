  public void apply(String endpointId, StatusChangedEventDto dto) {
    Tree tree = projectExplorerPresenterProvider.get().getTree();
    Status status = dto.getStatus();
    tree.getNodeStorage()
        .getAll()
        .stream()
        .filter(node -> node instanceof FileNode)
        .forEach(
            node -> {
              Resource resource = ((ResourceNode) node).getData();
              File file = resource.asFile();
              String nodeLocation = resource.getLocation().removeFirstSegments(1).toString();

              VcsStatus newVcsStatus;
              if (status.getUntracked().contains(nodeLocation)) {
                newVcsStatus = UNTRACKED;
              } else if (status.getModified().contains(nodeLocation)
                  || status.getChanged().contains(nodeLocation)) {
                newVcsStatus = MODIFIED;
              } else if (status.getAdded().contains(nodeLocation)) {
                newVcsStatus = ADDED;
              } else {
                newVcsStatus = NOT_MODIFIED;
              }

              if (file.getVcsStatus() != newVcsStatus) {
                file.setVcsStatus(newVcsStatus);
                tree.refresh(node);
              }
            });

    editorAgentProvider
        .get()
        .getOpenedEditors()
        .stream()
        .filter(editor -> editor instanceof HasVcsChangeMarkerRender)
        .forEach(
            editor -> {
              EditorTab tab = multiPartStackProvider.get().getTabByPart(editor);
              String nodeLocation = tab.getFile().getLocation().removeFirstSegments(1).toString();
              if (status.getUntracked().contains(nodeLocation)) {
                tab.setTitleColor(UNTRACKED.getColor());
              } else if (status.getModified().contains(nodeLocation)
                  || status.getChanged().contains(nodeLocation)) {
                tab.setTitleColor(MODIFIED.getColor());
              } else if (status.getAdded().contains(nodeLocation)) {
                tab.setTitleColor(ADDED.getColor());
              } else {
                tab.setTitleColor(NOT_MODIFIED.getColor());
              }

              String filePath =
                  editor.getEditorInput().getFile().getLocation().removeFirstSegments(1).toString();

              if (editor instanceof HasVcsChangeMarkerRender) {
                VcsChangeMarkerRender render =
                    ((HasVcsChangeMarkerRender) editor).getVcsChangeMarkersRender();

                if (dto.getModifiedFiles().keySet().contains(filePath)) {
                  handleEditedRegions(dto.getModifiedFiles().get(filePath), render);
                } else {
                  render.clearAllChangeMarkers();
                }
              }
            });
  }

