    private void fetchRevisions() {
        service.log(
                project.getLocation(),
                    selectedPath.isEmpty() ? null : new Path[]{selectedPath},
                    skip,
                    DEFAULT_PAGE_SIZE,
                    false)
               .then(new Operation<LogResponse>() {
                   @Override
                   public void apply(LogResponse log) throws OperationException {
                       List<Revision> commits = log.getCommits();
                       if (!commits.isEmpty()) {
                           skip += commits.size();
                           revisions.addAll(commits);
                           view.setRevisions(revisions);
                           view.showDialog();
                       }
                   }
               })
               .catchError(new Operation<PromiseError>() {
                   @Override
                   public void apply(PromiseError error) throws OperationException {
                       if (getErrorCode(error.getCause()) == ErrorCodes.INIT_COMMIT_WAS_NOT_PERFORMED) {
                           dialogFactory.createMessageDialog(locale.historyTitle(),
                                                             locale.initCommitWasNotPerformed(),
                                                             null).show();
                       } else {
                           notificationManager.notify(locale.logFailed(), FAIL, EMERGE_MODE);
                       }
                   }
               });
    }

