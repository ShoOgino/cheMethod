  private void validateFrame2(long threadId) throws DebuggerException {
    StackFrameDumpDto stackFrame = asDto(debugger.getStackFrameDump(threadId, 2));

    LocationDto location = stackFrame.getLocation();
    assertEquals(location.getLineNumber(), 16);
    assertEquals(location.getTarget(), "org.eclipse.StackFrameDumpTest1");

    MethodDto method = location.getMethod();
    assertEquals(method.getName(), "main");

    List<VariableDto> arguments = method.getArguments();
    assertEquals(arguments.size(), 1);

    VariableDto variable = arguments.get(0);
    assertEquals(variable.getName(), "args");
    assertEquals(variable.getType(), "java.lang.String[]");
    assertEquals(variable.getVariablePath().getPath(), singletonList("args"));
    assertFalse(variable.isPrimitive());
    assertNull(variable.getValue());

    List<VariableDto> variables = stackFrame.getVariables();
    assertEquals(variables.size(), 1);

    variable = variables.get(0);
    assertEquals(variable.getName(), "args");
    assertEquals(variable.getType(), "java.lang.String[]");
    assertEquals(variable.getVariablePath().getPath(), singletonList("args"));
    assertFalse(variable.isPrimitive());
    assertTrue(variable.getValue().getString().contains("java.lang.String[0]"));
    assertTrue(variable.getValue().getVariables().isEmpty());

    List<FieldDto> fields = stackFrame.getFields();
    assertEquals(fields.size(), 1);

    FieldDto field = fields.get(0);
    assertEquals(field.getName(), "v");
    assertEquals(field.getType(), "java.lang.String");
    assertEquals(field.getVariablePath().getPath(), ImmutableList.of("static", "v"));
    assertFalse(field.isPrimitive());
    assertTrue(field.isIsStatic());
    assertFalse(field.isIsFinal());
    assertFalse(field.isIsTransient());
    assertEquals(field.getValue().getString(), "\"something\"");
    assertTrue(field.getValue().getVariables().isEmpty());
  }

