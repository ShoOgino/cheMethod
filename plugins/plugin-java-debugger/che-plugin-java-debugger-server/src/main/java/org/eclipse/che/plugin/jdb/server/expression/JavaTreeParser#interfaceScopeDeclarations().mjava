    // $ANTLR start "interfaceScopeDeclarations"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:229:1: interfaceScopeDeclarations : ( ^(
    // FUNCTION_METHOD_DECL modifierList ( genericTypeParameterList )? type IDENT formalParameterList ( arrayDeclaratorList )? (
    // throwsClause )? ) | ^( VOID_METHOD_DECL modifierList ( genericTypeParameterList )? IDENT formalParameterList ( throwsClause )? ) |
    // ^( VAR_DECLARATION modifierList type variableDeclaratorList ) | typeDeclaration );
    public final void interfaceScopeDeclarations() throws RecognitionException {
        int interfaceScopeDeclarations_StartIndex = input.index();
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 15)) {
                return;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:230:3: ( ^( FUNCTION_METHOD_DECL modifierList (
            // genericTypeParameterList )? type IDENT formalParameterList ( arrayDeclaratorList )? ( throwsClause )? ) | ^(
            // VOID_METHOD_DECL modifierList ( genericTypeParameterList )? IDENT formalParameterList ( throwsClause )? ) | ^(
            // VAR_DECLARATION modifierList type variableDeclaratorList ) | typeDeclaration )
            int alt39 = 4;
            switch (input.LA(1)) {
                case FUNCTION_METHOD_DECL: {
                    alt39 = 1;
                }
                break;
                case VOID_METHOD_DECL: {
                    alt39 = 2;
                }
                break;
                case VAR_DECLARATION: {
                    alt39 = 3;
                }
                break;
                case AT:
                case CLASS:
                case ENUM:
                case INTERFACE: {
                    alt39 = 4;
                }
                break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return;
                    }
                    NoViableAltException nvae =
                            new NoViableAltException("", 39, 0, input);

                    throw nvae;
            }

            switch (alt39) {
                case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:231:3: ^( FUNCTION_METHOD_DECL
                    // modifierList ( genericTypeParameterList )? type IDENT formalParameterList ( arrayDeclaratorList )? ( throwsClause
                    // )? )
                {
                    match(input, FUNCTION_METHOD_DECL, FOLLOW_FUNCTION_METHOD_DECL_in_interfaceScopeDeclarations573);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_modifierList_in_interfaceScopeDeclarations575);
                    modifierList();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:231:39: ( genericTypeParameterList )?
                    int alt34 = 2;
                    int LA34_0 = input.LA(1);

                    if ((LA34_0 == GENERIC_TYPE_PARAM_LIST)) {
                        alt34 = 1;
                    }
                    switch (alt34) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: genericTypeParameterList
                        {
                            pushFollow(FOLLOW_genericTypeParameterList_in_interfaceScopeDeclarations577);
                            genericTypeParameterList();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }

                    pushFollow(FOLLOW_type_in_interfaceScopeDeclarations580);
                    type();

                    state._fsp--;
                    if (state.failed) return;
                    match(input, IDENT, FOLLOW_IDENT_in_interfaceScopeDeclarations582);
                    if (state.failed) return;
                    pushFollow(FOLLOW_formalParameterList_in_interfaceScopeDeclarations584);
                    formalParameterList();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:231:96: ( arrayDeclaratorList )?
                    int alt35 = 2;
                    int LA35_0 = input.LA(1);

                    if ((LA35_0 == ARRAY_DECLARATOR_LIST)) {
                        alt35 = 1;
                    }
                    switch (alt35) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: arrayDeclaratorList
                        {
                            pushFollow(FOLLOW_arrayDeclaratorList_in_interfaceScopeDeclarations586);
                            arrayDeclaratorList();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }

                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:231:117: ( throwsClause )?
                    int alt36 = 2;
                    int LA36_0 = input.LA(1);

                    if ((LA36_0 == THROWS_CLAUSE)) {
                        alt36 = 1;
                    }
                    switch (alt36) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: throwsClause
                        {
                            pushFollow(FOLLOW_throwsClause_in_interfaceScopeDeclarations589);
                            throwsClause();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:233:3: ^( VOID_METHOD_DECL modifierList
                    // ( genericTypeParameterList )? IDENT formalParameterList ( throwsClause )? )
                {
                    match(input, VOID_METHOD_DECL, FOLLOW_VOID_METHOD_DECL_in_interfaceScopeDeclarations600);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_modifierList_in_interfaceScopeDeclarations602);
                    modifierList();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:233:35: ( genericTypeParameterList )?
                    int alt37 = 2;
                    int LA37_0 = input.LA(1);

                    if ((LA37_0 == GENERIC_TYPE_PARAM_LIST)) {
                        alt37 = 1;
                    }
                    switch (alt37) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: genericTypeParameterList
                        {
                            pushFollow(FOLLOW_genericTypeParameterList_in_interfaceScopeDeclarations604);
                            genericTypeParameterList();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }

                    match(input, IDENT, FOLLOW_IDENT_in_interfaceScopeDeclarations607);
                    if (state.failed) return;
                    pushFollow(FOLLOW_formalParameterList_in_interfaceScopeDeclarations609);
                    formalParameterList();

                    state._fsp--;
                    if (state.failed) return;
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:233:87: ( throwsClause )?
                    int alt38 = 2;
                    int LA38_0 = input.LA(1);

                    if ((LA38_0 == THROWS_CLAUSE)) {
                        alt38 = 1;
                    }
                    switch (alt38) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: throwsClause
                        {
                            pushFollow(FOLLOW_throwsClause_in_interfaceScopeDeclarations611);
                            throwsClause();

                            state._fsp--;
                            if (state.failed) return;

                        }
                        break;

                    }


                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 3:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:238:3: ^( VAR_DECLARATION modifierList
                    // type variableDeclaratorList )
                {
                    match(input, VAR_DECLARATION, FOLLOW_VAR_DECLARATION_in_interfaceScopeDeclarations631);
                    if (state.failed) return;

                    match(input, Token.DOWN, null);
                    if (state.failed) return;
                    pushFollow(FOLLOW_modifierList_in_interfaceScopeDeclarations633);
                    modifierList();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_type_in_interfaceScopeDeclarations635);
                    type();

                    state._fsp--;
                    if (state.failed) return;
                    pushFollow(FOLLOW_variableDeclaratorList_in_interfaceScopeDeclarations637);
                    variableDeclaratorList();

                    state._fsp--;
                    if (state.failed) return;

                    match(input, Token.UP, null);
                    if (state.failed) return;

                }
                break;
                case 4:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:239:5: typeDeclaration
                {
                    pushFollow(FOLLOW_typeDeclaration_in_interfaceScopeDeclarations644);
                    typeDeclaration();

                    state._fsp--;
                    if (state.failed) return;

                }
                break;

            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
            if (state.backtracking > 0) {
                memoize(input, 15, interfaceScopeDeclarations_StartIndex);
            }
        }
        return;
    }
    // $ANTLR end "interfaceScopeDeclarations"

