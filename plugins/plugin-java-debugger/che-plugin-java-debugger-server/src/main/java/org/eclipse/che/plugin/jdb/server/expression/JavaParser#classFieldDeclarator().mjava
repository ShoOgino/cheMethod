  // $ANTLR start "classFieldDeclarator"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:488:1: classFieldDeclarator : variableDeclaratorId ( ASSIGN
  // variableInitializer )? -> ^( VAR_DECLARATOR variableDeclaratorId ( variableInitializer )? ) ;
  public final JavaParser.classFieldDeclarator_return classFieldDeclarator()
      throws RecognitionException {
    JavaParser.classFieldDeclarator_return retval = new JavaParser.classFieldDeclarator_return();
    retval.start = input.LT(1);
    int classFieldDeclarator_StartIndex = input.index();
    CommonTree root_0 = null;

    Token ASSIGN128 = null;
    JavaParser.variableDeclaratorId_return variableDeclaratorId127 = null;

    JavaParser.variableInitializer_return variableInitializer129 = null;

    CommonTree ASSIGN128_tree = null;
    RewriteRuleTokenStream stream_ASSIGN = new RewriteRuleTokenStream(adaptor, "token ASSIGN");
    RewriteRuleSubtreeStream stream_variableDeclaratorId =
        new RewriteRuleSubtreeStream(adaptor, "rule variableDeclaratorId");
    RewriteRuleSubtreeStream stream_variableInitializer =
        new RewriteRuleSubtreeStream(adaptor, "rule variableInitializer");
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 28)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:489:5: ( variableDeclaratorId ( ASSIGN variableInitializer
      // )? -> ^( VAR_DECLARATOR variableDeclaratorId ( variableInitializer )? ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:489:9: variableDeclaratorId ( ASSIGN variableInitializer )?
      {
        pushFollow(FOLLOW_variableDeclaratorId_in_classFieldDeclarator6371);
        variableDeclaratorId127 = variableDeclaratorId();

        state._fsp--;
        if (state.failed) return retval;
        if (state.backtracking == 0)
          stream_variableDeclaratorId.add(variableDeclaratorId127.getTree());
        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:489:30: ( ASSIGN variableInitializer )?
        int alt45 = 2;
        int LA45_0 = input.LA(1);

        if ((LA45_0 == ASSIGN)) {
          alt45 = 1;
        }
        switch (alt45) {
          case 1:
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:489:31: ASSIGN variableInitializer
            {
              ASSIGN128 = (Token) match(input, ASSIGN, FOLLOW_ASSIGN_in_classFieldDeclarator6374);
              if (state.failed) return retval;
              if (state.backtracking == 0) stream_ASSIGN.add(ASSIGN128);

              pushFollow(FOLLOW_variableInitializer_in_classFieldDeclarator6376);
              variableInitializer129 = variableInitializer();

              state._fsp--;
              if (state.failed) return retval;
              if (state.backtracking == 0)
                stream_variableInitializer.add(variableInitializer129.getTree());
            }
            break;
        }

        // AST REWRITE
        // elements: variableInitializer, variableDeclaratorId
        // token labels:
        // rule labels: retval
        // token list labels:
        // rule list labels:
        // wildcard labels:
        if (state.backtracking == 0) {
          retval.tree = root_0;
          RewriteRuleSubtreeStream stream_retval =
              new RewriteRuleSubtreeStream(
                  adaptor, "rule retval", retval != null ? retval.tree : null);

          root_0 = (CommonTree) adaptor.nil();
          // 490:9: -> ^( VAR_DECLARATOR variableDeclaratorId ( variableInitializer )? )
          {
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:490:13: ^( VAR_DECLARATOR variableDeclaratorId
            // ( variableInitializer )? )
            {
              CommonTree root_1 = (CommonTree) adaptor.nil();
              root_1 =
                  (CommonTree)
                      adaptor.becomeRoot(
                          (CommonTree) adaptor.create(VAR_DECLARATOR, "VAR_DECLARATOR"), root_1);

              adaptor.addChild(root_1, stream_variableDeclaratorId.nextTree());
              // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:490:51: ( variableInitializer )?
              if (stream_variableInitializer.hasNext()) {
                adaptor.addChild(root_1, stream_variableInitializer.nextTree());
              }
              stream_variableInitializer.reset();

              adaptor.addChild(root_0, root_1);
            }
          }

          retval.tree = root_0;
        }
      }

      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 28, classFieldDeclarator_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "classFieldDeclarator"

