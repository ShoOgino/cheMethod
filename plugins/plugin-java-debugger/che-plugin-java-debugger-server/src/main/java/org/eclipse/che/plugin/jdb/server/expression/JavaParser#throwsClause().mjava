  // $ANTLR start "throwsClause"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:527:1: throwsClause : THROWS qualifiedIdentList -> ^(
  // THROWS_CLAUSE[$THROWS, \"THROWS_CLAUSE\"] qualifiedIdentList ) ;
  public final JavaParser.throwsClause_return throwsClause() throws RecognitionException {
    JavaParser.throwsClause_return retval = new JavaParser.throwsClause_return();
    retval.start = input.LT(1);
    int throwsClause_StartIndex = input.index();
    CommonTree root_0 = null;

    Token THROWS149 = null;
    JavaParser.qualifiedIdentList_return qualifiedIdentList150 = null;

    CommonTree THROWS149_tree = null;
    RewriteRuleTokenStream stream_THROWS = new RewriteRuleTokenStream(adaptor, "token THROWS");
    RewriteRuleSubtreeStream stream_qualifiedIdentList =
        new RewriteRuleSubtreeStream(adaptor, "rule qualifiedIdentList");
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 36)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:528:5: ( THROWS qualifiedIdentList -> ^(
      // THROWS_CLAUSE[$THROWS, \"THROWS_CLAUSE\"] qualifiedIdentList ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:528:9: THROWS qualifiedIdentList
      {
        THROWS149 = (Token) match(input, THROWS, FOLLOW_THROWS_in_throwsClause6699);
        if (state.failed) return retval;
        if (state.backtracking == 0) stream_THROWS.add(THROWS149);

        pushFollow(FOLLOW_qualifiedIdentList_in_throwsClause6701);
        qualifiedIdentList150 = qualifiedIdentList();

        state._fsp--;
        if (state.failed) return retval;
        if (state.backtracking == 0) stream_qualifiedIdentList.add(qualifiedIdentList150.getTree());

        // AST REWRITE
        // elements: qualifiedIdentList
        // token labels:
        // rule labels: retval
        // token list labels:
        // rule list labels:
        // wildcard labels:
        if (state.backtracking == 0) {
          retval.tree = root_0;
          RewriteRuleSubtreeStream stream_retval =
              new RewriteRuleSubtreeStream(
                  adaptor, "rule retval", retval != null ? retval.tree : null);

          root_0 = (CommonTree) adaptor.nil();
          // 529:9: -> ^( THROWS_CLAUSE[$THROWS, \"THROWS_CLAUSE\"] qualifiedIdentList )
          {
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:529:13: ^( THROWS_CLAUSE[$THROWS,
            // \"THROWS_CLAUSE\"] qualifiedIdentList )
            {
              CommonTree root_1 = (CommonTree) adaptor.nil();
              root_1 =
                  (CommonTree)
                      adaptor.becomeRoot(
                          (CommonTree) adaptor.create(THROWS_CLAUSE, THROWS149, "THROWS_CLAUSE"),
                          root_1);

              adaptor.addChild(root_1, stream_qualifiedIdentList.nextTree());

              adaptor.addChild(root_0, root_1);
            }
          }

          retval.tree = root_0;
        }
      }

      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 36, throwsClause_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "throwsClause"

