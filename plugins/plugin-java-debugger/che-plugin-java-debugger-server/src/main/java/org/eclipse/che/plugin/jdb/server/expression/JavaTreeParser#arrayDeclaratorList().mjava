  // $ANTLR start "arrayDeclaratorList"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:268:1: arrayDeclaratorList : ^( ARRAY_DECLARATOR_LIST (
  // ARRAY_DECLARATOR )* ) ;
  public final void arrayDeclaratorList() throws RecognitionException {
    int arrayDeclaratorList_StartIndex = input.index();
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 21)) {
        return;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:269:3: ( ^( ARRAY_DECLARATOR_LIST (
      // ARRAY_DECLARATOR )* ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:270:3: ^( ARRAY_DECLARATOR_LIST (
      // ARRAY_DECLARATOR )* )
      {
        match(input, ARRAY_DECLARATOR_LIST, FOLLOW_ARRAY_DECLARATOR_LIST_in_arrayDeclaratorList760);
        if (state.failed) return;

        if (input.LA(1) == Token.DOWN) {
          match(input, Token.DOWN, null);
          if (state.failed) return;
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:270:27: ( ARRAY_DECLARATOR )*
          loop44:
          do {
            int alt44 = 2;
            int LA44_0 = input.LA(1);

            if ((LA44_0 == ARRAY_DECLARATOR)) {
              alt44 = 1;
            }

            switch (alt44) {
              case 1:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: ARRAY_DECLARATOR
                {
                  match(input, ARRAY_DECLARATOR, FOLLOW_ARRAY_DECLARATOR_in_arrayDeclaratorList762);
                  if (state.failed) return;
                }
                break;

              default:
                break loop44;
            }
          } while (true);

          match(input, Token.UP, null);
          if (state.failed) return;
        }
      }

    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 21, arrayDeclaratorList_StartIndex);
      }
    }
    return;
  }
  // $ANTLR end "arrayDeclaratorList"

