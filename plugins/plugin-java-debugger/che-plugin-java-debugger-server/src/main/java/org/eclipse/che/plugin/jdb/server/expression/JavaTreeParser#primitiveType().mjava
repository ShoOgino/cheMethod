  // $ANTLR start "primitiveType"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:336:1: primitiveType : ( BOOLEAN | CHAR | BYTE | SHORT |
  // INT | LONG | FLOAT | DOUBLE );
  public final void primitiveType() throws RecognitionException {
    int primitiveType_StartIndex = input.index();
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 31)) {
        return;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:337:3: ( BOOLEAN | CHAR | BYTE | SHORT | INT |
      // LONG | FLOAT | DOUBLE )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:
      {
        if (input.LA(1) == BOOLEAN
            || input.LA(1) == BYTE
            || input.LA(1) == CHAR
            || input.LA(1) == DOUBLE
            || input.LA(1) == FLOAT
            || (input.LA(1) >= INT && input.LA(1) <= LONG)
            || input.LA(1) == SHORT) {
          input.consume();
          state.errorRecovery = false;
          state.failed = false;
        } else {
          if (state.backtracking > 0) {
            state.failed = true;
            return;
          }
          MismatchedSetException mse = new MismatchedSetException(null, input);
          throw mse;
        }
      }

    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 31, primitiveType_StartIndex);
      }
    }
    return;
  }
  // $ANTLR end "primitiveType"

