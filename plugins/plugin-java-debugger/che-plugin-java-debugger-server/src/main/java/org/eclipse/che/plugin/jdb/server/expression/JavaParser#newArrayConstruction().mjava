  // $ANTLR start "newArrayConstruction"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1059:1: newArrayConstruction : ( arrayDeclaratorList
  // arrayInitializer | LBRACK expression RBRACK ( LBRACK expression RBRACK )* ( arrayDeclaratorList )? );
  public final JavaParser.newArrayConstruction_return newArrayConstruction()
      throws RecognitionException {
    JavaParser.newArrayConstruction_return retval = new JavaParser.newArrayConstruction_return();
    retval.start = input.LT(1);
    int newArrayConstruction_StartIndex = input.index();
    CommonTree root_0 = null;

    Token LBRACK522 = null;
    Token RBRACK524 = null;
    Token LBRACK525 = null;
    Token RBRACK527 = null;
    JavaParser.arrayDeclaratorList_return arrayDeclaratorList520 = null;

    JavaParser.arrayInitializer_return arrayInitializer521 = null;

    JavaParser.expression_return expression523 = null;

    JavaParser.expression_return expression526 = null;

    JavaParser.arrayDeclaratorList_return arrayDeclaratorList528 = null;

    CommonTree LBRACK522_tree = null;
    CommonTree RBRACK524_tree = null;
    CommonTree LBRACK525_tree = null;
    CommonTree RBRACK527_tree = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 109)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1060:5: ( arrayDeclaratorList arrayInitializer | LBRACK
      // expression RBRACK ( LBRACK expression RBRACK )* ( arrayDeclaratorList )? )
      int alt152 = 2;
      int LA152_0 = input.LA(1);

      if ((LA152_0 == LBRACK)) {
        int LA152_1 = input.LA(2);

        if ((LA152_1 == RBRACK)) {
          alt152 = 1;
        } else if ((LA152_1 == DEC
            || LA152_1 == INC
            || LA152_1 == LESS_THAN
            || LA152_1 == LOGICAL_NOT
            || (LA152_1 >= LPAREN && LA152_1 <= MINUS)
            || LA152_1 == NOT
            || LA152_1 == PLUS
            || LA152_1 == BOOLEAN
            || LA152_1 == BYTE
            || LA152_1 == CHAR
            || LA152_1 == DOUBLE
            || LA152_1 == FALSE
            || LA152_1 == FLOAT
            || (LA152_1 >= INT && LA152_1 <= LONG)
            || (LA152_1 >= NEW && LA152_1 <= NULL)
            || LA152_1 == SHORT
            || LA152_1 == SUPER
            || LA152_1 == THIS
            || LA152_1 == TRUE
            || LA152_1 == VOID
            || (LA152_1 >= IDENT && LA152_1 <= STRING_LITERAL))) {
          alt152 = 2;
        } else {
          if (state.backtracking > 0) {
            state.failed = true;
            return retval;
          }
          NoViableAltException nvae = new NoViableAltException("", 152, 1, input);

          throw nvae;
        }
      } else {
        if (state.backtracking > 0) {
          state.failed = true;
          return retval;
        }
        NoViableAltException nvae = new NoViableAltException("", 152, 0, input);

        throw nvae;
      }
      switch (alt152) {
        case 1:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1060:9: arrayDeclaratorList arrayInitializer
          {
            root_0 = (CommonTree) adaptor.nil();

            pushFollow(FOLLOW_arrayDeclaratorList_in_newArrayConstruction14680);
            arrayDeclaratorList520 = arrayDeclaratorList();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) adaptor.addChild(root_0, arrayDeclaratorList520.getTree());
            pushFollow(FOLLOW_arrayInitializer_in_newArrayConstruction14682);
            arrayInitializer521 = arrayInitializer();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) adaptor.addChild(root_0, arrayInitializer521.getTree());
          }
          break;
        case 2:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1061:9: LBRACK expression RBRACK ( LBRACK
          // expression RBRACK )* ( arrayDeclaratorList )?
          {
            root_0 = (CommonTree) adaptor.nil();

            LBRACK522 = (Token) match(input, LBRACK, FOLLOW_LBRACK_in_newArrayConstruction14692);
            if (state.failed) return retval;
            pushFollow(FOLLOW_expression_in_newArrayConstruction14695);
            expression523 = expression();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) adaptor.addChild(root_0, expression523.getTree());
            RBRACK524 = (Token) match(input, RBRACK, FOLLOW_RBRACK_in_newArrayConstruction14697);
            if (state.failed) return retval;
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1061:36: ( LBRACK expression RBRACK )*
            loop150:
            do {
              int alt150 = 2;
              alt150 = dfa150.predict(input);
              switch (alt150) {
                case 1:
                  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1061:37: LBRACK expression RBRACK
                  {
                    LBRACK525 =
                        (Token) match(input, LBRACK, FOLLOW_LBRACK_in_newArrayConstruction14701);
                    if (state.failed) return retval;
                    pushFollow(FOLLOW_expression_in_newArrayConstruction14704);
                    expression526 = expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (state.backtracking == 0) adaptor.addChild(root_0, expression526.getTree());
                    RBRACK527 =
                        (Token) match(input, RBRACK, FOLLOW_RBRACK_in_newArrayConstruction14706);
                    if (state.failed) return retval;
                  }
                  break;

                default:
                  break loop150;
              }
            } while (true);

            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1061:66: ( arrayDeclaratorList )?
            int alt151 = 2;
            int LA151_0 = input.LA(1);

            if ((LA151_0 == LBRACK)) {
              int LA151_1 = input.LA(2);

              if ((LA151_1 == RBRACK)) {
                alt151 = 1;
              }
            }
            switch (alt151) {
              case 1:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: arrayDeclaratorList
                {
                  pushFollow(FOLLOW_arrayDeclaratorList_in_newArrayConstruction14711);
                  arrayDeclaratorList528 = arrayDeclaratorList();

                  state._fsp--;
                  if (state.failed) return retval;
                  if (state.backtracking == 0)
                    adaptor.addChild(root_0, arrayDeclaratorList528.getTree());
                }
                break;
            }
          }
          break;
      }
      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 109, newArrayConstruction_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "newArrayConstruction"

