  // $ANTLR start "annotationInitializer"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:693:1: annotationInitializer : IDENT ASSIGN annotationElementValue ;
  public final JavaParser.annotationInitializer_return annotationInitializer()
      throws RecognitionException {
    JavaParser.annotationInitializer_return retval = new JavaParser.annotationInitializer_return();
    retval.start = input.LT(1);
    int annotationInitializer_StartIndex = input.index();
    CommonTree root_0 = null;

    Token IDENT233 = null;
    Token ASSIGN234 = null;
    JavaParser.annotationElementValue_return annotationElementValue235 = null;

    CommonTree IDENT233_tree = null;
    CommonTree ASSIGN234_tree = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 64)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:694:5: ( IDENT ASSIGN annotationElementValue )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:694:9: IDENT ASSIGN annotationElementValue
      {
        root_0 = (CommonTree) adaptor.nil();

        IDENT233 = (Token) match(input, IDENT, FOLLOW_IDENT_in_annotationInitializer8187);
        if (state.failed) return retval;
        if (state.backtracking == 0) {
          IDENT233_tree = (CommonTree) adaptor.create(IDENT233);
          root_0 = (CommonTree) adaptor.becomeRoot(IDENT233_tree, root_0);
        }
        ASSIGN234 = (Token) match(input, ASSIGN, FOLLOW_ASSIGN_in_annotationInitializer8190);
        if (state.failed) return retval;
        pushFollow(FOLLOW_annotationElementValue_in_annotationInitializer8193);
        annotationElementValue235 = annotationElementValue();

        state._fsp--;
        if (state.failed) return retval;
        if (state.backtracking == 0) adaptor.addChild(root_0, annotationElementValue235.getTree());
      }

      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 64, annotationInitializer_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "annotationInitializer"

