  // $ANTLR start "modifier"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:537:1: modifier : ( PUBLIC | PROTECTED | PRIVATE | STATIC |
  // ABSTRACT | NATIVE | SYNCHRONIZED | TRANSIENT | VOLATILE | STRICTFP | localModifier );
  public final JavaParser.modifier_return modifier() throws RecognitionException {
    JavaParser.modifier_return retval = new JavaParser.modifier_return();
    retval.start = input.LT(1);
    int modifier_StartIndex = input.index();
    CommonTree root_0 = null;

    Token PUBLIC152 = null;
    Token PROTECTED153 = null;
    Token PRIVATE154 = null;
    Token STATIC155 = null;
    Token ABSTRACT156 = null;
    Token NATIVE157 = null;
    Token SYNCHRONIZED158 = null;
    Token TRANSIENT159 = null;
    Token VOLATILE160 = null;
    Token STRICTFP161 = null;
    JavaParser.localModifier_return localModifier162 = null;

    CommonTree PUBLIC152_tree = null;
    CommonTree PROTECTED153_tree = null;
    CommonTree PRIVATE154_tree = null;
    CommonTree STATIC155_tree = null;
    CommonTree ABSTRACT156_tree = null;
    CommonTree NATIVE157_tree = null;
    CommonTree SYNCHRONIZED158_tree = null;
    CommonTree TRANSIENT159_tree = null;
    CommonTree VOLATILE160_tree = null;
    CommonTree STRICTFP161_tree = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 38)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:538:5: ( PUBLIC | PROTECTED | PRIVATE | STATIC | ABSTRACT
      // | NATIVE | SYNCHRONIZED | TRANSIENT | VOLATILE | STRICTFP | localModifier )
      int alt54 = 11;
      switch (input.LA(1)) {
        case PUBLIC:
          {
            alt54 = 1;
          }
          break;
        case PROTECTED:
          {
            alt54 = 2;
          }
          break;
        case PRIVATE:
          {
            alt54 = 3;
          }
          break;
        case STATIC:
          {
            alt54 = 4;
          }
          break;
        case ABSTRACT:
          {
            alt54 = 5;
          }
          break;
        case NATIVE:
          {
            alt54 = 6;
          }
          break;
        case SYNCHRONIZED:
          {
            alt54 = 7;
          }
          break;
        case TRANSIENT:
          {
            alt54 = 8;
          }
          break;
        case VOLATILE:
          {
            alt54 = 9;
          }
          break;
        case STRICTFP:
          {
            alt54 = 10;
          }
          break;
        case AT:
        case FINAL:
          {
            alt54 = 11;
          }
          break;
        default:
          if (state.backtracking > 0) {
            state.failed = true;
            return retval;
          }
          NoViableAltException nvae = new NoViableAltException("", 54, 0, input);

          throw nvae;
      }

      switch (alt54) {
        case 1:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:538:9: PUBLIC
          {
            root_0 = (CommonTree) adaptor.nil();

            PUBLIC152 = (Token) match(input, PUBLIC, FOLLOW_PUBLIC_in_modifier6779);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              PUBLIC152_tree = (CommonTree) adaptor.create(PUBLIC152);
              adaptor.addChild(root_0, PUBLIC152_tree);
            }
          }
          break;
        case 2:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:539:9: PROTECTED
          {
            root_0 = (CommonTree) adaptor.nil();

            PROTECTED153 = (Token) match(input, PROTECTED, FOLLOW_PROTECTED_in_modifier6789);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              PROTECTED153_tree = (CommonTree) adaptor.create(PROTECTED153);
              adaptor.addChild(root_0, PROTECTED153_tree);
            }
          }
          break;
        case 3:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:540:9: PRIVATE
          {
            root_0 = (CommonTree) adaptor.nil();

            PRIVATE154 = (Token) match(input, PRIVATE, FOLLOW_PRIVATE_in_modifier6799);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              PRIVATE154_tree = (CommonTree) adaptor.create(PRIVATE154);
              adaptor.addChild(root_0, PRIVATE154_tree);
            }
          }
          break;
        case 4:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:541:9: STATIC
          {
            root_0 = (CommonTree) adaptor.nil();

            STATIC155 = (Token) match(input, STATIC, FOLLOW_STATIC_in_modifier6809);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              STATIC155_tree = (CommonTree) adaptor.create(STATIC155);
              adaptor.addChild(root_0, STATIC155_tree);
            }
          }
          break;
        case 5:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:542:9: ABSTRACT
          {
            root_0 = (CommonTree) adaptor.nil();

            ABSTRACT156 = (Token) match(input, ABSTRACT, FOLLOW_ABSTRACT_in_modifier6819);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              ABSTRACT156_tree = (CommonTree) adaptor.create(ABSTRACT156);
              adaptor.addChild(root_0, ABSTRACT156_tree);
            }
          }
          break;
        case 6:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:543:9: NATIVE
          {
            root_0 = (CommonTree) adaptor.nil();

            NATIVE157 = (Token) match(input, NATIVE, FOLLOW_NATIVE_in_modifier6829);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              NATIVE157_tree = (CommonTree) adaptor.create(NATIVE157);
              adaptor.addChild(root_0, NATIVE157_tree);
            }
          }
          break;
        case 7:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:544:9: SYNCHRONIZED
          {
            root_0 = (CommonTree) adaptor.nil();

            SYNCHRONIZED158 =
                (Token) match(input, SYNCHRONIZED, FOLLOW_SYNCHRONIZED_in_modifier6839);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              SYNCHRONIZED158_tree = (CommonTree) adaptor.create(SYNCHRONIZED158);
              adaptor.addChild(root_0, SYNCHRONIZED158_tree);
            }
          }
          break;
        case 8:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:545:9: TRANSIENT
          {
            root_0 = (CommonTree) adaptor.nil();

            TRANSIENT159 = (Token) match(input, TRANSIENT, FOLLOW_TRANSIENT_in_modifier6849);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              TRANSIENT159_tree = (CommonTree) adaptor.create(TRANSIENT159);
              adaptor.addChild(root_0, TRANSIENT159_tree);
            }
          }
          break;
        case 9:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:546:9: VOLATILE
          {
            root_0 = (CommonTree) adaptor.nil();

            VOLATILE160 = (Token) match(input, VOLATILE, FOLLOW_VOLATILE_in_modifier6859);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              VOLATILE160_tree = (CommonTree) adaptor.create(VOLATILE160);
              adaptor.addChild(root_0, VOLATILE160_tree);
            }
          }
          break;
        case 10:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:547:9: STRICTFP
          {
            root_0 = (CommonTree) adaptor.nil();

            STRICTFP161 = (Token) match(input, STRICTFP, FOLLOW_STRICTFP_in_modifier6869);
            if (state.failed) return retval;
            if (state.backtracking == 0) {
              STRICTFP161_tree = (CommonTree) adaptor.create(STRICTFP161);
              adaptor.addChild(root_0, STRICTFP161_tree);
            }
          }
          break;
        case 11:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:548:9: localModifier
          {
            root_0 = (CommonTree) adaptor.nil();

            pushFollow(FOLLOW_localModifier_in_modifier6879);
            localModifier162 = localModifier();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) adaptor.addChild(root_0, localModifier162.getTree());
          }
          break;
      }
      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 38, modifier_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "modifier"

