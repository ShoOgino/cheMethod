    // $ANTLR start "STRING_LITERAL"
    public final void mSTRING_LITERAL() throws RecognitionException {
        try {
            int _type = STRING_LITERAL;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1116:5: ( '\"' ( ESCAPE_SEQUENCE | ~ ( '\\\\' | '\"' ) )*
            // '\"' )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1116:8: '\"' ( ESCAPE_SEQUENCE | ~ ( '\\\\' | '\"' ) )* '\"'
            {
                match('\"');
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1116:12: ( ESCAPE_SEQUENCE | ~ ( '\\\\' | '\"' ) )*
                loop21:
                do {
                    int alt21 = 3;
                    int LA21_0 = input.LA(1);

                    if ((LA21_0 == '\\')) {
                        alt21 = 1;
                    } else if (((LA21_0 >= '\u0000' && LA21_0 <= '!') || (LA21_0 >= '#' && LA21_0 <= '[') ||
                                (LA21_0 >= ']' && LA21_0 <= '\uFFFF'))) {
                        alt21 = 2;
                    }


                    switch (alt21) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1116:14: ESCAPE_SEQUENCE
                        {
                            mESCAPE_SEQUENCE();

                        }
                        break;
                        case 2:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1116:32: ~ ( '\\\\' | '\"' )
                        {
                            if ((input.LA(1) >= '\u0000' && input.LA(1) <= '!') || (input.LA(1) >= '#' && input.LA(1) <= '[') ||
                                (input.LA(1) >= ']' && input.LA(1) <= '\uFFFF')) {
                                input.consume();

                            } else {
                                MismatchedSetException mse = new MismatchedSetException(null, input);
                                recover(mse);
                                throw mse;
                            }


                        }
                        break;

                        default:
                            break loop21;
                    }
                } while (true);

                match('\"');

            }

            state.type = _type;
            state.channel = _channel;
        } finally {
        }
    }
    // $ANTLR end "STRING_LITERAL"

