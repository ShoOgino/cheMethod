    // $ANTLR start "enumTypeDeclaration"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:403:1: enumTypeDeclaration[CommonTree modifiers] : ENUM IDENT (
    // implementsClause )? enumBody -> ^( ENUM IDENT ( implementsClause )? enumBody ) ;
    public final JavaParser.enumTypeDeclaration_return enumTypeDeclaration(CommonTree modifiers) throws RecognitionException {
        JavaParser.enumTypeDeclaration_return retval = new JavaParser.enumTypeDeclaration_return();
        retval.start = input.LT(1);
        int enumTypeDeclaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token ENUM47 = null;
        Token IDENT48 = null;
        JavaParser.implementsClause_return implementsClause49 = null;

        JavaParser.enumBody_return enumBody50 = null;


        CommonTree ENUM47_tree = null;
        CommonTree IDENT48_tree = null;
        RewriteRuleTokenStream stream_IDENT = new RewriteRuleTokenStream(adaptor, "token IDENT");
        RewriteRuleTokenStream stream_ENUM = new RewriteRuleTokenStream(adaptor, "token ENUM");
        RewriteRuleSubtreeStream stream_implementsClause = new RewriteRuleSubtreeStream(adaptor, "rule implementsClause");
        RewriteRuleSubtreeStream stream_enumBody = new RewriteRuleSubtreeStream(adaptor, "rule enumBody");
        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 15)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:404:5: ( ENUM IDENT ( implementsClause )? enumBody -> ^(
            // ENUM IDENT ( implementsClause )? enumBody ) )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:404:9: ENUM IDENT ( implementsClause )? enumBody
            {
                ENUM47 = (Token)match(input, ENUM, FOLLOW_ENUM_in_enumTypeDeclaration5263);
                if (state.failed) return retval;
                if (state.backtracking == 0) stream_ENUM.add(ENUM47);

                IDENT48 = (Token)match(input, IDENT, FOLLOW_IDENT_in_enumTypeDeclaration5265);
                if (state.failed) return retval;
                if (state.backtracking == 0) stream_IDENT.add(IDENT48);

                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:404:20: ( implementsClause )?
                int alt15 = 2;
                int LA15_0 = input.LA(1);

                if ((LA15_0 == IMPLEMENTS)) {
                    alt15 = 1;
                }
                switch (alt15) {
                    case 1:
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: implementsClause
                    {
                        pushFollow(FOLLOW_implementsClause_in_enumTypeDeclaration5267);
                        implementsClause49 = implementsClause();

                        state._fsp--;
                        if (state.failed) return retval;
                        if (state.backtracking == 0) stream_implementsClause.add(implementsClause49.getTree());

                    }
                    break;

                }

                pushFollow(FOLLOW_enumBody_in_enumTypeDeclaration5270);
                enumBody50 = enumBody();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0) stream_enumBody.add(enumBody50.getTree());


                // AST REWRITE
                // elements: enumBody, ENUM, IDENT, implementsClause
                // token labels: 
                // rule labels: retval
                // token list labels: 
                // rule list labels: 
                // wildcard labels: 
                if (state.backtracking == 0) {
                    retval.tree = root_0;
                    RewriteRuleSubtreeStream stream_retval =
                            new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);

                    root_0 = (CommonTree)adaptor.nil();
                    // 405:9: -> ^( ENUM IDENT ( implementsClause )? enumBody )
                    {
                        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:405:13: ^( ENUM IDENT ( implementsClause )?
                        // enumBody )
                        {
                            CommonTree root_1 = (CommonTree)adaptor.nil();
                            root_1 = (CommonTree)adaptor.becomeRoot(stream_ENUM.nextNode(), root_1);

                            adaptor.addChild(root_1, modifiers);
                            adaptor.addChild(root_1, stream_IDENT.nextNode());
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:405:39: ( implementsClause )?
                            if (stream_implementsClause.hasNext()) {
                                adaptor.addChild(root_1, stream_implementsClause.nextTree());

                            }
                            stream_implementsClause.reset();
                            adaptor.addChild(root_1, stream_enumBody.nextTree());

                            adaptor.addChild(root_0, root_1);
                        }

                    }

                    retval.tree = root_0;
                }
            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 15, enumTypeDeclaration_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "enumTypeDeclaration"

