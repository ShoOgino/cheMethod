  // $ANTLR start "annotationDefaultValue"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:733:1: annotationDefaultValue : DEFAULT annotationElementValue ;
  public final JavaParser.annotationDefaultValue_return annotationDefaultValue()
      throws RecognitionException {
    JavaParser.annotationDefaultValue_return retval =
        new JavaParser.annotationDefaultValue_return();
    retval.start = input.LT(1);
    int annotationDefaultValue_StartIndex = input.index();
    CommonTree root_0 = null;

    Token DEFAULT263 = null;
    JavaParser.annotationElementValue_return annotationElementValue264 = null;

    CommonTree DEFAULT263_tree = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 71)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:734:5: ( DEFAULT annotationElementValue )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:734:9: DEFAULT annotationElementValue
      {
        root_0 = (CommonTree) adaptor.nil();

        DEFAULT263 = (Token) match(input, DEFAULT, FOLLOW_DEFAULT_in_annotationDefaultValue8594);
        if (state.failed) return retval;
        if (state.backtracking == 0) {
          DEFAULT263_tree = (CommonTree) adaptor.create(DEFAULT263);
          root_0 = (CommonTree) adaptor.becomeRoot(DEFAULT263_tree, root_0);
        }
        pushFollow(FOLLOW_annotationElementValue_in_annotationDefaultValue8597);
        annotationElementValue264 = annotationElementValue();

        state._fsp--;
        if (state.failed) return retval;
        if (state.backtracking == 0) adaptor.addChild(root_0, annotationElementValue264.getTree());
      }

      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 71, annotationDefaultValue_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "annotationDefaultValue"

