  // $ANTLR start "primaryExpression"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:789:1: primaryExpression returns [ExpressionValue value]
  // : ( ^( DOT (e= primaryExpression ( IDENT | THIS | SUPER | innerNewExpression | CLASS ) | primitiveType CLASS | VOID CLASS ) ) |
  // parenthesizedExpression | IDENT | ^( METHOD_CALL o= primaryExpression ( genericTypeArgumentList )? arguments ) |
  // explicitConstructorCall | ^( ARRAY_ELEMENT_ACCESS arr= primaryExpression index= expression ) | literal | newExpression | THIS |
  // arrayTypeDeclarator | SUPER );
  public final JavaTreeParser.primaryExpression_return primaryExpression()
      throws RecognitionException {
    JavaTreeParser.primaryExpression_return retval = new JavaTreeParser.primaryExpression_return();
    retval.start = input.LT(1);
    int primaryExpression_StartIndex = input.index();
    CommonTree IDENT40 = null;
    CommonTree IDENT42 = null;
    JavaTreeParser.primaryExpression_return e = null;

    JavaTreeParser.primaryExpression_return o = null;

    JavaTreeParser.primaryExpression_return arr = null;

    ExpressionValue index = null;

    ExpressionValue parenthesizedExpression41 = null;

    List<com.sun.jdi.Value> arguments43 = null;

    ExpressionValue literal44 = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 64)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:793:3: ( ^( DOT (e= primaryExpression ( IDENT |
      // THIS | SUPER | innerNewExpression | CLASS ) | primitiveType CLASS | VOID CLASS ) ) | parenthesizedExpression | IDENT | ^(
      // METHOD_CALL o= primaryExpression ( genericTypeArgumentList )? arguments ) | explicitConstructorCall | ^(
      // ARRAY_ELEMENT_ACCESS arr= primaryExpression index= expression ) | literal | newExpression | THIS | arrayTypeDeclarator |
      // SUPER )
      int alt95 = 11;
      switch (input.LA(1)) {
        case DOT:
          {
            alt95 = 1;
          }
          break;
        case PARENTESIZED_EXPR:
          {
            alt95 = 2;
          }
          break;
        case IDENT:
          {
            alt95 = 3;
          }
          break;
        case METHOD_CALL:
          {
            alt95 = 4;
          }
          break;
        case SUPER_CONSTRUCTOR_CALL:
        case THIS_CONSTRUCTOR_CALL:
          {
            alt95 = 5;
          }
          break;
        case ARRAY_ELEMENT_ACCESS:
          {
            alt95 = 6;
          }
          break;
        case FALSE:
        case NULL:
        case TRUE:
        case HEX_LITERAL:
        case OCTAL_LITERAL:
        case DECIMAL_LITERAL:
        case FLOATING_POINT_LITERAL:
        case CHARACTER_LITERAL:
        case STRING_LITERAL:
          {
            alt95 = 7;
          }
          break;
        case CLASS_CONSTRUCTOR_CALL:
        case STATIC_ARRAY_CREATOR:
          {
            alt95 = 8;
          }
          break;
        case THIS:
          {
            alt95 = 9;
          }
          break;
        case ARRAY_DECLARATOR:
          {
            alt95 = 10;
          }
          break;
        case SUPER:
          {
            alt95 = 11;
          }
          break;
        default:
          if (state.backtracking > 0) {
            state.failed = true;
            return retval;
          }
          NoViableAltException nvae = new NoViableAltException("", 95, 0, input);

          throw nvae;
      }

      switch (alt95) {
        case 1:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:794:3: ^( DOT (e= primaryExpression (
          // IDENT | THIS | SUPER | innerNewExpression | CLASS ) | primitiveType CLASS | VOID CLASS ) )
          {
            match(input, DOT, FOLLOW_DOT_in_primaryExpression4302);
            if (state.failed) return retval;

            match(input, Token.DOWN, null);
            if (state.failed) return retval;
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:796:5: (e= primaryExpression ( IDENT |
            // THIS | SUPER | innerNewExpression | CLASS ) | primitiveType CLASS | VOID CLASS )
            int alt93 = 3;
            switch (input.LA(1)) {
              case DOT:
              case FALSE:
              case NULL:
              case SUPER:
              case THIS:
              case TRUE:
              case ARRAY_DECLARATOR:
              case ARRAY_ELEMENT_ACCESS:
              case CLASS_CONSTRUCTOR_CALL:
              case METHOD_CALL:
              case PARENTESIZED_EXPR:
              case STATIC_ARRAY_CREATOR:
              case SUPER_CONSTRUCTOR_CALL:
              case THIS_CONSTRUCTOR_CALL:
              case IDENT:
              case HEX_LITERAL:
              case OCTAL_LITERAL:
              case DECIMAL_LITERAL:
              case FLOATING_POINT_LITERAL:
              case CHARACTER_LITERAL:
              case STRING_LITERAL:
                {
                  alt93 = 1;
                }
                break;
              case BOOLEAN:
              case BYTE:
              case CHAR:
              case DOUBLE:
              case FLOAT:
              case INT:
              case LONG:
              case SHORT:
                {
                  alt93 = 2;
                }
                break;
              case VOID:
                {
                  alt93 = 3;
                }
                break;
              default:
                if (state.backtracking > 0) {
                  state.failed = true;
                  return retval;
                }
                NoViableAltException nvae = new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
              case 1:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:797:7: e= primaryExpression (
                // IDENT | THIS | SUPER | innerNewExpression | CLASS )
                {
                  pushFollow(FOLLOW_primaryExpression_in_primaryExpression4318);
                  e = primaryExpression();

                  state._fsp--;
                  if (state.failed) return retval;
                  if (state.backtracking == 0) {

                    retval.value = (e != null ? e.value : null);
                  }
                  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:801:7: ( IDENT | THIS | SUPER |
                  // innerNewExpression | CLASS )
                  int alt92 = 5;
                  switch (input.LA(1)) {
                    case IDENT:
                      {
                        alt92 = 1;
                      }
                      break;
                    case THIS:
                      {
                        alt92 = 2;
                      }
                      break;
                    case SUPER:
                      {
                        alt92 = 3;
                      }
                      break;
                    case CLASS_CONSTRUCTOR_CALL:
                      {
                        alt92 = 4;
                      }
                      break;
                    case CLASS:
                      {
                        alt92 = 5;
                      }
                      break;
                    default:
                      if (state.backtracking > 0) {
                        state.failed = true;
                        return retval;
                      }
                      NoViableAltException nvae = new NoViableAltException("", 92, 0, input);

                      throw nvae;
                  }

                  switch (alt92) {
                    case 1:
                      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:802:9: IDENT
                      {
                        IDENT40 =
                            (CommonTree) match(input, IDENT, FOLLOW_IDENT_in_primaryExpression4353);
                        if (state.failed) return retval;
                        if (state.backtracking == 0) {

                          if (((CommonTree) retval.start).getParent().getType() != METHOD_CALL) {
                            retval.value =
                                ev.getField(
                                    latest.getValue(),
                                    (IDENT40 != null ? IDENT40.getText() : null));
                            if (retval.value == null) {
                              throw new ExpressionException(
                                  "Unknown field " + (IDENT40 != null ? IDENT40.getText() : null));
                            }
                          }
                        }
                      }
                      break;
                    case 2:
                      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:811:11: THIS
                      {
                        match(input, THIS, FOLLOW_THIS_in_primaryExpression4383);
                        if (state.failed) return retval;
                        if (state.backtracking == 0) {

                          retval.value = ev.getThisObject();
                        }
                      }
                      break;
                    case 3:
                      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:815:11: SUPER
                      {
                        match(input, SUPER, FOLLOW_SUPER_in_primaryExpression4413);
                        if (state.failed) return retval;
                      }
                      break;
                    case 4:
                      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:816:11: innerNewExpression
                      {
                        pushFollow(FOLLOW_innerNewExpression_in_primaryExpression4425);
                        innerNewExpression();

                        state._fsp--;
                        if (state.failed) return retval;
                        if (state.backtracking == 0) {

                          throw new ExpressionException(
                              "Unable create new instance. Operation not supported yet. ");
                        }
                      }
                      break;
                    case 5:
                      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:820:11: CLASS
                      {
                        match(input, CLASS, FOLLOW_CLASS_in_primaryExpression4485);
                        if (state.failed) return retval;
                      }
                      break;
                  }
                }
                break;
              case 2:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:822:9: primitiveType CLASS
                {
                  pushFollow(FOLLOW_primitiveType_in_primaryExpression4503);
                  primitiveType();

                  state._fsp--;
                  if (state.failed) return retval;
                  match(input, CLASS, FOLLOW_CLASS_in_primaryExpression4505);
                  if (state.failed) return retval;
                }
                break;
              case 3:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:823:9: VOID CLASS
                {
                  match(input, VOID, FOLLOW_VOID_in_primaryExpression4515);
                  if (state.failed) return retval;
                  match(input, CLASS, FOLLOW_CLASS_in_primaryExpression4517);
                  if (state.failed) return retval;
                }
                break;
            }

            match(input, Token.UP, null);
            if (state.failed) return retval;
          }
          break;
        case 2:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:826:5: parenthesizedExpression
          {
            pushFollow(FOLLOW_parenthesizedExpression_in_primaryExpression4534);
            parenthesizedExpression41 = parenthesizedExpression();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              retval.value = parenthesizedExpression41;
            }
          }
          break;
        case 3:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:830:5: IDENT
          {
            IDENT42 = (CommonTree) match(input, IDENT, FOLLOW_IDENT_in_primaryExpression4558);
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              if (((CommonTree) retval.start).getParent().getType() != METHOD_CALL) {
                retval.value = ev.getLocalVariable((IDENT42 != null ? IDENT42.getText() : null));
                if (retval.value == null) {
                  retval.value =
                      ev.getField(latest.getValue(), (IDENT42 != null ? IDENT42.getText() : null));
                }
                if (retval.value == null) {
                  throw new ExpressionException(
                      "Unknown local variable or field "
                          + (IDENT42 != null ? IDENT42.getText() : null));
                }
              } else {
                retval.value = ev.getThisObject();
              }
            }
          }
          break;
        case 4:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:846:3: ^( METHOD_CALL o=
          // primaryExpression ( genericTypeArgumentList )? arguments )
          {
            match(input, METHOD_CALL, FOLLOW_METHOD_CALL_in_primaryExpression4585);
            if (state.failed) return retval;

            match(input, Token.DOWN, null);
            if (state.failed) return retval;
            pushFollow(FOLLOW_primaryExpression_in_primaryExpression4589);
            o = primaryExpression();

            state._fsp--;
            if (state.failed) return retval;
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:846:37: ( genericTypeArgumentList )?
            int alt94 = 2;
            int LA94_0 = input.LA(1);

            if ((LA94_0 == GENERIC_TYPE_ARG_LIST)) {
              alt94 = 1;
            }
            switch (alt94) {
              case 1:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: genericTypeArgumentList
                {
                  pushFollow(FOLLOW_genericTypeArgumentList_in_primaryExpression4591);
                  genericTypeArgumentList();

                  state._fsp--;
                  if (state.failed) return retval;
                }
                break;
            }

            pushFollow(FOLLOW_arguments_in_primaryExpression4594);
            arguments43 = arguments();

            state._fsp--;
            if (state.failed) return retval;

            match(input, Token.UP, null);
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              String name =
                  (o != null ? ((CommonTree) o.start) : null).getChildCount() == 0
                      ? (o != null ? ((CommonTree) o.start) : null).getText()
                      : (o != null ? ((CommonTree) o.start) : null).getChild(1).getText();
              retval.value = ev.invokeMethod(o.value.getValue(), name, arguments43);
            }
          }
          break;
        case 5:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:853:5: explicitConstructorCall
          {
            pushFollow(FOLLOW_explicitConstructorCall_in_primaryExpression4618);
            explicitConstructorCall();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              throw new ExpressionException(
                  "Unable create new instance. Operation not supported yet. ");
            }
          }
          break;
        case 6:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:858:3: ^( ARRAY_ELEMENT_ACCESS arr=
          // primaryExpression index= expression )
          {
            match(
                input, ARRAY_ELEMENT_ACCESS, FOLLOW_ARRAY_ELEMENT_ACCESS_in_primaryExpression4645);
            if (state.failed) return retval;

            match(input, Token.DOWN, null);
            if (state.failed) return retval;
            pushFollow(FOLLOW_primaryExpression_in_primaryExpression4649);
            arr = primaryExpression();

            state._fsp--;
            if (state.failed) return retval;
            pushFollow(FOLLOW_expression_in_primaryExpression4653);
            index = expression();

            state._fsp--;
            if (state.failed) return retval;

            match(input, Token.UP, null);
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              retval.value =
                  ev.getArrayElement((arr != null ? arr.value : null).getValue(), index.getValue());
            }
          }
          break;
        case 7:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:862:5: literal
          {
            pushFollow(FOLLOW_literal_in_primaryExpression4677);
            literal44 = literal();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              retval.value = literal44;
            }
          }
          break;
        case 8:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:866:5: newExpression
          {
            pushFollow(FOLLOW_newExpression_in_primaryExpression4701);
            newExpression();

            state._fsp--;
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              throw new ExpressionException(
                  "Unable create new instance. Operation not supported yet. ");
            }
          }
          break;
        case 9:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:870:5: THIS
          {
            match(input, THIS, FOLLOW_THIS_in_primaryExpression4725);
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              retval.value = ev.getThisObject();
            }
          }
          break;
        case 10:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:874:5: arrayTypeDeclarator
          {
            pushFollow(FOLLOW_arrayTypeDeclarator_in_primaryExpression4749);
            arrayTypeDeclarator();

            state._fsp--;
            if (state.failed) return retval;
          }
          break;
        case 11:
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:875:5: SUPER
          {
            match(input, SUPER, FOLLOW_SUPER_in_primaryExpression4755);
            if (state.failed) return retval;
            if (state.backtracking == 0) {

              retval.value = ev.getThisObject();
            }
          }
          break;
      }
      if (state.backtracking == 0) {

        latest = retval.value;
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 64, primaryExpression_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "primaryExpression"

