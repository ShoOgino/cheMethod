  // $ANTLR start "equalityExpression"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:890:1: equalityExpression : instanceOfExpression ( ( EQUAL |
  // NOT_EQUAL ) instanceOfExpression )* ;
  public final JavaParser.equalityExpression_return equalityExpression()
      throws RecognitionException {
    JavaParser.equalityExpression_return retval = new JavaParser.equalityExpression_return();
    retval.start = input.LT(1);
    int equalityExpression_StartIndex = input.index();
    CommonTree root_0 = null;

    Token EQUAL403 = null;
    Token NOT_EQUAL404 = null;
    JavaParser.instanceOfExpression_return instanceOfExpression402 = null;

    JavaParser.instanceOfExpression_return instanceOfExpression405 = null;

    CommonTree EQUAL403_tree = null;
    CommonTree NOT_EQUAL404_tree = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 96)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:891:5: ( instanceOfExpression ( ( EQUAL | NOT_EQUAL )
      // instanceOfExpression )* )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:891:9: instanceOfExpression ( ( EQUAL | NOT_EQUAL )
      // instanceOfExpression )*
      {
        root_0 = (CommonTree) adaptor.nil();

        pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression10970);
        instanceOfExpression402 = instanceOfExpression();

        state._fsp--;
        if (state.failed) return retval;
        if (state.backtracking == 0) adaptor.addChild(root_0, instanceOfExpression402.getTree());
        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:892:9: ( ( EQUAL | NOT_EQUAL ) instanceOfExpression )*
        loop116:
        do {
          int alt116 = 2;
          int LA116_0 = input.LA(1);

          if ((LA116_0 == EQUAL || LA116_0 == NOT_EQUAL)) {
            alt116 = 1;
          }

          switch (alt116) {
            case 1:
              // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:892:13: ( EQUAL | NOT_EQUAL )
              // instanceOfExpression
              {
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:892:13: ( EQUAL | NOT_EQUAL )
                int alt115 = 2;
                int LA115_0 = input.LA(1);

                if ((LA115_0 == EQUAL)) {
                  alt115 = 1;
                } else if ((LA115_0 == NOT_EQUAL)) {
                  alt115 = 2;
                } else {
                  if (state.backtracking > 0) {
                    state.failed = true;
                    return retval;
                  }
                  NoViableAltException nvae = new NoViableAltException("", 115, 0, input);

                  throw nvae;
                }
                switch (alt115) {
                  case 1:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:892:17: EQUAL
                    {
                      EQUAL403 =
                          (Token) match(input, EQUAL, FOLLOW_EQUAL_in_equalityExpression10989);
                      if (state.failed) return retval;
                      if (state.backtracking == 0) {
                        EQUAL403_tree = (CommonTree) adaptor.create(EQUAL403);
                        root_0 = (CommonTree) adaptor.becomeRoot(EQUAL403_tree, root_0);
                      }
                    }
                    break;
                  case 2:
                    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:893:17: NOT_EQUAL
                    {
                      NOT_EQUAL404 =
                          (Token)
                              match(input, NOT_EQUAL, FOLLOW_NOT_EQUAL_in_equalityExpression11008);
                      if (state.failed) return retval;
                      if (state.backtracking == 0) {
                        NOT_EQUAL404_tree = (CommonTree) adaptor.create(NOT_EQUAL404);
                        root_0 = (CommonTree) adaptor.becomeRoot(NOT_EQUAL404_tree, root_0);
                      }
                    }
                    break;
                }

                pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression11038);
                instanceOfExpression405 = instanceOfExpression();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0)
                  adaptor.addChild(root_0, instanceOfExpression405.getTree());
              }
              break;

            default:
              break loop116;
          }
        } while (true);
      }

      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 96, equalityExpression_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "equalityExpression"

