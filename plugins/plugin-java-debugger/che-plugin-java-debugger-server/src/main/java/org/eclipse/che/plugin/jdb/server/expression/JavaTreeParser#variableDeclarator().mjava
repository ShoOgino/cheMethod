  // $ANTLR start "variableDeclarator"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:247:1: variableDeclarator : ^( VAR_DECLARATOR
  // variableDeclaratorId ( variableInitializer )? ) ;
  public final void variableDeclarator() throws RecognitionException {
    int variableDeclarator_StartIndex = input.index();
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 17)) {
        return;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:248:3: ( ^( VAR_DECLARATOR variableDeclaratorId
      // ( variableInitializer )? ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:249:3: ^( VAR_DECLARATOR variableDeclaratorId (
      // variableInitializer )? )
      {
        match(input, VAR_DECLARATOR, FOLLOW_VAR_DECLARATOR_in_variableDeclarator680);
        if (state.failed) return;

        match(input, Token.DOWN, null);
        if (state.failed) return;
        pushFollow(FOLLOW_variableDeclaratorId_in_variableDeclarator682);
        variableDeclaratorId();

        state._fsp--;
        if (state.failed) return;
        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:249:41: ( variableInitializer )?
        int alt41 = 2;
        int LA41_0 = input.LA(1);

        if ((LA41_0 == ARRAY_INITIALIZER || LA41_0 == EXPR)) {
          alt41 = 1;
        }
        switch (alt41) {
          case 1:
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: variableInitializer
            {
              pushFollow(FOLLOW_variableInitializer_in_variableDeclarator684);
              variableInitializer();

              state._fsp--;
              if (state.failed) return;
            }
            break;
        }

        match(input, Token.UP, null);
        if (state.failed) return;
      }

    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 17, variableDeclarator_StartIndex);
      }
    }
    return;
  }
  // $ANTLR end "variableDeclarator"

