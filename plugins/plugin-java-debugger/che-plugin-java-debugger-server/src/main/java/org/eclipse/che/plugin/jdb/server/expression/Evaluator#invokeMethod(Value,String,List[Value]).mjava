  public ExpressionValue invokeMethod(Value value, String name, List<Value> arguments) {
    if (!(value instanceof ObjectReference)) {
      throw new ExpressionException("Value is not object. Cannot invoke method " + name);
    }
    ObjectReference object = (ObjectReference) value;
    ReferenceType type = object.referenceType();
    List<Method> methods = type.methodsByName(name);
    Method method = findMethod(methods, arguments);
    if (method == null) {
      throw new ExpressionException(
          "No method with name " + name + " matched to specified arguments for " + type.name());
    }
    try {
      return new ReadOnlyValue(object.invokeMethod(thread, method, arguments, 0));
    } catch (InvalidTypeException
        | ClassNotLoadedException
        | IncompatibleThreadStateException
        | InvocationException e) {
      throw new ExpressionException(e.getMessage(), e);
    }
  }

