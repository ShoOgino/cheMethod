  // $ANTLR start "COMMENT"
  public final void mCOMMENT() throws RecognitionException {
    try {
      int _type = COMMENT;
      int _channel = DEFAULT_TOKEN_CHANNEL;
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1176:5: ( '/*' ( options {greedy=false; } : . )* '*/' )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1176:9: '/*' ( options {greedy=false; } : . )* '*/'
      {
        match("/*");

        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1176:14: ( options {greedy=false; } : . )*
        loop25:
        do {
          int alt25 = 2;
          int LA25_0 = input.LA(1);

          if ((LA25_0 == '*')) {
            int LA25_1 = input.LA(2);

            if ((LA25_1 == '/')) {
              alt25 = 2;
            } else if (((LA25_1 >= '\u0000' && LA25_1 <= '.')
                || (LA25_1 >= '0' && LA25_1 <= '\uFFFF'))) {
              alt25 = 1;
            }

          } else if (((LA25_0 >= '\u0000' && LA25_0 <= ')')
              || (LA25_0 >= '+' && LA25_0 <= '\uFFFF'))) {
            alt25 = 1;
          }

          switch (alt25) {
            case 1:
              // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:1176:42: .
              {
                matchAny();
              }
              break;

            default:
              break loop25;
          }
        } while (true);

        match("*/");

        if (!preserveWhitespacesAndComments) {
          skip();
        } else {
          _channel = HIDDEN;
        }
      }

      state.type = _type;
      state.channel = _channel;
    } finally {
    }
  }
  // $ANTLR end "COMMENT"

