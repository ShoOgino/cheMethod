    // $ANTLR start "qualifiedIdentList"
    // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:635:1: qualifiedIdentList : qualifiedIdentifier ( COMMA
    // qualifiedIdentifier )* ;
    public final JavaParser.qualifiedIdentList_return qualifiedIdentList() throws RecognitionException {
        JavaParser.qualifiedIdentList_return retval = new JavaParser.qualifiedIdentList_return();
        retval.start = input.LT(1);
        int qualifiedIdentList_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA203 = null;
        JavaParser.qualifiedIdentifier_return qualifiedIdentifier202 = null;

        JavaParser.qualifiedIdentifier_return qualifiedIdentifier204 = null;


        CommonTree COMMA203_tree = null;

        try {
            if (state.backtracking > 0 && alreadyParsedRule(input, 55)) {
                return retval;
            }
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:636:5: ( qualifiedIdentifier ( COMMA qualifiedIdentifier )* )
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:636:9: qualifiedIdentifier ( COMMA qualifiedIdentifier )*
            {
                root_0 = (CommonTree)adaptor.nil();

                pushFollow(FOLLOW_qualifiedIdentifier_in_qualifiedIdentList7573);
                qualifiedIdentifier202 = qualifiedIdentifier();

                state._fsp--;
                if (state.failed) return retval;
                if (state.backtracking == 0) adaptor.addChild(root_0, qualifiedIdentifier202.getTree());
                // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:636:29: ( COMMA qualifiedIdentifier )*
                loop70:
                do {
                    int alt70 = 2;
                    int LA70_0 = input.LA(1);

                    if ((LA70_0 == COMMA)) {
                        alt70 = 1;
                    }


                    switch (alt70) {
                        case 1:
                            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:636:30: COMMA qualifiedIdentifier
                        {
                            COMMA203 = (Token)match(input, COMMA, FOLLOW_COMMA_in_qualifiedIdentList7576);
                            if (state.failed) return retval;
                            pushFollow(FOLLOW_qualifiedIdentifier_in_qualifiedIdentList7579);
                            qualifiedIdentifier204 = qualifiedIdentifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (state.backtracking == 0) adaptor.addChild(root_0, qualifiedIdentifier204.getTree());

                        }
                        break;

                        default:
                            break loop70;
                    }
                } while (true);


            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        } finally {
            if (state.backtracking > 0) {
                memoize(input, 55, qualifiedIdentList_StartIndex);
            }
        }
        return retval;
    }
    // $ANTLR end "qualifiedIdentList"

