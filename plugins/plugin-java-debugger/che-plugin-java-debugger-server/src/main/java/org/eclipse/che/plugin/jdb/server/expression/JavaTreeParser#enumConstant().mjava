  // $ANTLR start "enumConstant"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:198:1: enumConstant : ^( IDENT annotationList (
  // arguments )? ( classTopLevelScope )? ) ;
  public final void enumConstant() throws RecognitionException {
    int enumConstant_StartIndex = input.index();
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 11)) {
        return;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:199:3: ( ^( IDENT annotationList ( arguments )?
      // ( classTopLevelScope )? ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:200:3: ^( IDENT annotationList ( arguments )? (
      // classTopLevelScope )? )
      {
        match(input, IDENT, FOLLOW_IDENT_in_enumConstant378);
        if (state.failed) return;

        match(input, Token.DOWN, null);
        if (state.failed) return;
        pushFollow(FOLLOW_annotationList_in_enumConstant380);
        annotationList();

        state._fsp--;
        if (state.failed) return;
        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:200:26: ( arguments )?
        int alt20 = 2;
        int LA20_0 = input.LA(1);

        if ((LA20_0 == ARGUMENT_LIST)) {
          alt20 = 1;
        }
        switch (alt20) {
          case 1:
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: arguments
            {
              pushFollow(FOLLOW_arguments_in_enumConstant382);
              arguments();

              state._fsp--;
              if (state.failed) return;
            }
            break;
        }

        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:200:37: ( classTopLevelScope )?
        int alt21 = 2;
        int LA21_0 = input.LA(1);

        if ((LA21_0 == CLASS_TOP_LEVEL_SCOPE)) {
          alt21 = 1;
        }
        switch (alt21) {
          case 1:
            // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: classTopLevelScope
            {
              pushFollow(FOLLOW_classTopLevelScope_in_enumConstant385);
              classTopLevelScope();

              state._fsp--;
              if (state.failed) return;
            }
            break;
        }

        match(input, Token.UP, null);
        if (state.failed) return;
      }

    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 11, enumConstant_StartIndex);
      }
    }
    return;
  }
  // $ANTLR end "enumConstant"

