  // $ANTLR start "switchCaseLabel"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:512:1: switchCaseLabel : ^( CASE expression (
  // blockStatement )* ) ;
  public final void switchCaseLabel() throws RecognitionException {
    int switchCaseLabel_StartIndex = input.index();
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 55)) {
        return;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:513:3: ( ^( CASE expression ( blockStatement )* ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:514:3: ^( CASE expression ( blockStatement )* )
      {
        match(input, CASE, FOLLOW_CASE_in_switchCaseLabel1903);
        if (state.failed) return;

        match(input, Token.DOWN, null);
        if (state.failed) return;
        pushFollow(FOLLOW_expression_in_switchCaseLabel1905);
        expression();

        state._fsp--;
        if (state.failed) return;
        // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:514:21: ( blockStatement )*
        loop85:
        do {
          int alt85 = 2;
          int LA85_0 = input.LA(1);

          if ((LA85_0 == AT
              || LA85_0 == SEMI
              || LA85_0 == ASSERT
              || LA85_0 == BREAK
              || (LA85_0 >= CLASS && LA85_0 <= CONTINUE)
              || LA85_0 == DO
              || LA85_0 == ENUM
              || (LA85_0 >= FOR && LA85_0 <= IF)
              || LA85_0 == INTERFACE
              || LA85_0 == RETURN
              || (LA85_0 >= SWITCH && LA85_0 <= SYNCHRONIZED)
              || LA85_0 == THROW
              || LA85_0 == TRY
              || LA85_0 == WHILE
              || LA85_0 == BLOCK_SCOPE
              || LA85_0 == EXPR
              || LA85_0 == FOR_EACH
              || LA85_0 == LABELED_STATEMENT
              || LA85_0 == VAR_DECLARATION)) {
            alt85 = 1;
          }

          switch (alt85) {
            case 1:
              // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: blockStatement
              {
                pushFollow(FOLLOW_blockStatement_in_switchCaseLabel1907);
                blockStatement();

                state._fsp--;
                if (state.failed) return;
              }
              break;

            default:
              break loop85;
          }
        } while (true);

        match(input, Token.UP, null);
        if (state.failed) return;
      }

    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 55, switchCaseLabel_StartIndex);
      }
    }
    return;
  }
  // $ANTLR end "switchCaseLabel"

