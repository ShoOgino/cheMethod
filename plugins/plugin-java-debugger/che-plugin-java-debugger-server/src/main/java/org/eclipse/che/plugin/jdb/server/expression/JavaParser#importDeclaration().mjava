  // $ANTLR start "importDeclaration"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:345:1: importDeclaration : IMPORT ( STATIC )? qualifiedIdentifier
  // ( DOTSTAR )? SEMI ;
  public final JavaParser.importDeclaration_return importDeclaration() throws RecognitionException {
    JavaParser.importDeclaration_return retval = new JavaParser.importDeclaration_return();
    retval.start = input.LT(1);
    int importDeclaration_StartIndex = input.index();
    CommonTree root_0 = null;

    Token IMPORT11 = null;
    Token STATIC12 = null;
    Token DOTSTAR14 = null;
    Token SEMI15 = null;
    JavaParser.qualifiedIdentifier_return qualifiedIdentifier13 = null;

    CommonTree IMPORT11_tree = null;
    CommonTree STATIC12_tree = null;
    CommonTree DOTSTAR14_tree = null;
    CommonTree SEMI15_tree = null;

    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 5)) {
        return retval;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:346:5: ( IMPORT ( STATIC )? qualifiedIdentifier ( DOTSTAR
      // )? SEMI )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:346:9: IMPORT ( STATIC )? qualifiedIdentifier ( DOTSTAR )?
      // SEMI
      {
        root_0 = (CommonTree) adaptor.nil();

        IMPORT11 = (Token) match(input, IMPORT, FOLLOW_IMPORT_in_importDeclaration4658);
        if (state.failed) return retval;
        if (state.backtracking == 0) {
          IMPORT11_tree = (CommonTree) adaptor.create(IMPORT11);
          root_0 = (CommonTree) adaptor.becomeRoot(IMPORT11_tree, root_0);
        }
        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:346:17: ( STATIC )?
        int alt5 = 2;
        int LA5_0 = input.LA(1);

        if ((LA5_0 == STATIC)) {
          alt5 = 1;
        }
        switch (alt5) {
          case 1:
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: STATIC
            {
              STATIC12 = (Token) match(input, STATIC, FOLLOW_STATIC_in_importDeclaration4661);
              if (state.failed) return retval;
              if (state.backtracking == 0) {
                STATIC12_tree = (CommonTree) adaptor.create(STATIC12);
                adaptor.addChild(root_0, STATIC12_tree);
              }
            }
            break;
        }

        pushFollow(FOLLOW_qualifiedIdentifier_in_importDeclaration4664);
        qualifiedIdentifier13 = qualifiedIdentifier();

        state._fsp--;
        if (state.failed) return retval;
        if (state.backtracking == 0) adaptor.addChild(root_0, qualifiedIdentifier13.getTree());
        // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:346:45: ( DOTSTAR )?
        int alt6 = 2;
        int LA6_0 = input.LA(1);

        if ((LA6_0 == DOTSTAR)) {
          alt6 = 1;
        }
        switch (alt6) {
          case 1:
            // org/eclipse/che/ide/ext/java/jdi/server/expression/Java.g:0:0: DOTSTAR
            {
              DOTSTAR14 = (Token) match(input, DOTSTAR, FOLLOW_DOTSTAR_in_importDeclaration4666);
              if (state.failed) return retval;
              if (state.backtracking == 0) {
                DOTSTAR14_tree = (CommonTree) adaptor.create(DOTSTAR14);
                adaptor.addChild(root_0, DOTSTAR14_tree);
              }
            }
            break;
        }

        SEMI15 = (Token) match(input, SEMI, FOLLOW_SEMI_in_importDeclaration4669);
        if (state.failed) return retval;
      }

      retval.stop = input.LT(-1);

      if (state.backtracking == 0) {

        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
      }
    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
      retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);

    } finally {
      if (state.backtracking > 0) {
        memoize(input, 5, importDeclaration_StartIndex);
      }
    }
    return retval;
  }
  // $ANTLR end "importDeclaration"

