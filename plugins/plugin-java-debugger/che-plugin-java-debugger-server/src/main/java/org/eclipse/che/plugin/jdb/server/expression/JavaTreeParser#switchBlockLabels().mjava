  // $ANTLR start "switchBlockLabels"
  // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:507:1: switchBlockLabels : ^( SWITCH_BLOCK_LABEL_LIST (
  // switchCaseLabel )* ( switchDefaultLabel )? ( switchCaseLabel )* ) ;
  public final void switchBlockLabels() throws RecognitionException {
    int switchBlockLabels_StartIndex = input.index();
    try {
      if (state.backtracking > 0 && alreadyParsedRule(input, 54)) {
        return;
      }
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:508:3: ( ^( SWITCH_BLOCK_LABEL_LIST (
      // switchCaseLabel )* ( switchDefaultLabel )? ( switchCaseLabel )* ) )
      // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:509:3: ^( SWITCH_BLOCK_LABEL_LIST (
      // switchCaseLabel )* ( switchDefaultLabel )? ( switchCaseLabel )* )
      {
        match(
            input,
            SWITCH_BLOCK_LABEL_LIST,
            FOLLOW_SWITCH_BLOCK_LABEL_LIST_in_switchBlockLabels1877);
        if (state.failed) return;

        if (input.LA(1) == Token.DOWN) {
          match(input, Token.DOWN, null);
          if (state.failed) return;
          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:509:29: ( switchCaseLabel )*
          loop82:
          do {
            int alt82 = 2;
            int LA82_0 = input.LA(1);

            if ((LA82_0 == CASE)) {
              int LA82_2 = input.LA(2);

              if ((synpred125_JavaTreeParser())) {
                alt82 = 1;
              }
            }

            switch (alt82) {
              case 1:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: switchCaseLabel
                {
                  pushFollow(FOLLOW_switchCaseLabel_in_switchBlockLabels1879);
                  switchCaseLabel();

                  state._fsp--;
                  if (state.failed) return;
                }
                break;

              default:
                break loop82;
            }
          } while (true);

          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:509:46: ( switchDefaultLabel )?
          int alt83 = 2;
          int LA83_0 = input.LA(1);

          if ((LA83_0 == DEFAULT)) {
            alt83 = 1;
          }
          switch (alt83) {
            case 1:
              // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: switchDefaultLabel
              {
                pushFollow(FOLLOW_switchDefaultLabel_in_switchBlockLabels1882);
                switchDefaultLabel();

                state._fsp--;
                if (state.failed) return;
              }
              break;
          }

          // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:509:66: ( switchCaseLabel )*
          loop84:
          do {
            int alt84 = 2;
            int LA84_0 = input.LA(1);

            if ((LA84_0 == CASE)) {
              alt84 = 1;
            }

            switch (alt84) {
              case 1:
                // org/eclipse/che/ide/ext/java/jdi/server/expression/JavaTreeParser.g:0:0: switchCaseLabel
                {
                  pushFollow(FOLLOW_switchCaseLabel_in_switchBlockLabels1885);
                  switchCaseLabel();

                  state._fsp--;
                  if (state.failed) return;
                }
                break;

              default:
                break loop84;
            }
          } while (true);

          match(input, Token.UP, null);
          if (state.failed) return;
        }
      }

    } catch (RecognitionException re) {
      reportError(re);
      recover(input, re);
    } finally {
      if (state.backtracking > 0) {
        memoize(input, 54, switchBlockLabels_StartIndex);
      }
    }
    return;
  }
  // $ANTLR end "switchBlockLabels"

