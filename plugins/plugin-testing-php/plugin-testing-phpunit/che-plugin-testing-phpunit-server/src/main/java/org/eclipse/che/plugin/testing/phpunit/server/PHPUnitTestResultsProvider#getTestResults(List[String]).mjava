    /**
     * Builds and returns test results for given path.
     * 
     * @param testResultsPath
     * @return test results for given path
     */
    public List<TestResultDto> getTestResults(List<String> testResultsPath) {
        String key = getKey(testResultsPath);
        AbstractPHPUnitTestResult phpTestResult = testResultsCache.get(key);
        int testChildCounter = 0;
        List<TestResultDto> testResults = new ArrayList<>();
        for (AbstractPHPUnitTestResult phpChildResult : phpTestResult.getChildren()) {
            List<String> childResultsPath = new ArrayList<>(testResultsPath);
            childResultsPath.add(String.valueOf(testChildCounter++));
            TestResultDto testResultDto = getTestResult(phpChildResult, childResultsPath);
            testResults.add(testResultDto);
        }
        return testResults;
    }

