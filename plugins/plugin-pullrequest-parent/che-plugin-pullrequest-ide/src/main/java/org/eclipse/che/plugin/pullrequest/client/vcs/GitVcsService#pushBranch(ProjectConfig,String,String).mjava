    @Override
    public Promise<PushResponse> pushBranch(final ProjectConfig project, final String remote, final String localBranchName) {
        return service.push(project, Collections.singletonList(localBranchName), remote, true)
                      .catchErrorPromise(new Function<PromiseError, Promise<PushResponse>>() {
                          @Override
                          public Promise<PushResponse> apply(PromiseError error) throws FunctionException {
                              if (BRANCH_UP_TO_DATE_ERROR_MESSAGE.equalsIgnoreCase(error.getMessage())) {
                                  return Promises.reject(JsPromiseError.create(new BranchUpToDateException(localBranchName)));
                              } else {
                                  return Promises.reject(error);
                              }
                          }
                      });
    }

