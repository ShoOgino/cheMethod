  @Override
  public void execute(final WorkflowExecutor executor, final Context context) {

    /*
     * Check if a Pull Request with given base and head branches already exists.
     * If there is none, push the contribution branch.
     * If there is one, propose to updatePullRequest the pull request.
     */

    context
        .getVcsHostingService()
        .getPullRequest(
            repositoryOwner,
            repositoryName,
            context.getHostUserLogin(),
            context.getWorkBranchName())
        .then(
            new Operation<PullRequest>() {
              @Override
              public void apply(PullRequest pullRequest) throws OperationException {
                context.setPullRequest(pullRequest);
                context.getConfiguration().withContributionComment(pullRequest.getDescription());
                final ConfirmCallback okCallback =
                    new ConfirmCallback() {
                      @Override
                      public void accepted() {
                        pushBranch(executor, context);
                      }
                    };
                final CancelCallback cancelCallback =
                    new CancelCallback() {
                      @Override
                      public void cancelled() {
                        executor.fail(delegate, context, messages.stepPushBranchCanceling());
                      }
                    };

                dialogFactory
                    .createConfirmDialog(
                        messages.contributePartConfigureContributionDialogUpdateTitle(),
                        messages.contributePartConfigureContributionDialogUpdateText(
                            pullRequest.getHeadRef()),
                        okCallback,
                        cancelCallback)
                    .show();
              }
            })
        .catchError(
            new Operation<PromiseError>() {
              @Override
              public void apply(PromiseError err) throws OperationException {
                try {
                  throw err.getCause();
                } catch (NoPullRequestException ex) {
                  pushBranch(executor, context);
                } catch (Throwable thr) {
                  executor.fail(delegate, context, thr.getMessage());
                }
              }
            });
  }

