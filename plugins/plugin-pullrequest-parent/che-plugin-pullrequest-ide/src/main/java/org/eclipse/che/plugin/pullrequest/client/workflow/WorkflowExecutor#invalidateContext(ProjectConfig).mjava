    /**
     * Invalidates context for given {@code project}.
     * If any {@link ChainExecutor} exists for context which is invalidated
     * then executor will be removed and the next chain step won't be performed.
     *
     * <p>Fires {@link ContextInvalidatedEvent} if context for given project exists.
     *
     * @param project
     *         project for which context should be invalidated
     */
    public void invalidateContext(final ProjectConfig project) {
        final Optional<Context> contextOpt = getContext(project.getName());
        if (contextOpt.isPresent()) {
            projectNameToContextMap.remove(project.getName());
            projectNameToChainExecutorMap.remove(project.getName());
            eventBus.fireEvent(new ContextInvalidatedEvent(contextOpt.get()));
        }
    }

