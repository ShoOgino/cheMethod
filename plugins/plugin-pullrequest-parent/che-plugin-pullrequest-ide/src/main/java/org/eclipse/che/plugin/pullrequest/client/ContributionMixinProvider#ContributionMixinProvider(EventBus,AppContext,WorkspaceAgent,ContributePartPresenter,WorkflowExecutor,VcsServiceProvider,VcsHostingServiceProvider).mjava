    @Inject
    public ContributionMixinProvider(EventBus eventBus,
                                     AppContext appContext,
                                     WorkspaceAgent workspaceAgent,
                                     ContributePartPresenter contributePart,
                                     WorkflowExecutor workflowExecutor,
                                     VcsServiceProvider vcsServiceProvider,
                                     VcsHostingServiceProvider vcsHostingServiceProvider) {
        this.eventBus = eventBus;
        this.appContext = appContext;
        this.workspaceAgent = workspaceAgent;
        this.contributePart = contributePart;
        this.workflowExecutor = workflowExecutor;
        this.vcsServiceProvider = vcsServiceProvider;
        this.vcsHostingServiceProvider = vcsHostingServiceProvider;

        if (appContext.getFactory() != null) {
            handlerRegistration = eventBus.addHandler(FactoryAcceptedEvent.TYPE, new FactoryAcceptedHandler() {
                @Override
                public void onFactoryAccepted(FactoryAcceptedEvent event) {
                    handlerRegistration.removeHandler();

                    subscribeToSelectionChangedEvent();
                }
            });
        } else {
            handlerRegistration = eventBus.addHandler(WorkspaceReadyEvent.getType(), new WorkspaceReadyEvent.WorkspaceReadyHandler() {
                @Override
                public void onWorkspaceReady(WorkspaceReadyEvent event) {
                    handlerRegistration.removeHandler();

                    subscribeToSelectionChangedEvent();
                }
            });
        }
    }

