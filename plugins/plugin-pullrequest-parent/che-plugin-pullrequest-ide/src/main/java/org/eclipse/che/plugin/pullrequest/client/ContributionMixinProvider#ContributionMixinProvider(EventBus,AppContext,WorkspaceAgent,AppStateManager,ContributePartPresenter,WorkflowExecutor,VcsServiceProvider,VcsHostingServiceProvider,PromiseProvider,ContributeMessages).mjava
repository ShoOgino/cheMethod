  @Inject
  public ContributionMixinProvider(
      EventBus eventBus,
      AppContext appContext,
      WorkspaceAgent workspaceAgent,
      AppStateManager appStateManager,
      ContributePartPresenter contributePart,
      WorkflowExecutor workflowExecutor,
      VcsServiceProvider vcsServiceProvider,
      VcsHostingServiceProvider vcsHostingServiceProvider,
      PromiseProvider promiseProvider,
      ContributeMessages messages) {
    this.eventBus = eventBus;
    this.appContext = appContext;
    this.workspaceAgent = workspaceAgent;
    this.appStateManager = appStateManager;
    this.contributePart = contributePart;
    this.workflowExecutor = workflowExecutor;
    this.vcsServiceProvider = vcsServiceProvider;
    this.vcsHostingServiceProvider = vcsHostingServiceProvider;
    this.promiseProvider = promiseProvider;
    this.messages = messages;

    eventBus.addHandler(WorkspaceStoppedEvent.TYPE, this::onWorkspaceStopped);
    eventBus.addHandler(PartStackStateChangedEvent.TYPE, this::onPartStackStateChanged);

    if (appContext.getFactory() != null) {
      eventBus.addHandler(FactoryAcceptedEvent.TYPE, event -> subscribeToSelectionChangedEvent());
    } else {
      eventBus.addHandler(
          WorkspaceReadyEvent.getType(), event -> subscribeToSelectionChangedEvent());
    }
  }

