  @Override
  public void onStepError(final StepEvent event) {
    final Step step = event.getStep();
    final Class<? extends Step> stepClass = step.getClass();
    final Context context = event.getContext();
    if (stepClass == CommitWorkingTreeStep.class) {
      if (!context.isUpdateMode()) {
        context.getViewState().resetStages();
        context.getViewState().setStatusMessage(null);
        updateView(
            context,
            new StatusSectionUpdate(),
            new StatusMessageUpdate(),
            new NewContributionPanelUpdate(),
            new ContributionButtonUpdate(messages));
      } else {
        context.getViewState().resetStages();
        context.getViewState().setStatusMessage(event.getMessage(), true);
        updateView(
            context,
            new StatusSectionUpdate(),
            new StatusMessageUpdate(),
            new ContributionButtonUpdate(messages));
      }
    } else if (getProvidedStepErrorTypes(context).contains(stepClass)) {
      context.getViewState().setStageDone(false);
      context.getViewState().setStatusMessage(event.getMessage(), true);
      updateView(
          context,
          new DisplayCurrentStepResultUpdate(false),
          new StatusMessageUpdate(),
          new ContributionButtonUpdate(messages));
    } else {
      context.getViewState().resetStages();
      restore(context);
      Log.error(ContributePartPresenter.class, "Step error: ", event.getMessage());
    }
  }

