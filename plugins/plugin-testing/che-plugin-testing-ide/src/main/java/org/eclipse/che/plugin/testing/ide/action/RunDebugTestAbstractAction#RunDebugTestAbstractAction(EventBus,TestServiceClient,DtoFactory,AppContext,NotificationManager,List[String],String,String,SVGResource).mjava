    RunDebugTestAbstractAction(EventBus eventBus,
                               TestServiceClient client,
                               DtoFactory dtoFactory,
                               AppContext appContext,
                               NotificationManager notificationManager,
                               @Nullable List<String> perspectives,
                               @NotNull String description,
                               @NotNull String text,
                               SVGResource icon) {
        super(perspectives, text, description, null, icon);
        this.client = client;
        this.dtoFactory = dtoFactory;
        this.appContext = appContext;
        this.notificationManager = notificationManager;

        hasTests = false;

        eventBus.addHandler(JavaReconsilerEvent.TYPE, event -> detectTests(event.getEditor()));
        eventBus.addHandler(ActivePartChangedEvent.TYPE, event -> {
            if (event.getActivePart() instanceof TextEditor) {
                testType = CURSOR_POSITION;
                TextEditor activeEditor = (TextEditor)event.getActivePart();
                if (activeEditor.getEditorInput().getFile().getName().endsWith(".java")) {
                    detectTests(activeEditor);
                } else {
                    hasTests = false;
                }
            }
        });
    }

