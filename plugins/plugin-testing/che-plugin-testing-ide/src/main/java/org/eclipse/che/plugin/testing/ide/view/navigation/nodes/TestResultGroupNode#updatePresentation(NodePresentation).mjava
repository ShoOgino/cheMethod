    @Override
    public void updatePresentation(@NotNull NodePresentation presentation) {
        if (failureCount > 0) {
            presentation.setPresentableIcon(testResources.testResultsFail());
        } else {
            presentation.setPresentableIcon(testResources.testResultsPass());
        }

        SpanElement root = Elements.createSpanElement();
        SpanElement textElement = Elements.createSpanElement(treeStylesResources.styles().presentableTextContainer());
        textElement.setTextContent(getName());
        root.appendChild(textElement);
        SpanElement button = Elements.createSpanElement();
        SVGResource svg = showFailuresOnly ? testResources.showAllTestsButtonIcon() : testResources.showFailuresOnlyButtonIcon();
        String tooltip = showFailuresOnly ? "Include successful tests" : "Hide successful tests";

        Tooltip.create(button,
                       BOTTOM,
                       MIDDLE,
                       tooltip);

        button.appendChild((elemental.dom.Node)new SVGImage(svg).getElement());
        button.getStyle().setProperty("float", "right");
        button.getStyle().setProperty("padding-right", "9px");
        button.getStyle().setProperty("padding-left", "8px");

        if (failureCount == 0) {
            button.getStyle().setDisplay("none");
        } else {
            button.addEventListener(Event.CLICK, new EventListener() {
                @Override
                public void handleEvent(Event event) {
                    event.stopPropagation();
                    event.preventDefault();
                    showOnlyFailuresDelegate.run();
                }
            }, true);
            button.getStyle().setDisplay("inline");
        }

        /**
         * This listener cancels mouse events on '+' button and prevents the jitter of the selection in the tree.
         */
        EventListener blockMouseListener = new EventListener() {
            @Override
            public void handleEvent(Event event) {
                event.stopPropagation();
                event.preventDefault();
            }
        };

        /**
         * Prevent jitter when pressing mouse on '+' button.
         */
        button.addEventListener(Event.MOUSEDOWN, blockMouseListener, true);
        button.addEventListener(Event.MOUSEUP, blockMouseListener, true);
        button.addEventListener(Event.CLICK, blockMouseListener, true);
        button.addEventListener(Event.DBLCLICK, blockMouseListener, true);

        root.appendChild(button);

        presentation.setUserElement((Element)root);
    }

