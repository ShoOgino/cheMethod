  @Override
  protected Promise<List<Node>> getChildrenImpl() {
    final List<Node> children = new ArrayList<Node>();
    Promise<List<TestResultDto>> promise =
        testServiceClient.getTestResults(frameworkName, testResultDto.getResultPath());
    return promise.then(
        new Function<List<TestResultDto>, List<Node>>() {
          @Override
          public List<Node> apply(List<TestResultDto> arg) {
            for (TestResultDto entry : arg) {
              TestResultNode child = nodeFactory.createTestResultEntryNode(entry, frameworkName);
              children.add(child);
            }
            return children;
          }
        });
  }

