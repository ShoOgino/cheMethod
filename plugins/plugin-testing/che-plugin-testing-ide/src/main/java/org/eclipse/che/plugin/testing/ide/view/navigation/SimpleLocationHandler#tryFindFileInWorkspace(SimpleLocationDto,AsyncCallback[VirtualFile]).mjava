  private void tryFindFileInWorkspace(
      final SimpleLocationDto location, final AsyncCallback<VirtualFile> callback) {
    if (location == null) {
      return;
    }
    String resourcePath = location.getResourcePath();
    if (resourcePath == null || resourcePath.isEmpty()) {
      return;
    }
    if (resourcePath.startsWith(PROJECTS_ROOT))
      resourcePath = resourcePath.substring(PROJECTS_ROOT.length() + 1);
    try {
      appContext
          .getWorkspaceRoot()
          .getFile(resourcePath)
          .then(
              new Operation<Optional<File>>() {
                @Override
                public void apply(Optional<File> file) throws OperationException {
                  if (file.isPresent()) {
                    openFileAndScrollToLine(file.get(), location.getLineNumber(), callback);
                  } else {
                    callback.onFailure(
                        new IllegalArgumentException(location.getResourcePath() + " not found."));
                  }
                }
              })
          .catchError(
              new Operation<PromiseError>() {
                @Override
                public void apply(PromiseError arg) throws OperationException {
                  callback.onFailure(
                      new IllegalArgumentException(location.getResourcePath() + " not found."));
                }
              });
    } catch (IllegalStateException ignored) {
      callback.onFailure(new IllegalArgumentException(location.getResourcePath() + " not found."));
    }
  }

