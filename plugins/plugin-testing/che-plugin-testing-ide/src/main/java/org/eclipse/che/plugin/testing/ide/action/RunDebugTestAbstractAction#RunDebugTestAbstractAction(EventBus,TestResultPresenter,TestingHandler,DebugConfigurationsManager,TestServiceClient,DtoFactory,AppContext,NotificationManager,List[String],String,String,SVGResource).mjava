    public RunDebugTestAbstractAction(EventBus eventBus,
                                      TestResultPresenter testResultPresenter,
                                      TestingHandler testingHandler,
                                      DebugConfigurationsManager debugConfigurationsManager,
                                      TestServiceClient client,
                                      DtoFactory dtoFactory,
                                      AppContext appContext,
                                      NotificationManager notificationManager,
                                      @Nullable List<String> perspectives,
                                      @NotNull String description,
                                      @NotNull String text,
                                      SVGResource icon) {
        super(perspectives, text, description, null, icon);
        this.testResultPresenter = testResultPresenter;
        this.testingHandler = testingHandler;
        this.debugConfigurationsManager = debugConfigurationsManager;
        this.client = client;
        this.dtoFactory = dtoFactory;
        this.appContext = appContext;
        this.notificationManager = notificationManager;

        isEnable = false;

        eventBus.addHandler(JavaReconsilerEvent.TYPE, event -> detectTests(event.getEditor()));
        eventBus.addHandler(ActivePartChangedEvent.TYPE, event -> {
            PartPresenter activePart = event.getActivePart();
            if (activePart instanceof TextEditor) {
                isEditorInFocus = true;
                contextType = CURSOR_POSITION;
                TextEditor activeEditor = (TextEditor)activePart;
                if (activeEditor.getEditorInput().getFile().getName().endsWith(".java")) {
                    detectTests(activeEditor);
                } else {
                    isEnable = false;
                }
            } else {
                isEditorInFocus = false;
            }
        });
    }

