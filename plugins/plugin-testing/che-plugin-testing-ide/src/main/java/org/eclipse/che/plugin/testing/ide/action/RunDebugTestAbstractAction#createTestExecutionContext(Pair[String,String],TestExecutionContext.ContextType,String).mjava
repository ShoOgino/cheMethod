  /**
   * Creates test execution context which describes the configuration for the current test
   *
   * @param frameworkAndTestName name of the test framework
   * @return test execution context
   */
  private TestExecutionContext createTestExecutionContext(
      Pair<String, String> frameworkAndTestName,
      TestExecutionContext.ContextType contextType,
      String selectedNodePath) {
    Project project;
    Resource resource = appContext.getResource();
    if (resource == null || resource.getProject() == null) {
      project = appContext.getRootProject();
    } else {
      project = resource.getProject();
    }
    TestExecutionContext context = dtoFactory.createDto(TestExecutionContext.class);

    context.setProjectPath(project.getPath());
    context.setContextType(contextType);
    if (contextType == CURSOR_POSITION) {
      TextEditor currentEditor = testDetector.getCurrentEditor();
      context.setFilePath(currentEditor.getEditorInput().getFile().getLocation().toString());
      context.setCursorOffset(currentEditor.getCursorOffset());
    } else {
      context.setFilePath(selectedNodePath);
    }
    context.setFrameworkName(frameworkAndTestName.first);

    return context;
  }

