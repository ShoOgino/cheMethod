  @Override
  public void updatePresentation(NodePresentation presentation) {
    presentation.setPresentableText(testState.getPresentation());
    presentation.setUserElement((Element) createSpanElement());
    if (testState.isSuite()) {
      return;
    }
    if (testState.getDescription() == TestStateDescription.PASSED) {
      presentation.setPresentableTextCss("color: green;");
      presentation.getUserElement().setId(DEBUG_ID_PREFIX + "test-state-passed");
      presentation.setPresentableIcon(testResources.testResultSuccessIcon());
    } else if (testState.getDescription() == TestStateDescription.IGNORED) {
      presentation.setPresentableTextCss("text-decoration: line-through; color: yellow;");
      presentation.getUserElement().setId(DEBUG_ID_PREFIX + "test-state-ignore");
      presentation.setPresentableIcon(testResources.testResultSkippedIcon());
    } else if (testState.getDescription() == TestStateDescription.FAILED
        || testState.getDescription() == TestStateDescription.ERROR) {
      presentation.setPresentableTextCss("color: red;");
      presentation.getUserElement().setId(DEBUG_ID_PREFIX + "test-state-failed");
      presentation.setPresentableIcon(testResources.testResultFailureIcon());
    } else if (testState.getDescription() == TestStateDescription.RUNNING) {
      presentation.setPresentableIcon(testResources.testInProgressIcon());
    } else if (testState.getDescription() == TestStateDescription.NOT_RUN) {
      presentation.setPresentableIcon(testResources.testResultSkippedIcon());
    }
  }

