  @Test
  public void cancelledTestsBecauseCompilationNotStarted() {
    Promise<CommandImpl> compileCommandPromise =
        createCommandPromise(
            new CommandImpl("test-compile", "mvn test-compile -f ${current.project.path}", "mvn"));

    when(devMachine.getDescriptor()).thenReturn(machine);

    Promise<TestResult> result =
        testServiceClient.runTestsAfterCompilation(
            projectPath, testFramework, parameters, statusNotification, compileCommandPromise);

    triggerProcessEvents(processStartResponse(false));

    verify(testServiceClient, never())
        .sendTests(anyString(), anyString(), anyMapOf(String.class, String.class));
    verify(statusNotification)
        .setContent("Compiling the project before starting the test session.");
    result.catchError(
        new Operation<PromiseError>() {
          @Override
          public void apply(PromiseError promiseError) throws OperationException {
            Throwable cause = promiseError.getCause();
            Assert.assertNotNull(cause);
            Assert.assertEquals(
                TestServiceClient.PROJECT_BUILD_NOT_STARTED_MESSAGE, cause.getMessage());
          }
        });
  }

