  /** Deletes workspace of default user. */
  @Override
  public void delete(String workspaceName, String userName) throws Exception {
    if (!exists(workspaceName, userName)) {
      return;
    }

    Workspace workspace = getByName(workspaceName, userName);
    if (workspace.getStatus() == STOPPING) {
      waitStatus(workspaceName, userName, STOPPED);
    } else if (workspace.getStatus() != STOPPED) {
      stop(workspaceName, userName);
    }

    requestFactory.fromUrl(getIdBasedUrl(workspace.getId())).useDeleteMethod().request();

    WaitUtils.waitSuccessCondition(
        () -> {
          try {
            return !exists(workspaceName, userName);
          } catch (Exception e) {
            throw new RuntimeException(
                format(
                    "Error of waiting on workspace name='%s', id='%s', username='%s' removal.",
                    workspaceName, workspace.getId(), userName),
                e);
          }
        },
        TestTimeoutsConstants.PREPARING_WS_TIMEOUT_SEC,
        500,
        TimeUnit.SECONDS);

    LOG.info(
        "Workspace name='{}', id='{}', username='{}' removed",
        workspaceName,
        workspace.getId(),
        userName);
  }

