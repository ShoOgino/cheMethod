  @Test
  public void startStopWorkspaceFunctionsShouldBeAvailableDuringRollingUpdate() throws Exception {
    int currentRevision = hotUpdateUtil.getMasterPodRevision();
    theiaIde.waitOpenedWorkspaceIsReadyToUse();

    theiaProjectTree.waitFilesTab();
    theiaProjectTree.clickOnFilesTab();
    theiaProjectTree.waitProjectAreaOpened();
    theiaProjectTree.waitItem(CONSOLE_JAVA_SIMPLE);
    theiaIde.waitAllNotificationsClosed();

    dashboard.open();
    dashboard.waitDashboardToolbarTitle();
    dashboard.selectWorkspacesItemOnDashboard();

    // check existing of expected workspaces and their statuses
    workspaces.waitPageLoading();
    workspaces.waitWorkspaceIsPresent(STOPPED_WORKSPACE_NAME);
    workspaces.waitWorkspaceIsPresent(STARTED_WORKSPACE_NAME);
    workspaces.waitWorkspaceStatus(STOPPED_WORKSPACE_NAME, Workspaces.Status.RUNNING);
    workspaces.waitWorkspaceStatus(STARTED_WORKSPACE_NAME, Workspaces.Status.STOPPED);

    hotUpdateUtil.executeMasterPodUpdateCommand();

    // execute stop-start commands for existing workspaces
    assertEquals(cheTestSystemClient.getStatus(), SystemStatus.RUNNING);
    workspaces.clickOnWorkspaceStopStartButton(STOPPED_WORKSPACE_NAME);
    workspaces.clickOnWorkspaceStopStartButton(STARTED_WORKSPACE_NAME);

    // wait successful results of the stop-start requests
    workspaces.waitWorkspaceStatus(STOPPED_WORKSPACE_NAME, Workspaces.Status.STOPPED);
    workspaces.waitWorkspaceStatus(STARTED_WORKSPACE_NAME, Workspaces.Status.RUNNING);

    // check that che is updated
    hotUpdateUtil.waitMasterPodRevision(currentRevision + 1);
    hotUpdateUtil.waitFullMasterPodUpdate(currentRevision);
  }

