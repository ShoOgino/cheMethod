  public void testOrganizationBulkDeletion() {
    // Check that created organization exist
    navigationBar.waitNavigationBar();
    navigationBar.clickOnMenu(ORGANIZATIONS);
    organizationListPage.waitForOrganizationsToolbar();
    organizationListPage.waitForOrganizationsList();

    assertEquals(organizationListPage.getOrganizationListItemCount(), initialOrgNumber);
    assertTrue(organizationListPage.getValues(NAME).contains(org1.getName()));
    assertTrue(organizationListPage.getValues(NAME).contains(org2.getName()));

    // Tests the Bulk Delete feature
    assertFalse(organizationListPage.isBulkDeleteVisible());
    organizationListPage.clickCheckbox(org1.getName());
    organizationListPage.clickCheckbox(org2.getName());
    assertTrue(organizationListPage.isBulkDeleteVisible());
    organizationListPage.clickCheckbox(org1.getName());
    organizationListPage.clickCheckbox(org2.getName());
    assertFalse(organizationListPage.isBulkDeleteVisible());
    organizationListPage.clickCheckbox(org1.getName());
    organizationListPage.clickCheckbox(org2.getName());
    assertTrue(organizationListPage.isBulkDeleteVisible());

    // Delete all organizations by the Bulk Delete feature
    organizationListPage.clickBulkDeleteButton();
    confirmDialog.waitOpened();
    assertEquals(confirmDialog.getTitle(), "Delete organizations");
    assertEquals(
        confirmDialog.getMessage(),
        String.format("Would you like to delete these %s organizations?", TEST_ROOT_ORG_NUMBER));
    assertEquals(confirmDialog.getConfirmButtonTitle(), "Delete");
    assertEquals(confirmDialog.getCancelButtonTitle(), "Close");
    confirmDialog.clickConfirm();
    confirmDialog.waitClosed();
    organizationListPage.waitForOrganizationsList();

    // Test that all organization removed
    organizationListPage.waitForOrganizationIsRemoved(org1.getName());
    organizationListPage.waitForOrganizationIsRemoved(org2.getName());

    assertEquals(
        organizationListPage.getOrganizationListItemCount(),
        initialOrgNumber - TEST_ROOT_ORG_NUMBER);
    assertFalse(organizationListPage.getValues(NAME).contains(org1.getName()));
    assertFalse(organizationListPage.getValues(NAME).contains(org2.getName()));
    assertEquals(
        navigationBar.getMenuCounterValue(ORGANIZATIONS), initialOrgNumber - TEST_ROOT_ORG_NUMBER);
  }

