    public <T> List<T> getAsListOf(Class<T> type) {
        checkNotNull(type, "Type must not be null");

        List<T> list = new ArrayList<>(paramsList.size());

        for (int i = 0; i < paramsList.size(); i++) {
            JsonValue jsonValue = paramsList.get(i);
            T item;
            if (type.equals(String.class)) {
                item = (T)jsonValue.asString();
            } else if (type.equals(Double.class)) {
                Double d = jsonValue.asNumber();
                item = (T)d;
            } else if (type.equals(Boolean.class)) {
                Boolean b = jsonValue.asBoolean();
                item = (T)b;
            } else {
                item = dtoFactory.createDtoFromJson(jsonValue.toJson(), type);
            }
            list.add(i, item);
        }

        return list;
    }

