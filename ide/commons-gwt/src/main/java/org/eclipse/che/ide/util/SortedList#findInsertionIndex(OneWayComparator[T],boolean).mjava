    /**
     * Returns the index where the item with the value would be inserted. The
     * actual value is unknown to this method; it delegates comparison to the
     * given {@code comparator}.
     * <p/>
     * If an item with the same value already exists in the list, the returned
     * index will be the first appearance of the value in the list. If the value
     * does not exist in the list, see {@code greaterItemIfNoMatch}.
     *
     * @param greaterItemIfNoMatch
     *         in the case that the given comparator's value
     *         does not match an item in the list exactly, this parameter defines
     *         which of the items to return. If true, the item that is greater than
     *         the comparator's value will be returned. If false, the item that is
     *         less than the comparator's value will be returned.
     */
    public int findInsertionIndex(OneWayComparator<T> comparator, boolean greaterItemIfNoMatch) {
        int insertionPoint = binarySearch(list, comparator);
        if (insertionPoint >= 0) {
            return insertionPoint;
        }
        insertionPoint = -insertionPoint - 1;
        return greaterItemIfNoMatch ? insertionPoint : insertionPoint - 1;
    }

