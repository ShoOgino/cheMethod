    /**
     * Dispatches json rpc response received from endpoint identified by a high
     * level identifier and represented as a json object.
     *
     * @param endpointId
     *         high level endpoint identifier
     * @param incomingJson
     *         json object
     */
    public void dispatch(String endpointId, JSONObject incomingJson) {
        Log.debug(getClass(), "Dispatching a response from: " + endpointId + ", json: " + incomingJson);

        final String id = getId(incomingJson);
        Log.debug(getClass(), "Extracted response id: " + id);

        final String key = endpointId + '@' + id;
        Log.debug(getClass(), "Combined response key: " + key);

        if (incomingJson.containsKey("result")) {
            Log.debug(getClass(), "It's a response with result field, processing result");

            final Class resultClass = resultClasses.get(key);
            Log.debug(getClass(), "Extracted response result class: " + resultClass);

            processResult(endpointId, id, resultClass, incomingJson.get("result"));
        } else {
            Log.debug(getClass(), "It's a response with error field, processing error");

            processError(endpointId, id, incomingJson.get("error"));
        }
    }

