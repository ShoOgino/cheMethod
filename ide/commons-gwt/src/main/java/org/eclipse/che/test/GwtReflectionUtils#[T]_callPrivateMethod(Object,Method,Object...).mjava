  public static <T> T callPrivateMethod(Object target, Method method, Object... args) {
    try {
      method.setAccessible(true);
      Object res = method.invoke(target, args);
      return (T) res;
    } catch (InvocationTargetException e) {
      if (AssertionError.class.isInstance(e.getCause())) {
        throw (AssertionError) e.getCause();
      } else if (UmbrellaException.class.isInstance(e.getCause())) {
        throw new RuntimeException(
            "Error while calling method '" + method.toString() + "'", e.getCause().getCause());
      }
      throw new RuntimeException(
          "Error while calling method '" + method.toString() + "'", e.getCause());
    } catch (Exception e) {
      throw new RuntimeException(
          "Unable to call method '"
              + target.getClass().getSimpleName()
              + "."
              + method.getName()
              + "(..)'",
          e);
    }
  }

