    /**
     * Register and get a promise that will be resolved when specified response
     * will be dispatched.
     *
     * @param endpointId
     *         high level endpoint identifier
     * @param id
     *         request identifier
     * @param resultClass
     *         class of request result that is contained within response
     *
     * @return promise with result dto
     */
    public <T> Promise<T> getPromise(final String endpointId, final String id, final Class<T> resultClass) {
        Log.debug(getClass(), "Registering single promise for: " + endpointId + ", request id: " + id + "result class: " + resultClass);

        return Promises.create(new Executor.ExecutorBody<T>() {
            @Override
            public void apply(ResolveFunction<T> resolve, RejectFunction reject) {
                promises.put(endpointId + '@' + id, resolve);
                resultClasses.put(endpointId + '@' + id, resultClass);
                rejectFunctions.put(endpointId + '@' + id, reject);
            }
        });
    }

