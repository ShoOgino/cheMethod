  /**
   * Displays a loader with a message and a widget.
   *
   * @param phase corresponding phase
   * @param widget additional widget to display
   * @return loader instance
   */
  public PopupLoader show(Phase phase, Widget widget) {
    PopupLoader loader = popups.get(phase);
    if (loader != null) {
      return loader;
    }

    // Create and show a loader
    switch (phase) {
      case STARTING_WORKSPACE_RUNTIME:
        loader =
            popupLoaderFactory.getPopup(
                locale.startingWorkspaceRuntime(), locale.startingWorkspaceRuntimeDescription());
        loader.showDownloadButton();
        break;
      case STARTING_WORKSPACE_AGENT:
        loader =
            popupLoaderFactory.getPopup(
                locale.startingWorkspaceAgent(), locale.startingWorkspaceAgentDescription());
        break;
      case CREATING_PROJECT:
        loader =
            popupLoaderFactory.getPopup(
                locale.creatingProject(), locale.creatingProjectDescription());
        break;
      case CREATING_WORKSPACE_SNAPSHOT:
        loader =
            popupLoaderFactory.getPopup(
                locale.snapshottingWorkspace(), locale.snapshottingWorkspaceDescription());
        break;
      case STOPPING_WORKSPACE:
        loader =
            popupLoaderFactory.getPopup(
                locale.stoppingWorkspace(), locale.stoppingWorkspaceDescription());
        break;
      case WORKSPACE_STOPPED:
        loader =
            popupLoaderFactory.getPopup(
                locale.workspaceStopped(), locale.workspaceStoppedDescription(), widget);
        break;
    }

    loader.setDelegate(this);
    popups.put(phase, loader);
    return loader;
  }

