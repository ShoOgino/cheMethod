    /**
     * Takes in a list of paths relative to the root, that correspond to nodes in
     * the tree that need to be expanded.
     * <p/>
     * <p>This will try to expand all the given paths recursively, and return the
     * array of paths that could not be fully expanded, i.e. when the leaf that
     * the path points to was not found in the tree. In these cases all the middle
     * nodes that were found in the tree will be expanded though.
     * <p/>
     * <p>The returned array of not expanded paths may be used to save and restore
     * the expansion history.
     *
     * @param paths
     *         array of paths to expand
     * @param dispatchNodeExpanded
     *         whether to dispatch the NodeExpanded event
     * @return array of paths that were not expanded, or were partially expanded
     */
    public List<List<String>> expandPaths(List<List<String>> paths, boolean dispatchNodeExpanded) {
        List<List<String>> notExpanded = new ArrayList<>();
        for (int i = 0, n = paths.size(); i < n; i++) {
            if (!expandPathRecursive(getModel().root, paths.get(i), dispatchNodeExpanded)) {
                notExpanded.add(paths.get(i));
            }
        }
        return notExpanded;
    }

