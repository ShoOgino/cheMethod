  /**
   * Initializes a web socket connection, set default values, perform mandatory preparation work.
   *
   * @param endpointId high level identifier of a web socket connection, used by high level service
   *     (e.g. json rpc infrastructure)
   * @param url url of a web socket endpoint
   * @param initActions actions to be performed each time the connection is established
   */
  public void initialize(String endpointId, String url, Set<Runnable> initActions) {
    securityTokenProvider
        .getSecurityToken()
        .then(
            new Operation<String>() {
              @Override
              public void apply(String token) throws OperationException {
                String separator = url.contains("?") ? "&" : "?";
                final String secureUrl = url + separator + "token=" + token;

                Log.debug(getClass(), "Initializing with secureUrl: " + secureUrl);

                urlResolver.setMapping(endpointId, secureUrl);

                propertyManager.initializeConnection(secureUrl);

                actionManager.setOnEstablishActions(secureUrl, initActions);

                connectionManager.initializeConnection(secureUrl);
                connectionManager.establishConnection(secureUrl);
              }
            });
  }

