    public <T> T getAs(Class<T> type) {
        if (type.equals(String.class)) {
            return (T)result.asString();
        } else if (type.equals(Double.class)) {
            return (T)(Double)result.asNumber();
        } else if (type.equals(Boolean.class)) {
            return (T)(Boolean)result.asBoolean();
        } else if (type.equals(Void.class)) {
            return (T)null;
        } else {
            return dtoFactory.createDtoFromJson(result.toJson(), type);
        }
    }

