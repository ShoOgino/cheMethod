    private static final native <V> V applyFunctionToError(Function<PromiseError, V> onRejected, JavaScriptObject reason) /*-{
        var reasonString = reason.toString();
        if (reasonString.indexOf("org.eclipse.che.api.promises.client.OperationException:") == 0
            || reasonString.indexOf("org.eclipse.che.api.promises.client.FunctionException:") == 0) {
            var promiseError = @org.eclipse.che.api.promises.client.js.JsPromiseError::create(Ljava/lang/Throwable;)(reason)
            return onRejected.@org.eclipse.che.api.promises.client.Function::apply(*)(promiseError);
        } else {
            return onRejected.@org.eclipse.che.api.promises.client.Function::apply(*)(reason);
        }
    }-*/;

