  /**
   * Returns a copy of this path with the given number of segments removed from the beginning. The
   * device id is preserved. The number must be greater or equal zero. If the count is zero, this
   * path is returned. The resulting path will always be a relative path with respect to this path.
   * If the number equals or exceeds the number of segments in this path, an empty relative path is
   * returned.
   *
   * @param count the number of segments to remove
   * @return the new path
   * @since 4.0.0-RC5
   */
  public Path removeFirstSegments(int count) {
    if (count == 0) return this;
    if (count >= segments.length) {
      return new Path(device, NO_SEGMENTS, 0);
    }
    checkArgument(count > 0);
    int newSize = segments.length - count;
    String[] newSegments = new String[newSize];
    System.arraycopy(this.segments, count, newSegments, 0, newSize);

    // result is always a relative path
    return new Path(device, newSegments, separators & HAS_TRAILING);
  }

