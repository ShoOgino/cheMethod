  /**
   * Enables animations prior to setting the value for the specified style property on the supplied
   * element. The end result is that there property is transitioned to.
   *
   * @param elem the {@link Element} we want to set the style property on.
   * @param property the name of the style property we want to set.
   * @param value the target value of the style property.
   * @param duration the time in seconds we want the transition to last.
   * @param animationCallback callback that is invoked when the animation completes. It will be
   *     passed a {@code null} event if the animation was pre-empted by some other animation on the
   *     same element.
   */
  public static void animatePropertySet(
      final Element elem,
      String property,
      String value,
      double duration,
      final EventListener animationCallback) {
    final CSSStyleDeclaration style = elem.getStyle();
    enableTransitions(style, duration);

    if (UserAgent.isFirefox()) {
      // For FF4.
      new TransitionEndHandler(animationCallback).handleEndFor(elem, "transitionend");
    } else {
      // For webkit based browsers.
      // TODO: Keep an eye on whether or not webkit supports the
      // vendor prefix free version. If they ever do we should remove this.
      new TransitionEndHandler(animationCallback).handleEndFor(elem, Event.WEBKITTRANSITIONEND);
    }

    style.setProperty(property, value);
  }

