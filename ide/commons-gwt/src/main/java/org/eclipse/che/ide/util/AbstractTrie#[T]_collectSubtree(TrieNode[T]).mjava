  /**
   * Returns all leaf nodes from a subtree rooted by {@code searchRoot} node and restricted with a
   * {@code stopFunction}
   *
   * @param searchRoot node to start from
   * @return all leaf nodes in the matching subtree
   */
  public static <T> List<T> collectSubtree(TrieNode<T> searchRoot) {
    List<TrieNode<T>> leaves = new ArrayList<>();
    getAllLeavesInSubtree(searchRoot, leaves);
    List<T> result = new ArrayList<>();
    for (TrieNode<T> leave : leaves) {
      result.add(leave.getValue());
    }
    return result;
  }

