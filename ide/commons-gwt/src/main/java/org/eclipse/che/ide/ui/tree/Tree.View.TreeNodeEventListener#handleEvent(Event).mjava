      @Override
      public void handleEvent(Event evt) {
        // Don't even bother to do anything unless we have someone ready to
        // handle events.
        if (getDelegate() == null
            || (primaryMouseButtonOnly
                && ((MouseEvent) evt).getButton() != MouseEvent.Button.PRIMARY)) {
          return;
        }

        Element eventTarget = (Element) evt.getTarget();

        if (CssUtils.containsClassName(eventTarget, css.expandControl())) {
          onExpansionControlEvent(evt, eventTarget);
        } else {
          Element treeNodeBody =
              CssUtils.getAncestorOrSelfWithClassName(eventTarget, css.treeNodeBody());
          if (treeNodeBody != null) {
            // this code emulate double click for tablets
            if (Event.MOUSEDOWN.equals(evt.getType())) {
              double currentClickMs = Duration.currentTimeMillis();
              if (currentClickMs - previousClickMs < MouseGestureListener.MAX_CLICK_TIMEOUT_MS
                  && treeNodeBody.equals(previousClickTreeNodeBody)) {

                if (BrowserUtils.isAndroid() || BrowserUtils.isIPad() || BrowserUtils.isIphone()) {
                  evt.stopPropagation();
                  evt.preventDefault();
                  doActionsForDoubleClick(treeNodeBody, evt);
                }
                return;
              } else {
                this.previousClickMs = currentClickMs;
                this.previousClickTreeNodeBody = treeNodeBody;
              }
            }

            onTreeNodeBodyChildEvent(evt, treeNodeBody);
          } else {
            onOtherEvent(evt);
          }
        }
      }

