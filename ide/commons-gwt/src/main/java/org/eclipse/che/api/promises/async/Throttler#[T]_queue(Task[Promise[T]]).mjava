    @SuppressWarnings("unchecked")
    public <T> Promise<T> queue(final Task<Promise<T>> promiseFactory) {
//        if (activePromise != null) {
//            this.promiseFactory = promiseFactory;
//
//            if (queuedPromise == null) {
//                queuedPromise = Promises.
//            }
//        }
        return current = current.thenPromise(new Function<Object, Promise>() {
            @Override
            public Promise apply(Object arg) throws FunctionException {
                return promiseFactory.run();
            }
        });
    }

