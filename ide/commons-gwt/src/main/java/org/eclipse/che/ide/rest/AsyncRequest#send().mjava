    /**
     * Sends an HTTP request based on the current {@link AsyncRequest} configuration.
     *
     * @return promise that may be resolved with the {@link Void} or rejected in case request error
     */
    public Promise<Void> send() {
        return CallbackPromiseHelper.createFromCallback(new CallbackPromiseHelper.Call<Void, Throwable>() {
            @Override
            public void makeCall(final Callback<Void, Throwable> callback) {
                send(new AsyncRequestCallback<Void>() {
                    @Override
                    protected void onSuccess(Void result) {
                        callback.onSuccess(null);
                    }

                    @Override
                    protected void onFailure(Throwable exception) {
                        callback.onFailure(exception);
                    }
                });
            }
        });
    }

