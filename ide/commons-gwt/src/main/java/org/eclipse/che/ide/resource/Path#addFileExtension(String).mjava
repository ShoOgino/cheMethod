  /**
   * Returns a new path which is the same as this path but with the given file extension added. If
   * this path is empty, root or has a trailing separator, this path is returned. If this path
   * already has an extension, the existing extension is left and the given extension simply
   * appended. Clients wishing to replace the current extension should first remove the extension
   * and then add the desired one.
   *
   * <p>The file extension portion is defined as the string following the last period (".")
   * character in the last segment. The given extension should not include a leading ".".
   *
   * @param extension the file extension to append
   * @return the new path
   * @see #getFileExtension()
   * @since 4.0.0-RC5
   */
  public Path addFileExtension(String extension) {
    if (isRoot() || isEmpty() || hasTrailingSeparator()) return this;
    int len = segments.length;
    String[] newSegments = new String[len];
    System.arraycopy(segments, 0, newSegments, 0, len - 1);
    newSegments[len - 1] = segments[len - 1] + '.' + extension;
    return new Path(device, newSegments, separators);
  }

