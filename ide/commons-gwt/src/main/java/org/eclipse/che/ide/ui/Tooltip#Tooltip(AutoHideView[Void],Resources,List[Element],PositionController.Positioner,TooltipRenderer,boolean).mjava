  private Tooltip(
      AutoHideView<Void> view,
      Resources res,
      List<Element> targetElements,
      PositionController.Positioner positioner,
      TooltipRenderer renderer,
      boolean shouldShowOnHover) {
    super(view, new AutoHideModel());
    this.positioner = positioner;
    this.renderer = renderer;
    this.css = res.tooltipCss();
    this.targetElements = targetElements;

    this.eventRemovers =
        shouldShowOnHover ? attachToTargetElement() : new ArrayList<EventRemover>();

    getView().setAnimationController(AnimationController.FADE_ANIMATION_CONTROLLER);

    positionController = new PositionController(positioner, getView().getElement());

    showTimer =
        new Timer() {
          @Override
          public void run() {
            show();
          }
        };
    setDelay(HIDE_DELAY);
    setCaptureOutsideClickOnClose(false);

    getHoverController()
        .setHoverListener(
            new HoverController.HoverListener() {
              @Override
              public void onHover() {
                if (isEnabled && !isShowing()) {
                  deferredShow();
                }
              }
            });
  }

