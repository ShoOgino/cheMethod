    public <T> List<T> getAsListOf(Class<T> type) {
        List<T> list = new ArrayList<>(resultList.size());

        for (int i = 0; i < resultList.size(); i++) {
            JsonValue jsonValue = resultList.get(i);
            T item;
            if (type.equals(String.class)) {
                item = (T)jsonValue.asString();
            } else if (type.equals(Double.class)) {
                item = (T)(Double)jsonValue.asNumber();
            } else if (type.equals(Boolean.class)) {
                item = (T)(Boolean)jsonValue.asBoolean();
            } else {
                item = dtoFactory.createDtoFromJson(jsonValue.toJson(), type);
            }
            list.add(i, item);
        }

        return list;
    }

