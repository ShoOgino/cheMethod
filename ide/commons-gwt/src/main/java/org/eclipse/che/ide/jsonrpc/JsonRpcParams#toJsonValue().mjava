    public JsonValue toJsonValue() {
        if (param != null) {
            if (param.type.equals(String.class)) {
                return jsonFactory.create((String)param.value);
            } else if (param.type.equals(Boolean.class)) {
                return jsonFactory.create((Boolean)param.value);
            } else if (param.type.equals(Double.class)) {
                return jsonFactory.create((Double)param.value);
            } else {
                return jsonFactory.parse(param.value.toString());
            }
        }

        JsonArray array = jsonFactory.createArray();
        for (int i = 0; i < params.size(); i++) {
            Param<?> paramCandidate = params.get(i);
            JsonValue jsonValue;
            if (paramCandidate.type.equals(String.class)) {
                jsonValue = jsonFactory.create((String)paramCandidate.value);
            } else if (paramCandidate.type.equals(Boolean.class)) {
                jsonValue = jsonFactory.create((Boolean)paramCandidate.value);
            } else if (paramCandidate.type.equals(Double.class)) {
                jsonValue = jsonFactory.create((Double)paramCandidate.value);
            } else {
                jsonValue = jsonFactory.parse(paramCandidate.value.toString());
            }

            array.set(i, jsonValue);
        }

        return array;
    }

