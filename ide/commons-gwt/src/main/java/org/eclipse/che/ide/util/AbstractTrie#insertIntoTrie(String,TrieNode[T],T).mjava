  private TrieNode<T> insertIntoTrie(String prefix, TrieNode<T> node, T value) {
    String nodePrefix = node.getPrefix();
    if (nodePrefix.equals(prefix)) {
      node.setValue(value);
      return node;
    } else {
      TrieNode<T> branch = node.findInsertionBranch(prefix);
      if (branch != null) {
        return insertIntoTrie(prefix, branch, value);
      } else {
        // create new trie nodes
        LinkedList<TrieNode<T>> suffixChain =
            makeSuffixChain(node, prefix.substring(nodePrefix.length()), value);
        return suffixChain.peek();
      }
    }
  }

