  private void attachEventHandlers() {
    getView()
        .addEventListener(
            Event.CLICK,
            new EventListener() {
              @Override
              public void handleEvent(Event evt) {
                Element listItemElem =
                    CssUtils.getAncestorOrSelfWithClassName(
                        (Element) evt.getTarget(), css.listItem());

                if (listItemElem == null) {
                  Log.warn(
                      SimpleList.class,
                      "Unable to find an ancestor that was a list item for a click on: ",
                      evt.getTarget());
                  return;
                }

                ListItem<M> listItem = ListItem.cast(listItemElem);
                eventDelegate.onListItemClicked(listItem, listItem.getData());
              }
            },
            false);

    getView()
        .addEventListener(
            Event.DBLCLICK,
            new EventListener() {
              @Override
              public void handleEvent(Event evt) {
                Element listItemElem =
                    CssUtils.getAncestorOrSelfWithClassName(
                        (Element) evt.getTarget(), css.listItem());

                if (listItemElem == null) {
                  Log.warn(
                      SimpleList.class,
                      "Unable to find an ancestor that was a list item for a click on: ",
                      evt.getTarget());
                  return;
                }

                ListItem<M> listItem = ListItem.cast(listItemElem);
                eventDelegate.onListItemDoubleClicked(listItem, listItem.getData());
              }
            },
            false);

    getView()
        .addEventListener(
            Event.CONTEXTMENU,
            new EventListener() {
              @Override
              public void handleEvent(Event evt) {
                MouseEvent mouseEvt = (MouseEvent) evt;
                Element listItemElem =
                    CssUtils.getAncestorOrSelfWithClassName(
                        (Element) evt.getTarget(), css.listItem());

                if (listItemElem == null) {
                  Log.warn(
                      SimpleList.class,
                      "Unable to find an ancestor that was a list item for a click on: ",
                      evt.getTarget());
                  return;
                }

                ListItem<M> listItem = ListItem.cast(listItemElem);
                eventDelegate.onListItemContextMenu(
                    mouseEvt.getClientX(), mouseEvt.getClientY(), listItem.getData());
              }
            },
            false);
  }

