  /** Destructively removes all occurrences of ".." segments from this path. */
  private void collapseParentReferences() {
    int segmentCount = segments.length;
    String[] stack = new String[segmentCount];
    int stackPointer = 0;
    for (String segment : segments) {
      if (segment.equals("..")) {
        if (stackPointer == 0) {
          // if the stack is empty we are going out of our scope
          // so we need to accumulate segments.  But only if the original
          // path is relative.  If it is absolute then we can't go any higher than
          // root so simply toss the .. references.
          if (!isAbsolute()) stack[stackPointer++] = segment; //stack push
        } else {
          // if the top is '..' then we are accumulating segments so don't pop
          if ("..".equals(stack[stackPointer - 1])) stack[stackPointer++] = "..";
          else stackPointer--;
          //stack pop
        }
        //collapse current references
      } else if (!segment.equals(".") || segmentCount == 1)
        stack[stackPointer++] = segment; //stack push
    }
    //if the number of segments hasn't changed, then no modification needed
    if (stackPointer == segmentCount) return;
    //build the new segment array backwards by popping the stack
    String[] newSegments = new String[stackPointer];
    System.arraycopy(stack, 0, newSegments, 0, stackPointer);
    this.segments = newSegments;
  }

