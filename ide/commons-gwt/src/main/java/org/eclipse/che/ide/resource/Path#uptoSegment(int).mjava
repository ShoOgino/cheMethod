    /**
     * Returns a copy of this path truncated after the
     * given number of segments. The number must not be negative.
     * The device id is preserved.
     * <p>
     * If this path has a trailing separator, the result will too
     * (assuming there are some segments left). If there is no
     * trailing separator, the result will not have a trailing
     * separator.
     * Copying up to segment zero simply means making an copy with
     * no path segments.
     * </p>
     *
     * @param count
     *         the segment number at which to truncate the path
     * @return the new path
     * @since 4.0.0-RC5
     */
    public Path uptoSegment(int count) {
        if (count == 0)
            return new Path(device, NO_SEGMENTS, separators & (HAS_LEADING | IS_UNC));
        if (count >= segments.length)
            return this;
        checkArgument(count > 0, "Invalid parameter to Path.uptoSegment");
        String[] newSegments = new String[count];
        System.arraycopy(segments, 0, newSegments, 0, count);
        return new Path(device, newSegments, separators);
    }

