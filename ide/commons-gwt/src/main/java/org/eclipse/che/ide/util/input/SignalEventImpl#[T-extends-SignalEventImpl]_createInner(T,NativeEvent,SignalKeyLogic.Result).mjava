  /**
   * Populate a SignalEventImpl with the necessary information
   *
   * @param ret
   * @param keySignalResult only required if it's a key event
   * @return the signal, or null if it is to be ignored.
   */
  protected static <T extends SignalEventImpl> T createInner(
      T ret, NativeEvent event, SignalKeyLogic.Result keySignalResult) {
    ret.nativeEvent = event;
    if (ret.isKeyEvent()) {
      KeySignalType type = keySignalResult.type;

      if (type != null) {
        ret.cacheKeyCode(keySignalResult.keyCode);
        ret.setup(type);
      } else {
        ret = null;
      }

    } else if ((UserAgent.isIE() ? "paste" : "beforepaste").equals(event.getType())) {
      // Only want 'beforepaste' for ie and 'paste' for everything else.
      // TODO(danilatos): Generalise clipboard events
      ret = null;
    }

    // TODO: return null if it's something we should ignore.
    return ret;
  }

