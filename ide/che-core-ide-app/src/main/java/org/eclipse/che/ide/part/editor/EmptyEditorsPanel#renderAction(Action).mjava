    private Node renderAction(final Action action) {
        final Presentation presentation = presentationFactory.getPresentation(action);
        Element divElement = Elements.createDivElement(style.listElement());
        divElement.addEventListener("click", new EventListener() {
            @Override
            public void handleEvent(Event evt) {
                ActionEvent event = new ActionEvent(presentation, actionManager, perspectiveManagerProvider.get());
                action.actionPerformed(event);
            }
        }, true);
        divElement.getStyle().setCursor("pointer");
        divElement.getStyle().setColor(Style.getOutputLinkColor());
        SpanElement label = Elements.createSpanElement();
        label.setInnerText(presentation.getText());
        divElement.appendChild(label);

        String hotKey = KeyMapUtil.getShortcutText(keyBindingAgent.getKeyBinding(actionManager.getId(action)));
        if (hotKey == null) {
            hotKey = "&nbsp;";
        } else {
            hotKey =
                    "<nobr>&nbsp;" + hotKey + "&nbsp;</nobr>";
        }
        SpanElement hotKeyElement = Elements.createSpanElement();
        hotKeyElement.setInnerHTML(hotKey);
        divElement.appendChild(hotKeyElement);
        return divElement;
    }

