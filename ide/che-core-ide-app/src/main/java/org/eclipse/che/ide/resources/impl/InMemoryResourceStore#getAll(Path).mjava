    /** {@inheritDoc} */
    @Override
    public Optional<Resource[]> getAll(Path parent) {
        checkArgument(parent != null, "Null path occurred");

        if (!memoryCache.containsKey(parent)) {
            return absent();
        }

        Resource[] all = new Resource[0];

        for (Map.Entry<Path, Resource[]> setEntry : memoryCache.entrySet()) {

            /* There is no need to check compared path if its segment count is less then given one. */

            final Path comparedPath = setEntry.getKey();

            if (!parent.isPrefixOf(comparedPath)) {
                continue;
            }

            final Resource[] resources = setEntry.getValue();

            if (resources == null || resources.length == 0) {
                continue;
            }

            final Resource[] tmpResourcesArr = copyOf(all, all.length + resources.length);
            arraycopy(resources, 0, tmpResourcesArr, all.length, resources.length);
            all = tmpResourcesArr;
        }

        if (all.length == 0) {
            return of(EMPTY_RESOURCES);
        }

        return of(all);
    }

