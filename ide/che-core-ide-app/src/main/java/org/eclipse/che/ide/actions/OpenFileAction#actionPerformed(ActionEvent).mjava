  @Override
  public void actionPerformed(ActionEvent event) {
    if (event.getParameters() == null) {
      Log.error(getClass(), localization.canNotOpenFileWithoutParams());
      return;
    }

    final String pathToOpen = event.getParameters().get(FILE_PARAM_ID);
    if (pathToOpen == null) {
      Log.error(getClass(), localization.fileToOpenIsNotSpecified());
      return;
    }

    appContext
        .getWorkspaceRoot()
        .getFile(pathToOpen)
        .then(
            new Operation<Optional<File>>() {
              @Override
              public void apply(Optional<File> optionalFile) throws OperationException {
                if (optionalFile.isPresent()) {
                  if (actionCompletedCallback != null) {
                    actionCompletedCallback.onSuccess(null);
                  }

                  editorAgent.openEditor(
                      optionalFile.get(),
                      new EditorAgent.OpenEditorCallback() {
                        @Override
                        public void onEditorOpened(EditorPartPresenter editor) {
                          if (!(editor instanceof TextEditor)) {
                            return;
                          }

                          try {
                            int lineNumber =
                                Integer.parseInt(event.getParameters().get(LINE_PARAM_ID)) - 1;
                            ((TextEditor) editor)
                                .getDocument()
                                .setCursorPosition(new TextPosition(lineNumber, 0));
                          } catch (NumberFormatException e) {
                            Log.error(getClass(), localization.fileToOpenLineIsNotANumber());
                          }
                        }

                        @Override
                        public void onInitializationFailed() {}

                        @Override
                        public void onEditorActivated(EditorPartPresenter editor) {}
                      });

                } else {
                  if (actionCompletedCallback != null) {
                    actionCompletedCallback.onFailure(null);
                  }

                  notificationManager.notify(
                      localization.unableOpenResource(pathToOpen), FAIL, FLOAT_MODE);
                }
              }
            });
  }

