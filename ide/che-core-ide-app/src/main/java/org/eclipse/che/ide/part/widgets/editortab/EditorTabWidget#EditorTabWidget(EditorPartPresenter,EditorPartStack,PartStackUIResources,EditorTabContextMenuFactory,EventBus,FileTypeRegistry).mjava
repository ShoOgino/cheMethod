    @Inject
    public EditorTabWidget(@Assisted EditorPartPresenter relatedEditorPart,
                           @Assisted EditorPartStack relatedEditorPartStack,
                           PartStackUIResources resources,
                           EditorTabContextMenuFactory editorTabContextMenu,
                           final EventBus eventBus,
                           FileTypeRegistry fileTypeRegistry) {
        this.resources = resources;
        this.eventBus = eventBus;
        this.fileTypeRegistry = fileTypeRegistry;
        this.relatedEditorPart = relatedEditorPart;
        this.relatedEditorPartStack = relatedEditorPartStack;

        initWidget(UI_BINDER.createAndBindUi(this));

        this.editorTabContextMenu = editorTabContextMenu;
        this.file = relatedEditorPart.getEditorInput().getFile();
        this.icon = relatedEditorPart.getTitleImage();
        this.title.setText(relatedEditorPart.getTitle());
        this.id = title + UUID.uuid(4);

        iconPanel.add(getIcon());

        addDomHandler(this, ClickEvent.getType());
        addDomHandler(this, DoubleClickEvent.getType());
        addDomHandler(this, ContextMenuEvent.getType());

        eventBus.addHandler(ResourceChangedEvent.getType(), this);
        eventBus.addHandler(FileEvent.TYPE, this);

        closeButton.addDomHandler(new ClickHandler() {
            @Override
            public void onClick(ClickEvent event) {
                eventBus.fireEvent(FileEvent.createCloseFileEvent(EditorTabWidget.this));
            }
        }, ClickEvent.getType());
    }

