  private void connectToTerminal(@NotNull String wsUrl, TerminalOptionsJso options) {
    countRetry--;

    socket = WebSocket.create(wsUrl);

    socket.setOnMessageHandler(event -> terminal.write(event.getMessage()));

    socket.setOnCloseHandler(
        event -> {
          if (CLOSE_NORMAL == event.getCode()) {
            connected = false;
            terminalStateListener.onExit();
          }
        });

    socket.setOnOpenHandler(
        () -> {
          JavaScriptObject terminalJso = moduleHolder.getModule("Xterm");
          terminal = TerminalJso.create(terminalJso, options);
          connected = true;

          view.openTerminal(terminal);

          terminal.on(
              DATA_EVENT_NAME,
              data -> {
                Jso jso = Jso.create();
                jso.addField(TYPE, DATA_EVENT_NAME);
                jso.addField(DATA_EVENT_NAME, data);
                socket.send(jso.serialize());
              });
          String command = options.getStringField("command");
          if (!Strings.isNullOrEmpty(command)) {
            sendCommand(command);
            sendCommand("\r");
          }
        });

    socket.setOnErrorHandler(
        () -> {
          connected = false;

          if (countRetry == 0) {
            view.showErrorMessage(locale.terminalErrorStart());
            notificationManager.notify(
                locale.connectionFailedWithTerminal(),
                locale.terminalErrorConnection(),
                FAIL,
                FLOAT_MODE);
          } else {
            reconnect();
          }
        });
  }

