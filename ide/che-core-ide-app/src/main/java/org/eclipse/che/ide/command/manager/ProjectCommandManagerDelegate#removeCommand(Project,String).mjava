  /** Removes the command with the specified {@code commandName}. */
  Promise<Void> removeCommand(Project project, String commandName) {
    final List<CommandImpl> commands = getCommands(project);

    if (commands.isEmpty()) {
      return promiseProvider.reject(
          new Exception(
              "Command '"
                  + commandName
                  + "' is not associated with the project '"
                  + project.getName()
                  + "'"));
    }

    final List<CommandImpl> commandsToUpdate = new ArrayList<>();
    for (CommandImpl projectCommand : commands) {
      if (!commandName.equals(projectCommand.getName())) {
        commandsToUpdate.add(projectCommand);
      }
    }

    return updateProject(project, new ArrayList<>(commandsToUpdate));
  }

