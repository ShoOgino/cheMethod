  @Override
  public void accept(String endpointId, FileStateUpdateDto params) {
    if (suspended) {
      return;
    }

    final FileWatcherEventType status = params.getType();
    final String stringPath = params.getPath();
    final String name = stringPath.substring(stringPath.lastIndexOf("/") + 1);

    switch (status) {
      case MODIFIED:
        {
          Log.debug(getClass(), "Received updated file event status: " + stringPath);

          eventBus.fireEvent(new FileContentUpdateEvent(stringPath, params.getHashCode()));

          break;
        }
      case DELETED:
        {
          Log.debug(getClass(), "Received removed file event status: " + stringPath);

          final Path path = Path.valueOf(stringPath);
          appContext.getWorkspaceRoot().synchronize(new ExternalResourceDelta(path, path, REMOVED));
          if (notificationManager != null && !deletedFilesController.remove(stringPath)) {
            notificationManager.notify(
                "External operation", "File '" + name + "' is removed", SUCCESS, NOT_EMERGE_MODE);
            closeOpenedEditor(path);
          }

          break;
        }
      default:
    }
  }

