    @Override
    protected Promise<List<Node>> getChildrenImpl() {
        checkState(getData() instanceof Container, "Not a container");

        return ((Container)getData()).getChildren().then(new Function<Resource[], List<Node>>() {
            @Override
            public List<Node> apply(Resource[] children) throws FunctionException {
                if (children == null || children.length == 0) {
                    return NO_CHILDREN;
                }

                final List<Node> nodes = newArrayListWithExpectedSize(children.length);

                for (Resource child : children) {
                    nodes.add(createNode(child));
                }

                return unmodifiableList(nodes);
            }
        });
    }

