    /**
     * Creates machine section, inline delimiter and machines delimiter
     *
     * @param machineName machine name
     */
    public Machine(final String machineName) {
      installers = new HashMap<>();

      // Clone machineTemplate node
      section = machineTemplate.cloneNode(true).cast();

      // Find machine cells
      for (int i = 0; i < section.getChildNodes().getLength(); i++) {
        Node n = section.getChildNodes().getItem(i);
        if (Node.ELEMENT_NODE != n.getNodeType()) {
          continue;
        }

        Element e = n.cast();
        switch (e.getId()) {
          case "machine-icon":
            icon = e;
            break;
          case "machine-title":
            title = e;
            break;
          case "machine-image":
            image = e;
            break;
          case "machine-state":
            state = e;
            break;
        }
      }

      // Set title
      title.setInnerText(machineName);

      // Clone inline delimiter
      inlineDelimiter = machineInlineDelimiterTemplate.cloneNode(true).cast();

      // Clone machines delimiter
      machinesDelimiter = machinesDelimiterTemplate.cloneNode(true).cast();

      for (int i = 0; i < icon.getChildNodes().getLength(); i++) {
        Node n = icon.getChildNodes().getItem(i);
        if (Node.ELEMENT_NODE != n.getNodeType()) {
          continue;
        }

        if ("div".equalsIgnoreCase(n.getNodeName())) {
          Element e = n.cast();
          DOM.setEventListener(
              e,
              event -> {
                delegate.onShowMachineOutputs(machineName);
              });

          DOM.sinkEvents(e, Event.ONCLICK);
        }
      }
    }

