    /**
     * Updates the command with the specified {@code name} by replacing it with the given {@code command}.
     * <p><b>Note</b> that name of the updated command may differ from the name provided by the given {@code command}
     * in order to prevent name duplication.
     */
    Promise<CommandImpl> updateCommand(final CommandImpl command) {
        return workspaceServiceClient.updateCommand(appContext.getWorkspaceId(), command.getName(), command)
                                     .then((Function<WorkspaceImpl, CommandImpl>)workspace -> {
                                         // update workspace model in AppContext because
                                         // AppContext always must return an actual workspace model
                                         ((AppContextImpl)appContext).setWorkspace(workspace);
                                         return command;
                                     });
    }

