  /** The new file has been opened in the editor. Method reads breakpoints. */
  private void onOpenEditor(String filePath, EditorPartPresenter editor) {
    final BreakpointRenderer renderer = getBreakpointRendererForEditor(editor);
    if (renderer != null) {
      breakpointStorage
          .getByPath(filePath)
          .forEach(
              breakpoint ->
                  renderer.setBreakpointMark(
                      breakpoint, false, BreakpointManagerImpl.this::onLineChange));

      Debugger debugger = debuggerManager.getActiveDebugger();
      if (debugger != null) {
        debugger
            .getAllBreakpoints()
            .then(
                breakpoints -> {
                  for (Breakpoint breakpoint : breakpoints) {
                    Location location = breakpoint.getLocation();
                    String target = location.getTarget();
                    int lineNumber = location.getLineNumber();
                    if (target.equals(filePath)
                        && breakpointStorage.get(target, lineNumber).isPresent()) {
                      renderer.setBreakpointMark(
                          breakpoint, true, BreakpointManagerImpl.this::onLineChange);
                    }
                  }
                });
      }

      if (suspendedLocation != null && suspendedLocation.getTarget().equals(filePath)) {
        renderer.setLineActive(suspendedLocation.getLineNumber() - 1, true);
      }
    }
  }

