  @UiHandler("fileName")
  void handleKeyUp(KeyUpEvent event) {
    int nativeKeyCode = event.getNativeKeyCode();
    switch (nativeKeyCode) {
      case KEY_UP:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectPrevious();
        }
        break;

      case KEY_DOWN:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectNext();
        }
        break;

      case KEY_PAGEUP:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectPreviousPage();
        }
        break;

      case KEY_PAGEDOWN:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectNextPage();
        }
        break;

      case KEY_ENTER:
        event.stopPropagation();
        event.preventDefault();
        SearchResultDto selectedItem = list.getSelectionModel().getSelectedItem();
        if (selectedItem != null) {
          delegate.onFileSelected(Path.valueOf(selectedItem.getItemReference().getPath()));
        }
        break;

      case KEY_ESCAPE:
        event.stopPropagation();
        event.preventDefault();
        hidePopup();
        break;
      default:
        if (Strings.isNullOrEmpty(fileName.getText())) {
          showItems(Collections.emptyList());
        } else {
          delegate.onFileNameChanged();
        }
        break;
    }
  }

