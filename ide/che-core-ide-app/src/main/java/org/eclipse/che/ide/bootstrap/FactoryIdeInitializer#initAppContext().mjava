    @Override
    protected Promise<Void> initAppContext() {
        return super.initAppContext()
                    .thenPromise(aVoid -> getFactory()
                            .then((Function<FactoryDto, Void>)factory -> {
                                appContext.setFactory(factory);
                                return null;
                            }).catchError((Operation<PromiseError>)err -> {
                                throw new OperationException("Unable to load Factory: " + err.getMessage(), err.getCause());
                            })
                            .then(arg -> {
                                if (RUNNING != appContext.getWorkspace().getStatus()) {
                                    throw new OperationException("Can't load Factory. Workspace is not running.");
                                }
                            }));
    }

