    /** {@inheritDoc} */
    @Override
    public Promise<Void> flushPreferences() {
        if (changedPreferences.isEmpty()) {
            return Promises.resolve(null);
        }

        return preferencesService.updatePreferences(changedPreferences).thenPromise(new Function<Map<String, String>, Promise<Void>>() {
            @Override
            public Promise<Void> apply(Map<String, String> result) throws FunctionException {
                persistedPreferences.putAll(changedPreferences);
                changedPreferences.clear();
                return Promises.resolve(null);
            }
        });
    }

