    /** {@inheritDoc} */
    @Override
    public List<ActionDescriptor> getActions() {
        final List<Path> paths = new ArrayList<>();

        /*
           The main idea is to look up all expanded nodes in project tree and gather the last one's children.
           Then check if child is resource, then we store the path in user preference.
         */

        for (Node node : projectExplorer.getTree().getNodeStorage().getAll()) {
            if (projectExplorer.getTree().isExpanded(node) && node instanceof ResourceNode) {

                final List<Node> childrenToStore = projectExplorer.getTree().getNodeStorage().getChildren(node);

                for (Node children : childrenToStore) {
                    if (children instanceof ResourceNode) {
                        paths.add(((ResourceNode)children).getData().getLocation());
                    }
                }
            }
        }

        final ActionDescriptor descriptor = dtoFactory.createDto(ActionDescriptor.class)
                                                      .withId(REVEAL_NODE_ACTION)
                                                      .withParameters(singletonMap(PATH_PARAM_ID, Joiner.on(PATH_SPLITTER).join(paths)));

        return singletonList(descriptor);
    }

