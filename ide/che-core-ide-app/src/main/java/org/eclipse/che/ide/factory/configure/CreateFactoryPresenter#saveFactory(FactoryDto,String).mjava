  private Operation<List<FactoryDto>> saveFactory(
      final FactoryDto factory, final String factoryName) {
    return new Operation<List<FactoryDto>>() {
      @Override
      public void apply(List<FactoryDto> factories) throws OperationException {
        if (!factories.isEmpty()) {
          view.showFactoryNameError(localizationConstant.createFactoryAlreadyExist(), null);
        } else {
          factoryService
              .saveFactory(factory.withName(factoryName))
              .then(
                  new Operation<FactoryDto>() {
                    @Override
                    public void apply(FactoryDto factory) throws OperationException {
                      final Link link = factory.getLink("accept-named");
                      if (link != null) {
                        view.setAcceptFactoryLink(link.getHref());
                      }
                      view.setConfigureFactoryLink(CONFIGURE_LINK + factory.getId() + "/configure");
                    }
                  })
              .catchError(logError());
        }
      }
    };
  }

