  /**
   * Provides terminal depends on the current state of IDE:
   *
   * <ul>
   *   <li>One or more terminals is present -> activates last active terminal
   *   <li>Terminal is absent -> opens new terminal for the selected machine and activates terminal
   *       tab
   * </ul>
   */
  public void provideTerminal() {
    if (terminals.isEmpty()) {
      newTerminal(TerminalOptionsJso.createDefault(), true);
      return;
    }

    String lastActiveTerminalId = "";
    Iterator<String> iterator = terminals.keySet().iterator();
    while (iterator.hasNext()) {
      lastActiveTerminalId = iterator.next();
    }

    ProcessTreeNode terminalNode = view.getNodeById(lastActiveTerminalId);
    if (terminalNode == null) {
      newTerminal(TerminalOptionsJso.createDefault(), true);
      return;
    }

    workspaceAgentProvider.get().setActivePart(this);
    view.selectNode(terminalNode);
  }

