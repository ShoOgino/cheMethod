    @Inject
    public CommandsExplorerPresenter(Provider<CommandsExplorerView> view,
                                     CommandResources commandResources,
                                     Provider<WorkspaceAgent> workspaceAgent,
                                     CommandManager commandManager,
                                     Provider<NotificationManager> notificationManager,
                                     CommandTypeChooser commandTypeChooser,
                                     ExplorerMessages messages,
                                     RefreshViewTask refreshViewTask,
                                     DialogFactory dialogFactory,
                                     NodeFactory nodeFactory,
                                     EditorAgent editorAgent,
                                     AppContext appContext,
                                     EventBus eventBus) {
        this.view = view;
        this.resources = commandResources;
        this.workspaceAgent = workspaceAgent;
        this.commandManager = commandManager;
        this.notificationManager = notificationManager;
        this.commandTypeChooser = commandTypeChooser;
        this.messages = messages;
        this.refreshViewTask = refreshViewTask;
        this.dialogFactory = dialogFactory;
        this.nodeFactory = nodeFactory;
        this.editorAgent = editorAgent;
        this.appContext = appContext;
        this.eventBus = eventBus;

        eventBus.addHandler(WsStatusChangedEvent.TYPE, event -> {
            if (event.getStatus() == RUNNING) {
                view.get().setDelegate(this);
                start();
            }
        });
    }

