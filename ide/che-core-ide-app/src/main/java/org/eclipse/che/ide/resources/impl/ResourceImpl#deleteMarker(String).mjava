    /** {@inheritDoc} */
    @Override
    public boolean deleteMarker(String type) {
        checkArgument(!isNullOrEmpty(type), "Invalid marker type occurred");

        int size = markers.length;
        int index = -1;

        for (int i = 0; i < markers.length; i++) {
            if (markers[i].getType().equals(type)) {
                index = i;
                resourceManager.notifyMarkerChanged(this, markers[i], REMOVED);
                break;
            }
        }

        if (index == -1) {
            return false;
        }

        final int numMoved = markers.length - index - 1;
        if (numMoved > 0) {
            arraycopy(markers, index + 1, markers, index, numMoved);
        }
        markers = copyOf(markers, --size);

        return true;
    }

