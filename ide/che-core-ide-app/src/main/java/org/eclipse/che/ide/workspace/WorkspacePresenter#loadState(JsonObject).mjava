    @Override
    public Promise<Void> loadState(JsonObject state) {
        if (state.hasKey("perspectives")) {
            JsonObject perspectives = state.getObject("perspectives");
            Map<String, Perspective> perspectiveMap = perspectiveManagerProvider.get().getPerspectives();
            ArrayOf<Promise<?>> perspectivePromises = Collections.arrayOf();
            for (String key : perspectives.keys()) {
                if (perspectiveMap.containsKey(key)) {
                    perspectivePromises.push(perspectiveMap.get(key).loadState(perspectives.getObject(key)));
                }
            }
            return promises.all2(perspectivePromises).thenPromise(ignored -> promises.resolve(null));
        }

        return promises.resolve(null);
    }

