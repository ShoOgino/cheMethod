    @Inject
    public ExecuteCommandActionManager(CommandManager commandManager,
                                       ActionManager actionManager,
                                       CommandsActionGroup commandsActionGroup,
                                       GoalPopUpGroupFactory goalPopUpGroupFactory,
                                       ExecuteCommandActionFactory commandActionFactory,
                                       CommandGoalRegistry goalRegistry,
                                       EventBus eventBus) {
        this.actionManager = actionManager;
        this.commandsActionGroup = commandsActionGroup;
        this.goalPopUpGroupFactory = goalPopUpGroupFactory;
        this.commandActionFactory = commandActionFactory;
        this.goalRegistry = goalRegistry;

        commandActions = new HashMap<>();
        goalPopUpGroups = new HashMap<>();

        initialize();

        eventBus.addHandler(CommandsLoadedEvent.getType(), event -> commandManager.getCommands().forEach(this::addAction));
        eventBus.addHandler(CommandAddedEvent.getType(), e -> addAction(e.getCommand()));
        eventBus.addHandler(CommandRemovedEvent.getType(), e -> removeAction(e.getCommand()));
        eventBus.addHandler(CommandUpdatedEvent.getType(), e -> {
            removeAction(e.getInitialCommand());
            addAction(e.getUpdatedCommand());
        });
    }

