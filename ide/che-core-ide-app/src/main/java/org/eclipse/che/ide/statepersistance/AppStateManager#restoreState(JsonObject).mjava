  private void restoreState(JsonObject settings) {
    try {
      if (settings.hasKey(WORKSPACE)) {
        JsonObject workspace = settings.getObject(WORKSPACE);
        Promise<Void> sequentialRestore = promises.resolve(null);
        for (String key : workspace.keys()) {
          Optional<StateComponent> stateComponent =
              persistenceComponents
                  .stream()
                  .filter(component -> component.getId().equals(key))
                  .findAny();
          if (stateComponent.isPresent()) {
            StateComponent component = stateComponent.get();
            Log.debug(getClass(), "Restore state for the component ID: " + component.getId());
            sequentialRestore =
                sequentialRestore.thenPromise(
                    ignored -> component.loadState(workspace.getObject(key)));
          }
        }
      }
    } catch (JsonException e) {
      Log.error(getClass(), e);
    }
  }

