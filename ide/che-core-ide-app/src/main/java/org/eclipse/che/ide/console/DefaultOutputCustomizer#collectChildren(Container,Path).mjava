    /*
     * Returns the list of workspace files filtered by a relative path
     */
    private Promise<List<File>> collectChildren(Container root, Path relativeFilePath) {
        return root.getTree(-1).then(new Function<Resource[], List<File>>() {
            @Override
            public List<File> apply(Resource[] children) throws FunctionException {
                return Stream.of(children).filter(
                        child -> child.isFile() && endsWith(child.asFile().getLocation(), relativeFilePath))
                        .map(Resource::asFile).collect(Collectors.toList());
            }
        });
    }

