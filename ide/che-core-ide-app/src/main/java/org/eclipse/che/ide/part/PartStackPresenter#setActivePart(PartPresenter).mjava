  /** {@inheritDoc} */
  @Override
  public void setActivePart(@NotNull PartPresenter part) {
    TabItem tab = getTabByPart(part);
    if (tab == null) {
      return;
    }

    activePart = part;
    activeTab = tab;

    if (state == State.HIDDEN) {
      state = State.NORMAL;

      if (currentSize < MIN_PART_SIZE) {
        currentSize = DEFAULT_PART_SIZE;
      }

      workBenchPartController.setSize(currentSize);
      workBenchPartController.setHidden(false);

    } else if (state == State.MINIMIZED) {
      // Minimized state means the other part stack is maximized.
      // Ask the delegate to restore part stacks.
      if (delegate != null) {
        delegate.onRestore(this);
      }

    } else if (state == State.NORMAL) {
      if (workBenchPartController.getSize() < MIN_PART_SIZE) {
        workBenchPartController.setSize(DEFAULT_PART_SIZE);
      }

      workBenchPartController.setHidden(false);
    }

    notifyPartStackStateChanged();

    selectActiveTab(tab);
  }

