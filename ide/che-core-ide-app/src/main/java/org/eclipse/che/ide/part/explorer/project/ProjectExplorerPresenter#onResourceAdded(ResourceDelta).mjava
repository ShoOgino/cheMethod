    @SuppressWarnings("unchecked")
    private void onResourceAdded(ResourceDelta delta) {
        if ((delta.getFlags() & DERIVED) == 0) {
            return;
        }

        final Tree tree = view.getTree();
        final NodeSettings nodeSettings = settingsProvider.getSettings();

        final Resource resource = delta.getResource();

        if ((delta.getFlags() & (MOVED_FROM | MOVED_TO)) != 0) {

            final Node node1 = getProjectNode(delta.getFromPath());
            final Node node2 = getProjectNode(delta.getToPath());

            //TODO: brutal fix for CHE-1535 just avoid NPE here
            if (node1 == null && node2 == null) {
                final Node node = tree.getSelectionModel().getSelectedNodes().get(0);
                if (node != null) {
                    tree.refresh(node);
                }
                return;
            }

            if (node1.equals(node2)) {
                if (tree.isExpanded(node1)) {
                    tree.getNodeLoader().loadChildren(node1, true);
                }
            } else {
                if (tree.isExpanded(node1)) {
                    tree.getNodeLoader().loadChildren(node1, true);
                }

                if (node2 != null && tree.isExpanded(node2)) {
                    tree.getNodeLoader().loadChildren(node2, true);
                }
            }

            return;
        } else {
            //process root project
            if (resource.getLocation().segmentCount() == 1 && resource.getResourceType() == PROJECT) {

                final Node rootProject = getNode(resource.getLocation());

                if (rootProject == null) {
                    final ContainerNode node = nodeFactory.newContainerNode((Container)resource, nodeSettings);
                    tree.getNodeStorage().add(node);
                } else {
                    final String oldId = tree.getNodeStorage().getKeyProvider().getKey(rootProject);
                    ((ResourceNode)rootProject).setData(resource);
                    tree.getNodeStorage().reIndexNode(oldId, rootProject);
                    tree.refresh(rootProject);

                    if (tree.isExpanded(rootProject)) {
                        tree.getNodeLoader().loadChildren(rootProject, true);
                    }
                }

                return;
            }
        }

        if (!nodeSettings.isShowHiddenFiles() && resource.getName().startsWith(".")) {
            return;
        }

        final Node node = MoreObjects.firstNonNull(getNode(resource.getLocation()), getParentNode(resource.getLocation()));

        if (node != null && tree.isExpanded(node)) {
            tree.getNodeLoader().loadChildren(node, true);
        }
    }

