    Promise<Optional<Container>> getContainer(final Path absolutePath) {
        return findResource(absolutePath, false).then(new Function<Optional<Resource>, Optional<Container>>() {
            @Override
            public Optional<Container> apply(Optional<Resource> optional) throws FunctionException {
                if (optional.isPresent()) {
                    final Resource resource = optional.get();
                    checkState(resource instanceof Container, "Not a container");

                    return of((Container)resource);
                }

                return absent();
            }
        });
    }

