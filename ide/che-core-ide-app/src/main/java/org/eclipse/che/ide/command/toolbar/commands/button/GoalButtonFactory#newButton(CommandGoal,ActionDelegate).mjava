    /**
     * Creates new instance of the {@link GoalButton}.
     *
     * @param goal
     *         {@link CommandGoal} for displaying commands
     * @param delegate
     *         delegate for receiving events
     * @return {@link GoalButton}
     */
    public GoalButton newButton(CommandGoal goal, ActionDelegate delegate) {
        final GoalButtonDataProvider dataProvider = new GoalButtonDataProvider(appContext, popupItemFactory);
        final GoalButton button = new GoalButton(goal, getIconForGoal(goal), dataProvider, messages);

        button.setActionHandler(item -> {
            if (item instanceof CommandPopupItem) {
                final CommandImpl command = ((CommandPopupItem)item).getCommand();

                delegate.onCommandExecute(command, null);
                dataProvider.setDefaultItem(item);
                button.updateTooltip();
            } else if (item instanceof MachinePopupItem) {
                final MachinePopupItem machinePopupItem = (MachinePopupItem)item;

                delegate.onCommandExecute(machinePopupItem.getCommand(), machinePopupItem.getMachine());
                dataProvider.setDefaultItem(item);
                button.updateTooltip();
            } else if (item instanceof GuidePopupItem) {
                delegate.onGuide(goal);
            }
        });

        button.addStyleName(resources.commandToolbarCss().toolbarButton());

        button.ensureDebugId("command_toolbar-button_" + goal.getId());

        return button;
    }

