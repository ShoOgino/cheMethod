    /**
     * Returns promise that resolves preview URL of the command which has launched
     * the process with the given {@code pid} on the specified {@code machine}.
     * Returns promise that rejects with an error if preview URL isn't available.
     */
    private Promise<PreviewUrlItem> getPreviewUrl(int pid, Machine machine) {
        return execAgentClient.getProcess(machine.getId(), pid)
                              // get command's preview URL
                              .then((Function<GetProcessResponseDto, String>)process -> {
                                  final Optional<CommandImpl> commandOptional = commandManager.getCommand(process.getName());

                                  return commandOptional.map(command -> command.getAttributes().get(COMMAND_PREVIEW_URL_ATTRIBUTE_NAME))
                                                        .orElse(null);
                              })
                              // expand macros used in preview URL
                              .thenPromise(previewUrl -> {
                                  if (!isNullOrEmpty(previewUrl)) {
                                      return macroProcessorProvider.get().expandMacros(previewUrl);
                                  }
                                  return promiseProvider.reject(new Exception(messages.previewsNotAvailableError()));
                              })
                              // compose preview URL's display name
                              .then((Function<String, PreviewUrlItem>)previewUrl -> new PreviewUrlItem(previewUrl,
                                                                                                       getPreviewUrlDisplayName(previewUrl)
                                                                                                               .orElse(previewUrl)));
    }

