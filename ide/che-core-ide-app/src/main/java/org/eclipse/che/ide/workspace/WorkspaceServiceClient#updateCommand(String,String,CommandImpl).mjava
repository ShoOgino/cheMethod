    /**
     * Updates command.
     *
     * @return a promise that resolves to the {@link WorkspaceImpl}, or rejects with an error
     */
    public Promise<WorkspaceImpl> updateCommand(final String wsId, final String commandName, final CommandImpl commandUpdate) {
        final String url = baseHttpUrl + '/' + wsId + "/command/" + URL.encodePathSegment(commandName);

        final CommandDto commandDto = dtoFactory.createDto(CommandDto.class)
                                                .withName(commandUpdate.getName())
                                                .withCommandLine(commandUpdate.getCommandLine())
                                                .withType(commandUpdate.getType())
                                                .withAttributes(commandUpdate.getAttributes());

        return asyncRequestFactory.createRequest(PUT, url, commandDto, false)
                                  .header(ACCEPT, APPLICATION_JSON)
                                  .header(CONTENT_TYPE, APPLICATION_JSON)
                                  .loader(loaderFactory.newLoader("Updating command..."))
                                  .send(dtoUnmarshallerFactory.newUnmarshaller(WorkspaceDto.class))
                                  .then((Function<WorkspaceDto, WorkspaceImpl>)WorkspaceImpl::new);
    }

