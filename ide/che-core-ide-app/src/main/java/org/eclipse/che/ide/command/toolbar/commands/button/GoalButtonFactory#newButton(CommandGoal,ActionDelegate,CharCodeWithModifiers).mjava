    /**
     * Creates new instance of the {@link GoalButton}.
     *
     * @param goal
     *         {@link CommandGoal} for displaying commands
     * @param delegate
     *         delegate for receiving events
     * @param keyBinding
     *         key binding for the button
     * @return {@link GoalButton}
     */
    public GoalButton newButton(CommandGoal goal, ActionDelegate delegate, @Nullable CharCodeWithModifiers keyBinding) {
        final GoalButtonItemsProvider itemsProvider = new GoalButtonItemsProvider(appContext, menuItemsFactory);
        final GoalButton button = new GoalButton(goal,
                                                 getIconForGoal(goal),
                                                 itemsProvider,
                                                 messages,
                                                 actionManager,
                                                 keyBindingAgent,
                                                 keyBinding);

        button.setActionHandler(item -> {
            if (item instanceof CommandItem) {
                final CommandImpl command = ((CommandItem)item).getCommand();

                delegate.onCommandExecute(command, null);
                itemsProvider.setDefaultItem(item);
                button.updateTooltip();
            } else if (item instanceof MachineItem) {
                final MachineItem machinePopupItem = (MachineItem)item;

                delegate.onCommandExecute(machinePopupItem.getCommand(), machinePopupItem.getMachine());
                itemsProvider.setDefaultItem(item);
                button.updateTooltip();
            } else if (item instanceof GuideItem) {
                delegate.onGuide(goal);
            }
        });

        button.addStyleName(resources.commandToolbarCss().toolbarButton());

        button.ensureDebugId("command_toolbar-button_" + goal.getId());

        return button;
    }

