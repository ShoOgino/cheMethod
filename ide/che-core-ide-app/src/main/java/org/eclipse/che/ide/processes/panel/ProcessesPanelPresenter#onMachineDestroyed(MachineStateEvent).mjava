  @Override
  public void onMachineDestroyed(MachineStateEvent event) {
    machines.remove(event.getMachineId());
    ProcessTreeNode destroyedMachineNode = machineNodes.get(event.getMachineId());
    if (destroyedMachineNode == null) {
      return;
    }

    rootNode.getChildren().remove(destroyedMachineNode);
    view.setProcessesData(rootNode);

    final Collection<ProcessTreeNode> children = new ArrayList<>();
    children.addAll(destroyedMachineNode.getChildren());
    for (ProcessTreeNode child : children) {
      if (TERMINAL_NODE.equals(child.getType()) && terminals.containsKey(child.getId())) {
        onCloseTerminal(child);
      } else if (COMMAND_NODE.equals(child.getType()) && consoles.containsKey(child.getId())) {
        OutputConsole console = consoles.get(child.getId());
        removeConsole(console, child, () -> {});
      }
    }

    view.hideProcessOutput(destroyedMachineNode.getId());
  }

