    private Resource newResourceFrom(final ItemReference reference) {
        final Path path = Path.valueOf(reference.getPath());

        switch (reference.getType()) {
            case "file":
                final Link link = reference.getLink(GET_CONTENT_REL);
                String vcsStatusAttribute = reference.getAttributes().get("vcs.status");
                return resourceFactory.newFileImpl(path,
                                                   link.getHref(),
                                                   this,
                                                   vcsStatusAttribute == null ? VcsStatus.NOT_MODIFIED
                                                                              : VcsStatus.from(vcsStatusAttribute));
            case "folder":
                return resourceFactory.newFolderImpl(path, this);
            case "project":
                final Optional<ProjectConfigDto> config = findProjectConfigDto(path);

                if (config.isPresent()) {
                    return resourceFactory.newProjectImpl(config.get(), this);
                } else {
                    return resourceFactory.newFolderImpl(path, this);
                }
            default:
                throw new IllegalArgumentException("Failed to recognize resource type to create.");
        }
    }

