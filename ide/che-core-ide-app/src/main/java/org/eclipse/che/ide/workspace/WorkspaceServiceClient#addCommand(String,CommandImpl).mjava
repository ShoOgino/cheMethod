  /**
   * Adds command to workspace
   *
   * @param wsId workspace ID
   * @param newCommand the new workspace command
   * @return a promise that resolves to the {@link WorkspaceImpl}, or rejects with an error
   */
  public Promise<WorkspaceImpl> addCommand(String wsId, CommandImpl newCommand) {
    final String url = baseHttpUrl + '/' + wsId + "/command";

    final CommandDto commandDto =
        dtoFactory
            .createDto(CommandDto.class)
            .withName(newCommand.getName())
            .withCommandLine(newCommand.getCommandLine())
            .withType(newCommand.getType())
            .withAttributes(newCommand.getAttributes());

    return asyncRequestFactory
        .createPostRequest(url, commandDto)
        .header(ACCEPT, APPLICATION_JSON)
        .header(CONTENT_TYPE, APPLICATION_JSON)
        .loader(loaderFactory.newLoader("Adding command..."))
        .send(dtoUnmarshallerFactory.newUnmarshaller(WorkspaceDto.class))
        .then((Function<WorkspaceDto, WorkspaceImpl>) WorkspaceImpl::new);
  }

