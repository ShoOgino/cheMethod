  /** Updates the specified {@code project} with the given {@code commands}. */
  private Promise<Void> updateProject(Project project, List<CommandImpl> commands) {
    MutableProjectConfig config = new MutableProjectConfig(project);
    Map<String, List<String>> attributes = config.getAttributes();

    List<String> attrValue = new ArrayList<>(attributes.size());
    for (CommandImpl command : commands) {
      CommandDto commandDto =
          dtoFactory
              .createDto(CommandDto.class)
              .withName(command.getName())
              .withType(command.getType())
              .withCommandLine(command.getCommandLine())
              .withAttributes(command.getAttributes());
      attrValue.add(dtoFactory.toJson(commandDto));
    }

    attributes.put(COMMANDS_ATTRIBUTE_NAME, attrValue);

    return project.update().withBody(config).send().then((Function<Project, Void>) arg -> null);
  }

