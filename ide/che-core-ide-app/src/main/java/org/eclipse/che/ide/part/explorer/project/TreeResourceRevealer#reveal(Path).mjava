    /**
     * Search node in the project explorer tree by storable path.
     *
     * @param path
     *         path to node
     * @return promise object with found node or promise error if node wasn't found
     */
    public Promise<Node> reveal(final Path path) {

        return queue.thenPromise(new Function<Void, Promise<Node>>() {
            @Override
            public Promise<Node> apply(Void ignored) throws FunctionException {
                return createFromAsyncRequest(new RequestCall<Node>() {
                    @Override
                    public void makeCall(AsyncCallback<Node> callback) {
                        reveal(path, callback);
                    }
                });
            }
        });
    }

