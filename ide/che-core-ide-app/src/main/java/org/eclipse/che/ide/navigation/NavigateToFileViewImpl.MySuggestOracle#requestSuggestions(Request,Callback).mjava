        @Override
        public void requestSuggestions(final Request request, final Callback callback) {
            delegate.onRequestSuggestions(request.getQuery(), new AsyncCallback<List<Path>>() {
                @Override
                public void onSuccess(List<Path> result) {
                    errLabel.setText("");

                    final List<SuggestOracle.Suggestion> suggestions = new ArrayList<>(result.size());
                    for (final Path item : result) {
                        suggestions.add(new SuggestOracle.Suggestion() {
                            @Override
                            public String getDisplayString() {
                                return item.lastSegment() + " (" + item.removeLastSegments(1) + ")";
                            }

                            @Override
                            public String getReplacementString() {
                                return item.toString();
                            }
                        });
                    }

                    callback.onSuggestionsReady(request, new Response(suggestions));
                }

                @Override
                public void onFailure(Throwable caught) {
                    errLabel.setText(caught.getMessage());
                    // hide previous suggestion list in case any error
                    callback.onSuggestionsReady(request, new Response(new ArrayList<Suggestion>(0)));
                }
            });
        }

