    @Inject
    public RecentFileStore(EventBus eventBus,
                           OpenRecentFilesPresenter openRecentFilesPresenter,
                           ActionManager actionManager,
                           RecentFileActionFactory recentFileActionFactory) {
        this.openRecentFilesPresenter = openRecentFilesPresenter;
        this.actionManager = actionManager;
        this.recentFileActionFactory = recentFileActionFactory;

        eventBus.addHandler(FileEvent.TYPE, event -> {
            if (event.getOperationType() == OPEN) {
                VirtualFile file = event.getFile();
                if (file instanceof File) {
                    add((File)file);
                }
            }
        });

        eventBus.addHandler(ResourceChangedEvent.getType(), event -> {
            if (event.getDelta().getKind() != REMOVED) {
                return;
            }

            final Resource resource = event.getDelta().getResource();

            if (!resource.isFile()) {
                return;
            }

            if (recentStorage.contains(resource.asFile())) {
                if (!remove(resource.asFile())) {
                    Log.warn(getClass(), "File has not been removed from recent list");
                }
            }
        });
    }

