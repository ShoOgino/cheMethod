    protected Promise<Optional<File>> getFile(final Path absolutePath) {
        final Optional<Resource> resourceOptional = store.getResource(absolutePath);

        if (resourceOptional.isPresent() && resourceOptional.get().isFile()) {
            return promises.resolve(of(resourceOptional.get().asFile()));
        }

        if (store.getResource(absolutePath.parent()).isPresent()) {
            return findResource(absolutePath, true).thenPromise(optionalFile -> {
                if (optionalFile.isPresent()) {
                    final Resource resource = optionalFile.get();
                    checkState(resource.getResourceType() == FILE, "Not a file");

                    return promises.resolve(of((File)resource));
                }

                return promises.resolve(absent());
            });
        } else {
            return findResourceForExternalOperation(absolutePath, true).thenPromise(optionalFile -> {
                if (optionalFile.isPresent()) {
                    final Resource resource = optionalFile.get();
                    checkState(resource.getResourceType() == FILE, "Not a file");

                    return promises.resolve(of((File)resource));
                }

                return promises.resolve(absent());
            });
        }
    }

