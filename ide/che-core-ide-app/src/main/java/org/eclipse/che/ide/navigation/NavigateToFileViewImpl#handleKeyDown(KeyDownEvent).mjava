  @UiHandler("fileName")
  void handleKeyDown(KeyDownEvent event) {
    switch (event.getNativeKeyCode()) {
      case KeyCodes.KEY_UP:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectPrevious();
        }
        return;

      case KeyCodes.KEY_DOWN:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectNext();
        }
        return;

      case KeyCodes.KEY_PAGEUP:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectPreviousPage();
        }
        return;

      case KeyCodes.KEY_PAGEDOWN:
        event.stopPropagation();
        event.preventDefault();
        if (list != null) {
          list.getSelectionModel().selectNextPage();
        }
        return;

      case KeyCodes.KEY_ENTER:
        event.stopPropagation();
        event.preventDefault();
        SearchResultDto selectedItem = list.getSelectionModel().getSelectedItem();
        if (selectedItem != null) {
          delegate.onFileSelected(Path.valueOf(selectedItem.getItemReference().getPath()));
        }
        return;

      case KeyCodes.KEY_ESCAPE:
        event.stopPropagation();
        event.preventDefault();
        hidePopup();
        return;
    }

    Scheduler.get()
        .scheduleDeferred((Command) () -> delegate.onFileNameChanged(fileName.getText()));
  }

