    /**
     * Start tracking workspace events and notify about changing.
     *
     * @param workspace
     *         workspace to track
     * @param callback
     *         callback which is necessary to notify that workspace component started or failed
     */
    void trackWorkspaceEvents(final WorkspaceDto workspace, final Callback<Component, Exception> callback) {
        this.callback = callback;
        this.workspaceComponent = wsComponentProvider.get();
        this.messageBus = messageBusProvider.getMessageBus();

        subscribeToWorkspaceStatusEvents(workspace);
        subscribeOnEnvironmentStatusChannel(workspace);
        subscribeOnEnvironmentOutputChannel(workspace);

        if (wsAgentLogSubscriptionHandler == null && workspace.getRuntime() != null) {
            subscribeOnWsAgentOutputChannel(workspace, getDevMachineName(workspace));
        }
    }

