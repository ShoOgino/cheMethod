  /**
   * Search node in the project explorer tree by storable path.
   *
   * @param path path to node
   * @param select select node after reveal
   * @return promise object with found node or promise error if node wasn't found
   */
  public Promise<Node> reveal(final Path path, final boolean select) {

    return queue.thenPromise(
        new Function<Void, Promise<Node>>() {
          @Override
          public Promise<Node> apply(Void ignored) throws FunctionException {
            return createFromAsyncRequest(
                new RequestCall<Node>() {
                  @Override
                  public void makeCall(AsyncCallback<Node> callback) {
                    reveal(path, select, callback);
                  }
                });
          }
        });
  }

