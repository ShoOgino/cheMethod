    @Inject
    WorkspaceEventsUnsubscriber(EventBus eventBus, AppContext appContext, SubscriptionManagerClient subscriptionManagerClient) {
        eventBus.addHandler(WorkspaceStoppedEvent.TYPE, e -> {
            Map<String, String> scope = singletonMap("workspaceId", appContext.getWorkspaceId());

            // TODO (spi ide): consider shared constants for the endpoints
            subscriptionManagerClient.unSubscribe("workspace/statuses", WORKSPACE_STATUS_CHANGED_METHOD, scope);
            subscriptionManagerClient.unSubscribe("workspace/statuses", MACHINE_STATUS_CHANGED_METHOD, scope);
            subscriptionManagerClient.unSubscribe("workspace/statuses", SERVER_STATUS_CHANGED_METHOD, scope);
            subscriptionManagerClient.unSubscribe("workspace/output", MACHINE_LOG_METHOD, scope);
            subscriptionManagerClient.unSubscribe("workspace/output", INSTALLER_LOG_METHOD, scope);
        });
    }

