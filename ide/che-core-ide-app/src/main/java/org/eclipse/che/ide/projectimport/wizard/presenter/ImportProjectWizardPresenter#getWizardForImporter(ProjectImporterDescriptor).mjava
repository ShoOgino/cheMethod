    /** Creates or returns import wizard for the specified importer. */
    private ImportWizard getWizardForImporter(@NotNull ProjectImporterDescriptor importer) {
        if (wizardsCache.containsKey(importer)) {
            return wizardsCache.get(importer);
        }

        final Optional<ImportWizardRegistrar> wizardRegistrar = wizardRegistry.getWizardRegistrar(importer.getId());
        if (!wizardRegistrar.isPresent()) {
            // should never occur
            throw new IllegalStateException("WizardRegistrar for the importer " + importer.getId() + " isn't registered.");
        }

        List<Provider<? extends WizardPage<MutableProjectConfig>>> pageProviders = wizardRegistrar.get().getWizardPages();
        final ImportWizard importWizard = createDefaultWizard();
        for (Provider<? extends WizardPage<MutableProjectConfig>> provider : pageProviders) {
            importWizard.addPage(provider.get(), 1, false);
        }

        wizardsCache.put(importer, importWizard);
        return importWizard;
    }

