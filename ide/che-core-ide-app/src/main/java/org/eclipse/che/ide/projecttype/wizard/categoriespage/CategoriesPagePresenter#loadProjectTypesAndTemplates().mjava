    private void loadProjectTypesAndTemplates() {
        List<ProjectTypeDto> projectTypes = projectTypeRegistry.getProjectTypes();
        Map<String, Set<ProjectTypeDto>> typesByCategory = new HashMap<>();
        Map<String, Set<ProjectTemplateDescriptor>> templatesByCategory = new HashMap<>();
        for (ProjectTypeDto type : projectTypes) {
            if (wizardRegistry.getWizardRegistrar(type.getId()).isPresent()) {
                final Optional<String> category = wizardRegistry.getWizardCategory(type.getId());
                if (category.isPresent()) {
                    if (!typesByCategory.containsKey(category.get())) {
                        typesByCategory.put(category.get(), new HashSet<ProjectTypeDto>());
                    }
                    typesByCategory.get(category.get()).add(type);
                }
            }

            List<ProjectTemplateDescriptor> templateDescriptors = projectTemplateRegistry.getTemplates(type.getId());
            for (ProjectTemplateDescriptor template : templateDescriptors) {
                final String category = template.getCategory() == null ? DEFAULT_TEMPLATE_CATEGORY : template.getCategory();
                if (!templatesByCategory.containsKey(category)) {
                    templatesByCategory.put(category, new HashSet<ProjectTemplateDescriptor>());
                }
                templatesByCategory.get(category).add(template);
            }
        }

        view.setProjectTypes(projectTypes);
        view.setCategories(typesByCategory, templatesByCategory);
    }

