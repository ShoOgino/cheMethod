    @Override
    protected void configure() {
        GinMapBinder<String, Perspective> mapBinder = GinMapBinder.newMapBinder(binder(), String.class, Perspective.class);
        mapBinder.addBinding(PROJECT_PERSPECTIVE_ID).to(ProjectPerspective.class);

        GinMapBinder.newMapBinder(binder(), String.class, FqnProvider.class);

        install(new GinFactoryModuleBuilder().implement(WorkBenchPartController.class,
                                                        WorkBenchPartControllerImpl.class).build(WorkBenchControllerFactory.class));
        // generic bindings
        bind(EventBus.class).to(SimpleEventBus.class).in(Singleton.class);
        bind(Resources.class).in(Singleton.class);
        bind(String.class).annotatedWith(RestContext.class).toProvider(RestContextProvider.class).in(Singleton.class);
        bind(ExtensionRegistry.class).in(Singleton.class);
        bind(StandardComponentInitializer.class).in(Singleton.class);
        bind(ClipboardButtonBuilder.class).to(ClipboardButtonBuilderImpl.class);

        install(new GinFactoryModuleBuilder().build(ResourceManager.ResourceFactory.class));
        install(new GinFactoryModuleBuilder().build(ResourceManager.ResourceManagerFactory.class));
        install(new GinFactoryModuleBuilder().build(ResourceNode.NodeFactory.class));

        bind(AppContext.class).to(AppContextImpl.class);

        install(new GinFactoryModuleBuilder().build(LoaderFactory.class));
        install(new GinFactoryModuleBuilder().implement(PartStackView.class, PartStackViewImpl.class).build(PartStackViewFactory.class));
        install(new GinFactoryModuleBuilder().implement(PartStack.class, PartStackPresenter.class).build(PartStackPresenterFactory.class));

        bind(PreferencesManager.class).to(PreferencesManagerImpl.class);
        GinMultibinder.newSetBinder(binder(), PreferencesManager.class).addBinding().to(PreferencesManagerImpl.class);

        bind(NotificationManager.class).to(NotificationManagerImpl.class).in(Singleton.class);
        bind(ThemeAgent.class).to(ThemeAgentImpl.class).in(Singleton.class);
        bind(FileTypeRegistry.class).to(FileTypeRegistryImpl.class).in(Singleton.class);

        GinMultibinder.newSetBinder(binder(), OAuth2Authenticator.class).addBinding().to(DefaultOAuthAuthenticatorImpl.class);

        configureComponents();
        configureProjectWizard();
        configureImportWizard();
        configurePlatformApiGwtClients();
        configureApiBinding();
        configureCoreUI();
        configureEditorAPI();
        configureProjectTree();

        configureJsonRpc();
        configureWebSocket();
        configureClientServerEventService();

        GinMultibinder<PersistenceComponent> persistenceComponentsMultibinder =
                GinMultibinder.newSetBinder(binder(), PersistenceComponent.class);
        persistenceComponentsMultibinder.addBinding().to(ShowHiddenFilesPersistenceComponent.class);
        persistenceComponentsMultibinder.addBinding().to(OpenedFilesPersistenceComponent.class);
        persistenceComponentsMultibinder.addBinding().to(RevealNodesPersistenceComponent.class);

        install(new GinFactoryModuleBuilder().implement(RecipeWidget.class, RecipeWidgetImpl.class)
                                             .implement(WorkspaceWidget.class, WorkspaceWidgetImpl.class)
                                             .build(WorkspaceWidgetFactory.class));
        bind(StartUpActionsProcessor.class).in(Singleton.class);

        bind(ClipboardManager.class).to(ClipboardManagerImpl.class);

        GinMultibinder.newSetBinder(binder(), ResourceInterceptor.class).addBinding().to(ResourceInterceptor.NoOpInterceptor.class);
    }

