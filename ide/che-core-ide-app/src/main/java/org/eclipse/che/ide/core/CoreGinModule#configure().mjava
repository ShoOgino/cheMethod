  @Override
  protected void configure() {
    install(new JsonRpcModule());
    install(new WebSocketModule());
    install(new ClientServerEventModule());

    install(new DtoModule());

    install(new ThemeApiModule());
    install(new UiModule());
    install(new ClipboardModule());

    bind(AppContextImpl.class).asEagerSingleton();

    install(new EditorApiModule());
    install(new EditorPreferencesModule());
    install(new NotificationApiModule());
    install(new FileTypeApiModule());
    install(new ResourceApiModule());
    install(new ActionApiModule());
    install(new PartApiModule());
    install(new DebugApiModule());
    install(new PreferencesApiModule());
    install(new PersistenceApiModule());
    install(new MacroApiModule());
    install(new MachineApiModule());
    install(new CommandApiModule());
    install(new ConsoleGinModule());
    install(new ProcessesGinModule());
    install(new ProjectApiModule());
    install(new OAuthApiModule());
    install(new WorkspaceEventsModule());
    install(new WorkspaceApiModule());
    install(new FactoryGinModule());

    // configure miscellaneous core components
    bind(StandardComponentInitializer.class).in(Singleton.class);

    bind(TerminalInitializer.class).in(Singleton.class);

    bind(DynaProvider.class).to(DynaProviderImpl.class);

    GinMapBinder.newMapBinder(binder(), String.class, FqnProvider.class);

    bind(EventBus.class).to(SimpleEventBus.class).in(Singleton.class);

    install(new GinFactoryModuleBuilder().build(LoaderFactory.class));
    install(new GinFactoryModuleBuilder().build(PopupLoaderFactory.class));

    bind(ExtensionRegistry.class).in(Singleton.class);

    bind(AppContext.class).to(AppContextImpl.class);

    install(new GinFactoryModuleBuilder().build(FindResultNodeFactory.class));
    install(new GinFactoryModuleBuilder().build(TerminalFactory.class));

    // clients for the REST services
    bind(SshServiceClient.class).to(SshServiceClientImpl.class).in(Singleton.class);

    // IDE agents
    bind(SelectionAgent.class).to(SelectionAgentImpl.class).asEagerSingleton();
    bind(KeyBindingAgent.class).to(KeyBindingManager.class).in(Singleton.class);
    bind(WorkspaceAgent.class).to(WorkspacePresenter.class).in(Singleton.class);

    // Exec agent
    bind(ExecAgentCommandManager.class).to(JsonRpcExecAgentCommandManager.class);
    bind(ExecAgentEventManager.class).to(JsonRpcExecAgentEventManager.class);
    bind(ConnectedEventHandler.class).asEagerSingleton();

    bind(AskCredentialsDialog.class).to(AskCredentialsDialogImpl.class);
    bind(ProductInfoDataProvider.class).to(ProductInfoDataProviderImpl.class);
    bind(WsAgentURLModifier.class).to(CheWsAgentLinksModifier.class);
  }

