  private <T extends DtoWithPid> void subscribe(
      String endpointId, ExecAgentConsumer<T> promise, T arg) {
    final int pid = arg.getPid();

    if (promise.hasProcessDiedEventConsumer()) {
      Consumer<ProcessDiedEventDto> consumer = promise.getProcessDiedEventDtoConsumer();
      eventManager.registerProcessDiedConsumer(endpointId, pid, consumer);
    }

    if (promise.hasProcessStartedEventConsumer()) {
      Consumer<ProcessStartedEventDto> consumer = promise.getProcessStartedEventDtoConsumer();
      eventManager.registerProcessStartedConsumer(endpointId, pid, consumer);
    }

    if (promise.hasProcessStdOutEventConsumer()) {
      Consumer<ProcessStdOutEventDto> consumer = promise.getProcessStdOutEventDtoConsumer();
      eventManager.registerProcessStdOutConsumer(endpointId, pid, consumer);
    }

    if (promise.hasProcessStdErrEventConsumer()) {
      Consumer<ProcessStdErrEventDto> consumer = promise.getProcessStdErrEventDtoConsumer();
      eventManager.registerProcessStdErrConsumer(endpointId, pid, consumer);
    }

    if (promise.hasOperation()) {
      promise.getConsumer().accept(arg);
    }
  }

