  private Promise<Optional<Resource>> doFindResource(Path path) {
    return ps.getTree(path.parent(), 1, true)
        .thenPromise(
            treeElement -> {
              Resource resource = null;

              for (TreeElement nodeElement : treeElement.getChildren()) {
                ItemReference reference = nodeElement.getNode();
                Resource tempResource = newResourceFrom(reference);
                store.register(tempResource);

                if (tempResource.isProject()) {
                  inspectProject(tempResource.asProject());
                }

                if (tempResource.getLocation().equals(path)) {
                  resource = tempResource;
                  eventBus.fireEvent(
                      new ResourceChangedEvent(new ResourceDeltaImpl(resource, UPDATED)));
                }
              }

              return promises.resolve(Optional.fromNullable(resource));
            })
        .catchErrorPromise(error -> promises.resolve(absent()));
  }

