  private void onWorkspaceStarting(final String workspaceId) {
    // TODO timer is a workaround. Is needed because for some reason after receiving of event
    // workspace starting
    // get workspace event should contain runtime but it doesn't
    new Timer() {
      @Override
      public void run() {
        workspaceServiceClient
            .getWorkspace(workspaceId)
            .then(
                new Operation<WorkspaceDto>() {
                  @Override
                  public void apply(WorkspaceDto workspace) throws OperationException {
                    if (appContext.getActiveRuntime() != null
                        && appContext.getDevMachine() != null) {
                      Operation<PromiseError> failedWorkspaceGetOperation =
                          it ->
                              Log.error(
                                  WorkspaceEventsHandler.this.getClass(),
                                  "Tried to subscribe to environment status events, but got error"
                                      + ": "
                                      + it.getMessage());

                      Operation<WorkspaceDto> successfulWorkspaceGetOperation = it -> {};

                      workspaceServiceClient
                          .getWorkspace(browserAddress.getWorkspaceKey())
                          .then(successfulWorkspaceGetOperation)
                          .catchError(failedWorkspaceGetOperation);
                    }

                    appContext.setWorkspace(workspace);

                    loader.show(LoaderPresenter.Phase.STARTING_WORKSPACE_RUNTIME);
                    eventBus.fireEvent(new WorkspaceStartingEvent(workspace));
                  }
                });
      }
    }.schedule(1000);
  }

