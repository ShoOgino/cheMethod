  @Inject
  public TerminalInitializer(
      final TerminalResources terminalResources,
      final EventBus eventBus,
      final PerspectiveManager perspectiveManager,
      final AppContext appContext,
      final TerminalInitializePromiseHolder terminalModule,
      final RequireJsLoader requireJsLoader) {
    this.perspectiveManager = perspectiveManager;
    terminalResources.getTerminalStyle().ensureInjected();

    eventBus.addHandler(WorkspaceStartingEvent.TYPE, event -> maximizeTerminal());
    eventBus.addHandler(WorkspaceRunningEvent.TYPE, event -> restoreTerminal());
    eventBus.addHandler(WorkspaceStoppedEvent.TYPE, event -> maximizeTerminal());

    eventBus.addHandler(
        BasicIDEInitializedEvent.TYPE,
        event -> {
          if (RUNNING != appContext.getWorkspace().getStatus()) {
            maximizeTerminal();
          }
        });

    Promise<Void> termInitPromise =
        AsyncPromiseHelper.createFromAsyncRequest(
            callback -> injectTerminal(requireJsLoader, callback));
    terminalModule.setInitializerPromise(termInitPromise);
  }

