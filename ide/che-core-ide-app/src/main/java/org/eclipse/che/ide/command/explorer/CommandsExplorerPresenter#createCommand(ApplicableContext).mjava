    /** Returns an operation which creates a command with the given context. */
    private Operation<CommandType> createCommand(ApplicableContext context) {
        return selectedCommandType -> {
            final CommandGoal selectedGoal = view.get().getSelectedGoal();

            if (selectedGoal == null) {
                return;
            }

            commandManager.createCommand(selectedGoal.getId(), selectedCommandType.getId(), context)
                          .then(command -> {
                              refreshViewAndSelectCommand(command);
                              editorAgent.openEditor(nodeFactory.newCommandFileNode(command));
                          })
                          .catchError(showErrorNotification(messages.unableCreate()));
        };
    }

