    @Inject
    public CommandsExplorerViewImpl(Resources coreResources,
                                    ExplorerMessages messages,
                                    CommandResources resources,
                                    NodeFactory nodeFactory) {
        super(coreResources);

        this.nodeFactory = nodeFactory;
        commandNodes = new HashMap<>();

        setTitle(messages.viewTitle());

        tree = new Tree(new NodeStorage(), new NodeLoader());
        tree.ensureDebugId("commands-explorer");

        treeRenderer = new CommandsTreeRenderer(tree.getTreeStyles(), resources, delegate);

        tree.setPresentationRenderer(treeRenderer);
        tree.getSelectionModel().setSelectionMode(SINGLE);

        tree.getSelectionModel().addSelectionHandler(event -> {
            for (Node node : tree.getNodeStorage().getAll()) {
                final Element nodeContainerElement = tree.getNodeDescriptor(node).getNodeContainerElement();

                if (nodeContainerElement != null) {
                    nodeContainerElement.removeAttribute("selected");
                }
            }

            tree.getNodeDescriptor(event.getSelectedItem())
                .getNodeContainerElement()
                .setAttribute("selected", "selected");
        });

        setContentWidget(UI_BINDER.createAndBindUi(this));
    }

