  @Inject
  public HotKeysDialogViewImpl(
      KeyMapViewImplUiBinder uiBinder,
      CoreLocalizationConstant locale,
      org.eclipse.che.ide.Resources res,
      HotKeyResources hotKeyResources) {
    hotKeyResources.css().ensureInjected();

    this.hotKeyResources = hotKeyResources;

    this.setTitle(locale.keyBindingsDialogTitle());
    this.setWidget(uiBinder.createAndBindUi(this));

    saveButton =
        createButton(
            locale.save(),
            "keybindings-saveButton-btn",
            new ClickHandler() {
              @Override
              public void onClick(ClickEvent clickEvent) {
                delegate.onSaveClicked();
              }
            });
    addButtonToFooter(saveButton);
    saveButton.addStyleName(resources.windowCss().primaryButton());

    closeButton =
        createButton(
            locale.close(),
            "keybindings-closeButton-btn",
            new ClickHandler() {
              @Override
              public void onClick(ClickEvent event) {
                delegate.onCloseClicked();
              }
            });
    addButtonToFooter(closeButton);

    printButton =
        createButton(
            locale.print(),
            "keybindings-printButton-btn",
            new ClickHandler() {
              @Override
              public void onClick(ClickEvent clickEvent) {
                delegate.onPrintClicked();
              }
            });
    addButtonToFooter(printButton);

    list = new CategoriesList(res);
    categoriesList = new ArrayList<>();
    category.add(list);
    filterInput.getElement().setAttribute("placeholder", "Search");
    selectionListBox.addChangeHandler(
        new ChangeHandler() {
          @Override
          public void onChange(ChangeEvent changeEvent) {
            delegate.onSchemeSelectionChanged();
          }
        });

    // Override DockLayoutPanel Overflow to correctly display ListBox
    selectionPanel.getElement().getParentElement().getStyle().setOverflow(Style.Overflow.VISIBLE);
  }

