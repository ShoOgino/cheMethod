        // TODO: move to the separate component that should listen appropriate events
        private void notify(WorkspaceStatusEvent event) {
            switch (event.getEventType()) {
                case STARTING:
                    wsStatusNotification.setSuccess(STARTING_WORKSPACE_RUNTIME);
                    break;
                case RUNNING:
                    startWorkspaceNotificationProvider.hide();
                    wsStatusNotification.setSuccess(STARTING_WORKSPACE_RUNTIME);
                    break;
                case STOPPING:
                    wsStatusNotification.show(STOPPING_WORKSPACE);
                    break;
                case STOPPED:
                    wsStatusNotification.setSuccess(STOPPING_WORKSPACE);
                    startWorkspaceNotificationProvider.show();
                    break;
                case ERROR:
                    notificationManagerProvider.notify(messages.workspaceStartFailed(), FAIL, FLOAT_MODE);
                    startWorkspaceNotificationProvider.show();
                    break;
                case SNAPSHOT_CREATING:
                    wsStatusNotification.show(CREATING_WORKSPACE_SNAPSHOT);
                    snapshotNotifierProvider.creationStarted();
                    break;
                case SNAPSHOT_CREATED:
                    wsStatusNotification.setSuccess(CREATING_WORKSPACE_SNAPSHOT);
                    snapshotNotifierProvider.successfullyCreated();
                    break;
                case SNAPSHOT_CREATION_ERROR:
                    wsStatusNotification.setError(CREATING_WORKSPACE_SNAPSHOT);
                    snapshotNotifierProvider.creationError("Snapshot creation error: " + event.getError());
                    break;
                default:
                    break;
            }
        }

