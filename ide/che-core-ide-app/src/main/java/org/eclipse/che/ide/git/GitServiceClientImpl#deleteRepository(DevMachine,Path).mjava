    @Override
    public Promise<Void> deleteRepository(DevMachine devMachine, final Path project) {
        return createFromAsyncRequest(new RequestCall<Void>() {
            @Override
            public void makeCall(final AsyncCallback<Void> callback) {
                String url = DELETE_REPOSITORY + "?projectPath=" + project.toString();
                final Message message = new MessageBuilder(GET, url).header(CONTENTTYPE, APPLICATION_JSON)
                                                                    .header(ACCEPT, TEXT_PLAIN)
                                                                    .build();

                sendMessageToWS(message, new RequestCallback<Void>() {
                    @Override
                    protected void onSuccess(Void result) {
                        callback.onSuccess(result);
                    }

                    @Override
                    protected void onFailure(Throwable exception) {
                        callback.onFailure(exception);
                    }
                });
            }
        });
    }

