    @Override
    public void updateCategories(boolean includeTemplates) {
        List<Category<?>> categories = new ArrayList<>();

        for (Entry<String, Set<ProjectTypeDto>> entry : typesByCategory.entrySet()) {
            final Set<ProjectTypeDto> projectTypes = entry.getValue();

            List<ProjectTypeDto> projectTypeDescriptors = new ArrayList<>();
            projectTypeDescriptors.addAll(projectTypes);
            Collections.sort(projectTypeDescriptors, new Comparator<ProjectTypeDto>() {
                @Override
                public int compare(ProjectTypeDto o1, ProjectTypeDto o2) {
                    return o1.getDisplayName().compareToIgnoreCase(o2.getDisplayName());
                }
            });
            categories.add(new Category<>(entry.getKey(),
                                          projectTypeCategoryRenderer,
                                          projectTypeDescriptors,
                                          projectTypeCategoryEventDelegate));
        }

        // Sort project type categories only. Project templates categories should be in the end.
        Collections.sort(categories, new Comparator<Category>() {
            @Override
            public int compare(Category o1, Category o2) {
                return o1.getTitle().compareToIgnoreCase(o2.getTitle());
            }
        });

        if (includeTemplates) {
            for (Entry<String, Set<ProjectTemplateDescriptor>> entry : templatesByCategory.entrySet()) {
                final Set<ProjectTemplateDescriptor> projectTemplates = entry.getValue();

                List<ProjectTemplateDescriptor> templateDescriptors = new ArrayList<>();
                templateDescriptors.addAll(projectTemplates);
                Collections.sort(templateDescriptors, new Comparator<ProjectTemplateDescriptor>() {
                    @Override
                    public int compare(ProjectTemplateDescriptor o1, ProjectTemplateDescriptor o2) {
                        return o1.getDisplayName().compareToIgnoreCase(o2.getDisplayName());
                    }
                });
                categories.add(new Category<>(entry.getKey(),
                                              templateCategoryRenderer,
                                              templateDescriptors,
                                              templateCategoryEventDelegate));
            }
        }

        categoriesList.render(categories, true);
    }

