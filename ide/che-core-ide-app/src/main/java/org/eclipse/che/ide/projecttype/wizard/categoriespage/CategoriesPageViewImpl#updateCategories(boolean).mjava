  @Override
  public void updateCategories(boolean includeTemplates) {
    List<Category<?>> categories = new ArrayList<>();

    for (Map.Entry<String, Set<ProjectTypeDto>> entry : typesByCategory.entrySet()) {
      final Set<ProjectTypeDto> projectTypes = entry.getValue();

      List<ProjectTypeDto> projectTypeDescriptors = new ArrayList<>();
      projectTypeDescriptors.addAll(projectTypes);
      Collections.sort(projectTypeDescriptors, projectTypesComparator);
      categories.add(
          new Category<>(
              entry.getKey(),
              projectTypeCategoryRenderer,
              projectTypeDescriptors,
              projectTypeCategoryEventDelegate));
    }

    // Sort project type categories only. Project templates categories should be in the end.
    Collections.sort(categories, categoriesComparator);

    if (includeTemplates) {
      for (Map.Entry<String, Set<ProjectTemplateDescriptor>> entry :
          templatesByCategory.entrySet()) {
        final Set<ProjectTemplateDescriptor> projectTemplates = entry.getValue();

        List<ProjectTemplateDescriptor> templateDescriptors = new ArrayList<>();
        templateDescriptors.addAll(projectTemplates);
        Collections.sort(templateDescriptors, templatesComparator);
        categories.add(
            new Category<>(
                entry.getKey(),
                templateCategoryRenderer,
                templateDescriptors,
                templateCategoryEventDelegate));
      }
    }

    categoriesList.render(categories, true);
  }

