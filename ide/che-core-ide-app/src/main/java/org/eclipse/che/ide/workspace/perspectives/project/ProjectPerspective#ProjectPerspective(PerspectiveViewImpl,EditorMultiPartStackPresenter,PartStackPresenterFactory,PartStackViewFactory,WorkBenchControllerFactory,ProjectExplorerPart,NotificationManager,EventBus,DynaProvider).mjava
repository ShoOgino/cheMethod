    @Inject
    public ProjectPerspective(PerspectiveViewImpl view,
                              EditorMultiPartStackPresenter editorMultiPartStackPresenter,
                              PartStackPresenterFactory stackPresenterFactory,
                              PartStackViewFactory partViewFactory,
                              WorkBenchControllerFactory controllerFactory,
                              ProjectExplorerPart projectExplorerPart,
                              NotificationManager notificationManager,
                              EventBus eventBus,
                              DynaProvider dynaProvider) {
        super(PROJECT_PERSPECTIVE_ID, view, stackPresenterFactory, partViewFactory, controllerFactory, eventBus, dynaProvider);

        notificationManager.addRule(PROJECT_PERSPECTIVE_ID);

        partStacks.put(EDITING, editorMultiPartStackPresenter);

        addPart(notificationManager, INFORMATION);
        addPart(projectExplorerPart, NAVIGATION);
                PartStack navigatorPanel = getPartStack(NAVIGATION);
        PartStack editorPanel = getPartStack(EDITING);
        PartStack toolPanel = getPartStack(TOOLING);
        PartStack infoPanel = getPartStack(INFORMATION);

        if (navigatorPanel == null || editorPanel == null || toolPanel == null || infoPanel == null) {
            return;
        }

        infoPanel.updateStack();

        navigatorPanel.go(view.getNavigationPanel());
        editorPanel.go(view.getEditorPanel());
        toolPanel.go(view.getToolPanel());
        infoPanel.go(view.getInformationPanel());
        openActivePart(NAVIGATION);
    }

