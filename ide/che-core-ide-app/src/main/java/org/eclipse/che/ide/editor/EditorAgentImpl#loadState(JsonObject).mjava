  @Override
  @SuppressWarnings("unchecked")
  public Promise<Void> loadState(@NotNull final JsonObject state) {
    if (state.hasKey("FILES")) {
      JsonObject files = state.getObject("FILES");
      EditorPartStack partStack = editorMultiPartStack.createRootPartStack();
      final Map<EditorPartPresenter, EditorPartStack> activeEditors = new HashMap<>();
      List<Promise<Void>> restore = restore(files, partStack, activeEditors);
      Promise<ArrayOf<?>> promise =
          promiseProvider.all2(restore.toArray(new Promise[restore.size()]));
      promise.then(
          (Operation)
              ignored -> {
                String activeFile = "";
                if (state.hasKey("ACTIVE_EDITOR")) {
                  activeFile = state.getString("ACTIVE_EDITOR");
                }
                EditorPartPresenter activeEditorPart = null;
                for (Map.Entry<EditorPartPresenter, EditorPartStack> entry :
                    activeEditors.entrySet()) {
                  entry.getValue().setActivePart(entry.getKey());
                  if (activeFile.equals(
                      entry.getKey().getEditorInput().getFile().getLocation().toString())) {
                    activeEditorPart = entry.getKey();
                  }
                }
                workspaceAgent.setActivePart(activeEditorPart);
              });

      return promise.thenPromise(ignored -> promiseProvider.resolve(null));
    }

    return promiseProvider.resolve(null);
  }

