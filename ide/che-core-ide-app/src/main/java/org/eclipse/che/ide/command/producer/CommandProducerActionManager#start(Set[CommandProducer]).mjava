    @Inject(optional = true)
    private void start(Set<CommandProducer> commandProducers) {
        this.commandProducers.addAll(commandProducers);

        commandActionsPopUpGroup = new DefaultActionGroup(messages.actionCommandsTitle(), true, actionManager);
        actionManager.registerAction("commandActionsPopUpGroup", commandActionsPopUpGroup);
        commandActionsPopUpGroup.getTemplatePresentation().setSVGResource(resources.compile());
        commandActionsPopUpGroup.getTemplatePresentation().setDescription(messages.actionCommandsDescription());

        DefaultActionGroup mainContextMenu = (DefaultActionGroup)actionManager.getAction(GROUP_MAIN_CONTEXT_MENU);
        mainContextMenu.add(commandActionsPopUpGroup);

        DefaultActionGroup editorTabContextMenu = (DefaultActionGroup)actionManager.getAction(GROUP_EDITOR_TAB_CONTEXT_MENU);
        editorTabContextMenu.add(commandActionsPopUpGroup);

        // add 'Commands' pop-up group to the main toolbar
        DefaultActionGroup commandActionsToolbarGroup = new CommandActionsToolbarGroup(actionManager);
        commandActionsToolbarGroup.add(commandActionsPopUpGroup);
        DefaultActionGroup mainToolbarGroup = (DefaultActionGroup)actionManager.getAction(GROUP_MAIN_TOOLBAR);
        mainToolbarGroup.add(commandActionsToolbarGroup, new Constraints(AFTER, "changeResourceGroup"));
    }

