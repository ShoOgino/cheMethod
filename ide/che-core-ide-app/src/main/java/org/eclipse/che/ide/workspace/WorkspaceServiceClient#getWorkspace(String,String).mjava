    /**
     * Gets workspace by namespace and name
     *
     * @param namespace
     *         namespace
     * @param workspaceName
     *         workspace name
     * @return a promise that resolves to the {@link WorkspaceImpl}, or rejects with an error
     */
    public Promise<WorkspaceImpl> getWorkspace(@NotNull final String namespace, @NotNull final String workspaceName) {
        final String url = baseHttpUrl + '/' + namespace + "/" + workspaceName;
        return asyncRequestFactory.createGetRequest(url)
                                  .header(ACCEPT, APPLICATION_JSON)
                                  .loader(loaderFactory.newLoader("Getting info about workspace..."))
                                  .send(dtoUnmarshallerFactory.newUnmarshaller(WorkspaceDto.class))
                                  .then((Function<WorkspaceDto, WorkspaceImpl>)WorkspaceImpl::new);
    }

