  @Override
  public void onLineChange(
      final VirtualFile file, final int firstLine, final int linesAdded, final int linesRemoved) {

    final List<Breakpoint> fileBreakpoints =
        breakpointStorage.getByPath(file.getLocation().toString());
    final int delta = linesAdded - linesRemoved;

    if (fileBreakpoints != null) {
      LOG.fine("Change in file with breakpoints " + file.getLocation().toString());

      final List<Breakpoint> toRemove = new ArrayList<>();
      final List<Breakpoint> toAdd = new ArrayList<>();

      for (final Breakpoint breakpoint : fileBreakpoints) {
        final int lineNumber = breakpoint.getLocation().getLineNumber();

        // before any change
        if (firstLine > lineNumber) {
          continue;
        }

        // in the middle
        if (firstLine + Math.abs(delta) > lineNumber && lineNumber >= firstLine) {
          toRemove.add(breakpoint);
          toAdd.add(breakpoint);

        } else {
          Location currentLocation = breakpoint.getLocation();
          Location newLocation =
              new LocationImpl(
                  currentLocation.getTarget(),
                  currentLocation.getLineNumber() + delta,
                  currentLocation.isExternalResource(),
                  currentLocation.getExternalResourceId(),
                  currentLocation.getResourceProjectPath(),
                  currentLocation.getMethod(),
                  currentLocation.getThreadId());

          toRemove.add(breakpoint);
          toAdd.add(
              new BreakpointImpl(newLocation, breakpoint.isEnabled(), breakpoint.getCondition()));
        }
      }

      for (final Breakpoint breakpoint : toRemove) {
        deleteBreakpoint(file, breakpoint);
      }

      for (final Breakpoint breakpoint : toAdd) {
        addBreakpoint(file, breakpoint);
      }
    }
  }

