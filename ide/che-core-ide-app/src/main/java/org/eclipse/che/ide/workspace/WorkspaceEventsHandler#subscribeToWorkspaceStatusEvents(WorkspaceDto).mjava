    private void subscribeToWorkspaceStatusEvents(final WorkspaceDto workspace) {
        final Link workspaceEventsLink = workspace.getLink(LINK_REL_GET_WORKSPACE_EVENTS_CHANNEL);
        if (workspaceEventsLink == null) {
            //should never be
            notificationManager.notify(locale.workspaceSubscribeOnEventsFailed(), FAIL, EMERGE_MODE);
            Log.error(getClass(),
                      "Link " + LINK_REL_GET_WORKSPACE_EVENTS_CHANNEL + " not found in workspace links. So events will be not handle");
            return;
        }
        workspaceStatusChannel = workspaceEventsLink.getParameter("channel").getDefaultValue();
        if (isNullOrEmpty(workspaceStatusChannel)) {
            //should never be
            notificationManager.notify(locale.workspaceSubscribeOnEventsFailed(), FAIL, EMERGE_MODE);
            Log.error(getClass(), "Channel for handling Workspace events not provide. So events will be not handle");
            return;
        }

        try {
            workspaceStatusSubscriptionHandler = new WorkspaceStatusSubscriptionHandler(workspace);
            messageBus.subscribe(workspaceStatusChannel, workspaceStatusSubscriptionHandler);
        } catch (WebSocketException exception) {
            Log.error(getClass(), exception);
        }
    }

