    @Inject
    public CommandsExplorerPresenter(CommandsExplorerView view,
                                     CommandResources commandResources,
                                     CommandManager commandManager,
                                     NotificationManager notificationManager,
                                     CommandTypeChooser commandTypeChooser,
                                     ExplorerMessages messages,
                                     RefreshViewTask refreshViewTask,
                                     DialogFactory dialogFactory,
                                     NodeFactory nodeFactory,
                                     Provider<EditorAgent> editorAgentProvider,
                                     AppContext appContext,
                                     EventBus eventBus) {
        this.view = view;
        this.resources = commandResources;
        this.commandManager = commandManager;
        this.notificationManager = notificationManager;
        this.commandTypeChooser = commandTypeChooser;
        this.messages = messages;
        this.refreshViewTask = refreshViewTask;
        this.dialogFactory = dialogFactory;
        this.nodeFactory = nodeFactory;
        this.editorAgentProvider = editorAgentProvider;
        this.appContext = appContext;

        view.setDelegate(this);

        eventBus.addHandler(CommandAddedEvent.getType(), e -> refreshViewAndSelectCommand(e.getCommand()));
        eventBus.addHandler(CommandRemovedEvent.getType(), e -> refreshView());
        eventBus.addHandler(CommandUpdatedEvent.getType(), e -> refreshView());
        eventBus.addHandler(CommandsLoadedEvent.getType(), e -> refreshView());
    }

