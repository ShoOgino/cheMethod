  /** {@inheritDoc} */
  @Override
  public boolean register(Resource resource) {
    checkArgument(resource != null, "Null resource occurred");

    final Path parent =
        resource.getLocation().segmentCount() == 1 ? Path.ROOT : resource.getLocation().parent();

    if (!memoryCache.containsKey(parent)) {
      memoryCache.put(parent, new Resource[] {resource});

      intercept(resource);

      return true;
    } else {
      Resource[] container = memoryCache.get(parent);

      final int index = binarySearch(container, resource, NAME_COMPARATOR);

      if (index >= 0) { //update existing resource with new one
        container[index] = resource;

        intercept(resource);

        return false;
      } else { //such resource doesn't exists, then simply add it
        final int posIndex = -index - 1; //negate inverted index into positive one
        final int size = container.length;
        final Resource[] tmpContainer = copyOf(container, size + 1);
        arraycopy(
            tmpContainer,
            posIndex,
            tmpContainer,
            posIndex + 1,
            size - posIndex); //prepare cell to insert
        tmpContainer[posIndex] = resource;
        container = tmpContainer;

        memoryCache.put(parent, container);

        intercept(resource);

        return true;
      }
    }
  }

