  @Override
  protected void configure() {
    bind(ProjectTreeNotificationsSubscriber.class).asEagerSingleton();
    bind(ProjectTreeStateNotificationOperation.class).asEagerSingleton();

    bind(ProjectTypeRegistry.class).to(ProjectTypeRegistryImpl.class).in(Singleton.class);
    bind(ProjectTypeRegistryImpl.class).asEagerSingleton();

    bind(ProjectTemplateRegistry.class).to(ProjectTemplateRegistryImpl.class).in(Singleton.class);
    bind(ProjectTemplateRegistryImpl.class).asEagerSingleton();

    // project wizard
    GinMultibinder.newSetBinder(binder(), ProjectWizardRegistrar.class)
        .addBinding()
        .to(BlankProjectWizardRegistrar.class);

    install(new GinFactoryModuleBuilder().build(ProjectWizardFactory.class));

    bind(PreSelectedProjectTypeManager.class)
        .to(PreSelectedProjectTypeManagerImpl.class)
        .in(Singleton.class);

    bind(ResolvingProjectStateHolderRegistry.class)
        .to(ResolvingProjectStateHolderRegistryImpl.class);

    // project import
    bind(InitialProjectImporter.class).asEagerSingleton();
    GinMultibinder.newSetBinder(binder(), ImportWizardRegistrar.class)
        .addBinding()
        .to(ZipImportWizardRegistrar.class);

    install(new GinFactoryModuleBuilder().build(ImportWizardFactory.class));

    bind(ProjectNotificationSubscriber.class)
        .to(ProjectNotificationSubscriberImpl.class)
        .in(Singleton.class);
    install(
        new GinFactoryModuleBuilder()
            .implement(
                ProjectNotificationSubscriber.class, ProjectImportOutputJsonRpcNotifier.class)
            .build(ImportProjectNotificationSubscriberFactory.class));

    bind(ProjectImportNotificationSubscriber.class).asEagerSingleton();
  }

