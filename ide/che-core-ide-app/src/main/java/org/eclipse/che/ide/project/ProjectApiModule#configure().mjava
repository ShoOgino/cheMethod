    @Override
    protected void configure() {
        bind(ProjectTypeRegistry.class).to(ProjectTypeRegistryImpl.class).in(Singleton.class);
        bind(ProjectTemplateRegistry.class).to(ProjectTemplateRegistryImpl.class).in(Singleton.class);

        bind(ProjectTemplateRegistryImpl.class).asEagerSingleton();
        bind(ProjectTypeRegistryImpl.class).asEagerSingleton();

        // project wizard
        GinMultibinder.newSetBinder(binder(), ProjectWizardRegistrar.class).addBinding().to(BlankProjectWizardRegistrar.class);

        install(new GinFactoryModuleBuilder().build(ProjectWizardFactory.class));

        bind(PreSelectedProjectTypeManager.class).to(PreSelectedProjectTypeManagerImpl.class).in(Singleton.class);

        bind(ResolvingProjectStateHolderRegistry.class).to(ResolvingProjectStateHolderRegistryImpl.class);

        // project import
        GinMultibinder.newSetBinder(binder(), ImportWizardRegistrar.class).addBinding().to(ZipImportWizardRegistrar.class);

        install(new GinFactoryModuleBuilder().build(ImportWizardFactory.class));

        bind(ProjectNotificationSubscriber.class).to(ProjectNotificationSubscriberImpl.class).in(Singleton.class);
        install(new GinFactoryModuleBuilder()
                        .implement(ProjectNotificationSubscriber.class, ProjectNotificationSubscriberImpl.class)
                        .build(ImportProjectNotificationSubscriberFactory.class));
    }

