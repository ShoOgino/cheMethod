        @Override
        protected void onMessageReceived(WorkspaceStatusEvent statusEvent) {
            final String workspaceId = statusEvent.getWorkspaceId();
            switch (statusEvent.getEventType()) {
                case STARTING:
                    onWorkspaceStarting(workspaceId);
                    break;

                case RUNNING:
                    onWorkspaceStarted(workspaceId);
                    break;

                case ERROR:
                    unSubscribeHandlers();
                    notificationManager.notify(locale.workspaceStartFailed(), FAIL, FLOAT_MODE);
                    loader.setError(LoaderPresenter.Phase.STARTING_WORKSPACE_RUNTIME);
                    final String workspaceName = workspace.getConfig().getName();
                    final String error = statusEvent.getError();
                    workspaceServiceClient.getWorkspaces(SKIP_COUNT, MAX_COUNT).then(showErrorDialog(workspaceName, error));
                    eventBus.fireEvent(new WorkspaceStoppedEvent(workspace));
                    break;

                case STOPPING:
                    loader.show(LoaderPresenter.Phase.STOPPING_WORKSPACE);
                    break;

                case STOPPED:
                    loader.setSuccess(LoaderPresenter.Phase.STOPPING_WORKSPACE);
                    unSubscribeHandlers();
                    eventBus.fireEvent(new WorkspaceStoppedEvent(workspace));
                    startWorkspaceNotification.show(statusEvent.getWorkspaceId());
                    break;

                case SNAPSHOT_CREATING:
                    loader.show(LoaderPresenter.Phase.CREATING_WORKSPACE_SNAPSHOT);
                    break;

                case SNAPSHOT_CREATED:
                    loader.setSuccess(LoaderPresenter.Phase.CREATING_WORKSPACE_SNAPSHOT);
                    snapshotCreator.successfullyCreated();
                    break;

                case SNAPSHOT_CREATION_ERROR:
                    loader.setError(LoaderPresenter.Phase.CREATING_WORKSPACE_SNAPSHOT);
                    snapshotCreator.creationError("Snapshot creation error: " + statusEvent.getError());
                    break;
            }
        }

