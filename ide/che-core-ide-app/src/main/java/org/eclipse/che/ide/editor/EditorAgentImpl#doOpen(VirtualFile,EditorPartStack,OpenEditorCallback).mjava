  private void doOpen(
      VirtualFile file, EditorPartStack editorPartStackConsumer, OpenEditorCallback callback) {

    addToOpeningFilesList(file.getLocation(), editorPartStackConsumer);
    Set<FileType> fileTypesByFile = getFileTypesByFile(file);
    Optional<FileType> registeredFileType =
        fileTypesByFile
            .stream()
            .filter(fileType -> editorRegistry.getEditor(fileType) instanceof AsyncEditorProvider)
            .findAny();
    if (registeredFileType.isPresent()) {
      FileType fileType = registeredFileType.get();
      final EditorProvider editorProvider = editorRegistry.getEditor(fileType);
      ((AsyncEditorProvider) editorProvider)
          .createEditor(file)
          .then(
              editor -> {
                initEditor(
                    file, callback, fileType, editor, editorPartStackConsumer, editorProvider);
              });
    } else {
      FileType fileType = fileTypesByFile.stream().findAny().orElse(unknownFileType);
      final EditorProvider editorProvider = editorRegistry.getEditor(fileType);
      final EditorPartPresenter editor = editorProvider.getEditor();
      initEditor(file, callback, fileType, editor, editorPartStackConsumer, editorProvider);
    }
  }

