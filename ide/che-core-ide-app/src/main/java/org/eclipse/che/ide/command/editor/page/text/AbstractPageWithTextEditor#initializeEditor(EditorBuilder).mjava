    private void initializeEditor(EditorBuilder editorBuilder) {
        editor = editorBuilder.buildEditor();
        editor.initialize(editorConfiguration);
        editor.activate();

        editor.addPropertyListener((source, propId) -> {
            switch (propId) {
                case PROP_INPUT:
                    editor.go(view.getEditorContainer());

                    editor.getEditorWidget().setAnnotationRulerVisible(false);
                    editor.getEditorWidget().setFoldingRulerVisible(false);
                    editor.getEditorWidget().setZoomRulerVisible(false);
                    editor.getEditorWidget().setOverviewRulerVisible(false);
                    editor.getView().setInfoPanelVisible(false);

                    break;
                case PROP_DIRTY:
                    updateCommandPropertyValue(editor.getDocument().getContents());
                    notifyDirtyStateChanged();

                    break;
                default:
            }
        });
    }

