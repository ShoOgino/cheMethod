    @Override
    public Promise<CommandImpl> createCommand(String goalId,
                                              String typeId,
                                              @Nullable String name,
                                              @Nullable String commandLine,
                                              Map<String, String> attributes,
                                              ApplicableContext context) {
        final Optional<CommandType> commandType = commandTypeRegistry.getCommandTypeById(typeId);

        if (!commandType.isPresent()) {
            return promiseProvider.reject(new Exception("Unknown command type: '" + typeId + "'"));
        }

        final Map<String, String> attr = new HashMap<>(attributes);
        attr.put(COMMAND_PREVIEW_URL_ATTRIBUTE_NAME, commandType.get().getPreviewUrlTemplate());
        attr.put(COMMAND_GOAL_ATTRIBUTE_NAME, goalId);

        return createCommand(new CommandImpl(commandNameGenerator.generate(typeId, name),
                                             commandLine != null ? commandLine : commandType.get().getCommandLineTemplate(),
                                             typeId,
                                             attr,
                                             context));
    }

