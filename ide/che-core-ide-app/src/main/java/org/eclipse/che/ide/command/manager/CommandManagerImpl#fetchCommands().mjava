  private void fetchCommands() {
    // get all commands related to the workspace
    workspaceCommandManager
        .fetchCommands()
        .then(
            workspaceCommands -> {
              workspaceCommands.forEach(
                  workspaceCommand ->
                      commands.put(
                          workspaceCommand.getName(),
                          new CommandImpl(workspaceCommand, new ApplicableContext())));

              Arrays.stream(appContext.getProjects())
                  .forEach(
                      project ->
                          projectCommandManager
                              .getCommands(project)
                              .forEach(
                                  projectCommand -> {
                                    final CommandImpl existedCommand =
                                        this.commands.get(projectCommand.getName());

                                    if (existedCommand == null) {
                                      this.commands.put(
                                          projectCommand.getName(),
                                          new CommandImpl(
                                              projectCommand,
                                              new ApplicableContext(project.getPath())));
                                    } else {
                                      if (projectCommand.equalsIgnoreContext(existedCommand)) {
                                        existedCommand
                                            .getApplicableContext()
                                            .addProject(project.getPath());
                                      } else {
                                        // normally, should never happen
                                        Log.error(
                                            CommandManagerImpl.this.getClass(),
                                            "Different commands with the same names found");
                                      }
                                    }
                                  }));

              notifyCommandsLoaded();
            });
  }

