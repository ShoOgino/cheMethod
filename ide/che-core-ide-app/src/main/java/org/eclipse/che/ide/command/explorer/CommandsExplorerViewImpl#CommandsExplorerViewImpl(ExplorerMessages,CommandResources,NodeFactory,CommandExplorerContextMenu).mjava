  @Inject
  public CommandsExplorerViewImpl(
      ExplorerMessages messages,
      CommandResources resources,
      NodeFactory nodeFactory,
      CommandExplorerContextMenu contextMenu) {
    this.nodeFactory = nodeFactory;
    commandNodes = new HashMap<>();

    setTitle(messages.viewTitle());

    tree = new Tree(new NodeStorage(), new NodeLoader());
    tree.ensureDebugId("commands-explorer");

    treeRenderer = new CommandsTreeRenderer(tree.getTreeStyles(), resources, delegate);

    tree.setPresentationRenderer(treeRenderer);
    tree.getSelectionModel().setSelectionMode(SINGLE);

    tree.getSelectionModel()
        .addSelectionHandler(
            event -> {
              for (Node node : tree.getNodeStorage().getAll()) {
                final Element nodeContainerElement =
                    tree.getNodeDescriptor(node).getNodeContainerElement();

                if (nodeContainerElement != null) {
                  nodeContainerElement.removeAttribute("selected");
                }
              }

              if (event.getSelectedItem() != null) {
                NodeDescriptor nodeDescriptor = tree.getNodeDescriptor(event.getSelectedItem());
                if (nodeDescriptor != null) {
                  nodeDescriptor.getNodeContainerElement().setAttribute("selected", "selected");
                }
              }
            });

    tree.setContextMenuInvocationHandler(contextMenu::show);

    setContentWidget(UI_BINDER.createAndBindUi(this));
  }

