    @Override
    protected void configure() {
        GinMultibinder.newSetBinder(binder(), CommandType.class);

        // predefined goals
        GinMultibinder<CommandGoal> goalBinder = GinMultibinder.newSetBinder(binder(), CommandGoal.class);
        goalBinder.addBinding().to(BuildGoal.class);
        goalBinder.addBinding().to(TestGoal.class);
        goalBinder.addBinding().to(RunGoal.class);
        goalBinder.addBinding().to(DebugGoal.class);
        goalBinder.addBinding().to(DeployGoal.class);
        goalBinder.addBinding().to(CommonGoal.class);

        bind(CommandTypeRegistry.class).to(CommandTypeRegistryImpl.class).in(Singleton.class);
        bind(CommandGoalRegistry.class).to(CommandGoalRegistryImpl.class).in(Singleton.class);

        bind(CommandManager.class).to(CommandManagerImpl.class).in(Singleton.class);

        // start-up components
        GinMapBinder<String, Component> componentBinder = GinMapBinder.newMapBinder(binder(), String.class, Component.class);
        componentBinder.addBinding("CommandProducerActionManager").to(CommandProducerActionManager.class);

        GinMapBinder<String, WsAgentComponent> wsAgentComponentBinder = GinMapBinder.newMapBinder(binder(),
                                                                                                  String.class,
                                                                                                  WsAgentComponent.class);
        wsAgentComponentBinder.addBinding("Z CommandManagerImpl").to(CommandManagerImpl.class);
        wsAgentComponentBinder.addBinding("Z CommandsExplorerPresenter").to(CommandsExplorerPresenter.class);
        wsAgentComponentBinder.addBinding("Z ExecuteCommandActionManager").to(ExecuteCommandActionManager.class);

        install(new GinFactoryModuleBuilder().build(ExecuteCommandActionFactory.class));
        install(new GinFactoryModuleBuilder().build(GoalPopUpGroupFactory.class));
        install(new GinFactoryModuleBuilder().build(NodeFactory.class));
        install(new GinFactoryModuleBuilder().build(CommandProducerActionFactory.class));

        bind(CommandsExplorerView.class).to(CommandsExplorerViewImpl.class).in(Singleton.class);
        bind(CommandTypeChooserView.class).to(CommandTypeChooserViewImpl.class);
        bind(CommandsPaletteView.class).to(CommandsPaletteViewImpl.class).in(Singleton.class);

        // command editor
        bind(CommandEditorView.class).to(CommandEditorViewImpl.class);
        bind(NamePageView.class).to(NamePageViewImpl.class);
        bind(GoalPageView.class).to(GoalPageViewImpl.class);
        bind(ProjectsPageView.class).to(ProjectsPageViewImpl.class);
        bind(PageWithTextEditorView.class).to(PageWithTextEditorViewImpl.class);

        // toolbar
        bind(CommandToolbarView.class).to(CommandToolbarViewImpl.class).in(Singleton.class);
        bind(ExecuteCommandView.class).to(ExecuteCommandViewImpl.class).in(Singleton.class);
        bind(ProcessesListView.class).to(ProcessesListViewImpl.class).in(Singleton.class);
        bind(PreviewsView.class).to(PreviewsViewImpl.class).in(Singleton.class);

        install(new GinFactoryModuleBuilder().build(ToolbarButtonsFactory.class));
        install(new GinFactoryModuleBuilder().build(MenuItemsFactory.class));

        bind(CommandExecutor.class).to(CommandExecutorImpl.class).in(Singleton.class);
        GinMultibinder.newSetBinder(binder(), CommandType.class).addBinding().to(CustomCommandType.class);
    }

