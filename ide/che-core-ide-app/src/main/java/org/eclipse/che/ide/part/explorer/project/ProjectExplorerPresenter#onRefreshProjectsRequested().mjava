    /** {@inheritDoc} */
    @Override
    public void onRefreshProjectsRequested() {
        //TODO method should be removed when new vfs will be implemented, but at this moment we need this method to handle refresh button
        //click to synchronize project state between client and server
        nodeManager.getProjectNodes().then(new Operation<List<Node>>() {
            @Override
            public void apply(List<Node> nodes) throws OperationException {
                List<Node> sameNodes = new ArrayList<>(view.getRootNodes());
                sameNodes.retainAll(nodes);

                List<Node> removedNodes = new ArrayList<>(view.getRootNodes());
                removedNodes.removeAll(sameNodes);
                for (final Node node : removedNodes) {
                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override
                        public void execute() {
                            view.removeNode(node, true);
                        }
                    });
                }

                List<Node> addedNodes = new ArrayList<>(nodes);
                addedNodes.removeAll(sameNodes);
                for (final Node node : addedNodes) {
                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override
                        public void execute() {
                            view.addNode(null, node);
                        }
                    });
                }

                Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                    @Override
                    public void execute() {
                        view.reloadChildren(null, true);
                    }
                });
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                notificationManager.notify(locale.projectExplorerProjectsLoadFailed());
            }
        });
    }

