    /** {@inheritDoc} */
    @Override
    public Set<Macro> getMacros(DevMachine devMachine) {
        final Set<Macro> macros = Sets.newHashSet();

        // FIXME: spi
//        for (Map.Entry<String, ? extends Server> entry : devMachine.getDescriptor().getRuntime().getServers().entrySet()) {
//
//            final String prefix = isNullOrEmpty(entry.getValue().getProtocol()) ? "" : entry.getValue().getProtocol() + "://";
//            final String value = prefix + entry.getValue().getAddress() + (isNullOrEmpty(prefix) ? "" : "/");
//
//            Macro macro = new BaseMacro(KEY.replace("%", entry.getKey()),
//                                        value,
//                                        "Returns protocol, hostname and port of an internal server");
//
//            macros.add(macro);
//
//            // register port without "/tcp" suffix
//            if (entry.getKey().endsWith("/tcp")) {
//                final String port = entry.getKey().substring(0, entry.getKey().length() - 4);
//
//                Macro shortMacro = new BaseMacro(KEY.replace("%", port),
//                                                 value,
//                                                 "Returns protocol, hostname and port of an internal server");
//
//                macros.add(shortMacro);
//            }
//        }

        return macros;
    }

