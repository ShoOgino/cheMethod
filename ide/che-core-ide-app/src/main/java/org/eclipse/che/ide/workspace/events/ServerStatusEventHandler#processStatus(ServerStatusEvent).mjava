  private void processStatus(ServerStatusEvent event) {
    workspaceServiceClient
        .getWorkspace(appContext.getWorkspaceId())
        .then(
            workspace -> {
              // Update workspace model in AppContext before firing an event.
              // Because AppContext always must return an actual workspace model.
              ((AppContextImpl) appContext).setWorkspace(workspace);

              if (event.getStatus() == RUNNING) {
                eventBus.fireEvent(
                    new ServerRunningEvent(event.getServerName(), event.getMachineName()));

                // fire events for the often used servers
                if (SERVER_WS_AGENT_HTTP_REFERENCE.equals(event.getServerName())) {
                  eventBus.fireEvent(new WsAgentServerRunningEvent(event.getMachineName()));
                } else if (SERVER_TERMINAL_REFERENCE.equals(event.getServerName())) {
                  eventBus.fireEvent(new TerminalAgentServerRunningEvent(event.getMachineName()));
                } else if (SERVER_EXEC_AGENT_HTTP_REFERENCE.equals(event.getServerName())) {
                  eventBus.fireEvent(new ExecAgentServerRunningEvent(event.getMachineName()));
                }
              } else if (event.getStatus() == STOPPED) {
                eventBus.fireEvent(
                    new ServerStoppedEvent(event.getServerName(), event.getMachineName()));

                // fire events for the often used servers
                if (SERVER_WS_AGENT_HTTP_REFERENCE.equals(event.getServerName())) {
                  eventBus.fireEvent(new WsAgentServerStoppedEvent(event.getMachineName()));
                } else if (SERVER_TERMINAL_REFERENCE.equals(event.getServerName())) {
                  eventBus.fireEvent(new TerminalAgentServerStoppedEvent(event.getMachineName()));
                } else if (SERVER_EXEC_AGENT_HTTP_REFERENCE.equals(event.getServerName())) {
                  eventBus.fireEvent(new ExecAgentServerStoppedEvent(event.getMachineName()));
                }
              }
            });
  }

