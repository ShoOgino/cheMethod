  @Override
  public void onRefreshClicked() {
    Promise<Map<String, String>> promise = Promises.resolve(null);
    for (final PreferencesManager preferencesManager : managers) {
      promise =
          promise.thenPromise(
              new Function<Map<String, String>, Promise<Map<String, String>>>() {
                @Override
                public Promise<Map<String, String>> apply(Map<String, String> arg)
                    throws FunctionException {
                  return preferencesManager
                      .loadPreferences()
                      .catchError(
                          new Operation<PromiseError>() {
                            @Override
                            public void apply(PromiseError error) throws OperationException {
                              notificationManagerProvider
                                  .get()
                                  .notify(
                                      locale.unableToLoadPreference(),
                                      error.getMessage(),
                                      FAIL,
                                      FLOAT_MODE);
                            }
                          });
                }
              });
    }

    /** Revert changes on every preference page */
    promise.then(
        new Operation<Map<String, String>>() {
          @Override
          public void apply(Map<String, String> arg) throws OperationException {
            for (PreferencePagePresenter p : PreferencesPresenter.this.preferences) {
              p.revertChanges();
            }
          }
        });
  }

