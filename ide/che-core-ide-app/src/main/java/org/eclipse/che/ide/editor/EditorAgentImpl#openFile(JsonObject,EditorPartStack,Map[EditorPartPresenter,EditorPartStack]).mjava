    private Promise<Void> openFile(final JsonObject file, final EditorPartStack editorPartStack,
                                   final Map<EditorPartPresenter, EditorPartStack> activeEditors) {
        return AsyncPromiseHelper.createFromAsyncRequest(new AsyncPromiseHelper.RequestCall<Void>() {
            @Override
            public void makeCall(final AsyncCallback<Void> callback) {
                String path = file.getString("PATH");
                appContext.getWorkspaceRoot().getFile(path).then(new Operation<Optional<File>>() {
                    @Override
                    public void apply(final Optional<File> optionalFile) throws OperationException {
                        if (optionalFile.isPresent()) {
                            restoreCreateEditor(optionalFile.get(), file, editorPartStack, callback, activeEditors);
                        } else {
                            callback.onSuccess(null);
                        }
                    }
                });
            }
        });


    }

