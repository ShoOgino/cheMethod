  private void initialize() {
    if (initialized) {
      return;
    }

    securityTokenProvider
        .getSecurityToken()
        .then(
            token -> {
              WorkspaceImpl workspace = appContext.getWorkspace();
              String url = workspace.getLinks().get(LINK_REL_ENVIRONMENT_STATUS_CHANNEL);

              if (workspace.getStatus() == STOPPED || url == null) {
                return;
              }

              char separator = url.contains("?") ? '&' : '?';
              Optional<String> appWebSocketId = appContext.getApplicationId();
              String queryParams =
                  separator
                      + "token="
                      + token
                      + appWebSocketId.map(id -> "&clientId=" + id).orElse("");
              String wsMasterEndpointURL = url + queryParams;

              Map<String, String> initProperties = singletonMap("url", wsMasterEndpointURL);

              Set<Runnable> initActions = new HashSet<>();
              initActions.add(this::subscribeToEvents);

              if (!appWebSocketId.isPresent()) {
                initActions.add(this::processWsId);
              }

              initActions.add(this::checkStatuses);

              initializer.initialize(WS_MASTER_JSON_RPC_ENDPOINT_ID, initProperties, initActions);

              initialized = true;
            });
  }

