    @Inject
    WorkspaceStatusEventHandler(RequestHandlerConfigurator configurator,
                                WorkspaceServiceClient workspaceServiceClient,
                                AppContext appContext,
                                Provider<StartWorkspaceNotification> startWorkspaceNotificationProvider,
                                Provider<NotificationManager> notificationManagerProvider,
                                Provider<WorkspaceSnapshotNotifier> snapshotNotifierProvider,
                                LoaderPresenter wsStatusNotification,
                                WsAgentStateController wsAgentStateController,
                                WsAgentURLModifier wsAgentURLModifier,
                                EventBus eventBus,
                                CoreLocalizationConstant messages) {
        this.workspaceServiceClient = workspaceServiceClient;
        this.appContext = appContext;
        this.startWorkspaceNotificationProvider = startWorkspaceNotificationProvider;
        this.notificationManagerProvider = notificationManagerProvider;
        this.snapshotNotifierProvider = snapshotNotifierProvider;
        this.wsStatusNotification = wsStatusNotification;
        this.wsAgentStateController = wsAgentStateController;
        this.wsAgentURLModifier = wsAgentURLModifier;
        this.eventBus = eventBus;
        this.messages = messages;

        configurator.newConfiguration()
                    .methodName("event:workspace-status:changed")
                    .paramsAsDto(WorkspaceStatusEvent.class)
                    .noResult()
                    .withConsumer((endpointId, event) -> {
                        Log.debug(getClass(), "Received notification from endpoint: " + endpointId);

                        handleWorkspaceStatusChanging(event);
                    });
    }

