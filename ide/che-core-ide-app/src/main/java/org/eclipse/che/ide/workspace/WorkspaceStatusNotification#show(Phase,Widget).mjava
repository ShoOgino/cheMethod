    /**
     * Displays a loader with a message and a widget.
     *
     * @param phase
     *         corresponding phase
     * @param widget
     *         additional widget to display
     * @return loader instance
     */
    public PopupLoader show(Phase phase, Widget widget) {
        PopupLoader popup = popups.get(phase);
        if (popup != null) {
            return popup;
        }

        // Create and show a popup
        switch (phase) {
            case STARTING_WORKSPACE_RUNTIME:
                popup = popupLoaderFactory.getPopup(locale.startingWorkspaceRuntime(), locale.startingWorkspaceRuntimeDescription());
                popup.showDownloadButton();
                break;
            case STARTING_WORKSPACE_AGENT:
                popup = popupLoaderFactory.getPopup(locale.startingWorkspaceAgent(), locale.startingWorkspaceAgentDescription());
                break;
            case CREATING_PROJECT:
                popup = popupLoaderFactory.getPopup(locale.creatingProject(), locale.creatingProjectDescription());
                break;
            case CREATING_WORKSPACE_SNAPSHOT:
                popup = popupLoaderFactory.getPopup(locale.snapshottingWorkspace(), locale.snapshottingWorkspaceDescription());
                break;
            case STOPPING_WORKSPACE:
                popup = popupLoaderFactory.getPopup(locale.stoppingWorkspace(), locale.stoppingWorkspaceDescription());
                break;
            case WORKSPACE_STOPPED:
                popup = popupLoaderFactory.getPopup(locale.workspaceStopped(), locale.workspaceStoppedDescription(), widget);
                break;
        }

        popup.setDelegate(this);
        popups.put(phase, popup);
        return popup;
    }

