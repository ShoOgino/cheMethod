    private void startComponents(final Iterator<Map.Entry<String,  Provider<Component>>> componentIterator) {
        if (componentIterator.hasNext()) {
            Map.Entry<String,  Provider<Component>> entry = componentIterator.next();
            final String componentName = entry.getKey();

            try {
                Provider<Component> componentProvider = entry.getValue();

                final Component component = componentProvider.get();
                component.start(new Callback<Component, Exception>() {
                    @Override
                    public void onSuccess(Component result) {
                        Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                            @Override
                            public void execute() {
                                startComponents(componentIterator);
                            }
                        });
                    }

                    @Override
                    public void onFailure(Exception reason) {
                        Log.error(getClass(), "Unable to start " + componentName, reason);
                        initializationFailed(reason.getMessage());
                    }
                });
            } catch (Exception e) {
                Log.error(getClass(), "Unable to start " + componentName, e);
                initializationFailed(e.getMessage());
            }

        } else {
            startExtensionsAndDisplayUI();
        }
    }

