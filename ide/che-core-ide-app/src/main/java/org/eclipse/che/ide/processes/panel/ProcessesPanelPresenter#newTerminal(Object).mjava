  /** Opens new terminal for the selected machine. */
  public void newTerminal(Object source) {
    final ProcessTreeNode selectedTreeNode = view.getSelectedTreeNode();
    final MachineEntity devMachine = appContext.getDevMachine();
    if (selectedTreeNode == null && devMachine != null) {
      onAddTerminal(devMachine.getId(), source);
      return;
    }

    if (selectedTreeNode == null) {
      String notificationTitle = localizationConstant.failedToConnectTheTerminal();
      String notificationContent = localizationConstant.machineNotFound("");
      notificationManager.notify(notificationTitle, notificationContent, FAIL, FLOAT_MODE);
      return;
    }

    if (selectedTreeNode.getType() == MACHINE_NODE) {
      MachineEntity machine = (MachineEntity) selectedTreeNode.getData();
      onAddTerminal(machine.getId(), source);
      return;
    }

    ProcessTreeNode parent = selectedTreeNode.getParent();
    if (parent != null && parent.getType() == MACHINE_NODE) {
      MachineEntity machine = (MachineEntity) parent.getData();
      onAddTerminal(machine.getId(), source);
    }
  }

