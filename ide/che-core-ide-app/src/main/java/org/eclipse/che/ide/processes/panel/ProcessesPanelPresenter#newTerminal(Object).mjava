    /** Opens new terminal for the selected machine. */
    public void newTerminal(Object source) {
        final ProcessTreeNode selectedTreeNode = view.getSelectedTreeNode();

        final WorkspaceImpl workspace = appContext.getWorkspace();
        final Optional<MachineImpl> devMachine = workspace.getDevMachine();

        if (selectedTreeNode == null && devMachine.isPresent()) {
            onAddTerminal(devMachine.get().getName(), source);
            return;
        }

        if (selectedTreeNode == null) {
            String notificationTitle = localizationConstant.failedToConnectTheTerminal();
            String notificationContent = localizationConstant.machineNotFound("");
            notificationManager.notify(notificationTitle, notificationContent, FAIL, FLOAT_MODE);
            return;
        }

        if (selectedTreeNode.getType() == MACHINE_NODE) {
            MachineImpl machine = (MachineImpl)selectedTreeNode.getData();
            onAddTerminal(machine.getName(), source);
            return;
        }

        ProcessTreeNode parent = selectedTreeNode.getParent();
        if (parent != null && parent.getType() == MACHINE_NODE) {
            MachineImpl machine = (MachineImpl)parent.getData();
            onAddTerminal(machine.getName(), source);
        }
    }

