    private void preserveBreakpoints() {
        Storage localStorage = Storage.getLocalStorageIfSupported();
        if (localStorage != null) {
            List<BreakpointDto> allDtoBreakpoints = new LinkedList<BreakpointDto>();

            List<Breakpoint> allBreakpoints = getBreakpointList();
            if (currentBreakpoint != null) {
                allBreakpoints.add(currentBreakpoint);
            }

            for (Breakpoint breakpoint : allBreakpoints) {
                BreakpointDto dto = dtoFactory.createDto(BreakpointDto.class);
                dto.setType(breakpoint.getType());
                dto.setPath(breakpoint.getPath());
                dto.setLineNumber(breakpoint.getLineNumber());

                if (breakpoint.getFile() instanceof Resource) {
                    final Optional<Project> project = ((Resource)breakpoint.getFile()).getRelatedProject();
                    if (project.isPresent()) {
                        final ProjectConfigDto projectDto = dtoFactory.createDto(ProjectConfigDto.class)
                                                                      .withName(project.get().getName())
                                                                      .withPath(project.get().getPath())
                                                                      .withType(project.get().getType())
                                                                      .withDescription(project.get().getDescription())
                                                                      .withAttributes(project.get().getAttributes())
                                                                      .withMixins(project.get().getMixins());
                        dto.setFileProjectConfig(projectDto); //TODO need to think to change argument type from dto to model interface
                    }
                }

                dto.setActive(breakpoint.isActive());

                allDtoBreakpoints.add(dto);
            }

            String data = dtoFactory.toJson(allDtoBreakpoints);
            localStorage.setItem(LOCAL_STORAGE_BREAKPOINTS_KEY, data);
        }
    }

