  @UiHandler("nameField")
  void handleKeyDown(KeyDownEvent event) {
    switch (event.getNativeKeyCode()) {
      case KeyCodes.KEY_UP:
        event.stopPropagation();
        event.preventDefault();
        list.getSelectionModel().selectPrevious();
        break;

      case KeyCodes.KEY_DOWN:
        event.stopPropagation();
        event.preventDefault();
        list.getSelectionModel().selectNext();
        break;

      case KeyCodes.KEY_PAGEUP:
        event.stopPropagation();
        event.preventDefault();
        list.getSelectionModel().selectPreviousPage();
        break;

      case KeyCodes.KEY_PAGEDOWN:
        event.stopPropagation();
        event.preventDefault();
        list.getSelectionModel().selectNextPage();
        break;

      case KeyCodes.KEY_ENTER:
        event.stopPropagation();
        event.preventDefault();
        delegate.onActionSelected(list.getSelectionModel().getSelectedItem());
        break;

      case KeyCodes.KEY_ESCAPE:
        event.stopPropagation();
        event.preventDefault();
        hide();
        break;
      default:
        //here we need some delay to be sure that input box initiated with given value
        //in manually testing hard to reproduce this problem but it reproduced with selenium tests
        new Timer() {
          @Override
          public void run() {
            delegate.nameChanged(nameField.getText(), includeNonMenu.getValue());
          }
        }.schedule(300);
        break;
    }
  }

