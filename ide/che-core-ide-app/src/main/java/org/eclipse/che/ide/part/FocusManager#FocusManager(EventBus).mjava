  @Inject
  public FocusManager(final EventBus eventBus) {

    this.partStackHandler =
        new PartStackEventHandler() {
          @Override
          public void onRequestFocus(PartStack partStack) {
            if (partStack == null || partStack.getActivePart() == null) {
              return;
            }

            if (partStack == activePartStack && partStack.getActivePart() == activePart) {
              return;
            }

            /** unfocus active part stack */
            if (activePartStack != null) {
              activePartStack.setFocus(false);
            }

            /** unfocus active part */
            if (activePart != null && activePart.getView() instanceof Focusable) {
              ((Focusable) activePart.getView()).setFocus(false);
            }

            /** remember active part stack and part */
            activePartStack = partStack;
            activePart = partStack.getActivePart();

            /** focus part stack */
            activePartStack.setFocus(true);

            /** focus part if it has view and focusable */
            if (activePart != null) {
              Scheduler.get()
                  .scheduleDeferred(
                      new Scheduler.ScheduledCommand() {
                        @Override
                        public void execute() {
                          final IsWidget view = activePart.getView();
                          if (view instanceof Focusable) {
                            ((Focusable) view).setFocus(true);
                          }
                        }
                      });
            }

            Scheduler.get()
                .scheduleDeferred(
                    new Scheduler.ScheduledCommand() {
                      @Override
                      public void execute() {
                        eventBus.fireEvent(new ActivePartChangedEvent(activePart));
                      }
                    });
          }
        };
  }

