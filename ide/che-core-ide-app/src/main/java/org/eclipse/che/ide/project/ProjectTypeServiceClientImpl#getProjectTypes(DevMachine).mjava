    @Override
    public Promise<List<ProjectTypeDto>> getProjectTypes(@NotNull final DevMachine devMachine) {
        return newPromise(new RequestCall<List<ProjectTypeDto>>() {
            @Override
            public void makeCall(AsyncCallback<List<ProjectTypeDto>> callback) {
                getProjectTypes(devMachine, callback);
            }
        }).then(new Function<List<ProjectTypeDto>, List<ProjectTypeDto>>() {
            @Override
            public List<ProjectTypeDto> apply(List<ProjectTypeDto> arg) throws FunctionException {
                final List<ProjectTypeDto> descriptors = new ArrayList<>();
                for (ProjectTypeDto descriptor : arg) {
                    descriptors.add(descriptor);
                }
                return descriptors;
            }
        });
    }

