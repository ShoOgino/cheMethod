  /** {@inheritDoc} */
  @Override
  public void showResults(SearchResult result, String request) {
    StringBuilder resultTitle = new StringBuilder();
    List<SearchItemReference> resources = result.getItemReferences();
    if (resources.isEmpty()) {
      resultTitle.append("No results found for ");
      resultLabel.setText(resultTitle.toString());
      requestedLabel.setText("\'" + request + "\'");
      tree.getNodeStorage().clear();
      return;
    }

    requestedLabel.setText("");

    int total = 0;
    for (SearchItemReference searchItemReference : resources) {
      total += searchItemReference.getOccurrences().size();
    }
    resultTitle.append(total).append(" occurrence");
    if (total > 1) {
      resultTitle.append('s');
    }
    resultTitle.append(" found in ").append(resources.size()).append(" file");
    if (resources.size() > 1) {
      resultTitle.append('s');
    }
    resultTitle.append(" (per page results) for '");
    resultTitle.append(request);
    resultTitle.append("'. Total file count - ");
    resultTitle.append(result.getTotalHits());

    resultLabel.setText(resultTitle.toString());

    tree.getNodeStorage().clear();
    for (SearchItemReference item : resources) {
      tree.getNodeStorage().add(findResultNodeFactory.newFoundItemNode(item, request));
    }
    Node rootNode = tree.getRootNodes().get(0);

    tree.getSelectionModel().select(rootNode, false);
    focusView();
  }

