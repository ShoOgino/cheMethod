    @Inject
    public PartStackPresenter(final EventBus eventBus,
                              final PartMenu partMenu,
                              PartStackEventHandler partStackEventHandler,
                              TabItemFactory tabItemFactory,
                              PartsComparator partsComparator,
                              @Assisted final PartStackView view,
                              @Assisted @NotNull WorkBenchPartController workBenchPartController) {
        this.view = view;
        this.view.setDelegate(this);

        this.eventBus = eventBus;
        this.partMenu = partMenu;
        this.partStackHandler = partStackEventHandler;
        this.workBenchPartController = workBenchPartController;
        this.tabItemFactory = tabItemFactory;
        this.partsComparator = partsComparator;

        this.parts = new HashMap<>();
        this.constraints = new LinkedHashMap<>();

        this.propertyListener = new PropertyListener() {
            @Override
            public void propertyChanged(PartPresenter source, int propId) {
                if (PartPresenter.TITLE_PROPERTY == propId) {
                    updatePartTab(source);
                } else if (EditorPartPresenter.PROP_DIRTY == propId) {
                    eventBus.fireEvent(new EditorDirtyStateChangedEvent((EditorPartPresenter)source));
                }
            }
        };

        if (workBenchPartController != null) {
            this.workBenchPartController.setSize(DEFAULT_PART_SIZE);
            this.workBenchPartController.setMinSize(MIN_PART_SIZE);
        }

        currentSize = DEFAULT_PART_SIZE;
    }

