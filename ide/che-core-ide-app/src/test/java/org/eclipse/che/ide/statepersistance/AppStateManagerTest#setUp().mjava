  @Before
  public void setUp() {
    WorkspaceImpl workspace = mock(WorkspaceImpl.class);
    when(workspace.getId()).thenReturn(WS_ID);
    when(appContext.getWorkspace()).thenReturn(workspace);

    List<StateComponent> components = new ArrayList<>();
    components.add(component1);
    components.add(component2);

    when(stateComponentRegistry.getComponents()).thenReturn(components);
    when(stateComponentRegistry.getComponentById(anyString())).thenReturn(Optional.of(component1));
    when(stateComponentRegistryProvider.get()).thenReturn(stateComponentRegistry);

    when(component1Provider.get()).thenReturn(component1);
    when(component2Provider.get()).thenReturn(component2);

    when(component1.getId()).thenReturn("component1");
    when(component2.getId()).thenReturn("component2");
    when(preferencesManager.flushPreferences()).thenReturn(promise);
    when(preferencesManager.getValue(APP_STATE)).thenReturn("");
    when(jsonFactory.parse(anyString())).thenReturn(pref = Json.createObject());
    appStateManager =
        new AppStateManager(
            perspectiveManagerProvider,
            stateComponentRegistryProvider,
            preferencesManager,
            jsonFactory,
            promiseProvider,
            eventBus,
            appContext);
    appStateManager.readStateFromPreferences();
  }

