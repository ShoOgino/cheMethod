    @Test
    public void shouldImportProjectWithCommandSuccessfully() throws Exception {
        prepareWizard(IMPORT);

        when(workspaceRoot.importProject()).thenReturn(createProjectRequest);
        when(createProjectRequest.withBody(any(ProjectConfig.class))).thenReturn(createProjectRequest);
        when(createProjectRequest.send()).thenReturn(createProjectPromise);
        when(createProjectPromise.then(any(Operation.class))).thenReturn(createProjectPromise);
        when(createProjectPromise.thenPromise(any(Function.class))).thenReturn(createProjectPromise);
        when(createProjectPromise.catchError(any(Operation.class))).thenReturn(createProjectPromise);
        when(promiseError.getCause()).thenReturn(exception);
        when(dataObject.getCommands()).thenReturn(Collections.singletonList(command));
        when(command.getCommandLine()).thenReturn("echo 'Hello'");
        when(commandManager.create(any(String.class), any(String.class), any(String.class), any(Map.class))).thenReturn(createCommandPromise);
        when(createCommandPromise.then(any(Operation.class))).thenReturn(createCommandPromise);
        when(createCommandPromise.catchError(any(Operation.class))).thenReturn(createCommandPromise);

        wizard.complete(completeCallback);

        verify(createProjectPromise).then(completeOperationCaptor.capture());
        completeOperationCaptor.getValue().apply(createdProject);
        
        verify(createCommandPromise).then(completeAddCommandsOperationCaptor.capture());
        completeAddCommandsOperationCaptor.getValue().apply(createdCommand);

        verify(completeCallback).onCompleted();
    }

