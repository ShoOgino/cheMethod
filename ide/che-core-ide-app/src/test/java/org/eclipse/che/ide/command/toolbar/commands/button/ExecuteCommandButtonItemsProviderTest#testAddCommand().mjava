    @Test
    public void testAddCommand() throws Exception {
        // given
        CommandImpl command1 = mock(CommandImpl.class);
        CommandImpl command2 = mock(CommandImpl.class);
        CommandItem commandItem1 = mock(CommandItem.class);
        CommandItem commandItem2 = mock(CommandItem.class);
        when(menuItemsFactory.newCommandItem(eq(command1))).thenReturn(commandItem1);
        when(menuItemsFactory.newCommandItem(eq(command2))).thenReturn(commandItem2);

        DataChangedHandler dataChangedHandler = mock(DataChangedHandler.class);
        provider.setDataChangedHandler(dataChangedHandler);

        // when
        provider.addCommand(command1);
        provider.addCommand(command2);

        // then
        assertThat(provider.getItems()).hasSize(2).contains(commandItem1, commandItem2);
        verify(dataChangedHandler, times(2)).onDataChanged();
    }

