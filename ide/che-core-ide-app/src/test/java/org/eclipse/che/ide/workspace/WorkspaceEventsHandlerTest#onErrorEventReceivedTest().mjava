    @Test
    public void onErrorEventReceivedTest() throws Exception {
        WorkspaceConfigDto workspaceConfig = mock(WorkspaceConfigDto.class);
        when(workspace.getConfig()).thenReturn(workspaceConfig);
        when(workspaceServiceClient.getWorkspaces(anyInt(), anyInt())).thenReturn(workspacesPromise);
        List<WorkspaceDto> workspaces = new ArrayList<>(1);
        workspaces.add(workspace);
        MessageDialog errorDialog = mock(MessageDialog.class);
        when(dialogFactory.createMessageDialog(anyString(), anyString(), (ConfirmCallback)anyObject())).thenReturn(errorDialog);
        when(workspaceStatusEvent.getEventType()).thenReturn(ERROR);

        workspaceEventsHandler.trackWorkspaceEvents(workspace, callback);
        workspaceEventsHandler.workspaceStatusSubscriptionHandler.onMessageReceived(workspaceStatusEvent);

        verify(workspacesPromise).then(workspacesCaptor.capture());
        workspacesCaptor.getValue().apply(workspaces);

        verify(messageBus, times(4)).unsubscribe(anyString(), (MessageHandler)anyObject());
        verify(notificationManager).notify(anyString(), eq(StatusNotification.Status.FAIL), eq(FLOAT_MODE));
        verify(initialLoadingInfo).setOperationStatus(eq(WORKSPACE_BOOTING.getValue()), eq(OperationInfo.Status.ERROR));
        verify(eventBus).fireEvent(Matchers.<WorkspaceStoppedEvent>anyObject());
        verify(errorDialog).show();
    }

