  @Before
  public void setUp() {
    when(partPresenter1.getTitle()).thenReturn(SOME_TEXT);
    when(partPresenter1.getTitleImage()).thenReturn(resource1);

    when(partPresenter2.getTitle()).thenReturn(SOME_TEXT);
    when(partPresenter2.getTitleImage()).thenReturn(resource2);

    when(partPresenter1.getEditorInput()).thenReturn(editorInput1);
    when(editorInput1.getFile()).thenReturn(file1);

    when(partPresenter2.getEditorInput()).thenReturn(editorInput2);
    when(editorInput2.getFile()).thenReturn(file2);

    when(partPresenter3.getEditorInput()).thenReturn(editorInput3);
    when(editorInput3.getFile()).thenReturn(file3);

    when(presentationFactory.getPresentation(nullable(Action.class))).thenReturn(presentation);

    when(eventBus.addHandler(any(), any())).thenReturn(handlerRegistration);

    when(actionManager.getAction(EditorActions.SPLIT_HORIZONTALLY))
        .thenReturn(splitHorizontallyAction);
    when(actionManager.getAction(EditorActions.SPLIT_VERTICALLY)).thenReturn(splitVerticallyAction);

    when(closePaneAction.getTemplatePresentation()).thenReturn(presentation);
    when(closeAllTabsPaneAction.getTemplatePresentation()).thenReturn(presentation);
    when(splitHorizontallyAction.getTemplatePresentation()).thenReturn(presentation);
    when(splitVerticallyAction.getTemplatePresentation()).thenReturn(presentation);
    when(editorPaneMenuItemFactory.createMenuItem((Action) any()))
        .thenReturn(editorPaneActionMenuItem);
    when(editorPaneMenuItemFactory.createMenuItem((TabItem) any()))
        .thenReturn(editorPaneTabMenuItem);

    Container container = mock(Container.class);
    Promise promise = mock(Promise.class);
    when(appContext.getWorkspaceRoot()).thenReturn(container);
    when(container.getFile(nullable(Path.class))).thenReturn(promise);

    when(appContext.getDevMachine()).thenReturn(mock(DevMachine.class));

    presenter =
        new EditorPartStackPresenter(
            view,
            appContext,
            partMenu,
            partsComparator,
            editorPaneMenuItemFactory,
            presentationFactory,
            eventBus,
            tabItemFactory,
            partStackEventHandler,
            editorPaneMenu,
            actionManager,
            closePaneAction,
            closeAllTabsPaneAction,
            editorAgent);

    when(tabItemFactory.createEditorPartButton(partPresenter1, presenter)).thenReturn(editorTab1);
    when(tabItemFactory.createEditorPartButton(partPresenter2, presenter)).thenReturn(editorTab2);
    when(tabItemFactory.createEditorPartButton(partPresenter3, presenter)).thenReturn(editorTab3);
    when(editorTab1.getFile()).thenReturn(file1);
  }

