  @Before
  public void setUp() throws Exception {
    client =
        new ProjectServiceClient(
            loaderFactory, requestFactory, dtoFactory, unmarshaller, appContext);

    when(appContext.getWsAgentServerApiEndpoint()).thenReturn("http://127.0.0.3/api");

    when(loaderFactory.newLoader(any())).thenReturn(messageLoader);
    when(asyncRequest.loader(messageLoader)).thenReturn(asyncRequest);
    when(asyncRequest.data(any(String.class))).thenReturn(asyncRequest);
    when(asyncRequest.send(unmarshallableItemRef)).thenReturn(itemRefPromise);
    when(asyncRequest.header(any(String.class), any(String.class))).thenReturn(asyncRequest);
    when(unmarshaller.newUnmarshaller(ItemReference.class)).thenReturn(unmarshallableItemRef);
    when(unmarshaller.newListUnmarshaller(ProjectConfigDto.class))
        .thenReturn(unmarshallablePrjsConf);
    when(unmarshaller.newListUnmarshaller(SourceEstimation.class))
        .thenReturn(unmarshallbleSourcesEstimation);
    when(unmarshaller.newUnmarshaller(SourceEstimation.class))
        .thenReturn(unmarshallbleSourceEstimation);
    when(unmarshaller.newUnmarshaller(ProjectSearchResponseDto.class))
        .thenReturn(unmarshallableSearch);
    when(unmarshaller.newUnmarshaller(TreeElement.class)).thenReturn(unmarshallableTreeElem);
    when(unmarshaller.newUnmarshaller(ProjectConfigDto.class)).thenReturn(unmarshallablePrjConf);

    when(requestFactory.createGetRequest(any(String.class))).thenReturn(asyncRequest);
    when(requestFactory.createRequest(
            any(RequestBuilder.Method.class),
            any(String.class),
            any(SourceStorageDto.class),
            any(Boolean.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createRequest(
            any(RequestBuilder.Method.class), any(String.class), anyList(), any(Boolean.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createRequest(
            any(RequestBuilder.Method.class), any(String.class), any(), any(Boolean.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(any(String.class), anyList())).thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(any(String.class), any())).thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(
            any(String.class), ArgumentMatchers.<List<NewProjectConfigDto>>any()))
        .thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(any(String.class), nullable(MimeType.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(any(String.class), nullable(SourceStorageDto.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(any(String.class), nullable(CopyOptions.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createPostRequest(any(String.class), nullable(MoveOptions.class)))
        .thenReturn(asyncRequest);
    when(requestFactory.createRequest(
            any(RequestBuilder.Method.class),
            any(String.class),
            any(CopyOptions.class),
            any(Boolean.class)))
        .thenReturn(asyncRequest);
  }

