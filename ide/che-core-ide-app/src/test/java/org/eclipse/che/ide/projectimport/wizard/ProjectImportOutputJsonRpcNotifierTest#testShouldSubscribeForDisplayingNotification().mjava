    @Test
    public void testShouldSubscribeForDisplayingNotification() throws Exception {
        //given
        final ImportProgressRecord dto = new ImportProgressRecord() {
            @Override
            public int getNum() {
                return 1;
            }

            @Override
            public String getLine() {
                return "message";
            }

            @Override
            public String getProjectName() {
                return "project";
            }
        };

        final ArgumentCaptor<Consumer> argumentCaptor = ArgumentCaptor.forClass(Consumer.class);
        final StatusNotification statusNotification = mock(StatusNotification.class);
        when(notificationManager.notify(anyString(), any(Status.class), any(DisplayMode.class))).thenReturn(statusNotification);
        when(constant.importingProject(anyString())).thenReturn("message");

        //when
        notifier.subscribe("project");

        //then
        verify(constant).importingProject(eq("project"));
        verify(subscriber).subscribeForImportOutputEvents(argumentCaptor.capture());
        argumentCaptor.getValue().accept(dto);
        verify(statusNotification).setTitle(eq("message"));
        verify(statusNotification).setContent(eq(dto.getLine()));
    }

