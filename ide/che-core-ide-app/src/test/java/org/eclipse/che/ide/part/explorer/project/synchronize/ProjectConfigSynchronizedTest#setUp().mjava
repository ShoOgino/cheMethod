  @Before
  public void setUp() {
    when(resource.getMarker(Project.ProblemProjectMarker.PROBLEM_PROJECT))
        .thenReturn(problemMarker);
    when(resource.getName()).thenReturn(PROJECT_NAME);
    when(problemMarker.isPresent()).thenReturn(true);
    when(problemMarker.get()).thenReturn(problemProjectMarker);
    when(projectExplorerPresenter.getTree()).thenReturn(tree);
    when(tree.getNodeLoader()).thenReturn(nodeLoader);
    when(beforeLoadEvent.getRequestedNode()).thenReturn(requestedNode);
    when(requestedNode.getData()).thenReturn(resource);
    when(resource.isProject()).thenReturn(true);

    problems = new HashMap<>();
    problems.put(10, "Error project");
    when(problemProjectMarker.getProblems()).thenReturn(problems);

    when(locale.synchronizeDialogTitle()).thenReturn(SYNCH_DIALOG_TITLE);
    when(locale.existInWorkspaceDialogContent(PROJECT_NAME)).thenReturn(SYNCH_DIALOG_CONTENT);
    when(locale.buttonImport()).thenReturn(IMPORT_BUTTON);
    when(locale.buttonRemove()).thenReturn(REMOVE_BUTTON);
    when(dialogFactory.createConfirmDialog(
            anyString(), anyString(), anyString(), anyString(), anyObject(), anyObject()))
        .thenReturn(confirmDialog);

    when(resource.getSource()).thenReturn(sourceStorage);
    when(sourceStorage.getLocation()).thenReturn(PROJECT_LOCATION);
    when(appContext.getWorkspaceRoot()).thenReturn(wsRoot);
    when(wsRoot.importProject()).thenReturn(projectRequest);
    when(projectRequest.withBody(anyObject())).thenReturn(projectRequest);
    when(projectRequest.send()).thenReturn(projectPromise);

    ProjectConfigSynchronized projectConfigSynchronized =
        new ProjectConfigSynchronized(
            appContext,
            projectExplorerPresenter,
            dialogFactory,
            locale,
            notificationManager,
            changeLocationWidget);
  }

