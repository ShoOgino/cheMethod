  @Test
  public void testShouldUnSubscribeFromDisplayingNotificationIfExceptionOccurred()
      throws Exception {

    //given
    final StatusNotification statusNotification = mock(StatusNotification.class);
    when(notificationManager.notify(anyString(), any(Status.class), any(DisplayMode.class)))
        .thenReturn(statusNotification);
    final MethodNameConfigurator methodNameConfigurator = mock(MethodNameConfigurator.class);
    when(configurator.newConfiguration()).thenReturn(methodNameConfigurator);
    final ParamsConfigurator paramsConfigurator = mock(ParamsConfigurator.class);
    when(methodNameConfigurator.methodName(anyString())).thenReturn(paramsConfigurator);
    final ResultConfiguratorFromOne resultConfiguratorFromOne =
        mock(ResultConfiguratorFromOne.class);
    when(paramsConfigurator.paramsAsDto(any())).thenReturn(resultConfiguratorFromOne);
    final ConsumerConfiguratorOneToNone consumerConfiguratorOneToNone =
        mock(ConsumerConfiguratorOneToNone.class);
    when(resultConfiguratorFromOne.noResult()).thenReturn(consumerConfiguratorOneToNone);

    //when
    notifier.subscribe("project");
    notifier.onFailure("message");

    //then
    verify(statusNotification).setStatus(eq(FAIL));
    verify(statusNotification).setContent(eq("message"));
  }

