    @Test
    public void testShouldReturnFolderNode() throws Exception {
        final ItemReference itemReferenceMock = mock(ItemReference.class);
        final NodeSettings nodeSettingsMock = mock(NodeSettings.class);
        final WorkspaceConfigDto workspaceConfigMock = mock(WorkspaceConfigDto.class);
        final WorkspaceDto workspaceMock = mock(WorkspaceDto.class);

        when(itemReferenceMock.getType()).thenReturn("folder");
        when(appContextMock.getWorkspace()).thenReturn(workspaceMock);
        when(workspaceMock.getConfig()).thenReturn(workspaceConfigMock);
        when(workspaceConfigMock.getProjects()).thenReturn(Collections.<ProjectConfigDto>emptyList());

        nodeManager.createNodeByType(itemReferenceMock, null, nodeSettingsMock);

        verify(nodeFactoryMock, never()).newProjectNode(any(ProjectConfigDto.class), any(NodeSettings.class));
        verify(nodeFactoryMock).newFolderReferenceNode(eq(itemReferenceMock), isNull(ProjectConfigDto.class), eq(nodeSettingsMock));
    }

