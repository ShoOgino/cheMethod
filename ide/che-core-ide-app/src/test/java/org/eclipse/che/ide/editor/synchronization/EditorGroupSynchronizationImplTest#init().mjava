    @Before
    public void init() {
        activeEditor = mock(EditorPartPresenter.class, withSettings().extraInterfaces(TextEditor.class, EditorWithAutoSave.class));
        openedEditor1 = mock(EditorPartPresenter.class, withSettings().extraInterfaces(TextEditor.class, EditorWithAutoSave.class));
        openedEditor2 = mock(EditorPartPresenter.class, withSettings().extraInterfaces(TextEditor.class, EditorWithAutoSave.class));

        when(((EditorWithAutoSave)openedEditor1).isAutoSaveEnabled()).thenReturn(true);
        when(((EditorWithAutoSave)openedEditor2).isAutoSaveEnabled()).thenReturn(true);

        when(editorAgent.getActiveEditor()).thenReturn(activeEditor);
        when(document.getDocumentHandle()).thenReturn(documentHandle);
        when(documentHandle.getDocEventBus()).thenReturn(documentEventBus);
        when(documentHandle.getDocument()).thenReturn(document);

        when(((TextEditor)activeEditor).getDocument()).thenReturn(document);
        when(((TextEditor)openedEditor1).getDocument()).thenReturn(document);
        when(((TextEditor)openedEditor2).getDocument()).thenReturn(document);

        when(documentEventBus.addHandler((Event.Type<Object>)anyObject(), anyObject())).thenReturn(handlerRegistration);

        editorGroupSynchronization = new EditorGroupSynchronizationImpl(eventBus, documentStorage, notificationManager);

        editorGroupSynchronization.addEditor(activeEditor);
        editorGroupSynchronization.addEditor(openedEditor1);
        editorGroupSynchronization.addEditor(openedEditor2);
        editorGroupSynchronization.onActiveEditorChanged(activeEditor);
    }

