  @Test
  //we sync 'dirty' state of editors only for case when content of an active editor HAS SAVED
  public void shouldSkipEditorDirtyStateChangedEventWhenEditorIsDirty() {
    when(activeEditor.isDirty()).thenReturn(true);
    EditorPartPresenter openedEditor1 = mock(EditorPartPresenter.class);
    when(openedEditor1.getEditorInput()).thenReturn(editorInput);
    editorContentSynchronizer.trackEditor(openedEditor1);
    editorContentSynchronizer.trackEditor(activeEditor);

    editorContentSynchronizer.onEditorDirtyStateChanged(editorDirtyStateChangedEvent);

    EditorGroupSynchronization group =
        editorContentSynchronizer.editorGroups.get(new Path(FILE_PATH));
    verify(group, never()).onEditorDirtyStateChanged(activeEditor);
  }

