    private <T extends DtoWithPid> void subscribe(String endpointId, ExecAgentPromise<T> promise, T arg) throws OperationException {
        final int pid = arg.getPid();

        if (promise.hasProcessDiedEventOperation()) {
            final Operation<ProcessDiedEventDto> operation = promise.getProcessDiedEventDtoOperation();
            eventManager.registerProcessDiedOperation(endpointId, pid, operation);
        }

        if (promise.hasProcessStartedEventOperation()) {
            final Operation<ProcessStartedEventDto> operation = promise.getProcessStartedEventDtoOperation();
            eventManager.registerProcessStartedOperation(endpointId, pid, operation);
        }

        if (promise.hasProcessStdOutEventOperation()) {
            final Operation<ProcessStdOutEventDto> operation = promise.getProcessStdOutEventDtoOperation();
            eventManager.registerProcessStdOutOperation(endpointId, pid, operation);
        }

        if (promise.hasProcessStdErrEventOperation()) {
            final Operation<ProcessStdErrEventDto> operation = promise.getProcessStdErrEventDtoOperation();
            eventManager.registerProcessStdErrOperation(endpointId, pid, operation);
        }

        if (promise.hasOperation()) {
            promise.getOperation().apply(arg);
        }
    }

