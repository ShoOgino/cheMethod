    private void addAnnotationItem(final AnnotationModel model, final Annotation annotation) {
        final Position position = model.getPosition(annotation);
        if (position == null) {
            Log.warn(GutterAnnotationRenderer.class, "No position for annotation " + annotation);
            return;
        }
        final TextPosition textPosition = this.document.getPositionFromIndex(position.getOffset());

        final Element annotationItem = this.hasGutter.getGutterItem(textPosition.getLine(),
                                                                    ANNOTATION_GUTTER);

        AnnotationGroup annotationGroup;
        if (!AnnotationGroupImpl.isAnnotation(annotationItem)) {
            LOG.fine("Create new annotation group for line " + textPosition.getLine());
            final AnnotationGroup newGroup = AnnotationGroupImpl.create();
            newGroup.getElement().addEventListener(Event.MOUSEOVER, new EventListener() {
                @Override
                public void handleEvent(final Event evt) {
                    showToolTip(newGroup, textPosition.getLine());
                }
            }, false);

            this.hasGutter.addGutterItem(textPosition.getLine(), ANNOTATION_GUTTER,
                                                                 newGroup.getElement());
            annotationGroup = newGroup;
        } else {
            LOG.fine("Reuse annotation group for line " + textPosition.getLine());
            annotationGroup = AnnotationGroupImpl.create(annotationItem);
        }
        annotationGroup.addAnnotation(annotation, position.getOffset());

    }

