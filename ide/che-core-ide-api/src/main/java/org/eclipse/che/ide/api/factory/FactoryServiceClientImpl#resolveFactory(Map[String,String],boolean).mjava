    /**
     * Resolve factory object based on user parameters
     *
     * @param factoryParameters
     *         map containing factory data parameters provided through URL
     * @param validate
     *         indicates whether or not factory should be validated by accept validator
     * @return Factory through a Promise
     */
    @Override
    public Promise<Factory> resolveFactory(@NotNull final Map<String, String> factoryParameters, boolean validate) {

        // Init string with JAX-RS path
        StringBuilder url = new StringBuilder(API_FACTORY_BASE_URL + "resolver");

        // If validation, needs to add the flag
        if (validate) {
            url.append("?validate=true");
        }
        return asyncRequestFactory.createPostRequest(url.toString(), toJson(factoryParameters)).header(ACCEPT, APPLICATION_JSON)
                           .send(unmarshallerFactory.newUnmarshaller(Factory.class));
    }

