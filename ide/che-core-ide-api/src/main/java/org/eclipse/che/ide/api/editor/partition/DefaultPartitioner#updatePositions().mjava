    private void updatePositions() {
        // set before the scan as the scan uses the content length
        this.documentPositionMap.setContentLength(getContentLength());
        this.documentPositionMap.resetPositions();

        Position current = null;
        try {
            Token token = scanner.nextToken();
            while (!token.isEOF()) {

                final String contentType = getTokenContentType(token);

                if (isSupportedContentType(contentType)) {
                    final TypedPosition position = new TypedPosition(scanner.getTokenOffset(), scanner.getTokenLength(), contentType);
                    current = position;
                    this.documentPositionMap.addPosition(this.positionCategory, position);
                }

                token = scanner.nextToken();
            }
        } catch (final BadLocationException x) {
            Log.error(DefaultPartitioner.class, "Invalid position: " + String.valueOf(current) + " (max:" + getContentLength() + ").", x);
        } catch (final BadPositionCategoryException x) {
            Log.error(DefaultPartitioner.class, "Invalid position category: " + this.positionCategory, x);
        }
    }

