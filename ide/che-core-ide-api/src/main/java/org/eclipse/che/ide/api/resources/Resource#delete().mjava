  /**
   * Deletes current resource. Delete operation performs asynchronously and result of current
   * operation will be displayed in {@code Promise} result as {@code void}.
   *
   * <p>Fires following events: {@link ResourceChangedEvent} when resource has successfully removed.
   *
   * <p>Example of usage:
   *
   * <pre>
   *     Resource resource = ... ;
   *
   *     resource.delete().then(new Operation<Void>() {
   *         public void apply(Void ignored) throws OperationException {
   *             //do something
   *         }
   *     })
   * </pre>
   *
   * <p>Fires {@link ResourceChangedEvent} with the following {@link ResourceDelta}: Delta kind:
   * {@link ResourceDelta#REMOVED}. Removed resource provided by {@link ResourceDelta#getResource()}
   *
   * @return {@code Promise} with {@code void}
   * @throws IllegalArgumentException if current resource can not be removed. Reasons include:
   *     <ul>
   *       <li>Workspace root is not allowed to be removed
   *     </ul>
   *
   * @see ResourceChangedEvent
   * @since 4.4.0
   */
  Promise<Void> delete();

