    @Override
    public void receive(JsonRpcRequest request) {
        final String params = request.getParams();
        final VfsFileStatusUpdateDto vfsFileStatusUpdateDto = dtoFactory.createDtoFromJson(params, VfsFileStatusUpdateDto.class);

        final FileWatcherEventType status = vfsFileStatusUpdateDto.getType();
        final String stringPath = vfsFileStatusUpdateDto.getPath();
        final String name = stringPath.substring(stringPath.lastIndexOf("/") + 1);

        switch (status) {
            case MODIFIED: {
                Log.debug(getClass(), "Received updated file event status: " + stringPath);

                eventBus.fireEvent(new FileContentUpdateEvent(stringPath, vfsFileStatusUpdateDto.getHashCode()));

                break;
            }
            case DELETED: {
                Log.debug(getClass(), "Received removed file event status: " + stringPath);

                final Path path = Path.valueOf(stringPath);
                appContext.getWorkspaceRoot().synchronize(new ExternalResourceDelta(path, path, REMOVED));
                if (notificationManager != null && !deletedFilesController.remove(stringPath)) {
                    notificationManager.notify("External operation", "File '" + name + "' is removed", SUCCESS, EMERGE_MODE);
                }

                break;
            }
        }
    }

