  /**
   * Returns the {@code Promise} with array of existing member resources (projects, folders and
   * files) in this resource, in particular order. Order is organized by alphabetic resource name
   * ignoring case.
   *
   * <p>Supplied parameter {@code force} instructs that stored children should be updated.
   *
   * <p>Note, that if the result array is empty, then method thinks that children may not be loaded
   * from the server and send a request ot the server to load the children.
   *
   * <p>Method guarantees that resources will be sorted by their {@link #getLocation()} in ascending
   * order.
   *
   * <p>Fires {@link ResourceChangedEvent} with the following {@link ResourceDelta}: Delta kind:
   * {@link ResourceDelta#ADDED}. Cached and loaded resource provided by {@link
   * ResourceDelta#getResource()}.
   *
   * <p>Or
   *
   * <p>Delta kind: {@link ResourceDelta#UPDATED}. When resource was cached previously. Updated
   * resource provided by {@link ResourceDelta#getResource()}.
   *
   * @return the {@code Promise} with array of members of this resource
   * @see #getChildren()
   * @since 4.4.0
   */
  Promise<Resource[]> getChildren();

