  private Promise<Void> transmit(String path, String oldPath, FileTrackingOperationDto.Type type) {
    final FileTrackingOperationDto dto =
        dtoFactory
            .createDto(FileTrackingOperationDto.class)
            .withPath(path)
            .withType(type)
            .withOldPath(oldPath);
    return promises.create(
        (AsyncCallback<Void> callback) -> {
          JsonRpcPromise<Void> jsonRpcPromise =
              requestTransmitter
                  .newRequest()
                  .endpointId(ENDPOINT_ID)
                  .methodName(OUTCOMING_METHOD)
                  .paramsAsDto(dto)
                  .sendAndReceiveResultAsEmpty();
          jsonRpcPromise.onSuccess(
              aVoid -> {
                callback.onSuccess(null);
              });

          jsonRpcPromise.onFailure(
              jsonRpcError -> {
                callback.onFailure(new Throwable(jsonRpcError.getMessage()));
              });
        });
  }

