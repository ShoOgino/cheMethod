  /**
   * Returns {@code Optional} with a machine which contains the "wsagent" server.
   *
   * @return {@code Optional} with the machine which contains the "wsagent" server if the current
   *     workspace has a runtime and there is such machine, otherwise an empty {@code Optional}
   */
  public Optional<MachineImpl> getWsAgentServerMachine() {
    return getWorkspaceRuntime()
        .flatMap(
            runtime ->
                runtime
                    .getMachines()
                    .values()
                    .stream()
                    .filter(this::containsWsAgentHttpServer)
                    .findAny());
  }

