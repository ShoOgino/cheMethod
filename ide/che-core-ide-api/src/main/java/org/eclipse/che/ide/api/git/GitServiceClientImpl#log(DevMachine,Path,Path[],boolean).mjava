    @Override
    public Promise<LogResponse> log(DevMachine devMachine, Path project, Path[] fileFilter, boolean plainText) {

        List<String> paths = null;

        if (!isNullOrEmpty(fileFilter)) {
            paths = new ArrayList<>(fileFilter.length);

            for (Path file : fileFilter) {
                paths.add(file.isEmpty() ? "." : file.toString());
            }
        }

        LogRequest logRequest = dtoFactory.createDto(LogRequest.class)
                                          .withFileFilter(paths);
        String url = devMachine.getWsAgentBaseUrl() + LOG + "?projectPath=" + project;
        if (plainText) {
            return asyncRequestFactory.createPostRequest(url, logRequest)
                                      .loader(loader)
                                      .send(dtoUnmarshallerFactory.newUnmarshaller(LogResponse.class));
        } else {
            return asyncRequestFactory.createPostRequest(url, logRequest)
                                      .loader(loader)
                                      .header(ACCEPT, APPLICATION_JSON)
                                      .send(dtoUnmarshallerFactory.newUnmarshaller(LogResponse.class));
        }
    }

