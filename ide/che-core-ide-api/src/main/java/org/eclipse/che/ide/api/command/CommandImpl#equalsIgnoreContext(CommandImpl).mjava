  /**
   * Compares this {@link CommandImpl} to another {@link CommandImpl}, ignoring applicable context
   * considerations.
   *
   * @param anotherCommand the {@link CommandImpl} to compare this {@link CommandImpl} against
   * @return {@code true} if the argument represents an equivalent {@link CommandImpl} ignoring
   *     applicable context; {@code false} otherwise
   */
  public boolean equalsIgnoreContext(CommandImpl anotherCommand) {
    if (this == anotherCommand) {
      return true;
    }

    return Objects.equals(getName(), anotherCommand.getName())
        && Objects.equals(typeId, anotherCommand.typeId)
        && Objects.equals(commandLine, anotherCommand.commandLine)
        && Objects.equals(getAttributes(), anotherCommand.getAttributes());
  }

