  @Override
  public void onAnnotationModel(final AnnotationModelEvent event) {
    // annotation is mutable, not easy to use a set
    final Map<Integer, List<Annotation>> toRestore = new HashMap<>();
    // remove removed and changed annotations
    for (final Annotation annotation : event.getRemovedAnnotations()) {
      LOG.fine("Remove annotation: " + annotation);
      removeAnnotationItem(event, annotation, toRestore);
    }
    for (final Annotation annotation : event.getChangedAnnotations()) {
      LOG.fine("Remove changed annotation: " + annotation);
      removeAnnotationItem(event, annotation, toRestore);
    }

    final Map<String, String> decorations = event.getAnnotationModel().getAnnotationStyle();
    // restore annotations that were deleted but shouldn't have
    for (final List<Annotation> annotations : toRestore.values()) {
      for (final Annotation annotation : annotations) {
        addAnnotationItem(event.getAnnotationModel(), annotation, decorations);
      }
    }
    // add new and changed (new version) annotation
    for (final Annotation annotation : event.getAddedAnnotations()) {
      LOG.fine("Add annotation: " + annotation);
      addAnnotationItem(event.getAnnotationModel(), annotation, decorations);
    }
    for (final Annotation annotation : event.getChangedAnnotations()) {
      LOG.fine("Add back changed annotation: " + annotation);
      addAnnotationItem(event.getAnnotationModel(), annotation, decorations);
    }
  }

