    /**
     * Perform iteration on every node interceptor, passing to ones the list of children
     * to filter them before inserting into parent node.
     *
     * @param parent
     *         parent node
     * @return instance of {@link org.eclipse.che.api.promises.client.Function} with promise that contains list of intercepted children
     */
    @NotNull
    private Operation<List<Node>> interceptChildren(@NotNull final Node parent) {
        return new Operation<List<Node>>() {
            @Override
            public void apply(List<Node> children) throws OperationException {
                if (nodeInterceptors.isEmpty()) {
                    onLoadSuccess(parent, children);
                }

                LinkedList<NodeInterceptor> sortedByPriorityQueue = new LinkedList<>(nodeInterceptors);
                Collections.sort(sortedByPriorityQueue, priorityComparator);

                iterate(sortedByPriorityQueue, parent, children);
            }
        };
    }

