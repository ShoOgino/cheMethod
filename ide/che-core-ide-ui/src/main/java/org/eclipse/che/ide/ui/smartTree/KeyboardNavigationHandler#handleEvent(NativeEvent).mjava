    public void handleEvent(NativeEvent event) {
        int code = event.getKeyCode();

        NativeEvent e = event;

        String type = event.getType();

        if ("keydown".equals(type) && keyEvent == Event.ONKEYDOWN || "keypress".equals(type) && keyEvent == Event.ONKEYPRESS) {

        } else {
            return;
        }

        if (component != null && component.getElement() != e.getCurrentEventTarget().cast()) {
            return;
        }

        if (preventDefault) {
            event.preventDefault();
        }

        onKeyPress(e);

        switch (code) {
            case KeyCodes.KEY_ALT:
                onAlt(e);
                break;
            case KeyCodes.KEY_BACKSPACE:
                onBackspace(e);
                break;
            case KeyCodes.KEY_CTRL:
                onControl(e);
                break;
            case KeyCodes.KEY_DELETE:
                onDelete(e);
                break;
            case KeyCodes.KEY_DOWN:
                onDown(e);
                break;
            case KeyCodes.KEY_END:
                onEnd(e);
                break;
            case KeyCodes.KEY_ENTER:
                onEnter(e);
                break;
            case KeyCodes.KEY_ESCAPE:
                onEsc(e);
                break;
            case KeyCodes.KEY_HOME:
                onHome(e);
                break;
            case KeyCodes.KEY_LEFT:
                onLeft(e);
                break;
            case KeyCodes.KEY_PAGEDOWN:
                onPageDown(e);
                break;
            case KeyCodes.KEY_PAGEUP:
                onPageUp(e);
                break;
            case KeyCodes.KEY_SHIFT:
                onShift(e);
                break;
            case KeyCodes.KEY_TAB:
                onTab(e);
                break;
            case KeyCodes.KEY_RIGHT:
                onRight(e);
                break;
            case KeyCodes.KEY_UP:
                onUp(e);
                break;
        }
    }

