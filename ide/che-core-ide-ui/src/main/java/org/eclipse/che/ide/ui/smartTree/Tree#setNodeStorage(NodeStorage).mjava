    /**
     * Sets custom {@link NodeStorage}.
     *
     * @param nodeStorage custom {@link NodeStorage}
     */
    public final void setNodeStorage(NodeStorage nodeStorage) {
        checkNotNull(nodeStorage, NULL_NODE_STORAGE_MSG);

        if (this.nodeStorage != null) {
            storeHandlers.removeHandler();
            if (isOrWasAttached()) {
                clear();
            }
        }

        this.nodeStorage = nodeStorage;

        Handler handler = new Handler();
        storeHandlers.add(nodeStorage.addStoreAddHandler(handler));
        storeHandlers.add(nodeStorage.addStoreUpdateHandler(handler));
        storeHandlers.add(nodeStorage.addStoreRemoveHandler(handler));
        storeHandlers.add(nodeStorage.addStoreDataChangeHandler(handler));
        storeHandlers.add(nodeStorage.addStoreClearHandler(handler));
        storeHandlers.add(nodeStorage.addStoreSortHandler(handler));

        if (getSelectionModel() != null) {
            getSelectionModel().bindStorage(nodeStorage);
        }
        if (isOrWasAttached()) {
            renderChildren(null);
        }
    }

