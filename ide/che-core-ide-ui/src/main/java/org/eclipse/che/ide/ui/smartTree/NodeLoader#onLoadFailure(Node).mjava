  /**
   * Called when children haven't been successfully loaded. Also fire {@link
   * org.eclipse.che.ide.ui.smartTree.event.LoadExceptionEvent} event.
   *
   * @param parent parent node, children which haven't been loaded
   * @return instance of {@link org.eclipse.che.api.promises.client.Operation} which contains
   *     promise with error
   */
  @NotNull
  private Operation<PromiseError> onLoadFailure(@NotNull final Node parent) {
    return new Operation<PromiseError>() {
      @Override
      public void apply(PromiseError t) throws OperationException {
        childRequested.remove(parent);
        fireEvent(new LoadExceptionEvent(parent, t.getCause()));
      }
    };
  }

