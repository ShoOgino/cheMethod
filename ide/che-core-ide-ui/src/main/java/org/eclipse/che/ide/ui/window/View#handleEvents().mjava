  private void handleEvents() {
    KeyDownHandler handler =
        new KeyDownHandler() {

          @Override
          public void onKeyDown(KeyDownEvent event) {
            if (KeyboardEvent.KeyCode.ESC == event.getNativeEvent().getKeyCode()) {
              event.stopPropagation();
              event.preventDefault();
              if (delegate != null) {
                delegate.onEscapeKey();
              }
            } else if (KeyboardEvent.KeyCode.ENTER == event.getNativeEvent().getKeyCode()) {
              event.stopPropagation();
              event.preventDefault();
              if (delegate != null) {
                delegate.onEnterKey();
              }
            }
          }
        };

    focusPanel.addDomHandler(handler, KeyDownEvent.getType());

    closeButton.addDomHandler(
        new ClickHandler() {
          @Override
          public void onClick(ClickEvent event) {
            if (delegate != null) {
              delegate.onClose();
            }
            event.stopPropagation();
          }
        },
        ClickEvent.getType());

    /* Don't start moving the window when clicking close button */
    closeButton.addDomHandler(
        new MouseDownHandler() {
          @Override
          public void onMouseDown(MouseDownEvent event) {
            event.preventDefault();
            event.stopPropagation();
          }
        },
        MouseDownEvent.getType());

    MouseHandler mouseHandler = new MouseHandler();
    header.addDomHandler(mouseHandler, MouseDownEvent.getType());
    header.addDomHandler(mouseHandler, MouseUpEvent.getType());
    header.addDomHandler(mouseHandler, MouseMoveEvent.getType());
  }

