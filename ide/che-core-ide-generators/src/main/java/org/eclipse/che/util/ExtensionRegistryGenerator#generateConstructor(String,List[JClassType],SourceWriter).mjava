  /**
   * Generate constructor with dependencies added into field
   *
   * @param className
   * @param extensions
   * @param sw
   * @throws UnableToCompleteException
   */
  private void generateConstructor(String className, List<JClassType> extensions, SourceWriter sw)
      throws UnableToCompleteException {
    // constructor
    sw.indent();
    sw.print("public %s()", className);
    sw.println("{");
    sw.indent();
    {
      for (JClassType extension : extensions) {
        sw.println("{");
        sw.indent();
        /*
           Array<DependencyDescription> deps = Collections.<DependencyDescription> createArray();
        */
        generateDependenciesForExtension(sw, extension);

        Extension annotation = extension.getAnnotation(Extension.class);

        /*
           extensions.put("ide.ext.demo", new ExtensionDescription("ide.ext.demo", "1.0.0", "Demo extension", deps,
           demoExtProvider));
        */

        // the class's fqn
        String extensionId = extension.getQualifiedSourceName();

        sw.println(
            "extensions.put(\"%s\", new ExtensionDescription(\"%s\",\"%s\",\"%s\",\"%s\",deps));",
            escape(extensionId),
            escape(extensionId),
            escape(annotation.version()),
            escape(annotation.title()),
            escape(annotation.description()));
        sw.outdent();
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
  }

