    /**
     * Generated consolidated gwt.xml based on exists XX.gwt.xml in class path
     *
     * @param args
     *         possible arguments
     *         --rootDir - directory where gwt.xml file will be generated, default "."
     *         --gwtFileName - Name of the generated file in rootDir, default "org/eclipse/che/ide/IDE.gwt.xml"
     *         --entryPoint - gwt xml entry point, default "org.eclipse.che.ide.client.IDE"
     *         --styleSheet - gwt xml stylesheet, default "IDE.css"
     *         --loggingEnabled - Enable or disable gwt logging, default "false"
     *         --includePackages - Include only specific packages where *.gwt.xml can be found, default "No value. Means all packages"
     *         --excludePackages - Exclude packages from *.gwt.xml scanning	, default "com.google", "elemental","java.util","java.lang"
     * @throws IOException 
     */
    public static void main(String[] args) throws IOException {

        System.out.println(" ------------------------------------------------------------------------ ");
        System.out.println("Searching for GWT");
        System.out.println(" ------------------------------------------------------------------------ ");
        Map<String, Set<String>> parsedArgs = GeneratorUtils.parseArgs(args);

        GwtXmlModuleSearcher searcher = new GwtXmlModuleSearcher(parsedArgs.getOrDefault("excludePackages",
                                                                                         ImmutableSet.of("com.google",
                                                                                                         "elemental",
                                                                                                         "java.util",
                                                                                                         "java.lang"
                                                                                                        )),
                                                                 parsedArgs.getOrDefault("includePackages", Collections.emptySet()),
                                                                 Collections.emptySet());
        Set<String> gwtModules = searcher.getGwtModulesFromClassPath();
        gwtModules.forEach(System.out::println);
        System.out.println("Found " + gwtModules.size() + " gwt modules");


        GwtXmlGeneratorConfig gwtXmlGeneratorConfig =
                new GwtXmlGeneratorConfig(gwtModules,
                                          new File(getSingleValueOrDefault(parsedArgs, "rootDir", ".")),
                                          getSingleValueOrDefault(parsedArgs, "gwtFileName", DEFAULT_GWT_XML_PATH),
                                          getSingleValueOrDefault(parsedArgs, "entryPoint", DEFAULT_GWT_ETNRY_POINT),
                                          getSingleValueOrDefault(parsedArgs, "styleSheet", DEFAULT_STYLE_SHEET),
                                          parseBoolean(
                                                  getSingleValueOrDefault(parsedArgs, "loggingEnabled", DEFAULT_LOGGING.toString()))
            );
        GwtXmlGenerator gwtXmlGenerator = new GwtXmlGenerator(gwtXmlGeneratorConfig);
        gwtXmlGenerator.generateGwtXml();

    }

