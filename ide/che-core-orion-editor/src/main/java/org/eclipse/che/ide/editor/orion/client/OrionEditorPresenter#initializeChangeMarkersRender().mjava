  private Promise<Void> initializeChangeMarkersRender() {
    OrionTextViewOverlay textView = editorWidget.getTextView();
    List<OrionExtRulerOverlay> rulers = Arrays.asList(textView.getRulers());

    OrionStyleOverlay style = OrionStyleOverlay.create();
    style.setStyleClass("ruler vcs");

    return Promises.create(
        (resolve, reject) ->
            OrionExtRulerOverlay.create(
                editorWidget.getEditor().getAnnotationModel(),
                style,
                OrionExtRulerOverlay.RulerLocation.LEFT.getLocation(),
                OrionExtRulerOverlay.RulerOverview.PAGE.getOverview(),
                orionExtRulerOverlay -> {
                  int rulerPosition;
                  for (rulerPosition = 0; rulerPosition < rulers.size() - 1; rulerPosition++) {
                    String rulerStyleClass = rulers.get(rulerPosition).getStyle().getStyleClass();

                    if ("ruler lines".equals(rulerStyleClass)) {
                      break;
                    }
                  }

                  textView.addRuler(orionExtRulerOverlay, rulerPosition + 1);
                  OrionVcsChangeMarkersRuler orionVcsChangeMarkersRuler =
                      new OrionVcsChangeMarkersRuler(
                          orionExtRulerOverlay, editorWidget.getEditor());

                  VirtualFile file = input.getFile();
                  Project project =
                      file instanceof Resource ? ((Resource) file).getProject() : null;
                  if (project == null) {
                    resolve.apply(null);
                    return;
                  }
                  Container parent = getRoot(project);
                  if (!(parent instanceof Project)) {
                    resolve.apply(null);
                    return;
                  }
                  String vcsName = ((Project) parent).getAttribute("vcs.provider.name");
                  VcsChangeMarkerRenderFactory vcsChangeMarkerRenderFactory =
                      vcsChangeMarkerRenderFactoryMap.get(vcsName);
                  if (vcsChangeMarkerRenderFactory != null) {
                    this.vcsChangeMarkerRender =
                        vcsChangeMarkerRenderFactory.create(orionVcsChangeMarkersRuler);
                  }
                  resolve.apply(null);
                }));
  }

