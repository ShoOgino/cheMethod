  private Element createSignaturesPopupItem(int index) {
    List<SignatureInfo> signatures = signatureHelp.getSignatures();
    SignatureInfo signature = signatures.get(index);
    Element element = Elements.createLiElement(popupResources.popupStyle().item());
    element.setId(Integer.toString(index));

    SpanElement label = Elements.createSpanElement(popupResources.popupStyle().label());
    renderSignature(label, signature, signatureHelp.getActiveParameter());
    element.appendChild(label);
    element.setTabIndex(1);

    element.addEventListener(Event.CLICK, event -> select(element), false);
    element.addEventListener(Event.FOCUS, this, false);

    element.addEventListener(
        DOCUMENTATION,
        event -> {
          Optional<String> docOptional = signature.getDocumentation();
          String documentation = docOptional.isPresent() ? docOptional.get() : "";
          MarkedOverlay.getMarkedPromise()
              .then(
                  marked -> {
                    Widget info = createAdditionalInfoWidget(marked, documentation);
                    if (info != null) {
                      docPopup.clear();
                      docPopup.add(info);
                      docPopup.getElement().getStyle().setOpacity(1);

                      if (!docPopup.isAttached()) {
                        final int x =
                            popupElement.getOffsetLeft() + popupElement.getOffsetWidth() + 3;
                        final int y = popupElement.getOffsetTop();
                        RootPanel.get().add(docPopup);
                        updateMenuPosition(docPopup, x, y);
                      }
                    } else {
                      docPopup.getElement().getStyle().setOpacity(0);
                    }
                  });
        },
        false);

    return element;
  }

