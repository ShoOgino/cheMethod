  @Inject
  public OrionEditorPresenter(
      final CodeAssistantFactory codeAssistantFactory,
      final DeletedFilesController deletedFilesController,
      final BreakpointManager breakpointManager,
      final PreferencesManager preferencesManager,
      final BreakpointRendererFactory breakpointRendererFactory,
      final VcsChangeMarkerRenderFactory vcsChangeMarkerRenderFactory,
      final DialogFactory dialogFactory,
      final DocumentStorage documentStorage,
      final EditorMultiPartStackPresenter editorMultiPartStackPresenter,
      final EditorLocalizationConstants constant,
      final EditorWidgetFactory<OrionEditorWidget> editorWigetFactory,
      final EditorInitializePromiseHolder editorModule,
      final TextEditorPartView editorView,
      final EventBus eventBus,
      final FileTypeIdentifier fileTypeIdentifier,
      final QuickAssistantFactory quickAssistantFactory,
      final WorkspaceAgent workspaceAgent,
      final NotificationManager notificationManager,
      final AppContext appContext,
      final SignatureHelpView signatureHelpView,
      final EditorContextMenu contextMenu,
      final AutoSaveMode autoSaveMode,
      final PromiseProvider promises,
      final ClientServerEventService clientServerEventService,
      final EditorFileStatusNotificationOperation editorFileStatusNotificationOperation,
      final WordDetectionUtil wordDetectionUtil) {
    this.codeAssistantFactory = codeAssistantFactory;
    this.deletedFilesController = deletedFilesController;
    this.breakpointManager = breakpointManager;
    this.preferencesManager = preferencesManager;
    this.breakpointRendererFactory = breakpointRendererFactory;
    this.vcsChangeMarkerRenderFactory = vcsChangeMarkerRenderFactory;
    this.dialogFactory = dialogFactory;
    this.documentStorage = documentStorage;
    this.editorMultiPartStackPresenter = editorMultiPartStackPresenter;
    this.constant = constant;
    this.editorWidgetFactory = editorWigetFactory;
    this.editorModule = editorModule;
    this.editorView = editorView;
    this.generalEventBus = eventBus;
    this.fileTypeIdentifier = fileTypeIdentifier;
    this.quickAssistantFactory = quickAssistantFactory;
    this.workspaceAgent = workspaceAgent;
    this.notificationManager = notificationManager;
    this.appContext = appContext;
    this.signatureHelpView = signatureHelpView;
    this.contextMenu = contextMenu;
    this.autoSaveMode = autoSaveMode;
    this.promises = promises;
    this.clientServerEventService = clientServerEventService;
    this.editorFileStatusNotificationOperation = editorFileStatusNotificationOperation;
    this.wordDetectionUtil = wordDetectionUtil;

    keyBindingsManager = new TemporaryKeyBindingsManager();

    this.editorView.setDelegate(this);
  }

