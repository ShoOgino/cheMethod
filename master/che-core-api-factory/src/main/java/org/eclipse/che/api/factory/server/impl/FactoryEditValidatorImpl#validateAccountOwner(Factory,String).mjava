    /**
     * Ensures that the given user may be an account owner
     *
     * @param factory
     *         the factory to check
     * @param userId
     *         the user id to check
     * @throws org.eclipse.che.api.core.ForbiddenException
     *         occurs when cobra attack
     */
    protected void validateAccountOwner(Factory factory, String userId) throws ForbiddenException, ServerException {
        // Checks if there is an author from the factory (It may be missing for some old factories)
        // And if there is an accountID
        Author author = factory.getCreator();
        if (author == null || author.getAccountId() == null) {
            throw new ForbiddenException(format("You are not authorized for the factory '%s'", factory.getId()));
        }

        // Gets accountID
        String factoryAccountId = factory.getCreator().getAccountId();

        List<Member> members = accountDao.getMembers(factoryAccountId);
        if (members.isEmpty()) {
            throw new ForbiddenException(format("You are not authorized for the factory '%s'", factory.getId()));
        }

        boolean isOwner = false;
        for (Member accountMember : members) {
            if (accountMember.getUserId().equals(userId) && accountMember.getRoles().contains("account/owner")) {
                isOwner = true;
                break;
            }
        }
        if (!isOwner) {
            throw new ForbiddenException(format("You are not an account/owner for the factory '%s'", factory.getId()));
        }
    }

