    @Test
    public void shouldThrowForbiddenExceptionWhenWeTryDeleteAlienStack() throws NotFoundException, ServerException {
        StackImpl stack = StackImpl.builder()
                                   .setId(STACK_ID)
                                   .setName(NAME)
                                   .setDescription(DESCRIPTION)
                                   .setScope(SCOPE)
                                   .setCreator("someUser")
                                   .setTags(tags)
                                   .setSource(stackSourceImpl)
                                   .setComponents(componentsImpl)
                                   .setStackIcon(stackIcon)
                                   .build();

        when(stackDao.getById(STACK_ID)).thenReturn(stack);

        Response response = given().auth()
                                   .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
                                   .when()
                                   .delete(SECURE_PATH + "/stack/" + STACK_ID);

        verify(stackDao).getById(STACK_ID);
        assertEquals(response.getStatusCode(), 403);
        String expectedErrorMessage = format("User '%s' doesn't has access to stack with id '%s'", USER_ID, STACK_ID);
        assertEquals(unwrapDto(response, ServiceError.class).getMessage(), expectedErrorMessage);
    }

