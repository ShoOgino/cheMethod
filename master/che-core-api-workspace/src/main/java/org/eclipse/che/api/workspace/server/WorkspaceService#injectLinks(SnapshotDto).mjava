    private SnapshotDto injectLinks(SnapshotDto snapshotDto) {
        final UriBuilder uriBuilder = getServiceContext().getServiceUriBuilder();
        final Link machineLink = createLink("GET",
                                            getServiceContext().getBaseUriBuilder()
                                                               .path("/machine/{id}")
                                                               .build(snapshotDto.getId())
                                                               .toString(),
                                            APPLICATION_JSON,
                                            "get machine");
        final Link workspaceCfgLink = createLink("GET",
                                                 uriBuilder.clone()
                                                           .path(getClass(), "getRuntimeWorkspaceById")
                                                           .build(snapshotDto.getId())
                                                           .toString(),
                                                 APPLICATION_JSON,
                                                 "get workspace config");
        final Link runtimeWorkspaceLink = createLink("GET",
                                                     uriBuilder.clone()
                                                               .path(getClass(), "getRuntimeWorkspaceById")
                                                               .build(snapshotDto.getWorkspaceId())
                                                               .toString(),
                                                     APPLICATION_JSON,
                                                     "get runtime workspace");
        final Link workspaceSnapshotLink = createLink("GET",
                                                      uriBuilder.clone()
                                                                .path(getClass(), "getSnapshot")
                                                                .build(snapshotDto.getWorkspaceId())
                                                                .toString(),
                                                      APPLICATION_JSON,
                                                      "get workspace's snapshot");
        return snapshotDto.withLinks(asList(machineLink, workspaceCfgLink, runtimeWorkspaceLink, workspaceSnapshotLink));
    }

