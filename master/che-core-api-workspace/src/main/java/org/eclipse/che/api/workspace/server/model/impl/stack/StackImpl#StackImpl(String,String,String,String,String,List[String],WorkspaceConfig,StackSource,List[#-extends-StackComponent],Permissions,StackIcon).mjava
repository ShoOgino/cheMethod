    public StackImpl(String id,
                     String name,
                     @Nullable String description,
                     String scope,
                     String creator,
                     List<String> tags,
                     @Nullable WorkspaceConfig workspaceConfig,
                     @Nullable StackSource source,
                     @Nullable List<? extends StackComponent> components,
                     @Nullable Permissions permissions,
                     @Nullable StackIcon stackIcon) {
        this.id = requireNonNull(id, "Required non-null stack id");
        this.creator = requireNonNull(creator, "Required non-null stack creator");
        setName(name);
        setScope(scope);
        setTags(tags);
        setWorkspaceConfig(workspaceConfig == null ? null : new WorkspaceConfigImpl(workspaceConfig));
        setSource(source == null ? null : new StackSourceImpl(source));

        if (permissions != null) {
            List<Group> groups = permissions.getGroups()
                                            .stream()
                                            .map(group -> new GroupImpl(group.getName(), group.getUnit(), group.getAcl()))
                                            .collect(Collectors.toList());
            this.permissions = new PermissionsImpl(permissions.getUsers(), groups);
        }

        this.stackIcon = stackIcon;
        this.description = description;

        this.components = components == null ? new ArrayList<>() : components.stream()
                                                                             .map(StackComponentImpl::new)
                                                                             .collect(toList());

        if (source == null && workspaceConfig == null) {
            throw new IllegalArgumentException("Require non-null source: 'workspaceConfig' or 'stackSource'");
        }
    }

