    @GET
    @Path("/{id}")
    @Produces(APPLICATION_JSON)
    @GenerateLink(rel = LINK_REL_GET_STACK_BY_ID)
    @RolesAllowed({"user", "system/admin", "system/manager"})
    @ApiOperation(value = "Get the stack by id",
                  notes = "This operation can be performed for stack owner, or for predefined stacks")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains requested stack entity"),
                   @ApiResponse(code = 404, message = "The requested stack was not found"),
                   @ApiResponse(code = 403, message = "The user has not permission get requested stack"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public StackDto getStack(@ApiParam("The stack id") @PathParam("id") final String id) throws ApiException {
        final StackImpl stack = stackDao.getById(id);

        final String userId = EnvironmentContext.getCurrent().getUser().getId();
        if (!userId.equals(stack.getCreator()) &&
            !isSystemUser() &&
            !permissionChecker.hasAccess(stack, userId, "read")) {
            throw new ForbiddenException(format("User '%s' doesn't has access to stack '%s'", userId, id));
        }

        return asStackDto(stack);
    }

