    @GET
    @Path("/{id}/runtime")
    @Produces(APPLICATION_JSON)
    @RolesAllowed("user")
    @ApiOperation(value = "Get the runtime workspace by the id",
                  notes = "This operation can be performed only by the authorized user")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains requested runtime workspace entity"),
                   @ApiResponse(code = 404, message = "The runtime workspace with the specified id does not exist"),
                   @ApiResponse(code = 403, message = "The user is not workspace owner"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public RuntimeWorkspaceDto getRuntimeWorkspaceById(@ApiParam("The workspace id")
                                                       @PathParam("id")
                                                       String id) throws ServerException,
                                                                         BadRequestException,
                                                                         NotFoundException,
                                                                         ForbiddenException {
        final RuntimeWorkspaceImpl runtimeWorkspace = workspaceManager.getRuntimeWorkspace(id);
        ensureUserIsWorkspaceOwner(runtimeWorkspace);
        return injectLinks(asDto(runtimeWorkspace));
    }

