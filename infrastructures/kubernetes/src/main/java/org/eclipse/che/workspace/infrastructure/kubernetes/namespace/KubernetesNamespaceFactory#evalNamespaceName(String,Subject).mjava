  protected String evalNamespaceName(String workspaceId, Subject currentUser)
      throws NotFoundException, ServerException, InfrastructureException, ConflictException,
          ValidationException {
    // This, my friend, is a hack of magnificent proportions put forth as a result of dire time
    // constraints imposed on the tears shedding developer writing these unfortunate lines.
    // The effort required to propagate the full workspace, including the attributes (or some
    // alternative thereof) from the callers (all of which happen to already possess the
    // information) down to this sad place is too effing much to do with confidence in the
    // couple of days left until the release. Let's pretend we will have time to fix this later
    // in the better times...
    Workspace wkspc = workspaceManager.getWorkspace(workspaceId);
    String ns = wkspc.getAttributes().get(Constants.WORKSPACE_INFRASTRUCTURE_NAMESPACE_ATTRIBUTE);

    if (ns != null) {
      LOG.debug(
          "Found target namespace in workspace attributes. Using namespace {} for workspace {}",
          ns,
          workspaceId);
      return ns;
    } else {
      String namespace = resolveLegacyNamespaceName(currentUser, workspaceId);

      if (checkNamespaceExists(namespace)) {
        LOG.debug(
            "The namespace specified using the legacy config exists: {}. Using it for workspace {}.",
            namespace,
            workspaceId);
      } else {
        // ok, the namespace pointed to by the legacy config doesn't exist.. that means there can be
        // no damage done by storing the workspace in the namespace designated by the new way of
        // doing things...

        if (isNullOrEmpty(defaultNamespaceName)) {
          throw new InfrastructureException(
              format(
                  "'che.infra.kubernetes.namespace.default' is not"
                      + " defined and no explicit namespace configured for workspace %s",
                  workspaceId));
        }

        namespace = evalPlaceholders(defaultNamespaceName, currentUser, workspaceId);

        LOG.debug(
            "Evaluated the namespace for workspace {} using the namespace default to {}",
            workspaceId,
            namespace);
      }

      // Now, believe it or not, the horror continues - since the callers are as of now unaware
      // of the namespaces being stored within the workspace, we need to do it all here. Hopefully,
      // one day, when the callers (and workspace manager in particular) support workspace namespace
      // selection, things will make more sense again because this logic will have to move up a
      // layer or two and become infrastructure independent.
      wkspc.getAttributes().put(Constants.WORKSPACE_INFRASTRUCTURE_NAMESPACE_ATTRIBUTE, namespace);
      workspaceManager.updateWorkspace(workspaceId, wkspc);

      return namespace;
    }
  }

