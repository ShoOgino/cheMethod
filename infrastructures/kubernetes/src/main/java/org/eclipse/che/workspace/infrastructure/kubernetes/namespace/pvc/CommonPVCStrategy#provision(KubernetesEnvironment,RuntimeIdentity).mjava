  @Override
  public void provision(KubernetesEnvironment k8sEnv, RuntimeIdentity identity)
      throws InfrastructureException {
    final String workspaceId = identity.getWorkspaceId();
    if (EphemeralWorkspaceUtility.isEphemeral(k8sEnv.getAttributes())) {
      ephemeralWorkspaceAdapter.provision(k8sEnv, identity);
      return;
    }
    log.debug("Provisioning PVC strategy for workspace '{}'", workspaceId);

    PersistentVolumeClaim commonPVC = provisionCommonPVC(k8sEnv, identity);

    provisionCheVolumes(k8sEnv, workspaceId, commonPVC.getMetadata().getName());

    if (preCreateDirs) {
      Set<String> subPaths = combineVolumeMountsSubpaths(k8sEnv);
      if (!subPaths.isEmpty()) {
        commonPVC.setAdditionalProperty(
            format(SUBPATHS_PROPERTY_FMT, workspaceId),
            subPaths.toArray(new String[subPaths.size()]));
      }
    }
    log.debug("PVC strategy provisioning done for workspace '{}'", workspaceId);
  }

