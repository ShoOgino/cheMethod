  /**
   * Start watching the logs of this deployment.
   *
   * @param handler is processing log messages
   * @param podNames pods of interest for watching the logs
   */
  public synchronized void watchLogs(
      PodLogHandler handler,
      LogWatchTimeouts timeouts,
      Set<String> podNames,
      long limitInputStreamBytes)
      throws InfrastructureException {
    if (logWatcher == null) {
      LOG.debug("start watching logs of pods '{}' of  workspace '{}'", podNames, workspaceId);
      logWatcher =
          new LogWatcher(
              clientFactory,
              workspaceId,
              namespace,
              podNames,
              executor,
              timeouts,
              limitInputStreamBytes);
      logWatcher.addLogHandler(handler);
      watchEvents(logWatcher);
    } else {
      LOG.debug("Already watching logs of workspace [{}], just adding log handler", workspaceId);
      logWatcher.addLogHandler(handler);
    }
  }

