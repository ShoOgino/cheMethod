  private void provisionCheVolumes(
      KubernetesEnvironment k8sEnv,
      String workspaceId,
      Map<String, PersistentVolumeClaim> volumeName2PVC) {
    for (PodData pod : k8sEnv.getPodsData().values()) {
      final PodSpec podSpec = pod.getSpec();
      List<Container> containers = new ArrayList<>();
      containers.addAll(podSpec.getContainers());
      containers.addAll(podSpec.getInitContainers());
      for (Container container : containers) {
        final String machineName = Names.machineName(pod, container);
        InternalMachineConfig machineConfig = k8sEnv.getMachines().get(machineName);
        if (machineConfig == null) {
          continue;
        }
        Map<String, Volume> volumes = machineConfig.getVolumes();
        addMachineVolumes(workspaceId, k8sEnv, volumeName2PVC, pod, container, volumes);
      }
    }
  }

