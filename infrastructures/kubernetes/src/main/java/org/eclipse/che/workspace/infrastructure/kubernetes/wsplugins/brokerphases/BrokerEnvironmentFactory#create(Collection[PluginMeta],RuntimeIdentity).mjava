  /**
   * Creates {@link KubernetesEnvironment} with everything needed to deploy Plugin broker.
   *
   * @param pluginsMeta meta info of plugins that needs to be resolved by the broker
   * @param runtimeID ID of the runtime the broker would be started
   * @return kubernetes environment (or its extension) with the Plugin broker objects
   */
  public E create(Collection<PluginMeta> pluginsMeta, RuntimeIdentity runtimeID)
      throws InfrastructureException {
    String configMapName = generateUniqueConfigMapName();
    String podName = "che-plugin-broker";
    List<Pair<String, String>> envVars =
        Arrays.asList(
            authEnableEnvVarProvider.get(runtimeID), machineTokenEnvVarProvider.get(runtimeID));
    Pod pod = newPod(podName, runtimeID, configMapName, envVars);
    String machineName = Names.machineName(pod, pod.getSpec().getContainers().get(0));
    InternalMachineConfig machine = new InternalMachineConfig();
    machine.getVolumes().put(PLUGINS_VOLUME_NAME, new VolumeImpl().withPath("/plugins"));

    ConfigMap configMap = newConfigMap(configMapName, pluginsMeta);
    return doCreate(machineName, machine, configMapName, configMap, pod);
  }

