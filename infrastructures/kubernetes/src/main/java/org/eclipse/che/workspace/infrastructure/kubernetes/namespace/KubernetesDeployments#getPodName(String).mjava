  /**
   * Returns the name of a specified Pod given either the actual Pod name or the name of the
   * Deployment that controls it. <br>
   * This is necessary because we are trying to transparently wrap Pods in Deployment; attempting to
   * create a Pod named {@code testPod} will result in a Deployment with name {@code testPod}, which
   * will in turn create a Pod named e.g {@code testPod-1-xxxxx}.
   *
   * @param name Pod or Deployment name
   * @return the name of the intended pod.
   */
  private String getPodName(String name) throws InfrastructureException {
    Optional<Pod> pod = findPod(name);
    if (pod.isPresent()) {
      return pod.get().getMetadata().getName();
    } else {
      throw new InfrastructureException(format("Failed to find pod with name %s", name));
    }
  }

