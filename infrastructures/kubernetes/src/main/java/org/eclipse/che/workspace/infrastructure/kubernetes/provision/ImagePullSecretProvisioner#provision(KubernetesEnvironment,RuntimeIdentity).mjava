  @Override
  public void provision(KubernetesEnvironment k8sEnv, RuntimeIdentity identity)
      throws InfrastructureException {

    AuthConfigs credentials = credentialsProvider.getCredentials();
    if (credentials == null) {
      return;
    }

    Map<String, AuthConfig> authConfigs = credentials.getConfigs();

    if (authConfigs == null || authConfigs.isEmpty()) {
      return;
    }

    try {
      String encodedConfig =
          Base64.getEncoder().encodeToString(generateDockerCfg(authConfigs).getBytes());

      Secret secret =
          new SecretBuilder()
              .addToData(".dockercfg", encodedConfig)
              .withType("kubernetes.io/dockercfg")
              .withNewMetadata()
              .withName(SECRET_NAME)
              .endMetadata()
              .build();

      clientFactory
          .create(identity.getWorkspaceId())
          .secrets()
          .inNamespace(namespaceFactory.create(identity.getWorkspaceId()).getName())
          .createOrReplace(secret);
    } catch (KubernetesClientException e) {
      throw new InfrastructureException(
          "Unexpected exception occured while adding the 'ImagePullSecret' built from private docker registry user preferences",
          e);
    }

    k8sEnv.getPods().values().forEach(this::provision);
  }

