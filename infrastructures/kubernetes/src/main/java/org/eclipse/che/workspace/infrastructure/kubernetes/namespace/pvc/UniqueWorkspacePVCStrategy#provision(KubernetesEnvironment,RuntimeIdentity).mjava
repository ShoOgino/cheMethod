  @Override
  public void provision(KubernetesEnvironment k8sEnv, RuntimeIdentity identity)
      throws InfrastructureException {
    final String workspaceId = identity.getWorkspaceId();
    if (EphemeralWorkspaceUtility.isEphemeral(k8sEnv.getAttributes())) {
      ephemeralWorkspaceAdapter.provision(k8sEnv, identity);
      return;
    }

    LOG.debug("Provisioning PVC strategy for workspace '{}'", workspaceId);

    fillInExistingPVCs(k8sEnv, workspaceId);

    // fetches all existing PVCs related to given workspace and groups them by volume name
    final Map<String, PersistentVolumeClaim> volumeName2PVC =
        groupByVolumeName(k8sEnv.getPersistentVolumeClaims().values());

    processUserDefinedPVCs(k8sEnv, identity, workspaceId, volumeName2PVC);

    provisionCheVolumes(k8sEnv, workspaceId, volumeName2PVC);

    LOG.debug("PVC strategy provisioning done for workspace '{}'", workspaceId);
  }

