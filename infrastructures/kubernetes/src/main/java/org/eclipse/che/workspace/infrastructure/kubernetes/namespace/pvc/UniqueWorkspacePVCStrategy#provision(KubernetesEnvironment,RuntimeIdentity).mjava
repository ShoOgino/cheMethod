  @Override
  public void provision(KubernetesEnvironment k8sEnv, RuntimeIdentity identity)
      throws InfrastructureException {
    final String workspaceId = identity.getWorkspaceId();
    if (EphemeralWorkspaceUtility.isEphemeral(k8sEnv.getAttributes())) {
      ephemeralWorkspaceAdapter.provision(k8sEnv, identity);
      return;
    }

    LOG.debug("Provisioning PVC strategy for workspace '{}'", workspaceId);

    Map<String, PersistentVolumeClaim> userDefinedPVCs =
        new HashMap<>(k8sEnv.getPersistentVolumeClaims());

    k8sEnv.getPersistentVolumeClaims().clear();
    fillInExistingPVCs(k8sEnv, identity);

    pvcProvisioner.provision(k8sEnv, userDefinedPVCs);

    pvcProvisioner.convertCheVolumes(k8sEnv, workspaceId);

    subpathPrefixes.prefixVolumeMountsSubpaths(k8sEnv, identity.getWorkspaceId());

    provisionWorkspaceIdLabel(k8sEnv.getPersistentVolumeClaims(), identity.getWorkspaceId());

    LOG.debug("PVC strategy provisioning done for workspace '{}'", workspaceId);
  }

