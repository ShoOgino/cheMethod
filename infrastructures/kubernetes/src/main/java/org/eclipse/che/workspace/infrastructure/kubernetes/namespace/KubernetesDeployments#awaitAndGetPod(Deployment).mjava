  /**
   * Wait until deployment is ready and return created Pod
   *
   * @param deploy the deployment responsible for creating the pod
   * @return the created Pod
   * @throws InfrastructureException if timeout elapses while waiting.
   */
  private Pod awaitAndGetPod(Deployment deploy) throws InfrastructureException {
    String deploymentName = deploy.getMetadata().getName();
    try {
      clientFactory
          .create(workspaceId)
          .extensions()
          .deployments()
          .inNamespace(namespace)
          .withName(deploymentName)
          .waitUntilReady(POD_CREATION_TIMEOUT_MIN, TimeUnit.MINUTES);
      return get(deploymentName)
          .orElseThrow(
              () ->
                  new InfrastructureException(
                      String.format("Failed to create Deployment %s", deploymentName)));
    } catch (InterruptedException e) {
      throw new InfrastructureException(
          String.format("Timeout while creating Deployment %s", deploymentName));
    }
  }

