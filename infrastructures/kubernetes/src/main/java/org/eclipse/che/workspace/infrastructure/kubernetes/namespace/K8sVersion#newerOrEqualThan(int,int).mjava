  /**
   * Returns 'true' if k8s version is newer or equal than given {@code major.minor}. 'false' if k8s
   * version is older.
   *
   * <p>In case of any issue like infrastructure or parse failures, assume we're on newer version
   * and return 'true'.
   *
   * @param major major version to compare
   * @param minor minor version to compare
   * @return true if k8s version is newer or equal than given {@code major.minor}
   */
  public boolean newerOrEqualThan(int major, int minor) {
    try {
      initVersionInfo();
    } catch (InfrastructureException ie) {
      LOG.warn("Unable to obtain k8s VersionInfo.", ie);
      return true;
    }

    if (this.major > major) {
      return true;
    } else if (this.major == major) {
      return this.minor >= minor;
    } else {
      return false;
    }
  }

