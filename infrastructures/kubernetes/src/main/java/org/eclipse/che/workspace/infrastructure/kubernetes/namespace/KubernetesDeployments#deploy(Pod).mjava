  /**
   * Starts the specified Pod via a Deployment.
   *
   * @param pod pod to deploy
   * @return created pod
   * @throws InfrastructureException when any exception occurs
   */
  public Pod deploy(Pod pod) throws InfrastructureException {
    putLabel(pod, CHE_WORKSPACE_ID_LABEL, workspaceId);

    ObjectMeta metadata = pod.getMetadata();
    PodSpec podSpec = pod.getSpec();
    podSpec.setRestartPolicy("Always"); // Only allowable value

    Deployment deployment =
        new DeploymentBuilder()
            .withMetadata(metadata)
            .withNewSpec()
            .withNewSelector()
            .withMatchLabels(metadata.getLabels())
            .endSelector()
            .withReplicas(1)
            .withNewTemplate()
            .withMetadata(metadata)
            .withSpec(podSpec)
            .endTemplate()
            .endSpec()
            .build();
    return createDeployment(deployment, workspaceId);
  }

