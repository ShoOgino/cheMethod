  private Deployment buildDeployment(
      String name,
      String image,
      String memoryLimit,
      String cpuRequest,
      String cpuLimit,
      List<EnvVar> env,
      List<String> command,
      List<String> args) {
    Container container =
        new ContainerBuilder()
            .withImage(image)
            .withImagePullPolicy(imagePullPolicy)
            .withName(name)
            .withEnv(env)
            .withCommand(command)
            .withArgs(args)
            .build();

    Containers.addRamLimit(container, memoryLimit);
    if (!isNullOrEmpty(cpuRequest)) {
      Containers.addCpuRequest(container, KubernetesSize.toCores(cpuRequest));
    }
    if (!isNullOrEmpty(cpuLimit)) {
      Containers.addCpuLimit(container, KubernetesSize.toCores(cpuLimit));
    }
    return new DeploymentBuilder()
        .withNewMetadata()
        .addToLabels(CHE_COMPONENT_NAME_LABEL, name)
        .withName(name)
        .endMetadata()
        .withNewSpec()
        .withNewSelector()
        .addToMatchLabels(CHE_COMPONENT_NAME_LABEL, name)
        .endSelector()
        .withNewTemplate()
        .withNewMetadata()
        .withName(name)
        .addToLabels(CHE_COMPONENT_NAME_LABEL, name)
        .addToAnnotations(Names.createMachineNameAnnotations(name, name))
        .endMetadata()
        .withNewSpec()
        .withContainers(container)
        .endSpec()
        .endTemplate()
        .endSpec()
        .build();
  }

