  /**
   * Exposes given 'externalServers' to either subdomain or subpath, using 2 different {@link
   * ExternalServerExposer}s. Which one to use for individual server is determined with {@link
   * ServerConfig#DEVFILE_ENDPOINT} attribute.
   *
   * @param k8sEnv environment
   * @param machineName machine containing servers
   * @param serviceName service associated with machine, mapping all machine server ports
   * @param serverId non-null for a unique server, null for a compound set of servers that should be
   *     exposed together.
   * @param servicePort specific service port to be exposed externally
   * @param externalServers server configs of servers to be exposed externally
   */
  @Override
  public void expose(
      T k8sEnv,
      String machineName,
      String serviceName,
      String serverId,
      ServicePort servicePort,
      Map<String, ServerConfig> externalServers) {

    if (serverId == null) {
      // this is the ID for non-unique servers
      serverId = servicePort.getName();
    }

    Map<String, ServerConfig> subpathServers = new HashMap<>();
    Map<String, ServerConfig> subdomainServers = new HashMap<>();

    for (String esKey : externalServers.keySet()) {
      ServerConfig serverConfig = externalServers.get(esKey);
      if (Boolean.parseBoolean(
          serverConfig.getAttributes().getOrDefault(DEVFILE_ENDPOINT, FALSE.toString()))) {
        subdomainServers.put(esKey, serverConfig);
      } else {
        subpathServers.put(esKey, serverConfig);
      }
    }

    if (!subpathServers.isEmpty()) {
      subpathServerExposer.expose(
          k8sEnv, machineName, serviceName, serverId, servicePort, subpathServers);
    }

    if (!subdomainServers.isEmpty()) {
      subdomainServerExposer.expose(
          k8sEnv, machineName, serviceName, serverId, servicePort, subdomainServers);
    }
  }

