  @Traced
  @Beta
  public void provision(RuntimeIdentity id, StartSynchronizer startSynchronizer, E environment)
      throws InfrastructureException {

    Collection<PluginFQN> pluginFQNs = pluginFQNParser.parsePlugins(environment.getAttributes());
    if (pluginFQNs.isEmpty()) {
      return;
    }
    LOG.debug("Started sidecar tooling provisioning workspace '{}'", id.getWorkspaceId());
    String recipeType = environment.getType();
    ChePluginsApplier pluginsApplier = workspaceNextAppliers.get(recipeType);
    if (pluginsApplier == null) {
      throw new InfrastructureException(
          "Sidecar tooling configuration is not supported with environment type " + recipeType);
    }

    boolean isEphemeral = EphemeralWorkspaceUtility.isEphemeral(environment.getAttributes());
    List<ChePlugin> chePlugins =
        pluginBrokerManager.getTooling(id, startSynchronizer, pluginFQNs, isEphemeral);

    pluginsApplier.apply(id, environment, chePlugins);
    if (isEphemeral) {
      brokerApplier.apply(environment, id, pluginFQNs);
    }
    LOG.debug("Finished sidecar tooling provisioning workspace '{}'", id.getWorkspaceId());
  }

