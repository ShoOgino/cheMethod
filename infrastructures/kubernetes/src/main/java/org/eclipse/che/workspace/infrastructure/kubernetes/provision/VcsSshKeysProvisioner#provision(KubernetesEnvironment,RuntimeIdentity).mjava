  @Override
  @Traced
  public void provision(KubernetesEnvironment k8sEnv, RuntimeIdentity identity)
      throws InfrastructureException {
    TracingTags.WORKSPACE_ID.set(identity::getWorkspaceId);

    List<SshPairImpl> sshPairs;
    try {
      sshPairs = sshManager.getPairs(identity.getOwnerId(), "vcs");
    } catch (ServerException e) {
      LOG.warn("Unable to get SSH Keys. Cause: {}", e.getMessage());
      return;
    }
    if (sshPairs.isEmpty()) {
      try {
        sshPairs =
            singletonList(
                sshManager.generatePair(
                    identity.getOwnerId(), "vcs", "default-" + new Date().getTime()));
      } catch (ServerException | ConflictException e) {
        LOG.warn("Unable to generate the initial SSH key. Cause: {}", e.getMessage());
        return;
      }
    }

    doProvisionSshKeys(sshPairs, k8sEnv, identity.getWorkspaceId());

    StringBuilder sshConfigData = new StringBuilder();
    for (SshPair sshPair : sshPairs) {
      sshConfigData.append(buildConfig(sshPair.getName()));
    }

    String sshConfigMapName = identity.getWorkspaceId() + SSH_CONFIG_MAP_NAME_SUFFIX;
    doProvisionSshConfig(sshConfigMapName, sshConfigData.toString(), k8sEnv);
  }

