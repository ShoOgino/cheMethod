  /**
   * Any devfile components based on Kubernetes recipes need to register the binding using this
   * method so that the {@link KubernetesComponentProvisioner} and {@link
   * KubernetesComponentToWorkspaceApplier} can work properly with these components.
   *
   * @param baseBinder the binder available in the Guice module calling this method.
   * @param componentTypes the component types to be registered as handled by Kubernetes recipes
   */
  public static void addKubernetesBasedComponentTypeBindings(
      Binder baseBinder, String... componentTypes) {
    Multibinder<String> binder =
        Multibinder.newSetBinder(
            baseBinder, String.class, Names.named(KUBERNETES_BASED_COMPONENTS_KEY_NAME));
    for (String envType : componentTypes) {
      binder.addBinding().toInstance(envType);
    }
  }

