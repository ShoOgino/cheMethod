  @Override
  public List<ChePlugin> execute() throws InfrastructureException {
    LOG.debug("Starting brokers deployment for workspace '{}'", workspaceId);
    KubernetesDeployments deployments = namespace.deployments();
    try {
      // Creates config map that can inject Che tooling plugins meta files into a Che plugin
      // broker in a workspace.
      for (ConfigMap configMap : brokerEnvironment.getConfigMaps().values()) {
        namespace.configMaps().create(configMap);
      }

      Pod pluginBrokerPod = getPluginBrokerPod(brokerEnvironment.getPods());

      if (factory.isConfigured()) {
        UnrecoverablePodEventListener unrecoverableEventListener =
            factory.create(
                ImmutableSet.of(pluginBrokerPod.getMetadata().getName()),
                this::handleUnrecoverableEvent);
        namespace.deployments().watchEvents(unrecoverableEventListener);
      }

      Pod barePod = deployments.create(pluginBrokerPod);

      deployments.waitRunningAsync(barePod.getMetadata().getName());
      LOG.debug("Brokers deployment finished for workspace '{}'", workspaceId);
      return nextPhase.execute();
    } finally {
      namespace.deployments().stopWatch();
      try {
        deployments.delete();
      } catch (InfrastructureException e) {
        LOG.error("Broker deployment removal failed. Error: " + e.getLocalizedMessage(), e);
      }
      try {
        namespace.configMaps().delete();
      } catch (InfrastructureException ex) {
        LOG.error(
            "Broker deployment config map removal failed. Error: " + ex.getLocalizedMessage(), ex);
      }
    }
  }

