  /**
   * Adds a proxy before a service that will perform the JWT authentication on its behalf.
   *
   * @param listenPort the port to listen on
   * @param upstream the URL to the backend service this proxy should be put in front of
   * @param excludes the list of unsecured paths that the proxy should let pass through
   * @param cookiesAuthEnabled should the JWT proxy use cookies?
   * @param cookiePath the path of the cookie. This is should either be "/" or some portion of the
   *     URL the JWT proxy will be exposed on. It is used to enable using different proxies for
   *     different services, each with a different auth cookie. Super useful for having multiple
   *     workspaces, each authenticated with its machine token.
   * @param publicBasePath the prefix used to generate the redirect back to the original page from
   *     the auth page by the JWT proxy. This is to work across path-rewriting proxies like nginx
   *     ingress controller.
   */
  public void addVerifierProxy(
      Integer listenPort,
      String upstream,
      Set<String> excludes,
      boolean cookiesAuthEnabled,
      String cookiePath,
      String publicBasePath) {
    verifierProxies.add(
        new VerifierProxy(
            listenPort, upstream, excludes, cookiesAuthEnabled, cookiePath, publicBasePath));
  }

