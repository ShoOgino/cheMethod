  @Override
  @Traced
  public void provision(T k8sEnv, RuntimeIdentity identity) throws InfrastructureException {
    final String workspaceId = identity.getWorkspaceId();

    TracingTags.WORKSPACE_ID.set(workspaceId);

    final Map<String, ConfigMap> configMaps = k8sEnv.getConfigMaps();
    Map<String, String> configMapNameTranslation = new HashMap<>();
    for (ConfigMap configMap : configMaps.values()) {
      final String originalName = configMap.getMetadata().getName();
      putLabel(configMap.getMetadata(), Constants.CHE_ORIGINAL_NAME_LABEL, originalName);
      final String uniqueName = Names.uniqueResourceName(originalName, workspaceId);
      configMap.getMetadata().setName(uniqueName);
      configMapNameTranslation.put(originalName, uniqueName);
    }

    final Collection<PodData> podData = k8sEnv.getPodsData().values();
    for (PodData pod : podData) {
      final ObjectMeta podMeta = pod.getMetadata();
      putLabel(podMeta, Constants.CHE_ORIGINAL_NAME_LABEL, podMeta.getName());
      final String podName = Names.uniqueResourceName(podMeta.getName(), workspaceId);
      podMeta.setName(podName);
      if (configMapNameTranslation.size() > 0) {
        rewriteConfigMapNames(pod, configMapNameTranslation);
      }
    }

    // We explicitly need to modify the deployments in the environment to provision unique names
    // for them.
    final Collection<Deployment> deployments = k8sEnv.getDeploymentsCopy().values();
    for (Deployment deployment : deployments) {
      final ObjectMeta deploymentMeta = deployment.getMetadata();
      final String originalName = deploymentMeta.getName();
      putLabel(deploymentMeta, Constants.CHE_ORIGINAL_NAME_LABEL, originalName);
      final String deploymentName = Names.uniqueResourceName(originalName, workspaceId);
      deploymentMeta.setName(deploymentName);
    }

    final Set<Ingress> ingresses = new HashSet<>(k8sEnv.getIngresses().values());
    k8sEnv.getIngresses().clear();
    for (Ingress ingress : ingresses) {
      final ObjectMeta ingressMeta = ingress.getMetadata();
      putLabel(ingress, Constants.CHE_ORIGINAL_NAME_LABEL, ingressMeta.getName());
      final String ingressName = Names.generateName("ingress");
      ingressMeta.setName(ingressName);
      k8sEnv.getIngresses().put(ingressName, ingress);
    }
  }

