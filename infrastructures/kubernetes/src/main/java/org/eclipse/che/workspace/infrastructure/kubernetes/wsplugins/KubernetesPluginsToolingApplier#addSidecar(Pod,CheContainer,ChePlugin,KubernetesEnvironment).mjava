  /**
   * Adds k8s and Che specific configuration of a sidecar into the environment. For example:
   * <li>k8s container configuration {@link Container}
   * <li>k8s service configuration {@link Service}
   * <li>Che machine config {@link InternalMachineConfig}
   *
   * @throws InfrastructureException when any error occurs
   */
  private void addSidecar(
      Pod pod,
      CheContainer container,
      ChePlugin chePlugin,
      KubernetesEnvironment kubernetesEnvironment)
      throws InfrastructureException {

    K8sContainerResolver k8sContainerResolver =
        new K8sContainerResolverBuilder()
            .setContainer(container)
            .setPluginEndpoints(chePlugin.getEndpoints())
            .build();
    List<ChePluginEndpoint> containerEndpoints = k8sContainerResolver.getEndpoints();

    Container k8sContainer = k8sContainerResolver.create();

    String machineName = Names.machineName(pod, k8sContainer);
    pod.getSpec().getContainers().add(k8sContainer);

    MachineResolver machineResolver =
        new MachineResolverBuilder()
            .setCheContainer(container)
            .setContainer(k8sContainer)
            .setContainerEndpoints(containerEndpoints)
            .setDefaultSidecarMemorySizeAttribute(defaultSidecarMemorySizeAttribute)
            .build();

    InternalMachineConfig machineConfig = machineResolver.getMachine();
    kubernetesEnvironment.getMachines().put(machineName, machineConfig);

    addEndpointsServices(kubernetesEnvironment, containerEndpoints, pod.getMetadata().getName());
  }

