  @Nullable
  private List<ChePlugin> parseTooling(String toolingString) {
    if (!isNullOrEmpty(toolingString)) {
      try {
        List<ChePlugin> plugins =
            objectMapper.readValue(toolingString, new TypeReference<List<ChePlugin>>() {});
        // when id of plugin is not set, we can compose it from publisher, name and version
        return plugins.stream().map(this::composePluginIdWhenNull).collect(Collectors.toList());
      } catch (IOException e) {
        LOG.error("Parsing Che plugin broker event failed. Error: " + e.getMessage(), e);
      }
    }
    return null;
  }

