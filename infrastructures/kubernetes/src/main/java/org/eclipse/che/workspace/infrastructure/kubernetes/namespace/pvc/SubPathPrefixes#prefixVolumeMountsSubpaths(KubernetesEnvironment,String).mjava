  /**
   * Prefixes volumes mounts of containers inside of the specified kubernetes environment.
   *
   * <p>Subpaths have the following format: '{workspaceId}/{Che Volume name|PVC name}'.<br>
   * Where Che Volume is used if it is present in PVC labels, otherwise PVC name will be used.<br>
   * Note that logs volume has the special format: '{workspaceId}/{volumeName}/{machineName}'. It is
   * done in this way to avoid conflicts e.g. two identical agents inside different machines produce
   * the same log file.
   *
   * @param k8sEnv environment to process
   * @param workspaceId workspace id that should be used as prefix
   */
  public void prefixVolumeMountsSubpaths(KubernetesEnvironment k8sEnv, String workspaceId) {
    for (PodData pod : k8sEnv.getPodsData().values()) {
      Map<String, String> volumeToCheVolumeName = new HashMap<>();
      for (io.fabric8.kubernetes.api.model.Volume volume : pod.getSpec().getVolumes()) {
        if (volume.getPersistentVolumeClaim() == null) {
          continue;
        }
        PersistentVolumeClaim pvc =
            k8sEnv
                .getPersistentVolumeClaims()
                .get(volume.getPersistentVolumeClaim().getClaimName());

        String cheVolumeName = pvc.getMetadata().getLabels().get(CHE_VOLUME_NAME_LABEL);
        if (cheVolumeName == null) {
          cheVolumeName = pvc.getMetadata().getName();
          pvc.getMetadata().getLabels().put(CHE_VOLUME_NAME_LABEL, cheVolumeName);
        }
        volumeToCheVolumeName.put(volume.getName(), cheVolumeName);
      }

      if (volumeToCheVolumeName.isEmpty()) {
        // Pod does not have any volume that references PVC
        continue;
      }

      Stream.concat(
              pod.getSpec().getContainers().stream(), pod.getSpec().getInitContainers().stream())
          .forEach(
              c -> {
                for (VolumeMount volumeMount : c.getVolumeMounts()) {
                  String pvcName = volumeToCheVolumeName.get(volumeMount.getName());
                  if (pvcName == null) {
                    // should not happens since Volume<>PVC links are checked during recipe
                    // validation
                    continue;
                  }

                  String volumeSubPath =
                      getVolumeMountSubpath(
                          volumeMount, pvcName, workspaceId, Names.machineName(pod, c));
                  volumeMount.setSubPath(volumeSubPath);
                }
              });
    }
  }

