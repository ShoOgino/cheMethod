  @Transactional(rollbackOn = InfrastructureException.class)
  protected Optional<KubernetesRuntimeState> find(String workspaceId)
      throws InfrastructureException {
    try {
      KubernetesRuntimeState queried =
          managerProvider
              .get()
              .createNamedQuery("KubernetesRuntime.getByWorkspaceId", KubernetesRuntimeState.class)
              .setParameter("workspaceId", workspaceId)
              .getSingleResult();
      return Optional.of(queried);
    } catch (NoResultException e) {
      return Optional.empty();
    } catch (RuntimeException x) {
      throw new InfrastructureException(x.getMessage(), x);
    }
  }

