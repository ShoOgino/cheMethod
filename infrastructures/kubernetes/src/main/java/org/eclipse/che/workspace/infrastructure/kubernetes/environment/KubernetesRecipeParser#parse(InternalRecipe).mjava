  /**
   * Parses Kubernetes objects from recipe.
   *
   * @param recipe that contains objects to parse
   * @return parsed objects
   * @throws IllegalArgumentException if recipe content is null
   * @throws IllegalArgumentException if recipe content type is null
   * @throws ValidationException if recipe content has broken format
   * @throws ValidationException if recipe content has unrecognized objects
   * @throws InfrastructureException when exception occurred during kubernetes client creation
   */
  public List<HasMetadata> parse(InternalRecipe recipe)
      throws ValidationException, InfrastructureException {
    String content = recipe.getContent();
    String contentType = recipe.getContentType();
    checkNotNull(contentType, "Recipe content type must not be null");

    if (!SUPPORTED_CONTENT_TYPES.contains(contentType)) {
      throw new ValidationException(
          format(
              "Provided environment recipe content type '%s' is unsupported. Supported values are: %s",
              contentType, String.join(", ", SUPPORTED_CONTENT_TYPES)));
    }

    return parse(content);
  }

