  /**
   * Given the ingress path transformation from the configuration, this method constructs a regex
   * that is able to extract the original path from a value transformed by the path transformation.
   * E.g. when applied to the transformed path, the regex will extract the substring corresponding
   * to the original "%s" in the path transformation.
   *
   * @param pathTransformFmt the path transformation format
   * @return the regex that essentially reverts the effect of the path transformation
   */
  private static Pattern extractPathFromFmt(String pathTransformFmt) {
    if (pathTransformFmt == null) {
      return Pattern.compile("^(.*)$");
    }
    Matcher m = PATH_FORMAT_DECONSTRUCTION_REGEX.matcher(pathTransformFmt);
    if (m.matches() && m.groupCount() == 2) {
      String prefix = Pattern.quote(m.group(1));
      String suffix = Pattern.quote(m.group(2));
      return Pattern.compile("^" + prefix + "(.*)" + suffix + "$");
    } else {
      LOGGER.warn(
          format(
              "Invalid path transformation format '%s' could not be successfully matched by the"
                  + " deconstruction regex '%s'. Using the path transformation as is which can result in malfunctioning"
                  + " ingresses.",
              pathTransformFmt, PATH_FORMAT_DECONSTRUCTION_REGEX));
      return Pattern.compile(Pattern.quote(pathTransformFmt));
    }
  }

