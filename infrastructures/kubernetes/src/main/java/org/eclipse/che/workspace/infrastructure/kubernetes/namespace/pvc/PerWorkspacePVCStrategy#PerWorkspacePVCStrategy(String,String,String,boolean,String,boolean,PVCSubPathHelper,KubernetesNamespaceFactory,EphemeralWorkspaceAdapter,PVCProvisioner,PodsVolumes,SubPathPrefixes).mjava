  @Inject
  public PerWorkspacePVCStrategy(
      @Named("che.infra.kubernetes.pvc.name") String pvcName,
      @Named("che.infra.kubernetes.pvc.quantity") String pvcQuantity,
      @Named("che.infra.kubernetes.pvc.access_mode") String pvcAccessMode,
      @Named("che.infra.kubernetes.pvc.precreate_subpaths") boolean preCreateDirs,
      @Named("che.infra.kubernetes.pvc.storage_class_name") String pvcStorageClassName,
      @Named("che.infra.kubernetes.pvc.wait_bound") boolean waitBound,
      PVCSubPathHelper pvcSubPathHelper,
      KubernetesNamespaceFactory factory,
      EphemeralWorkspaceAdapter ephemeralWorkspaceAdapter,
      PVCProvisioner pvcProvisioner,
      PodsVolumes podsVolumes,
      SubPathPrefixes subpathPrefixes) {
    super(
        pvcName,
        pvcQuantity,
        pvcAccessMode,
        preCreateDirs,
        pvcStorageClassName,
        waitBound,
        pvcSubPathHelper,
        factory,
        ephemeralWorkspaceAdapter,
        pvcProvisioner,
        podsVolumes,
        subpathPrefixes);
    this.pvcNamePrefix = pvcName;
    this.factory = factory;
    this.pvcAccessMode = pvcAccessMode;
    this.pvcQuantity = pvcQuantity;
    this.pvcStorageClassName = pvcStorageClassName;
  }

