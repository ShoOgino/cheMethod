    @Override
    public void handle(Action action, Pod pod) {
      eventPublisher.sendAbnormalStoppingEvent(
          getContext().getIdentity(),
          format("Pod '%s' was abnormally stopped", pod.getMetadata().getName()));
      // Cancels workspace servers probes if any
      probeScheduler.cancel(getContext().getIdentity().getWorkspaceId());
      if (pod.getStatus() != null && POD_STATUS_PHASE_FAILED.equals(pod.getStatus().getPhase())) {
        try {
          internalStop(emptyMap());
        } catch (InfrastructureException ex) {
          LOG.error("Kubernetes environment stop failed cause '{}'", ex.getMessage());
        } finally {
          eventPublisher.sendAbnormalStoppedEvent(
              getContext().getIdentity(),
              format("Pod '%s' was abnormally stopped", pod.getMetadata().getName()));
        }
      }
    }

