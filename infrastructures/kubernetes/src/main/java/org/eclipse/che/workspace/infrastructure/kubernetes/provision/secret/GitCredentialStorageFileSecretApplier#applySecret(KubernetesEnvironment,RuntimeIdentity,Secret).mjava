  @Override
  public void applySecret(KubernetesEnvironment env, RuntimeIdentity runtimeIdentity, Secret secret)
      throws InfrastructureException {
    super.applySecret(env, runtimeIdentity, secret);
    final String secretMountPath = secret.getMetadata().getAnnotations().get(ANNOTATION_MOUNT_PATH);
    Set<String> keys = secret.getData().keySet();
    if (keys.size() != 1) {
      throw new InfrastructureException(
          format(
              "Invalid git credential secret data. It should contain only 1 data item but it have %d",
              keys.size()));
    }
    Path gitSecretFilePath = Paths.get(secretMountPath, keys.iterator().next());
    ConfigMap gitConfigMap =
        env.getConfigMaps()
            .get(
                runtimeIdentity.getWorkspaceId() + GitConfigProvisioner.GIT_CONFIG_MAP_NAME_SUFFIX);
    if (gitConfigMap != null) {
      Map<String, String> gitConfigMapData = gitConfigMap.getData();
      String gitConfig = gitConfigMapData.get(GitConfigProvisioner.GIT_CONFIG);
      if (gitConfig != null) {
        if (gitConfig.contains("helper = store --file") && gitConfig.contains("[credential]")) {
          throw new InfrastructureException(
              "Multiple git credentials secrets found. Please remove duplication.");
        }

        HashMap<String, String> newGitConfigMapData = new HashMap<>(gitConfigMapData);
        newGitConfigMapData.put(
            GitConfigProvisioner.GIT_CONFIG,
            gitConfig
                + String.format(GIT_CREDENTIALS_FILE_STORE_PATTERN, gitSecretFilePath.toString()));
        gitConfigMap.setData(newGitConfigMapData);
      }
    }
  }

