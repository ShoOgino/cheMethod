  /**
   * True if namespace is potentially created for the workspace, false otherwise.
   *
   * <p>The logic is a little bit non-trivial and best expressed by just fully evaluting the truth
   * table as below ({@code ...namespace} stands for the legacy namespace property, {@code
   * ...namespace.default} stands for the namespace default property):
   *
   * <pre>{@code
   * ...namespace    | ...namespace exists | ...namespace.default | creating?
   * no-placeholders |       no            |       null           | error
   * no-placeholders |       no            |   no-placeholders    | no
   * no-placeholders |       no            |    placeholders      | yes
   * no-placeholders |      yes            |       null           | no
   * no-placeholders |      yes            |   no-placeholders    | no
   * no-placeholders |      yes            |    placeholders      | no
   *  placeholders   |       no            |        null          | error
   *  placeholders   |       no            |   no-placeholders    | no
   *  placeholders   |       no            |    placeholders      | yes
   *  placeholders   |      yes            |        null          | yes
   *  placeholders   |      yes            |   no-placeholders    | yes
   *  placeholders   |      yes            |    placeholders      | yes
   * }</pre>
   */
  protected boolean isCreatingNamespace(String workspaceId) throws InfrastructureException {
    boolean legacyExists =
        checkNamespaceExists(
            resolveLegacyNamespaceName(EnvironmentContext.getCurrent().getSubject(), workspaceId));

    // legacy namespace exists and should be used
    if (legacyExists) {
      // if it contains any placeholder("" is <workspaceid>) - it indicates that Che created
      // namespace by itself
      return isNullOrEmpty(legacyNamespaceName) || hasPlaceholders(legacyNamespaceName);
    }

    if (isNullOrEmpty(defaultNamespaceName)) {
      throw new InfrastructureException(
          "Cannot determine whether a new namespace and service account should be"
              + " created for workspace %s. There is no pre-existing workspace namespace to be"
              + " found using the legacy `che.infra.kubernetes.namespace` property yet the"
              + " `che.infra.kubernetes.namespace.default` property is undefined.");
    }

    return hasPlaceholders(defaultNamespaceName);
  }

