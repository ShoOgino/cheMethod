  /**
   * Submits the result of a broker execution.
   *
   * @param toolingFromBroker tooling evaluated by a broker that needs to be added into a workspace
   * @throws InfrastructureException if called second time which indicates incorrect usage of the
   *     {@link BrokersResult}
   * @throws IllegalStateException if called before the call of {@link #get(long, TimeUnit)}
   */
  public void setResult(List<ChePlugin> toolingFromBroker) throws InfrastructureException {
    if (!started.get()) {
      throw new IllegalStateException(
          "Submitting a broker result is not allowed before calling BrokerResult#get");
    }
    if (future.isDone()) {
      throw new InfrastructureException(
          "Plugins brokering result is unexpectedly submitted more than one time. This indicates unexpected behavior of the system");
    }
    future.complete(new ArrayList<>(toolingFromBroker));
  }

