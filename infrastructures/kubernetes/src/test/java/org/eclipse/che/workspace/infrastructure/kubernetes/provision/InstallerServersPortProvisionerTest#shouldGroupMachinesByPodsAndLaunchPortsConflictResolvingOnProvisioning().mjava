  @Test
  public void shouldGroupMachinesByPodsAndLaunchPortsConflictResolvingOnProvisioning()
      throws Exception {
    // given
    doNothing().when(portProvisioner).fixInstallersPortsConflicts(anyList());
    Pod pod1 = createPod("pod1", "container1", "container2");
    Pod pod2 = createPod("pod2", "container3");
    when(k8sEnv.getPodData())
        .thenReturn(
            ImmutableMap.of(
                "pod1",
                new PodData(pod1.getSpec(), pod1.getMetadata()),
                "pod2",
                new PodData(pod2.getSpec(), pod2.getMetadata())));

    InternalMachineConfig machine1 = mock(InternalMachineConfig.class);
    InternalMachineConfig machine2 = mock(InternalMachineConfig.class);
    InternalMachineConfig machine3 = mock(InternalMachineConfig.class);

    when(k8sEnv.getMachines())
        .thenReturn(
            ImmutableMap.of(
                "pod1/container1",
                machine1,
                "pod1/container2",
                machine2,
                "pod2/container3",
                machine3));

    // when
    portProvisioner.provision(k8sEnv, mock(RuntimeIdentity.class));

    // then
    verify(portProvisioner).fixInstallersPortsConflicts(asList(machine1, machine2));
    verify(portProvisioner).fixInstallersPortsConflicts(singletonList(machine3));
  }

