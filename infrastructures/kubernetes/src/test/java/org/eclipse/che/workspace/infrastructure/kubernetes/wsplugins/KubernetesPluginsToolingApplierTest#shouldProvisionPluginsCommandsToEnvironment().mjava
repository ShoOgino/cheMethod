  @Test
  public void shouldProvisionPluginsCommandsToEnvironment() throws Exception {
    // given
    Command pluginCommand =
        new Command()
            .name("test-command")
            .workingDir("~")
            .command(Arrays.asList("./build.sh", "--no-pull"));

    // when
    applier.apply(
        internalEnvironment,
        singletonList(createChePlugin("plugin", createContainer("container", pluginCommand))));

    // then
    List<CommandImpl> envCommands = internalEnvironment.getCommands();
    assertEquals(envCommands.size(), 1);
    CommandImpl envCommand = envCommands.get(0);
    assertEquals(envCommand.getName(), pluginCommand.getName());
    assertEquals(
        envCommand.getCommandLine(),
        pluginCommand.getCommand().stream().collect(Collectors.joining(" ")));
    assertEquals(envCommand.getType(), "custom");
    assertEquals(envCommand.getAttributes().get("workDir"), pluginCommand.getWorkingDir());
    assertEquals(envCommand.getAttributes().get("machineName"), POD_NAME + "/plugin-container");
  }

