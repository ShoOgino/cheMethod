  @Test(
      expectedExceptions = WorkspaceExportException.class,
      expectedExceptionsMessageRegExp =
          "Environment with 'dockerimage' recipe must contain only one machine configuration")
  public void
      shouldThrowAnExceptionIfTryToProvisionDockerimageComponentWhenDockerimageEnvironmentWithMultipleMachinesConfiguration()
          throws Exception {
    // given
    EnvironmentImpl dockerEnv = new EnvironmentImpl();
    dockerEnv.setRecipe(new RecipeImpl("dockerimage", null, "eclipse/ubuntu_jdk8:latest", null));
    dockerEnv
        .getMachines()
        .put(
            "machine1",
            new MachineConfigImpl(emptyList(), emptyMap(), emptyMap(), emptyMap(), emptyMap()));
    dockerEnv
        .getMachines()
        .put(
            "machine2",
            new MachineConfigImpl(emptyList(), emptyMap(), emptyMap(), emptyMap(), emptyMap()));
    WorkspaceConfigImpl workspaceConfig = new WorkspaceConfigImpl();
    workspaceConfig.getEnvironments().put("dockerEnv", dockerEnv);

    DevfileImpl devfile = new DevfileImpl();

    // when
    dockerimageComponentProvisioner.provision(devfile, workspaceConfig);

    // then
    assertEquals(devfile.getComponents().size(), 1);
    ComponentImpl dockerimageComponent = devfile.getComponents().get(0);
    assertEquals(dockerimageComponent.getAlias(), "dockerEnv");
    assertEquals(dockerimageComponent.getId(), "eclipse/ubuntu_jdk8:latest");
  }

