  @Test
  public void addInternalSshKeysConfigInPod() throws Exception {
    String keyName = UUID.randomUUID().toString();
    lenient()
        .when(sshManager.getPairs(someUser, "internal"))
        .thenReturn(
            ImmutableList.of(new SshPairImpl(someUser, "internal", keyName, "public", "private")));

    // should exist at least one 'vcs' key by design
    when(sshManager.generatePair(eq(someUser), eq("vcs"), anyString()))
        .thenReturn(
            new SshPairImpl(
                someUser, "vcs", "default-" + UUID.randomUUID().toString(), "public", "private"));

    sshKeysProvisioner.provision(k8sEnv, runtimeIdentity);

    verify(podSpec, times(2)).getVolumes();
    verify(podSpec, times(2)).getContainers();

    Secret secret = k8sEnv.getSecrets().get("wksp-sshprivatekeys");
    assertNotNull(secret);
    assertEquals(secret.getType(), "opaque");
    String key = secret.getData().get(keyName);
    assertNotNull(key);
    assertEquals("private", new String(Base64.getDecoder().decode(key)));
  }

