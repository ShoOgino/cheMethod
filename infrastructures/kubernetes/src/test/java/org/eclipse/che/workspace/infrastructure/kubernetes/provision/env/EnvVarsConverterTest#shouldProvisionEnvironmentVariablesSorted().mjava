  @Test
  public void shouldProvisionEnvironmentVariablesSorted() throws InfrastructureException {
    // given
    List<EnvVar> preExistingEnvironment = new ArrayList<>();
    preExistingEnvironment.add(new EnvVar(PRE_EXISTING_VAR, PRE_EXISTING_VAR_VALUE, null));
    testContainer.setEnv(preExistingEnvironment);

    machine.getEnv().put(PRE_EXISTING_VAR, PRE_EXISTING_VAR_NEW_VALUE);
    machine.getEnv().put(A_VAR, A_VAL);
    machine.getEnv().put(B_VAR, B_VAL);
    machine.getEnv().put(C_VAR, C_VAL);

    // when
    EnvVarsConverter converter = new EnvVarsConverter();
    converter.provision(environment, identity);

    // then
    EnvVar expectedA = new EnvVar(A_VAR, A_VAL, null);
    EnvVar expectedB = new EnvVar(B_VAR, B_VAL, null);
    EnvVar expectedC = new EnvVar(C_VAR, C_VAL, null);
    EnvVar expectedPreExisting = new EnvVar(PRE_EXISTING_VAR, PRE_EXISTING_VAR_NEW_VALUE, null);

    List<EnvVar> expectedOrder = asList(expectedB, expectedC, expectedA, expectedPreExisting);

    assertEquals(4, testContainer.getEnv().size());
    assertEquals(expectedOrder, testContainer.getEnv());
  }

