  @Test
  public void testProvisionPVCsForEachVolumeWithUniqueName() throws Exception {
    when(k8sEnv.getPersistentVolumeClaims()).thenReturn(new HashMap<>());

    strategy.provision(k8sEnv, IDENTITY);

    assertEquals(podSpec.getVolumes().size(), 2);
    assertEquals(podSpec2.getVolumes().size(), 1);
    assertEquals(container.getVolumeMounts().size(), 2);
    assertEquals(container2.getVolumeMounts().size(), 1);
    assertEquals(container3.getVolumeMounts().size(), 1);
    assertEquals(k8sEnv.getPersistentVolumeClaims().size(), 2);
    for (PersistentVolumeClaim pvc : k8sEnv.getPersistentVolumeClaims().values()) {
      String volumeName = pvc.getMetadata().getLabels().get(CHE_VOLUME_NAME_LABEL);
      assertNotNull(volumeName);
      assertTrue(volumeName.equals(VOLUME_1_NAME) || volumeName.equals(VOLUME_2_NAME));
    }
  }

