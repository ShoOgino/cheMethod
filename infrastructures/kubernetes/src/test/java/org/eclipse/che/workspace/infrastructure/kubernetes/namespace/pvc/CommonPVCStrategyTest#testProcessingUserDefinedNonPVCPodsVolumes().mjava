  @Test
  public void testProcessingUserDefinedNonPVCPodsVolumes() throws Exception {
    // given
    k8sEnv.getMachines().values().forEach(m -> m.getVolumes().clear());

    pod.getSpec()
        .getContainers()
        .get(0)
        .getVolumeMounts()
        .add(
            new VolumeMountBuilder()
                .withName("configMapVolume")
                .withSubPath("/home/user/config")
                .build());

    ConfigMapVolumeSource configMapVolumeSource =
        new ConfigMapVolumeSourceBuilder().withName("configMap").build();
    pod.getSpec()
        .getVolumes()
        .add(
            new VolumeBuilder()
                .withName("configMapVolume")
                .withConfigMap(configMapVolumeSource)
                .build());

    // when
    commonPVCStrategy.provision(k8sEnv, IDENTITY);

    // then
    PodSpec podSpec = k8sEnv.getPodsData().get(POD_1_NAME).getSpec();

    io.fabric8.kubernetes.api.model.Volume userPodVolume = podSpec.getVolumes().get(0);
    assertNull(userPodVolume.getPersistentVolumeClaim());
    assertEquals(userPodVolume.getConfigMap(), configMapVolumeSource);

    Container container = podSpec.getContainers().get(0);
    VolumeMount volumeMount = container.getVolumeMounts().get(0);
    assertEquals(volumeMount.getName(), "configMapVolume");
    assertEquals(volumeMount.getSubPath(), "/home/user/config");
  }

