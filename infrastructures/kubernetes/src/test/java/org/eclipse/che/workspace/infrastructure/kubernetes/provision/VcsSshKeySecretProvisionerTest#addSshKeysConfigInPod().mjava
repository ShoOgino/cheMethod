  @Test
  public void addSshKeysConfigInPod() throws Exception {
    String keyName = UUID.randomUUID().toString();
    when(sshManager.getPairs(someUser, "vcs"))
        .thenReturn(
            ImmutableList.of(new SshPairImpl(someUser, "vcs", keyName, "public", "private")));

    vcsSshKeysProvisioner.provision(k8sEnv, runtimeIdentity);

    verify(podSpec, times(2)).getVolumes();
    verify(podSpec, times(2)).getContainers();

    Secret secret = k8sEnv.getSecrets().get(keyName);
    assertNotNull(secret);
    assertEquals(secret.getType(), "kubernetes.io/ssh-auth");

    String key = secret.getData().get("ssh-privatekey");
    assertNotNull(key);

    Map<String, ConfigMap> configMaps = k8sEnv.getConfigMaps();
    assertNotNull(configMaps);
    assertTrue(configMaps.containsKey("wksp-sshconfigmap"));

    ConfigMap sshConfigMap = configMaps.get("wksp-sshconfigmap");
    assertNotNull(sshConfigMap);

    Map<String, String> mapData = sshConfigMap.getData();
    assertNotNull(mapData);
    assertTrue(mapData.containsKey("ssh_config"));

    String sshConfig = mapData.get("ssh_config");
    assertTrue(sshConfig.contains("host " + keyName));
    assertTrue(sshConfig.contains("HostName " + keyName));
    assertTrue(sshConfig.contains("IdentityFile " + "/etc/ssh/" + keyName + "/ssh-privatekey"));
  }

