  @Test
  public void addSshKeysConfigInPod() throws Exception {
    String keyName1 = UUID.randomUUID().toString();
    String keyName2 = "default-" + UUID.randomUUID().toString();
    String keyName3 = "github.com";
    when(sshManager.getPairs(someUser, "vcs"))
        .thenReturn(
            ImmutableList.of(
                new SshPairImpl(someUser, "vcs", keyName1, "public", "private"),
                new SshPairImpl(someUser, "vcs", keyName2, "public", "private"),
                new SshPairImpl(someUser, "vcs", keyName3, "public", "private")));

    vcsSshKeysProvisioner.provision(k8sEnv, runtimeIdentity);

    verify(podSpec, times(2)).getVolumes();
    verify(podSpec, times(2)).getContainers();

    Secret secret = k8sEnv.getSecrets().get("wksp-sshprivatekeys");
    assertNotNull(secret);
    assertEquals(secret.getType(), "opaque");

    String key1 = secret.getData().get(keyName1);
    assertNotNull(key1);
    assertEquals("private", new String(Base64.getDecoder().decode(key1)));

    String key2 = secret.getData().get(keyName2);
    assertNotNull(key2);
    assertEquals("private", new String(Base64.getDecoder().decode(key2)));

    String key3 = secret.getData().get(keyName3);
    assertNotNull(key3);
    assertEquals("private", new String(Base64.getDecoder().decode(key3)));

    Map<String, ConfigMap> configMaps = k8sEnv.getConfigMaps();
    assertNotNull(configMaps);
    assertTrue(configMaps.containsKey("wksp-sshconfigmap"));

    ConfigMap sshConfigMap = configMaps.get("wksp-sshconfigmap");
    assertNotNull(sshConfigMap);

    Map<String, String> mapData = sshConfigMap.getData();
    assertNotNull(mapData);
    assertTrue(mapData.containsKey("ssh_config"));

    String sshConfig = mapData.get("ssh_config");
    assertTrue(sshConfig.contains("host " + keyName1));
    assertTrue(sshConfig.contains("IdentityFile " + "/etc/ssh/private/" + keyName1));

    assertTrue(sshConfig.contains("host *"));
    assertTrue(sshConfig.contains("IdentityFile " + "/etc/ssh/private/" + keyName2));

    assertTrue(sshConfig.contains("host github.com"));
    assertTrue(sshConfig.contains("IdentityFile /etc/ssh/private/github.com"));
  }

