  @Test
  public void
      shouldProvisionDockerimageComponentIfDockerimageEnvironmentWithMachineConfigurationWithServerIsSpecifiedButPathAndProtocolAreMissing()
          throws Exception {
    // given
    EnvironmentImpl dockerEnv = new EnvironmentImpl();
    dockerEnv.setRecipe(new RecipeImpl("dockerimage", null, "eclipse/ubuntu_jdk8:latest", null));
    ServerConfigImpl serverConfig = new ServerConfigImpl("8080/TCP", null, null, emptyMap());
    dockerEnv
        .getMachines()
        .put(
            "myMachine",
            new MachineConfigImpl(
                emptyList(),
                ImmutableMap.of("server", serverConfig),
                emptyMap(),
                emptyMap(),
                emptyMap()));
    WorkspaceConfigImpl workspaceConfig = new WorkspaceConfigImpl();
    workspaceConfig.getEnvironments().put("dockerEnv", dockerEnv);

    DevfileImpl devfile = new DevfileImpl();

    // when
    dockerimageComponentProvisioner.provision(devfile, workspaceConfig);

    // then
    assertEquals(devfile.getComponents().size(), 1);
    ComponentImpl dockerimageComponent = devfile.getComponents().get(0);
    assertEquals(dockerimageComponent.getEndpoints().size(), 1);
    EndpointImpl endpoint = dockerimageComponent.getEndpoints().get(0);
    assertEquals(endpoint.getName(), "server");
    assertEquals(endpoint.getPort(), Integer.valueOf(8080));
    assertTrue(endpoint.getAttributes().isEmpty());
  }

