  /** Create configmap with public part of SSH key */
  private void createConfigMapIfNotExist(
      KubernetesClient oc,
      String namespace,
      String configMapName,
      String userId,
      OpenShiftEnvironment osEnv)
      throws InfrastructureException {
    Resource<ConfigMap, DoneableConfigMap> mapResource =
        oc.configMaps().inNamespace(namespace).withName(configMapName);
    if (mapResource.get() != null) { // map already exist
      return;
    }

    List<SshPairImpl> sshPairs = getOrCreateSshPairs(userId, osEnv);
    if (sshPairs == null) {
      return;
    }
    SshPair sshPair = sshPairs.get(0);
    Map<String, String> sshConfigData = of(AUTHORIZED_KEYS, sshPair.getPublicKey() + "\n");
    ConfigMap configMap =
        new ConfigMapBuilder()
            .withNewMetadata()
            .withName(configMapName)
            .withNamespace(namespace)
            .withLabels(of(CHE_USER_ID_LABEL, userId))
            .endMetadata()
            .withData(sshConfigData)
            .build();
    oc.configMaps().inNamespace(namespace).create(configMap);
  }

