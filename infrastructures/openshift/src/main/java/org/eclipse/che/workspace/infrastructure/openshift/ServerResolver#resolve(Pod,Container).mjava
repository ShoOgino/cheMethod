  /**
   * Resolves servers by the specified container in the pod.
   *
   * @param pod pod that should be matched by services
   * @param container container that expose ports for services
   * @return resolved servers
   */
  public Map<String, ServerImpl> resolve(Pod pod, Container container) {
    Set<String> matchedServices =
        getMatchedServices(pod, container)
            .stream()
            .map(s -> s.getMetadata().getName())
            .collect(Collectors.toSet());
    Map<String, ServerImpl> servers = new HashMap<>();
    services
        .stream()
        .filter(service -> matchedServices.contains(service.getMetadata().getName()))
        .forEach(service -> fillServiceServers(service, servers));
    routes
        .stream()
        .filter(route -> matchedServices.contains(route.getSpec().getTo().getName()))
        .forEach(route -> fillRouteServers(route, servers));
    return servers;
  }

