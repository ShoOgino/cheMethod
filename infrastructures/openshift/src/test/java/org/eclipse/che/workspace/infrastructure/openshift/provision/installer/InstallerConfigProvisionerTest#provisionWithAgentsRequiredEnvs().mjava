  @Test
  public void provisionWithAgentsRequiredEnvs() throws Exception {
    // given
    when(machineTokenProvider.getToken(WORKSPACE_ID)).thenReturn("superToken");

    InternalMachineConfig machine1 =
        createMachine(new HashMap<>(singletonMap("env1", "val1")), true);
    InternalMachineConfig machine2 = createMachine(new HashMap<>(), false);
    final Map<String, InternalMachineConfig> machines =
        ImmutableMap.of("pod1/wsagent", machine1, "pod2/machine", machine2);

    InternalEnvironment environment = createEnvironment(machines);

    // when
    installerConfigProvisioner.provision(environment, osEnvironment, runtimeIdentity);

    // then
    Map<String, String> env = machine1.getEnv();
    verifyContainsEnv(env, "CHE_API", CHE_SERVER_ENDPOINT);
    verifyContainsEnv(env, "USER_TOKEN", "superToken");
    verifyContainsEnv(env, "CHE_WORKSPACE_ID", WORKSPACE_ID);

    env = machine2.getEnv();
    verifyContainsEnv(env, "CHE_API", CHE_SERVER_ENDPOINT);
    verifyContainsEnv(env, "USER_TOKEN", "superToken");
    assertFalse(
        env.containsKey("CHE_WORKSPACE_ID"), "Environment variable '%s' found CHE_WORKSPACE_ID");
  }

