  @Test
  public void shouldReturnGroupedServersByPort() {
    // given
    Map<String, ServerConfigImpl> installerServers = new HashMap<>();
    installerServers.put(
        "server1-http", new ServerConfigImpl("8080/tcp", "http", "/api", emptyMap()));
    installerServers.put("server1-ws", new ServerConfigImpl("8080/tcp", "ws", "/api", emptyMap()));
    installerServers.put("server1-udp", new ServerConfigImpl("8080/udp", "udp", "", emptyMap()));
    installerServers.put("server2", new ServerConfigImpl("8081/tcp", "http", "/api", emptyMap()));

    InstallerImpl installer =
        new InstallerImpl(
            "installer1",
            "name",
            "v1",
            "description",
            emptyList(),
            emptyMap(),
            "script",
            installerServers);

    // when
    Map<Integer, Collection<String>> portToServersRefs =
        portProvisioner.getServersRefsGroupedByPorts(installer);

    // then
    Collection<String> servers8080 = portToServersRefs.get(8080);
    assertEquals(servers8080.size(), 3);
    assertTrue(
        servers8080.containsAll(ImmutableSet.of("server1-http", "server1-ws", "server1-udp")));

    Collection<String> servers8081 = portToServersRefs.get(8081);
    assertEquals(servers8081.size(), 1);
    assertTrue(servers8081.contains("server2"));
  }

