  @Test
  public void startsOpenShiftEnvironment() throws Exception {
    final Container c1 = mockContainer(CONTAINER_NAME_1, EXPOSED_PORT_1);
    final Container c2 = mockContainer(CONTAINER_NAME_2, EXPOSED_PORT_2, NOT_EXPOSED_PORT_1);
    doReturn(ImmutableMap.of(SERVICE_NAME, mockService())).when(osEnv).getServices();
    doReturn(ImmutableMap.of(SERVICE_NAME, mockRoute())).when(osEnv).getRoutes();
    when(services.create(any())).thenAnswer(a -> a.getArguments()[0]);
    when(routes.create(any())).thenAnswer(a -> a.getArguments()[0]);
    doReturn(ImmutableMap.of(POD_NAME, mockPod(ImmutableList.of(c1, c2)))).when(osEnv).getPods();
    when(pods.create(any())).thenAnswer(a -> a.getArguments()[0]);
    doNothing().when(bootstrapper).bootstrap();

    internalRuntime.internalStart(emptyMap());

    verify(pods).create(any());
    verify(routes).create(any());
    verify(services).create(any());
    verify(bootstrapper, times(2)).bootstrap();
    verify(eventService, times(4)).publish(any());
    verifyEventsOrder(
        newEvent(M1_NAME, STARTING),
        newEvent(M2_NAME, STARTING),
        newEvent(M1_NAME, RUNNING),
        newEvent(M2_NAME, RUNNING));
    verify(serverCheckerFactory).create(IDENTITY, M1_NAME, emptyMap());
    verify(serverCheckerFactory).create(IDENTITY, M2_NAME, emptyMap());
    verify(serversChecker, times(2)).startAsync(any());
  }

