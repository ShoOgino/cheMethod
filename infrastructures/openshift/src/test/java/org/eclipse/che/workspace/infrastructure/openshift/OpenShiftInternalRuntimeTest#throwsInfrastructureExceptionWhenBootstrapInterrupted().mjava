  @Test(expectedExceptions = InfrastructureException.class)
  public void throwsInfrastructureExceptionWhenBootstrapInterrupted() throws Exception {
    final Container c = mockContainer(CONTAINER_NAME_1, EXPOSED_PORT_1, NOT_EXPOSED_PORT_1);
    doReturn(ImmutableMap.of(SERVICE_NAME, mockService())).when(osEnv).getServices();
    doReturn(ImmutableMap.of(SERVICE_NAME, mockRoute())).when(osEnv).getRoutes();
    when(services.create(any())).thenAnswer(a -> a.getArguments()[0]);
    when(routes.create(any())).thenAnswer(a -> a.getArguments()[0]);
    doReturn(ImmutableMap.of(POD_NAME, mockPod(ImmutableList.of(c)))).when(osEnv).getPods();
    when(pods.create(any())).thenAnswer(a -> a.getArguments()[0]);
    doThrow(InterruptedException.class).when(bootstrapper).bootstrap();

    try {
      internalRuntime.internalStart(emptyMap());
    } catch (Exception rethrow) {
      verify(project, times(1)).cleanUp();
      verify(pods, times(1)).create(any());
      verify(routes, times(1)).create(any());
      verify(services, times(1)).create(any());
      verify(bootstrapper, times(1)).bootstrap();
      verifyEventsOrder(newEvent(M1_NAME, STARTING));
      throw rethrow;
    }
  }

