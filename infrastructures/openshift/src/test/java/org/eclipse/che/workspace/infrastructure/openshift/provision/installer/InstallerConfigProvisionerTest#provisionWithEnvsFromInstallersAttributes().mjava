  @Test
  public void provisionWithEnvsFromInstallersAttributes() throws Exception {
    // given
    final Pod pod = new PodBuilder().setName("test").setContainers("machine").build();
    OpenShiftEnvironment osEnvironment =
        OpenShiftEnvironment.builder()
            .setPods(ImmutableMap.of(pod.getMetadata().getName(), pod))
            .build();

    final Map<String, InternalMachineConfig> machines =
        ImmutableMap.of(
            "test/machine",
            new MachineConfigBuilder()
                .setInstallers(
                    new InstallerImpl()
                        .withProperties(ImmutableMap.of("environment", "INSTALLER1=localhost")),
                    new InstallerImpl()
                        .withProperties(ImmutableMap.of("environment", "INSTALLER2=agent")))
                .setServer(Constants.SERVER_WS_AGENT_HTTP_REFERENCE, new ServerConfigImpl())
                .build());

    InternalEnvironment environment = createEnvironment(machines);

    // when
    installerConfigProvisioner.provision(environment, osEnvironment, runtimeIdentity);

    // then
    Container container = pod.getSpec().getContainers().get(0);
    List<EnvVar> envs = container.getEnv();
    verifyContainsEnv(envs, "INSTALLER1", "localhost");
    verifyContainsEnv(envs, "INSTALLER2", "agent");
  }

