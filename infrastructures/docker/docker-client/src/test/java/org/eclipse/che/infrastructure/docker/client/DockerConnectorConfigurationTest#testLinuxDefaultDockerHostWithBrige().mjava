  /** Check that on Linux, if we have a bridge named docker0, we should use that bridge */
  @Test
  public void testLinuxDefaultDockerHostWithBrige() throws Exception {
    Map<String, String> env = new HashMap<>();
    NetworkFinder networkFinder = Mockito.mock(NetworkFinder.class);
    // eth0
    String eth0IpAddress = "172.17.0.2";
    InetAddress eth0InetAddress = Mockito.mock(InetAddress.class);
    doReturn(eth0IpAddress).when(eth0InetAddress).getHostAddress();
    doReturn(Optional.of(eth0InetAddress))
        .when(networkFinder)
        .getIPAddress(DEFAULT_LINUX_INTERFACE_NAME);
    // docker0
    String docker0IpAddress = "123.231.133.10";
    InetAddress docker0InetAddress = Mockito.mock(InetAddress.class);
    doReturn(docker0IpAddress).when(docker0InetAddress).getHostAddress();
    doReturn(Optional.of(docker0InetAddress))
        .when(networkFinder)
        .getIPAddress(BRIDGE_LINUX_INTERFACE_NAME);
    DockerConnectorConfiguration dockerConnectorConfiguration =
        new DockerConnectorConfiguration(null, null, null, networkFinder);

    String ip = dockerConnectorConfiguration.getDockerHostIp(true, env);
    assertEquals(ip, docker0IpAddress);
    verify(networkFinder).getIPAddress(BRIDGE_LINUX_INTERFACE_NAME);
    verify(networkFinder, never()).getIPAddress(DEFAULT_LINUX_INTERFACE_NAME);
  }

