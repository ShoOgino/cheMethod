  /**
   * Returns volumes filtered by provided params.
   *
   * @return object that contains list of volumes in the system
   * @throws IOException when a problem occurs with docker api calls
   */
  public Volumes getVolumes(GetVolumesParams params) throws IOException {
    final Filters filters = params.getFilters();

    try (DockerConnection connection =
        connectionFactory
            .openConnection(dockerDaemonUri)
            .method("GET")
            .path(apiVersionPathPrefix + "/volumes")) {
      if (filters != null) {
        connection.query("filters", urlPathSegmentEscaper().escape(toJson(filters.getFilters())));
      }
      DockerResponse response = connection.request();
      if (response.getStatus() / 100 != 2) {
        throw getDockerException(response);
      }
      return parseResponseStreamAndClose(response.getInputStream(), Volumes.class);
    }
  }

