  @Inject
  public LocalCheDockerEnvironmentProvisioner(
      @Named("che.single.port") boolean isSinglePortEnabled,
      ContainerSystemSettingsProvisionersApplier dockerSettingsProvisioners,
      BindMountProjectsVolumeProvisioner hostMountingProjectsVolumeProvisioner,
      LocalInstallersBinariesVolumeProvisioner installersBinariesVolumeProvisioner,
      RuntimeLabelsProvisioner runtimeLabelsProvisioner,
      DockerApiHostEnvVariableProvisioner dockerApiEnvProvisioner,
      WsAgentServerConfigProvisioner wsAgentServerConfigProvisioner,
      SinglePortLabelsProvisioner singlePortLabelsProvisioner,
      ServersConverter serversConverter,
      EnvVarsConverter envVarsConverter,
      MemoryAttributeConverter memoryAttributeConverter,
      VolumesConverter volumesConverter) {

    this.isSinglePortEnabled = isSinglePortEnabled;
    this.dockerSettingsProvisioners = dockerSettingsProvisioners;
    this.hostMountingProjectsVolumeProvisioner = hostMountingProjectsVolumeProvisioner;
    this.installersBinariesVolumeProvisioner = installersBinariesVolumeProvisioner;
    this.runtimeLabelsProvisioner = runtimeLabelsProvisioner;
    this.dockerApiEnvProvisioner = dockerApiEnvProvisioner;
    this.wsAgentServerConfigProvisioner = wsAgentServerConfigProvisioner;
    this.singlePortLabelsProvisioner = singlePortLabelsProvisioner;
    this.serversConverter = serversConverter;
    this.envVarsConverter = envVarsConverter;
    this.memoryAttributeConverter = memoryAttributeConverter;
    this.volumesConverter = volumesConverter;
  }

