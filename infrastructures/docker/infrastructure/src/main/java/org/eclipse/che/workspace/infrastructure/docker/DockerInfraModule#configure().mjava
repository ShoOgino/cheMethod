  @Override
  protected void configure() {
    Multibinder<ContainerSystemSettingsProvisioner> settingsProvisioners =
        Multibinder.newSetBinder(binder(), ContainerSystemSettingsProvisioner.class);
    settingsProvisioners.addBinding().to(DnsSettingsProvisioner.class);
    settingsProvisioners.addBinding().to(SecurityOptProvisioner.class);
    settingsProvisioners.addBinding().to(ExtraHostsProvisioner.class);
    settingsProvisioners.addBinding().to(ProxySettingsProvisioner.class);
    settingsProvisioners.addBinding().to(ExtraVolumesProvisioner.class);
    settingsProvisioners.addBinding().to(SwapLimitProvisioner.class);
    settingsProvisioners.addBinding().to(PidLimitProvisioner.class);
    settingsProvisioners.addBinding().to(CGroupParentProvisioner.class);
    settingsProvisioners.addBinding().to(CpuLimitsProvisioner.class);
    settingsProvisioners.addBinding().to(PrivilegedModeProvisioner.class);

    install(new DockerEnvironmentsModule());
    install(new DockerEnvironmentConvertersModule());
    install(new ContainerSystemSettingsProvisioningModule());

    bind(CheApiEnvVarProvider.class).to(DockerCheApiEnvVarProvider.class);

    bind(RuntimeInfrastructure.class).to(DockerRuntimeInfrastructure.class);

    bind(DockerRegistryDynamicAuthResolver.class)
        .to(NoOpDockerRegistryDynamicAuthResolverImpl.class);

    install(new FactoryModuleBuilder().build(DockerRuntimeFactory.class));
    install(new FactoryModuleBuilder().build(DockerBootstrapperFactory.class));
    install(new FactoryModuleBuilder().build(DockerRuntimeContextFactory.class));
    bind(
        org.eclipse.che.workspace.infrastructure.docker.monit.DockerAbandonedResourcesCleaner
            .class);
  }

