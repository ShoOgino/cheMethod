  @VisibleForTesting
  protected LocalProjectsFolderPathProvider(
      String workspacesMountPoint,
      @Nullable String workspacesMountPointForCheMaster,
      boolean migrationOnStartup,
      @Nullable String singleMountPointForAllWorkspaces,
      @Nullable Boolean createFolders,
      WorkspaceDao workspaceDao,
      LocalProjectsMigrator localProjectsMigrator,
      boolean isWindows)
      throws IOException {
    this.workspaceDao = workspaceDao;
    this.migrationOnStartup = migrationOnStartup;
    this.isWindows = isWindows;
    this.localProjectsMigrator = localProjectsMigrator;

    if (createFolders != null) {
      this.createFolders = createFolders;
    }
    if (singleMountPointForAllWorkspaces != null) {
      this.singleMountPointForAllWorkspaces = singleMountPointForAllWorkspaces;
    }
    // In case workspace mount path specific for che master is not defined we treat it equal to
    // regular workspace mount point
    if (workspacesMountPointForCheMaster != null) {
      this.workspacesMountPointForCheMaster = workspacesMountPointForCheMaster;
    } else {
      this.workspacesMountPointForCheMaster = workspacesMountPoint;
    }
    // Priority of workspace storage path sources:
    // If Che is running on Windows
    //     che-home-location/vfs
    // Otherwise
    //     use value from property injected into constructor
    // find root directory for projects in workspaces
    if (isWindows) {
      final Path vfs = WindowsHostUtils.getCheHome().resolve("vfs");
      this.workspacesMountPoint = vfs.toString();
    } else {
      this.workspacesMountPoint = workspacesMountPoint;
    }
  }

