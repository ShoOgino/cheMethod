  /**
   * Creates {@link ContainerPort} from provided port information. When {@code binding} is {@code
   * null} result represents workspace-wide accessible port, otherwise publicly available.
   */
  private ContainerPort toContainerPort(String rawPort, @Nullable List<PortBinding> binding) {
    ContainerPort result = new ContainerPort();
    if (binding != null) {
      result.setPublicPort(Integer.parseInt(binding.get(0).getHostPort()));
    }
    int slashIdx = rawPort.indexOf('/');
    if (slashIdx != -1) {
      result.setType(rawPort.substring(slashIdx + 1));
      result.setPrivatePort(Integer.parseInt(rawPort.substring(0, slashIdx)));
    } else {
      result.setType("tcp");
      result.setPrivatePort(Integer.parseInt(rawPort));
    }
    return result;
  }

