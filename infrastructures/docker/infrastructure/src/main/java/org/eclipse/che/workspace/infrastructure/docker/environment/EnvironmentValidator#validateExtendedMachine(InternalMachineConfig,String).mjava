  private void validateExtendedMachine(InternalMachineConfig machineConfig, String machineName)
      throws ValidationException {
    if (machineConfig.getAttributes() != null
        && machineConfig.getAttributes().get("memoryLimitBytes") != null) {

      try {
        long memoryLimitBytes =
            Long.parseLong(machineConfig.getAttributes().get("memoryLimitBytes"));
        checkArgument(
            memoryLimitBytes > 0,
            "Value of attribute 'memoryLimitBytes' of machine '%s' in environment is illegal",
            machineName);
      } catch (NumberFormatException e) {
        throw new ValidationException(
            format(
                "Value of attribute 'memoryLimitBytes' of machine '%s' in environment is illegal",
                machineName));
      }
    }

    if (machineConfig.getServers() != null) {
      for (Map.Entry<String, ? extends ServerConfig> serverEntry :
          machineConfig.getServers().entrySet()) {
        String serverName = serverEntry.getKey();
        ServerConfig server = serverEntry.getValue();

        checkArgument(
            server.getPort() != null && SERVER_PORT.matcher(server.getPort()).matches(),
            "Machine '%s' in environment contains server conf '%s' with invalid port '%s'",
            machineName,
            serverName,
            server.getPort());
        checkArgument(
            server.getProtocol() == null || SERVER_PROTOCOL.matcher(server.getProtocol()).matches(),
            "Machine '%s' in environment contains server conf '%s' with invalid protocol '%s'",
            machineName,
            serverName,
            server.getProtocol());
      }
    }
  }

