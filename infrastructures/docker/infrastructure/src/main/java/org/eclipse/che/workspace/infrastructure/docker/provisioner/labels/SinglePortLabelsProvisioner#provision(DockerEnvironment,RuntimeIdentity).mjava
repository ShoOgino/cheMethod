  @Override
  public void provision(DockerEnvironment internalEnv, RuntimeIdentity identity)
      throws InfrastructureException {
    for (Map.Entry<String, InternalMachineConfig> machineEntry :
        internalEnv.getMachines().entrySet()) {
      final String machineName = machineEntry.getKey();
      Map<String, String> containerLabels = new HashMap<>();
      for (Map.Entry<String, ServerConfig> serverEntry :
          machineEntry.getValue().getServers().entrySet()) {
        // skip internal servers
        if (parseBoolean(serverEntry.getValue().getAttributes().get(INTERNAL_SERVER_ATTRIBUTE))) {
          continue;
        }
        final String host =
            hostnameBuilder.build(serverEntry.getKey(), machineName, identity.getWorkspaceId());
        final String serviceName = getServiceName(host);
        final String port = serverEntry.getValue().getPort().split("/")[0];

        containerLabels.put(format("traefik.%s.port", serviceName), port);
        containerLabels.put(format("traefik.%s.frontend.entryPoints", serviceName), "http");
        containerLabels.put(format("traefik.%s.frontend.rule", serviceName), "Host:" + host);
        // Needed to activate per-service rules
        containerLabels.put("traefik.frontend.rule", machineName);
      }
      // To prevent gateway timeouts in multiuser mode
      if (dockerNetwork != null) {
        containerLabels.put("traefik.docker.network", dockerNetwork);
      }
      DockerContainerConfig dockerConfig = internalEnv.getContainers().get(machineName);
      dockerConfig.getLabels().putAll(containerLabels);
    }
  }

