  /**
   * Waits until {@link #complete} is called and rethrow the {@link #exception} if it present. This
   * call is blocking and it should be used with {@link #interrupt} method.
   *
   * @throws InterruptedException when this thread is interrupted while waiting for {@link
   *     #complete}
   * @throws RuntimeStartInterruptedException when {@link #startThread} successfully interrupted
   * @throws InfrastructureException when any error occurs while waiting for {@link #complete}
   */
  public void await() throws InterruptedException, InfrastructureException {
    completionLatch.await();
    synchronized (this) {
      if (exception != null) {
        try {
          throw exception;
        } catch (InfrastructureException rethrow) {
          throw rethrow;
        } catch (Exception ex) {
          throw new InternalInfrastructureException(ex);
        }
      }
    }
  }

