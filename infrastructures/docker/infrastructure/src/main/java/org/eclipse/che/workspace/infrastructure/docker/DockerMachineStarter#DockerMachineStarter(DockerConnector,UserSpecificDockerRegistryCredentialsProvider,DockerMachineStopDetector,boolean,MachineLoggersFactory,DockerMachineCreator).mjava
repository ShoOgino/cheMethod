  @Inject
  public DockerMachineStarter(
      DockerConnector docker,
      UserSpecificDockerRegistryCredentialsProvider dockerCredentials,
      DockerMachineStopDetector dockerMachineStopDetector,
      @Named("che.docker.always_pull_image") boolean doForcePullImage,
      MachineLoggersFactory machineLogger,
      DockerMachineCreator machineCreator) {
    this.machineCreator = machineCreator;
    // TODO spi should we move all configuration stuff into infrastructure provisioner and left
    // logic of container start here only
    this.docker = docker;
    this.dockerCredentials = dockerCredentials;
    this.dockerInstanceStopDetector = dockerMachineStopDetector;
    this.doForcePullImage = doForcePullImage;
    this.machineLoggerFactory = machineLogger;
    // single point of failure in case of highly loaded system
    executor =
        Executors.newCachedThreadPool(
            new ThreadFactoryBuilder()
                .setNameFormat("MachineLogsStreamer-%d")
                .setUncaughtExceptionHandler(LoggingUncaughtExceptionHandler.getInstance())
                .setDaemon(true)
                .build());
  }

