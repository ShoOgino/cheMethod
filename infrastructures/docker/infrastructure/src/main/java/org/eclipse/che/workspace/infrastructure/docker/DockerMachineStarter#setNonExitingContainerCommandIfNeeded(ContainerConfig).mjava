  // We can detect certain situation when container exited right after start.
  // We can detect
  //  - when no command/entrypoint is set
  //  - when most common shell interpreters are used and require additional arguments
  //  - when most common shell interpreters are used and they require interactive mode which we don't support
  // When we identify such situation we change CMD/entrypoint in such a way that it runs "tail -f /dev/null".
  // This command does nothing and lasts until workspace is stopped.
  // Images such as "ubuntu" or "openjdk" fits this situation.
  protected void setNonExitingContainerCommandIfNeeded(ContainerConfig containerConfig)
      throws IOException {
    ImageConfig imageConfig = docker.inspectImage(containerConfig.getImage()).getConfig();
    List<String> cmd = imageConfig.getCmd() == null ? null : Arrays.asList(imageConfig.getCmd());
    List<String> entrypoint =
        imageConfig.getEntrypoint() == null ? null : Arrays.asList(imageConfig.getEntrypoint());

    if ((entrypoint == null || badEntrypoints.contains(entrypoint))
        && (cmd == null || badCMDs.contains(cmd))) {
      containerConfig.setCmd("tail", "-f", "/dev/null");
      containerConfig.setEntrypoint((String[]) null);
    }
  }

