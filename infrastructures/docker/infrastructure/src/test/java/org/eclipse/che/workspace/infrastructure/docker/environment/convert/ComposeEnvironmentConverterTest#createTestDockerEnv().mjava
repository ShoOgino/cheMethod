  private DockerEnvironment createTestDockerEnv() {
    DockerEnvironment cheContainersEnvironment = new DockerEnvironment();

    DockerContainerConfig cheContainer1 = new DockerContainerConfig();
    String buildContext = "http://host.com:port/location/of/dockerfile/or/git/repo/";
    cheContainer1.setBuild(
        new DockerBuildContext()
            .setContext(buildContext)
            .setDockerfilePath("dockerfile/Dockerfile_alternate")
            .setArgs(emptyMap()));
    cheContainer1.setCommand(asList("tail", "-f", "/dev/null"));
    cheContainer1.setContainerName("some_name");
    cheContainer1.setDependsOn(asList("machine2", "machine3"));
    cheContainer1.setEntrypoint(asList("/bin/bash", "-c"));
    cheContainer1.setEnvironment(ImmutableMap.of("env1", "123", "env2", "345"));
    cheContainer1.setExpose(ImmutableSet.of("3000", "8080"));
    cheContainer1.setImage("eclipse/ubuntu_jdk8");
    cheContainer1.setLabels(
        ImmutableMap.of(
            "com.example.department",
            "Finance",
            "com.example.description",
            "Accounting webapp",
            "com.example.label-with-empty-value",
            ""));
    cheContainer1.setLinks(asList("machine1", "machine2:db"));
    cheContainer1.setMemLimit(2147483648L);
    cheContainer1.setNetworks(asList("some-network", "other-network"));
    cheContainer1.setPorts(asList("3000", "3000-3005"));
    cheContainer1.setVolumes(asList("/opt/data:/var/lib/mysql", "~/configs:/etc/configs/:ro"));
    cheContainer1.setVolumesFrom(asList("machine2:ro", "machine3"));

    DockerContainerConfig cheContainer2 = new DockerContainerConfig();
    cheContainer2.setImage("che/ubuntu_jdk8");
    DockerContainerConfig cheContainer3 = new DockerContainerConfig();
    cheContainer3.setImage("che/centos_jdk8");

    cheContainersEnvironment.setContainers(
        newLinkedHashMap(
            ImmutableMap.of(
                "machine1", cheContainer1,
                "machine2", cheContainer2,
                "machine3", cheContainer3)));
    return cheContainersEnvironment;
  }

