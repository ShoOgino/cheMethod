  @Test
  public void shouldReplaceExistingEnvVarsWithMatchingNames() throws Exception {
    // given
    ToolingServersEnvVarsProvisioner provisioner =
        new ToolingServersEnvVarsProvisioner(singleton(provider1));
    String existingEnvVarName = "existingEnvVar";
    String envVarValueFromProvider = "value1";
    String oldEnvVarValue = "some-value";
    when(provider1.get(any(RuntimeIdentity.class)))
        .thenReturn(Pair.of(existingEnvVarName, envVarValueFromProvider));
    dockerEnvironment
        .getContainers()
        .get(CONTAINER_1_NAME)
        .getEnvironment()
        .put(existingEnvVarName, oldEnvVarValue);
    DockerEnvironment expected = new DockerEnvironment();
    expected
        .getContainers()
        .put(
            CONTAINER_1_NAME,
            new DockerContainerConfig()
                .setEnvironment(singletonMap(existingEnvVarName, envVarValueFromProvider)));

    // when
    provisioner.provision(envConfig, dockerEnvironment, RUNTIME_IDENTITY);

    // then
    assertEquals(expected, dockerEnvironment);
  }

