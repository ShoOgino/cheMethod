  @Test
  public void shouldSucceedOnValidationOfValidEnvironment() throws Exception {
    // given
    String machine2Name = "anotherMachine";
    DockerContainerConfig container2 = mock(DockerContainerConfig.class);
    when(container2.getImage()).thenReturn("test/image:latest");
    when(environment.getMachines()).thenReturn(singletonMap(MACHINE_NAME, machineConfig));
    when(dockerEnvironment.getContainers())
        .thenReturn(ImmutableMap.of(MACHINE_NAME, container, machine2Name, container2));
    ServerConfigImpl server =
        new ServerConfigImpl().withPort("8080").withPath("/some/path").withProtocol("https");
    when(machineConfig.getServers())
        .thenReturn(singletonMap(Constants.SERVER_WS_AGENT_HTTP_REFERENCE, server));
    Map<String, String> attributes =
        ImmutableMap.of("testKey", "value", "memoryLimitBytes", "1000000000");
    when(machineConfig.getAttributes()).thenReturn(attributes);
    when(container.getExpose()).thenReturn(asList("8090", "9090/tcp", "7070/udp"));
    when(container.getLinks()).thenReturn(singletonList(machine2Name + ":alias1"));
    when(container.getDependsOn()).thenReturn(singletonList(machine2Name));
    when(container.getVolumesFrom()).thenReturn(singletonList(machine2Name + ":ro"));

    // when
    environmentValidator.validate(environment, dockerEnvironment);
  }

