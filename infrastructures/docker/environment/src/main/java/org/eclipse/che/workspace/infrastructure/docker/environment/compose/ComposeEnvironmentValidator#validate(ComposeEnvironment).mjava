  void validate(ComposeEnvironment env) throws ValidationException {
    checkArgument(
        env.getServices() != null && !env.getServices().isEmpty(),
        "Environment should contain at least 1 service");

    List<String> missingServices =
        env.getMachines()
            .keySet()
            .stream()
            .filter(machineName -> !env.getServices().containsKey(machineName))
            .collect(toList());
    checkArgument(
        missingServices.isEmpty(),
        "Environment contains machines that are missing in environment recipe: %s",
        Joiner.on(", ").join(missingServices));

    // needed to validate different kinds of dependencies in containers to other containers
    Set<String> containersNames = env.getServices().keySet();

    for (Map.Entry<String, ComposeService> serviceEntry : env.getServices().entrySet()) {
      validateService(serviceEntry.getKey(), serviceEntry.getValue(), containersNames);
    }
  }

