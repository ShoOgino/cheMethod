    private void startMachine(String name, DockerContainerConfig containerConfig)
            throws InfrastructureException, InterruptedException {
        InternalMachineConfig machineCfg = getContext().getMachineConfigs().get(name);

        Map<String, String> labels = new HashMap<>(containerConfig.getLabels());
        labels.putAll(Labels.newSerializer()
                            .machineName(name)
                            .runtimeId(identity)
                            .servers(machineCfg.getServers())
                            .labels());
        containerConfig.setLabels(labels);

        DockerMachine machine = serviceStarter.startService(dockerEnvironment.getNetwork(),
                                                            name,
                                                            containerConfig,
                                                            identity,
                                                            devMachineName.equals(name),
                                                            new AbnormalMachineStopHandlerImpl());
        try {
            startSynchronizer.addMachine(name, machine);
        } catch (InfrastructureException e) {
            // destroy machine only in case its addition fails
            // in other cases cleanup of whole runtime will be performed
            destroyMachineQuietly(name, machine);
            throw e;
        }
        bootstrapperFactory.create(name, identity, machine, machineCfg.getInstallers()).bootstrap();

        ServersReadinessChecker readinessChecker = new ServersReadinessChecker(name,
                                                                               machine.getServers(),
                                                                               new ServerReadinessHandler(name),
                                                                               serverCheckerFactory);
        readinessChecker.startAsync();
        readinessChecker.await();
    }

