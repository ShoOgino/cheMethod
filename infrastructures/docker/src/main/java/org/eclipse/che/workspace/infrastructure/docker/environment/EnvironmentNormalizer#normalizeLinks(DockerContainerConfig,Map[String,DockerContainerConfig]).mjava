    /**
     * Replaces linked to this container's name with container name which represents the container in links section.
     * The problem is that a user writes names of other services in links section in compose file.
     * But actually links are constraints and their values should be names of containers (not services) to be linked.
     * <br/>
     * For example: serviceDB:serviceDbAlias -> container_1234:serviceDbAlias <br/>
     * If alias is omitted then service name will be used.
     *
     * @param containerToNormalizeLinks
     *         container which links will be normalized
     * @param containers
     *         all containers in environment
     */
    private void normalizeLinks(DockerContainerConfig containerToNormalizeLinks,
                                Map<String, DockerContainerConfig> containers)
            throws InfrastructureException {
        List<String> normalizedLinks = new ArrayList<>();
        for (String link : containerToNormalizeLinks.getLinks()) {
            // a link has format: 'name:alias' or 'name'
            String containerNameAndAliasToLink[] = link.split(":", 2);
            String containerName = containerNameAndAliasToLink[0];
            String containerAlias = (containerNameAndAliasToLink.length > 1) ?
                                    containerNameAndAliasToLink[1] : null;
            DockerContainerConfig containerLinkTo = containers.get(containerName);
            if (containerLinkTo != null) {
                String containerNameLinkTo = containerLinkTo.getContainerName();
                normalizedLinks.add((containerAlias == null) ?
                                    containerNameLinkTo :
                                    containerNameLinkTo + ':' + containerAlias);
            } else {
                // should never happens. Errors like this should be filtered by CheEnvironmentValidator
                throw new InfrastructureException("Attempt to link non existing container " + containerName +
                                                  " to " + containerToNormalizeLinks + " container.");
            }
        }
        containerToNormalizeLinks.setLinks(normalizedLinks);
    }

