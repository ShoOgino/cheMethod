    /**
     * Find launcher for given agent independently of version.
     * If the specific {@link AgentLauncher} isn't registered then the default one will be used.
     *
     * @see Agent#getId()
     * @see OldMachineConfig#getType()
     *
     * @param agentName
     *      the agent name
     * @param machineType
     *      the machine type
     * @return {@link AgentLauncher}
     */
    public AgentLauncher find(String agentId, String machineType) {
        return launchers.stream()
                        .filter(l -> l.getAgentId().equals(agentId))
                        .filter(l -> l.getMachineType().equals(machineType))
                        .findAny()
                        .orElse(null);
//                        .orElse(defaultLauncher);
    }

