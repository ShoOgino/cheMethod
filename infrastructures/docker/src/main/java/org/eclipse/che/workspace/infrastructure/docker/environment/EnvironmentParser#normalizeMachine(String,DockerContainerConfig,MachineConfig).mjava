    private void normalizeMachine(String name, DockerContainerConfig service, MachineConfig machineConfig)
            throws ValidationException {
        if (machineConfig.getAttributes().containsKey("memoryLimitBytes")) {
            try {
                service.setMemLimit(Long.parseLong(machineConfig.getAttributes().get("memoryLimitBytes")));
            } catch (NumberFormatException e) {
                throw new ValidationException(
                        format("Value of attribute 'memoryLimitBytes' of machine '%s' is illegal", name));
            }
        }
        service.setExpose(service.getExpose()
                                 .stream()
                                 .map(expose -> expose.contains("/") ?
                                                expose :
                                                expose + "/tcp")
                                 .collect(toList()));
        machineConfig.getServers().forEach((serverRef, serverConf) -> {
            String normalizedPort = serverConf.getPort().contains("/") ?
                                    serverConf.getPort() :
                                    serverConf.getPort() + "/tcp";

            service.getExpose().add(normalizedPort);

            String portLabelPrefix = SERVER_CONF_LABEL_PREFIX + normalizedPort;

            service.getLabels().put(portLabelPrefix +
                                    SERVER_CONF_LABEL_REF_SUFFIX,
                                    serverRef);
            if (serverConf.getPath() != null) {
                service.getLabels().put(portLabelPrefix +
                                        SERVER_CONF_LABEL_PATH_SUFFIX,
                                        serverConf.getPath());
            }
            if (serverConf.getProtocol() != null) {
                service.getLabels().put(portLabelPrefix +
                                        SERVER_CONF_LABEL_PROTOCOL_SUFFIX,
                                        serverConf.getProtocol());
            }
        });
    }

