    public void validate(Environment env, DockerEnvironment dockerEnvironment) throws ValidationException,
                                                                                      InfrastructureException {
        checkArgument(dockerEnvironment.getServices() != null && !dockerEnvironment.getServices().isEmpty(),
                      "Environment should contain at least 1 machine");

        checkArgument(env.getMachines() != null && !env.getMachines().isEmpty(),
                      "Environment doesn't contain machine with 'org.eclipse.che.ws-agent' agent");

        List<String> missingServices = env.getMachines()
                                          .keySet()
                                          .stream()
                                          .filter(machineName -> !dockerEnvironment.getServices()
                                                                                   .containsKey(machineName))
                                          .collect(toList());
        checkArgument(missingServices.isEmpty(),
                      "Environment 'contains machines that are missing in environment recipe: %s",
                      Joiner.on(", ").join(missingServices));

        List<String> devMachines = env.getMachines()
                                      .entrySet()
                                      .stream()
                                      .filter(entry -> entry.getValue().getInstallers() != null &&
                                                       entry.getValue().getInstallers()
                                                            .contains("org.eclipse.che.ws-agent"))
                                      .map(Map.Entry::getKey)
                                      .collect(toList());

        checkArgument(devMachines.size() == 1,
                      "Environment should contain exactly 1 machine with agent 'org.eclipse.che.ws-agent', but contains '%s'. " +
                      "All machines with this agent: %s",
                      devMachines.size(), Joiner.on(", ").join(devMachines));

        // needed to validate different kinds of dependencies in services to other services
        Set<String> servicesNames = dockerEnvironment.getServices().keySet();

        for (Map.Entry<String, DockerContainerConfig> entry : dockerEnvironment.getServices().entrySet()) {
            validateMachine(entry.getKey(),
                            env.getMachines().get(entry.getKey()),
                            entry.getValue(),
                            servicesNames);
        }
    }

