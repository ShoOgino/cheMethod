    /**
     * Parses compose file into Docker Compose model.
     *
     * @param recipeContent
     *         compose file to parse
     * @throws ValidationException
     *         when environment or environment recipe is invalid
     */
    @VisibleForTesting
    ComposeEnvironment parse(String recipeContent, String contentType)
            throws ValidationException {
        checkNotNull(recipeContent, "Recipe content should not be null");
        checkNotNull(contentType, "Recipe content type should not be null");

        ComposeEnvironment composeEnvironment;
        switch (contentType) {
            case "application/x-yaml":
            case "text/yaml":
            case "text/x-yaml":
                try {
                    composeEnvironment = YAML_PARSER.readValue(recipeContent, ComposeEnvironment.class);
                } catch (IOException e) {
                    throw new ValidationException(
                            "Parsing of environment configuration failed. " + e.getLocalizedMessage());
                }
                break;
            default:
                throw new ValidationException("Provided environment recipe content type '" +
                                                   contentType +
                                                   "' is unsupported. Supported values are: " +
                                                   "application/x-yaml, text/yaml, text/x-yaml");
        }
        return composeEnvironment;
    }

