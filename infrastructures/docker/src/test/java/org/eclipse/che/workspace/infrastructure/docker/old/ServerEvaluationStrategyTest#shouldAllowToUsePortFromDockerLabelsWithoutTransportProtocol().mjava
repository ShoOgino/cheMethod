    @Test
    public void shouldAllowToUsePortFromDockerLabelsWithoutTransportProtocol() throws Exception {
        // given
        prepareStrategyAndContainerInfoMocks();

        labels.put(String.format(SERVER_CONF_LABEL_REF_KEY, "8080"), "myserv1");
        labels.put(String.format(SERVER_CONF_LABEL_PROTOCOL_KEY, "8080"), "http");

        labels.put(String.format(SERVER_CONF_LABEL_REF_KEY, "9090/udp"), "myserv1-tftp");
        labels.put(String.format(SERVER_CONF_LABEL_PROTOCOL_KEY, "9090/udp"), "tftp");

        final HashMap<String, ServerImpl> expectedServers = new HashMap<>();
        expectedServers.put("8080/tcp", new ServerImpl("myserv1",
                                                       "http",
                                                       DEFAULT_HOSTNAME + ":32100",
                                                       "http://" + DEFAULT_HOSTNAME + ":32100",
                                                       new ServerPropertiesImpl(null,
                                                                                DEFAULT_HOSTNAME + ":32100",
                                                                                "http://" + DEFAULT_HOSTNAME +
                                                                                ":32100")));
        expectedServers.put("9090/udp", new ServerImpl("myserv1-tftp",
                                                       "tftp",
                                                       DEFAULT_HOSTNAME + ":32101",
                                                       "tftp://" + DEFAULT_HOSTNAME + ":32101",
                                                       new ServerPropertiesImpl(null,
                                                                                DEFAULT_HOSTNAME + ":32101",
                                                                                "tftp://" + DEFAULT_HOSTNAME +
                                                                                ":32101")));

        // when
        final Map<String, ServerImpl> servers = strategy.getServers(containerInfo, DEFAULT_HOSTNAME, serverConfs);

        // then
        assertEquals(servers, expectedServers);
    }

