    private DockerEnvironment createTestEnv() {
        DockerEnvironment cheServicesEnvironment = new DockerEnvironment();

        DockerContainerConfig cheService1 = new DockerContainerConfig();
        String buildContext = "http://host.com:port/location/of/dockerfile/or/git/repo/";
        cheService1.setBuild(new DockerBuildContext().withContext(buildContext)
                                                     .withDockerfilePath("dockerfile/Dockerfile_alternate")
                                                     .withArgs(emptyMap()));
        cheService1.setCommand(asList("tail", "-f", "/dev/null"));
        cheService1.setContainerName("some_name");
        cheService1.setDependsOn(asList("machine2", "machine3"));
        cheService1.setEntrypoint(asList("/bin/bash", "-c"));
        cheService1.setEnvironment(ImmutableMap.of("env1", "123",
                                                   "env2", "345"));
        cheService1.setExpose(asList("3000", "8080"));
        cheService1.setImage("codenvy/ubuntu_jdk8");
        cheService1.setLabels(ImmutableMap.of("com.example.department", "Finance",
                                              "com.example.description", "Accounting webapp",
                                              "com.example.label-with-empty-value", ""));
        cheService1.setLinks(asList("machine1", "machine2:db"));
        cheService1.setMemLimit(2147483648L);
        cheService1.setNetworks(asList("some-network", "other-network"));
        cheService1.setPorts(asList("3000", "3000-3005"));
        cheService1.setVolumes(asList("/opt/data:/var/lib/mysql", "~/configs:/etc/configs/:ro"));
        cheService1.setVolumesFrom(asList("machine2:ro", "machine3"));

        DockerContainerConfig cheService2 = new DockerContainerConfig();
        cheService2.setImage("codenvy/ubuntu_jdk8");
        DockerContainerConfig cheService3 = new DockerContainerConfig();
        cheService3.setImage("codenvy/ubuntu_jdk8");

        cheServicesEnvironment.setServices(ImmutableMap.of("machine1", cheService1,
                                                           "machine2", cheService2,
                                                           "machine3", cheService3));
        return cheServicesEnvironment;
    }

