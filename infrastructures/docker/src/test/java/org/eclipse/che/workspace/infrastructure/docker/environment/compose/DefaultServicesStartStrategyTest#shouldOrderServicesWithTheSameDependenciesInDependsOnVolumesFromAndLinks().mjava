    @Test
    public void shouldOrderServicesWithTheSameDependenciesInDependsOnVolumesFromAndLinks() throws Exception {
        // given
        CheServicesEnvironmentImpl composeEnvironment = new CheServicesEnvironmentImpl();
        composeEnvironment.getServices().put("second", new CheServiceImpl().withVolumesFrom(singletonList("first"))
                                                                           .withDependsOn(singletonList("first"))
                                                                           .withLinks(singletonList("first:alias")));
        composeEnvironment.getServices().put("third", new CheServiceImpl().withVolumesFrom(asList("first", "second"))
                                                                          .withDependsOn(asList("first", "second"))
                                                                          .withLinks(asList("first", "second")));
        composeEnvironment.getServices().put("first", new CheServiceImpl());
        composeEnvironment.getServices().put("forth", new CheServiceImpl().withVolumesFrom(singletonList("third"))
                                                                          .withDependsOn(singletonList("third"))
                                                                          .withLinks(singletonList("third")));
        composeEnvironment.getServices().put("fifth", new CheServiceImpl().withVolumesFrom(asList("forth", "first"))
                                                                          .withDependsOn(asList("forth", "first"))
                                                                          .withLinks(asList("forth:alias", "first")));
        List<String> expected = asList("first", "second", "third", "forth", "fifth");

        // when
        List<String> actual = strategy.order(composeEnvironment);

        // then
        assertEquals(actual, expected);
    }

