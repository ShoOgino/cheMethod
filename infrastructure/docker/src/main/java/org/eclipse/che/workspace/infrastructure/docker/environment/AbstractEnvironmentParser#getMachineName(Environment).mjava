    /**
     * Returns machine name which is mapped to {@link MachineConfig}
     * in the {@code environment}.
     * Note: Valid {@link Environment} based on docker file or docker
     * image recipe type contains only one {@link MachineConfig}.
     *
     * @param environment
     *         environment to get machine name
     * @throws IllegalArgumentException
     *         in case if {@code environment} is multiple machine environment
     */
    protected String getMachineName(Environment environment) throws IllegalArgumentException {
        checkArgument(environment.getMachines().size() == 1,
                      "Environment of type '%s' doesn't support multiple machines, but contains machines: %s",
                      environment.getRecipe().getType(),
                      Joiner.on(", ").join(environment.getMachines().keySet()));

        return environment.getMachines()
                          .keySet()
                          .iterator()
                          .next();
    }

