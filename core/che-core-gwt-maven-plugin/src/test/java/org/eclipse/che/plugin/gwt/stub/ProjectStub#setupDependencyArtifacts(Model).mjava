  private void setupDependencyArtifacts(Model model) {
    Set<Artifact> artifacts = new HashSet<>();
    ArtifactStubFactory artifactStubFactory = new ArtifactStubFactory();

    for (Dependency dependency : model.getDependencies()) {
      Artifact artifact;

      try {
        artifact =
            artifactStubFactory.createArtifact(
                dependency.getGroupId(),
                dependency.getArtifactId(),
                System.getProperty("currentVersion"));
      } catch (IOException e) {
        throw new RuntimeException(e);
      }

      List<String> patterns =
          dependency
              .getExclusions()
              .stream()
              .map(exclusion -> exclusion.getGroupId() + ":" + exclusion.getArtifactId())
              .collect(Collectors.toList());

      artifact.setDependencyFilter(new ExcludesArtifactFilter(patterns));
      artifacts.add(artifact);
    }

    setDependencyArtifacts(artifacts);
  }

