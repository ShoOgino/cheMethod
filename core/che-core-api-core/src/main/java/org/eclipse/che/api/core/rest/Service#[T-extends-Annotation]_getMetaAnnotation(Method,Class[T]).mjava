  private <T extends Annotation> T getMetaAnnotation(Method method, Class<T> metaAnnotationClass) {
    T annotation = null;
    for (Annotation a : method.getAnnotations()) {
      annotation = a.annotationType().getAnnotation(metaAnnotationClass);
      if (annotation != null) {
        break;
      }
    }
    if (annotation == null) {
      for (Class<?> c = method.getDeclaringClass().getSuperclass();
          annotation == null && c != null && c != Object.class;
          c = c.getSuperclass()) {
        Method inherited = null;
        try {
          inherited = c.getMethod(method.getName(), method.getParameterTypes());
        } catch (NoSuchMethodException ignored) {
        }
        if (inherited != null) {
          for (Annotation a : inherited.getAnnotations()) {
            annotation = a.annotationType().getAnnotation(metaAnnotationClass);
            if (annotation != null) {
              break;
            }
          }
        }
      }
    }
    return annotation;
  }

