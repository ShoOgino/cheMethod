    /**
     * Transmit a request with params as a single object and result as a list of objects
     *
     * @param endpointId
     *         endpoint to address a transmission
     * @param method
     *         method name to address a transmission
     * @param pValue
     *         params value
     * @param rClass
     *         result class
     * @param <P>
     *         params class
     * @param <R>
     *         result class
     *
     * @return
     */
    public <P, R> JsonRpcPromise<List<R>> transmitOneToMany(String endpointId, String method, P pValue, Class<R> rClass) {
        checkEndpointId(endpointId);
        checkMethodName(method);
        checkParamsValue(pValue);
        checkResultClass(rClass);

        LOG.debug("Initiating a transmission of a request: " +
                  "endpoint ID: {}, method: {}, params object class: {}, params object value: {}, result list class: {}",
                  endpointId, method, pValue.getClass(), pValue, rClass);

        return transmitter.newRequest()
                          .endpointId(endpointId)
                          .methodName(method)
                          .paramsAsDto(pValue)
                          .sendAndReceiveResultAsListOfDto(rClass);
    }

