    private static void clean() {
        Pair<File, Integer> pair;
        final Set<Pair<File, Integer>> failToDelete = new HashSet<>();
        while ((pair = files.poll()) != null) {
            final File file = pair.first;
            int deleteAttempts = pair.second;
            if (file.exists()) {
                if (!IoUtil.deleteRecursive(file)) {
                    failToDelete.add(Pair.of(file, ++deleteAttempts));
                    if (deleteAttempts > logAfterAttempts) {
                        LOG.error("Unable delete file '{}' after {} tries", file, deleteAttempts);
                    }
                } else if (LOG.isDebugEnabled()) {
                    LOG.debug("Delete file '{}'", file);
                }
            }
        }
        if (!failToDelete.isEmpty()) {
            files.addAll(failToDelete);
        }
    }

