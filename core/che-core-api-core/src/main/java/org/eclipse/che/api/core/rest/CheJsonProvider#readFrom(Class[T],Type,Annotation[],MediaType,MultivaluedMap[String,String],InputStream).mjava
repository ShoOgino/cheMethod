  @SuppressWarnings("unchecked")
  @Override
  public T readFrom(
      Class<T> type,
      Type genericType,
      Annotation[] annotations,
      MediaType mediaType,
      MultivaluedMap<String, String> httpHeaders,
      InputStream entityStream)
      throws IOException, WebApplicationException {
    if (type.isAnnotationPresent(DTO.class)) {
      return DtoFactory.getInstance().createDtoFromJson(entityStream, type);
    } else if (type.isAssignableFrom(List.class) && genericType instanceof ParameterizedType) {
      ParameterizedType parameterizedType = (ParameterizedType) genericType;
      Type elementType = parameterizedType.getActualTypeArguments()[0];
      if (elementType instanceof Class) {
        Class elementClass = (Class) elementType;
        if (elementClass.isAnnotationPresent(DTO.class)) {
          return (T) DtoFactory.getInstance().createListDtoFromJson(entityStream, elementClass);
        }
      }
    }
    return (T)
        delegate.readFrom(type, genericType, annotations, mediaType, httpHeaders, entityStream);
  }

