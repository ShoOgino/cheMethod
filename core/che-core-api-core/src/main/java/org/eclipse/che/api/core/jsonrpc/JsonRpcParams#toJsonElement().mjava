    public JsonElement toJsonElement() {
        if (param != null) {
            if (param.type.equals(Object.class)) {
                return jsonParser.parse(param.value.toString());
            } else if (param.type.equals(String.class)) {
                return new JsonPrimitive((String)param.value);
            } else if (param.type.equals(Boolean.class)) {
                return new JsonPrimitive((Boolean)param.value);
            } else if (param.type.equals(Double.class)) {
                return new JsonPrimitive((Double)param.value);
            }
        }

        JsonArray array = new JsonArray();
        for (Param<?> paramCandidate : params) {
            JsonElement element;
            if (paramCandidate.type.equals(Object.class)) {
                element = jsonParser.parse(paramCandidate.value.toString());
            } else if (paramCandidate.type.equals(String.class)) {
                element = new JsonPrimitive((String)paramCandidate.value);
            } else if (paramCandidate.type.equals(Boolean.class)) {
                element = new JsonPrimitive((Boolean)paramCandidate.value);
            } else {
                element = new JsonPrimitive((Double)paramCandidate.value);
            }
            array.add(element);
        }
        return array;
    }

