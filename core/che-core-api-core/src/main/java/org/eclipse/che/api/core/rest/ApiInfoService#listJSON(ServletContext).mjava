    @GET
    @Produces({MediaType.APPLICATION_JSON})
    public RestServicesList.RootResourcesList listJSON(@Context ServletContext context) {
        ResourceBinder binder = (ResourceBinder)context.getAttribute(ResourceBinder.class.getName());
        return new RestServicesList.RootResourcesList(FluentIterable.from(binder.getResources()).transform(
                new Function<ObjectFactory<ResourceDescriptor>, RestServicesList.RootResource>() {
                    @Nullable
                    @Override
                    public RestServicesList.RootResource apply(ObjectFactory<ResourceDescriptor> input) {
                        ResourceDescriptor descriptor = input.getObjectModel();
                        return new RestServicesList.RootResource(descriptor.getObjectClass().getName(), //
                                                                 descriptor.getPathValue().getPath(), //
                                                                 descriptor.getUriPattern().getRegex());
                    }
                }).toList());
    }

