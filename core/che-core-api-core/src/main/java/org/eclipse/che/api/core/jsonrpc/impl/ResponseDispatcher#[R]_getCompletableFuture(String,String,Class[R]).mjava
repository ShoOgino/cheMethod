    /**
     * Register and get a completable future that will be resolved when specified response
     * will be dispatched.
     *
     * @param endpointId
     *         high level endpoint identifier
     * @param requestId
     *         request identifier
     * @param resultClass
     *         class of request result that is contained within response
     *
     * @return completable future based on result represented by DTO
     */
    public <R> CompletableFuture<R> getCompletableFuture(String endpointId, String requestId, Class<R> resultClass) {
        final CompletableFuture<R> future = new CompletableFuture<>();
        futures.put(endpointId + '@' + requestId, future);
        resultClasses.put(endpointId + '@' + requestId, resultClass);
        return future;
    }

