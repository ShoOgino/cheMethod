  public void resend(String endpointId) {
    Queue<DelayedMessage> delayedMessages = delayedMessageRegistry.remove(endpointId);

    if (delayedMessages == null || delayedMessages.isEmpty()) {
      return;
    }

    Optional<Session> sessionOptional = registry.get(endpointId);

    if (!sessionOptional.isPresent()) {
      return;
    }

    Queue<DelayedMessage> backingQueue = EvictingQueue.create(delayedMessages.size());
    while (!delayedMessages.isEmpty()) {
      backingQueue.offer(delayedMessages.poll());
    }

    Session session = sessionOptional.get();
    for (DelayedMessage delayedMessage : backingQueue) {
      if (session.isOpen()) {
        session.getAsyncRemote().sendText(delayedMessage.message);
      } else {
        delayedMessages.add(delayedMessage);
      }
    }

    if (!delayedMessages.isEmpty()) {
      delayedMessageRegistry.put(endpointId, delayedMessages);
    }
  }

