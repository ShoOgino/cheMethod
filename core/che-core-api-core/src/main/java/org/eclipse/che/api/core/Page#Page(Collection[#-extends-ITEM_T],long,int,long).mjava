  /**
   * Creates a new page.
   *
   * @param items page items
   * @param itemsBefore items count before this page
   * @param pageSize page size
   * @param totalCount count of all the items
   * @throws NullPointerException when {@code items} collection is null
   * @throws IllegalArgumentException when {@code itemsBefore} is negative
   * @throws IllegalArgumentException when {@code pageSize} is non-positive
   * @throws IllegalArgumentException when {@code totalCount} is negative
   */
  public Page(Collection<? extends ITEM_T> items, long itemsBefore, int pageSize, long totalCount) {
    requireNonNull(items, "Required non-null items");
    this.items = new ArrayList<>(items);
    checkArgument(itemsBefore >= 0, "Required non-negative value of items before");
    this.itemsBefore = itemsBefore;
    checkArgument(pageSize > 0, "Required positive value of page size");
    this.pageSize = pageSize;
    checkArgument(totalCount >= 0, "Required non-negative value of total items");
    this.totalCount = totalCount;
  }

