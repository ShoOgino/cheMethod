    public void dispatch(String endpointId, JsonRpcResponse response) {
        checkNotNull(endpointId, "Endpoint ID name must not be null");
        checkArgument(!endpointId.isEmpty(), "Endpoint ID name must not be empty");
        checkNotNull(response, "Response name must not be null");

        LOGGER.debug("Dispatching a response: " + response + ", from endpoint: " + endpointId);

        String responseId = response.getId();
        if (responseId == null) {
            LOGGER.debug("Response ID is not defined, skipping...");
            return;
        }
        LOGGER.debug("Fetching response ID: " + responseId);

        String key = combine(endpointId, responseId);
        LOGGER.debug("Generating key: " + key);

        Class<?> rClass = rClasses.remove(key);
        LOGGER.debug("Fetching result class:" + rClass);

        if (response.hasResult()) {
            processResult(endpointId, response, key, rClass);
        } else if (response.hasError()) {
            processError(endpointId, response, key);
        } else {
            LOGGER.error("Received incorrect response: no error, no result");
        }
    }

