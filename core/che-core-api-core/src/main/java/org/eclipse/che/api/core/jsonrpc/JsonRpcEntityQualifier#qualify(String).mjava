    public JsonRpcEntityType qualify(String message) {
        checkNotNull(message, "Message must not be null");
        checkArgument(!message.isEmpty(), "Message must not be empty");
        LOG.debug("Qualifying message: " + message);

        JsonObject jsonObject = jsonParser.parse(message).getAsJsonObject();
        LOG.debug("Json keys: " + jsonObject.entrySet().stream().map(Map.Entry::getKey).collect(Collectors.toSet()));

        if (jsonObject.has("method")) {
            LOG.debug("Qualified to request");

            return JsonRpcEntityType.REQUEST;
        } else if (jsonObject.has("error") != jsonObject.has("result")) {
            LOG.debug("Qualified to response");

            return JsonRpcEntityType.RESPONSE;
        } else {
            LOG.debug("Qualified to undefined");

            return JsonRpcEntityType.UNDEFINED;
        }
    }

