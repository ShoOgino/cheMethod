    /**
     * Dispatches json rpc notification received from endpoint identified by a
     * high level identifier and represented as a json object.
     *
     * @param endpointId
     *         high level endpoint identifier
     * @param incomingJson
     *         json object
     */
    public void dispatch(String endpointId, JsonObject incomingJson) {
        LOG.debug("Dispatching incoming notification from: " + endpointId + ", json: " + incomingJson);

        final String method = incomingJson.get("method").getAsString();
        LOG.debug("Extracted notification method: " + method);

        final RequestHandler handler = handlers.get(method);

        if (incomingJson.has("params")) {
            final JsonObject params = incomingJson.get("params").getAsJsonObject();
            LOG.debug("Notification is parametrized, processing parameters: " + params);

            final Class paramsClass = handler.getParamsClass();
            LOG.debug("Extracted notification params class: " + paramsClass);

            dispatch(endpointId, handler, params, paramsClass);
        } else {
            LOG.debug("Notification is not parametrized");


            dispatch(endpointId, handler);
        }
    }

