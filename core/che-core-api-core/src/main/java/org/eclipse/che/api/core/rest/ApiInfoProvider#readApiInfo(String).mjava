  private ApiInfo readApiInfo(String buildInfo) {
    try {
      // calculate path to MANIFEST.MF in the jar with ApiInfo.class
      Class clazz = ApiInfo.class;
      String classPath = clazz.getResource(clazz.getSimpleName() + ".class").toString();

      String manifestPath =
          classPath.substring(0, classPath.lastIndexOf("!") + 1) + "/META-INF/MANIFEST.MF";

      try (InputStream manifestInputStream = new URL(manifestPath).openStream()) {

        final Manifest manifest = new Manifest(manifestInputStream);
        final Attributes mainAttributes = manifest.getMainAttributes();
        final DtoFactory dtoFactory = DtoFactory.getInstance();
        return dtoFactory
            .createDto(ApiInfo.class)
            .withSpecificationVendor(mainAttributes.getValue("Specification-Vendor"))
            .withImplementationVendor(mainAttributes.getValue("Implementation-Vendor"))
            .withSpecificationTitle("Che REST API")
            .withSpecificationVersion(mainAttributes.getValue("Specification-Version"))
            .withImplementationVersion(mainAttributes.getValue("Implementation-Version"))
            .withScmRevision(mainAttributes.getValue("SCM-Revision"))
            .withBuildInfo(buildInfo);
      }

    } catch (Exception e) {
      LOG.error("Unable to read API info. Error: " + e.getMessage(), e);
      throw new RuntimeException("Unable to read API information", e);
    }
  }

