  @Test
  public void testSimpleEvent() {
    final List<Object> events = new ArrayList<>();
    bus.subscribe(
        new EventSubscriber<Date>() {
          @Override
          public void onEvent(Date event) {
            events.add(event);
          }
        });
    bus.subscribe(
        new EventSubscriber<String>() {
          @Override
          public void onEvent(String event) {
            events.add(event);
          }
        });
    bus.subscribe(
        new EventSubscriber<Long>() {
          @Override
          public void onEvent(Long event) {
            events.add(event);
          }
        });
    Date date = new Date();
    bus.publish(date);
    bus.publish("hello");
    bus.publish(123L);
    Assert.assertEquals(events.size(), 3);
    Assert.assertTrue(events.contains(date));
    Assert.assertTrue(events.contains("hello"));
    Assert.assertTrue(events.contains(123L));
    // ignored
    bus.publish(new Object());
    Assert.assertEquals(events.size(), 3);
  }

