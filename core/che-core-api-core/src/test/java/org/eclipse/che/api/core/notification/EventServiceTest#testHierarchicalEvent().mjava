  @Test
  public void testHierarchicalEvent() {
    final List<String> events = new ArrayList<>();
    // register two listeners.
    // 1. Accept only Event type.
    bus.subscribe(
        new EventSubscriber<Event>() {
          @Override
          public void onEvent(Event event) {
            events.add(String.format("1:%s", event));
          }
        });

    // 2. Accept Event and ExtEvent types.
    bus.subscribe(
        new EventSubscriber<ExtEvent>() {
          @Override
          public void onEvent(ExtEvent event) {
            events.add(String.format("2:%s", event));
          }
        });

    bus.publish(new Event());
    Assert.assertEquals(events.size(), 1);
    Assert.assertEquals(events.get(0), "1:event");
    events.clear();
    bus.publish(new ExtEvent());
    Assert.assertEquals(events.size(), 2);
    Assert.assertTrue(events.contains("1:ext_event"));
    Assert.assertTrue(events.contains("2:ext_event"));
  }

