    @Test
    public void testMiddleDataWindowPage() throws Exception {
        // item1. <= skipped                <- first page start
        // item2. <= skipped
        // item3. <- page start             <- first page end
        // item4.
        // item5. <- page end               <- last page start
        // item6.
        // item7.                           <- last page end
        final Page<String> page = new Page<>(asList("item3", "item4", "item5"), 2, 3, 7);


        assertFalse(page.isEmpty(), "non-empty page");
        assertEquals(page.getItemsCount(), 3, "items size ");
        assertEquals(page.getSize(), 3, "page size");
        assertEquals(page.getTotalItemsCount(), 7, "total elements count");

        final Page.PageRef firstRef = page.getFirstPageRef();
        assertEquals(firstRef.getPageSize(), 3, "first page size");
        assertEquals(firstRef.getItemsBefore(), 0, "first page skip items");

        final Page.PageRef lastRef = page.getLastPageRef();
        assertEquals(lastRef.getPageSize(), 3, "last page size");
        assertEquals(lastRef.getItemsBefore(), 6, "last page skip items");

        assertEquals(page.getNumber(), -1, "page number");

        assertFalse(page.hasPreviousPage(), "has previous page");
        assertFalse(page.getPreviousPageRef().isPresent(), "has previous page ref");

        assertFalse(page.hasNextPage(), "page has next page");
        assertFalse(page.getNextPageRef().isPresent(), "page has next page ref");

        assertEquals(page.getItems(), asList("item3", "item4", "item5"));
        assertEquals(page.getItems(i -> i.substring(4)), asList("3", "4", "5"));
        assertEquals(new ArrayList<>(page.fill(new TreeSet<>(reverseOrder()))), asList("item5", "item4", "item3"));
    }

