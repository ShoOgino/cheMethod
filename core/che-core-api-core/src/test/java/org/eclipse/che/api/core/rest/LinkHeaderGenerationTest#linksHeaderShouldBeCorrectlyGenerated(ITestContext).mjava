    @Test
    public void linksHeaderShouldBeCorrectlyGenerated(ITestContext ctx) throws Exception {
        final Response response = given().auth()
                                         .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
                                         .contentType("application/json")
                                         .when()
                                         .get(SECURE_PATH + "/test/paging/test-path-param?query-param=test-query-param");

        assertEquals(response.getStatusCode(), 200);

        final String headerValue = response.getHeader("Link");
        assertNotNull(headerValue, "Link header is missing in the response");

        final Map<String, String> relToLinkMap = PagingUtil.parseLinkHeader(headerValue);
        final Set<String> expectedRels = new HashSet<>(asList("first", "last", "prev", "next"));
        assertEquals(relToLinkMap.keySet(), expectedRels,
                     "Rels are different " + symmetricDifference(expectedRels, relToLinkMap.keySet()));

        final String expectedUri = "http://localhost:" + ctx.getAttribute(EverrestJetty.JETTY_PORT) +
                                   "/rest/private/test/paging/test-path-param";
        for (String link : relToLinkMap.values()) {
            final URI uri = URI.create(link);
            final Map<String, List<String>> params = getQueryParameters(uri.toURL());
            assertEquals(params.size(), 3);
            assertNotNull(params.get("skipCount"));
            assertNotNull(params.get("maxItems"));
            assertEquals(params.get("query-param").get(0), "test-query-param");
            assertEquals(link, expectedUri + '?' + uri.getQuery());
        }
    }

