  /**
   * Returns {@code true} if element has at least one child with given name, otherwise returns
   * {@code false}.
   *
   * @param name child name to check
   * @return {@code true} if element has at least one child with given name, otherwise {@code false}
   * @throws XMLTreeException when this element has been removed from xml tree
   * @throws NullPointerException when name parameter is {@code null}
   */
  public boolean hasChild(String name) {
    checkNotRemoved();
    requireNonNull(name, "Non-null child name required.");
    final NodeList nodes = delegate.getChildNodes();
    for (int i = 0; i < nodes.getLength(); i++) {
      if (name.equals(nodes.item(i).getNodeName())) {
        return true;
      }
    }
    return false;
  }

