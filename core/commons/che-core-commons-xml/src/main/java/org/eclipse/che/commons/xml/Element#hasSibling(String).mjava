    /**
     * Returns {@code true} if element has at least one sibling with given name, otherwise returns {@code false}.
     *
     * @return {@code true} if element has at least one singling with given name, otherwise {@code false}.
     * @throws XMLTreeException
     *         when this element has been removed from xml tree
     * @throws NullPointerException
     *         when name parameter is {@code null}
     */
    public boolean hasSibling(String name) {
        checkNotRemoved();
        requireNonNull(name, "Required not null sibling name");
        final NodeList nodes = delegate.getParentNode().getChildNodes();
        for (int i = 0; i < nodes.getLength(); i++) {
            if (nodes.item(i) != delegate && name.equals(nodes.item(i).getNodeName())) {
                return true;
            }
        }
        return false;
    }

