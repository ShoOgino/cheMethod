    /**
     * Replaces this element with new one.
     *
     * @param newElement
     *         new element which is replacement for current element
     * @return newly created element
     * @throws XMLTreeException
     *         when this element has been removed from xml tree
     *         or this element is root element
     * @throws NullPointerException
     *         when newElement parameter is {@code null}
     */
    public Element replaceWith(NewElement newElement) {
        checkNotRemoved();
        notPermittedOnRootElement();
        requireNonNull(newElement, "Required not null new element");
        insertAfter(newElement);
        final Element inserted = getNextSibling();
        remove();
        return inserted;
    }

