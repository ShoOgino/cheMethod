  /**
   * Inserts new element before current element
   *
   * @param newElement element which will be inserted before current
   * @return this element instance
   * @throws XMLTreeException when this element has been removed from xml tree or this element is
   *     root element
   * @throws NullPointerException when newElement parameter is {@code null}
   */
  public Element insertBefore(NewElement newElement) {
    checkNotRemoved();
    notPermittedOnRootElement();
    requireNonNull(newElement, "Required not null new element");
    //if element has previous sibling insert new element after it
    //inserting before this element to let existing comments
    //or whatever over referenced element
    if (previousElementNode(delegate) != null) {
      getPreviousSibling().insertAfter(newElement);
      return this;
    }
    final Node newNode = createNode(newElement);
    final Element element = createElement(newNode);
    delegate.getParentNode().insertBefore(newNode, delegate);
    //let tree do dirty job
    xmlTree.insertAfterParent(newElement, element, getParent());
    return this;
  }

