    /**
     * Updates element text content. Update based on element text segments.
     * If element doesn't have any text segment then new segment will
     * be created which positions based on container bounds, otherwise
     * only first text segment will be used for update, other text segments
     * will be removed.
     */
    void updateText(Element target) {
        //it may be null when target element doesn't contain
        //text <element></element> so CHARACTERS event was not processed
        if (target.text == null) {
            target.text = new LinkedList<>();
            //updateSegmentContent will set up right bound
            target.text.add(new Segment(target.start.right + 1, target.start.right));
        }
        final Iterator<Segment> segIt = target.text.iterator();
        final Segment first = segIt.next();
        //removing all segments instead of first
        while (segIt.hasNext()) {
            final Segment removal = segIt.next();
            segIt.remove();
            removeSegment(removal);
        }
        updateSegmentContent(first, target.getText());
    }

