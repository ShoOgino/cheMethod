    /**
     * Stops waiting until answer is called in method {@link #waitAnswerCall(long, TimeUnit)} and
     * then waits until method {@link #completeAnswer()} is called.
     *
     * @param invocationOnMock
     *         see {@link Answer#answer(InvocationOnMock)}
     * @return returns answer result if provided in constructor or null otherwise
     * @throws Exception
     *         if answer call or answer result waiting time is elapsed
     * @throws Throwable
     *         in the same cases as in {@link Answer#answer(InvocationOnMock)}
     * @see #waitAnswerCall(long, TimeUnit)
     * @see #completeAnswer()
     * @see Answer#answer(InvocationOnMock)
     */
    @Override
    public T answer(InvocationOnMock invocationOnMock) throws Throwable {
        // report start of answer call
        answerIsCalledLatch.countDown();
        if (error != null) {
            throw new Exception(error);
        }
        // wait until another thread unlocks returning of answer
        if (!answerResultIsUnlockedLatch.await(maxWaitingTime, maxWaitingUnit)) {
            error = "Waiting time elapsed but completeAnswer is not called";
            throw new Exception(error);
        }
        return result;
    }

