    @BeforeTest
    public void init() {
        final Properties props = new Properties();
        props.put("test_int", "123");
        props.put("test_bool", "true");
        props.put("test_uri", "file:/a/b/c");
        props.put("test_url", "http://localhost");
        props.put("test_file", "/a/b/c");
        props.put("test_strings", "a, b, c");
        props.put("test_pair_of_strings", "a=b");
        props.put("test_pair_of_strings2", "a");
        props.put("test_pair_of_strings3", "a=");
        props.put("test_pair_array", "a=b,c=d");
        props.put("some.dir.in_tmp_dir", "${java.io.tmpdir}/some_dir");
        props.put("suffixed.PATH", "${PATH}" + java.io.File.pathSeparator + "some_path");
        props.put("nullable", "NULL");

        final Map<String, String> envProps = new HashMap<>();
        envProps.put("some.unresolvable.variable", "/home/${my.3rd.party.var}/other");
        injector = Guice.createInjector(
                new URIConverter(),
                new URLConverter(),
                new FileConverter(),
                new StringArrayConverter(),
                new PairConverter(),
                new PairArrayConverter(),
                new CheBootstrap.ExtConfiguration(),
                new CheBootstrap.AbstractConfigurationModule() {
                    @Override
                    protected void configure() {
                        bindProperties(props);
                    }
                },
                new CheBootstrap.AbstractConfigurationModule() {
                    @Override
                    protected void configure() {
                        bindEnvProperties("env.", envProps);
                    }
                },
                new MyModule());
    }

