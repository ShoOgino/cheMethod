    @Override
    protected void configure() {
        final Destroyer destroyer = new Destroyer(errorHandler);
        bind(Destroyer.class).toInstance(destroyer);
        bindListener(Matchers.any(), new TypeListener() {
            @Override
            public <T> void hear(TypeLiteral<T> type, TypeEncounter<T> encounter) {
                encounter.register(new InjectionListener<T>() {
                    @Override
                    public void afterInjection(T injectee) {
                        final Method[] methods = get(injectee.getClass(), annotationType);
                        if (methods.length > 0) {
                            // copy array when pass it outside
                            final Method[] copy = new Method[methods.length];
                            System.arraycopy(methods, 0, copy, 0, methods.length);
                            destroyer.add(injectee, copy);
                        }
                    }
                });
            }
        });
    }

