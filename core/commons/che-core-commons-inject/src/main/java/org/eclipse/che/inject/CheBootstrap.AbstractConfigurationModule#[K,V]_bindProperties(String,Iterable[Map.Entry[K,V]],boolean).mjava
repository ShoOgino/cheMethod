        protected <K, V> void bindProperties(String prefix, Iterable<Map.Entry<K, V>> properties, boolean skipUnresolved) {
            StringBuilder buf = null;
            for (Map.Entry<K, V> e : properties) {
                String pValue = (String)e.getValue();
                if ("NULL".equals(pValue)) {
                    bind(String.class).annotatedWith(Names.named(prefix == null ? (String)e.getKey() : (prefix + e.getKey())))
                                      .toProvider(Providers.<String>of(null));
                } else {
                    final Matcher matcher = PATTERN.matcher(pValue);
                    if (matcher.find()) {
                        int start = 0;
                        if (buf == null) {
                            buf = new StringBuilder();
                        } else {
                            buf.setLength(0);
                        }
                        do {
                            final int i = matcher.start();
                            final int j = matcher.end();
                            buf.append(pValue.substring(start, i));
                            final String name = pValue.substring(i + 2, j - 1);
                            String actual = System.getProperty(name);
                            if (actual == null) {
                                actual = System.getenv(name);
                            }
                            if (actual != null) {
                                buf.append(actual);
                            } else if (skipUnresolved) {
                                buf.append(pValue.substring(i, j));
                                LOG.warn("Environment variable " + name + " cannot be resolved, leaving as is.");
                            } else {
                                throw new ConfigurationException(
                                        "Property " + name + " is not found as system property or environment variable.");
                            }

                            start = matcher.end();
                        } while (matcher.find());
                        buf.append(pValue.substring(start));
                        pValue = buf.toString();
                    }
                    bindConstant().annotatedWith(Names.named(prefix == null ? (String)e.getKey() : (prefix + e.getKey()))).to(pValue);
                }
            }
        }

