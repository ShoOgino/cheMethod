        protected <K, V> void bindProperties(String prefix, Iterable<Map.Entry<K, V>> properties, boolean skipUnresolved) {
            StringBuilder buf = null;
            for (Map.Entry<K, V> e : properties) {
                String name = (String)e.getKey();
                String value = (String)e.getValue();
                if (NULL.equals(value)) {
                    bindProperty(prefix, name, null);
                } else {
                    final Matcher matcher = PROPERTIES_PLACE_HOLDER_PATTERN.matcher(value);
                    if (matcher.find()) {
                        int start = 0;
                        if (buf == null) {
                            buf = new StringBuilder();
                        } else {
                            buf.setLength(0);
                        }
                        do {
                            buf.append(value.substring(start, matcher.start()));
                            final String placeholder = value.substring(matcher.start(), matcher.end());
                            final String placeholderName = removePlaceholderFormatting(placeholder);
                            String resolvedPlaceholder = resolvePlaceholder(placeholderName);
                            if (resolvedPlaceholder != null) {
                                buf.append(resolvedPlaceholder);
                            } else if (skipUnresolved) {
                                buf.append(placeholder);
                                LOG.warn("Placeholder {} cannot be resolved neither from environment variable nor from system property," +
                                         "leaving as is.", placeholderName);
                            } else {
                                throw new ConfigurationException(format("Property %s is not found as system property or " +
                                                                        "environment variable.", placeholderName));
                            }

                            start = matcher.end();
                        } while (matcher.find());
                        buf.append(value.substring(start));
                        value = buf.toString();
                    }
                    bindProperty(prefix, name, value);
                }
            }
        }

