  @Override
  public void run() {
    long startTime = System.currentTimeMillis();
    try {
      if (object instanceof Runnable
          && method.getName().equals("run")
          && method.getParameterTypes().length == 0) {
        LOG.debug(
            "Invoking method 'run' of class '{}' instance '{}'",
            object.getClass().getName(),
            object);

        ((Runnable) object).run();

        LOG.debug(
            "Method of class '{}' instance '{}' is completed in {} sec",
            object.getClass().getName(),
            object,
            TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - startTime));
      } else {
        try {
          LOG.debug(
              "Invoking method '{}' of class '{}' instance '{}'",
              method.getName(),
              object.getClass().getName(),
              object);

          method.invoke(object);

          LOG.debug(
              "Method of class '{}' instance '{}' is completed in {} sec",
              object.getClass().getName(),
              object,
              TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - startTime));
        } catch (InvocationTargetException | IllegalAccessException e) {
          LOG.error(
              "Error occurred during invocation of method '{}#{}'. Instance: '{}'. Error: {}",
              object.getClass().getName(),
              method.getName(),
              object,
              e.getMessage(),
              e);
        }
      }
    } catch (Exception e) {
      LOG.error(
          "Error occurred during invocation of method '{}#{}'. Instance: '{}'. Error: {}",
          object.getClass().getName(),
          method.getName(),
          object,
          e.getMessage(),
          e);
      throw e;
    }
  }

