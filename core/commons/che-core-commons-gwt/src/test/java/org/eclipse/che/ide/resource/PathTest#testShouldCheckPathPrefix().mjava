    @Test
    public void testShouldCheckPathPrefix() throws Exception {
        assertTrue(Path.valueOf("").isPrefixOf(Path.valueOf("")));
        assertTrue(Path.valueOf("/").isPrefixOf(Path.valueOf("")));
        assertTrue(Path.valueOf("").isPrefixOf(Path.valueOf("/")));
        assertTrue(Path.valueOf("/").isPrefixOf(Path.valueOf("/")));
        assertTrue(Path.valueOf("/").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertTrue(Path.valueOf("/foo").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertTrue(Path.valueOf("/foo/").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertTrue(Path.valueOf("foo").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertTrue(Path.valueOf("/foo/a/b/c").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertFalse(Path.valueOf("/foo/a/b/c/d").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertFalse(Path.valueOf("/foo/a/x/c").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertFalse(Path.valueOf("foo/a/x/c").isPrefixOf(Path.valueOf("/foo/a/b/c")));
        assertFalse(Path.valueOf("abc").isPrefixOf(Path.valueOf("def")));
    }

