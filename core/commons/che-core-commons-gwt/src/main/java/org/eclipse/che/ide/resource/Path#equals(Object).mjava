    /**
     * Returns whether this path equals the given object.
     * <p>
     * Equality for paths is defined to be: same sequence of segments,
     * same absolute/relative status, and same device.
     * Trailing separators are disregarded.
     * Paths are not generally considered equal to objects other than paths.
     * </p>
     *
     * @param obj
     *         the other object
     * @return <code>true</code> if the paths are equivalent,
     * and <code>false</code> if they are not
     * @since 4.0.0-RC5
     */
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (!(obj instanceof Path))
            return false;
        Path target = (Path)obj;
        //check leading separators and hash code
        if ((separators & HASH_MASK) != (target.separators & HASH_MASK))
            return false;
        String[] targetSegments = target.segments;
        int i = segments.length;
        //check segment count
        if (i != targetSegments.length)
            return false;
        //check segments in reverse order - later segments more likely to differ
        while (--i >= 0)
            if (!segments[i].equals(targetSegments[i]))
                return false;
        //check device last (least likely to differ)
        return device == target.device || (device != null && device.equals(target.device));
    }

