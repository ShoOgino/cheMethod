    /**
     * Removes the first occurrence of the specified {@code element} from the given {@code array},
     * if it is present and returns the copy of modified array.
     *
     * @param array
     *         the array from which {@code element} should be removed
     * @param element
     *         {@code element} to remove
     * @param <T>
     *         type of given {@code array}
     * @return the copy of given {@code array} without removed {@code element}
     * @throws IllegalArgumentException
     *         in case if given {@code arrays} is null
     * @since 4.3.0
     */
    public static <T> T[] remove(T[] array, T element) {
        checkArgument(array != null, "Input array is null");

        T[] modified = copyOf(array, array.length);

        int size = modified.length;
        int index = indexOf(modified, element);
        int numMoved = modified.length - index - 1;
        if (numMoved > 0) {
            System.arraycopy(modified, index + 1, modified, index, numMoved);
        }

        return copyOf(modified, --size);
    }

