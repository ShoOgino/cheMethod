    /**
     * Animate the element out of view. Do not enable transitions in the CSS for this element, or the
     * animations may not work correctly. AnimationController will enable animations automatically.
     *
     * @see #hideWithoutAnimating(Element)
     */
    public void hide(final Element element) {
        // Early exit if the element is hidden or hiding.
        if (isAnyState(element, State.HIDDEN, State.HIDING)) {
            return;
        }

        if (!isAnimated) {
            hideWithoutAnimating(element);
            return;
        }

        // Cancel pending transition event listeners.
        showEndHandler.unhandleEndFor(element);

        final CSSStyleDeclaration style = element.getStyle();

        if (options.collapse) {
            // Set height because the CSS transition requires one
            int height = getCurrentHeight(element);
            style.setHeight(height + CSSStyleDeclaration.Unit.PX);
        }

        // Give the browser a chance to accept the height set above
        setState(element, State.HIDING);
        schedule(element, new ScheduledCommand() {
            @Override
            public void execute() {
                // The user changed the state before this command executed.
                if (!clearLastCommand(element, this) || !isAnyState(element, State.HIDING)) {
                    return;
                }

                if (options.collapse) {
          /*
           * Hide overflow if changing height, or the overflow will be visible
           * even as the element collapses.
           */
                    AnimationUtils.backupOverflow(style);
                }
                AnimationUtils.enableTransitions(style);

                if (options.collapse) {
                    // Animate all properties that could affect height if collapsing.
                    style.setHeight("0");
                    style.setMarginTop("0");
                    style.setMarginBottom("0");
                    style.setPaddingTop("0");
                    style.setPaddingBottom("0");
                    CssUtils.setBoxShadow(element, "0 0");
                }

                if (options.fade) {
                    style.setOpacity(0);
                }
            }
        });

        // For webkit based browsers.
        hideEndHandler.handleEndFor(element);
    }

