    /**
     * Traverses the subtree rooted at {@code root} and collects all nodes in the
     * subtree that are leaves (i.e., valid elements, not only prefixes).
     *
     * @param root
     *         a node in the trie from which to start collecting
     * @param leaves
     *         output array
     */
    private static <T> void getAllLeavesInSubtree(TrieNode<T> root, List<TrieNode<T>> leaves) {
        if (root.getIsLeaf()) {
            leaves.add(root);
        }

        for (int i = 0, size = root.getChildren().size(); i < size; i++) {
            TrieNode<T> child = root.getChildren().get(i);
            getAllLeavesInSubtree(child, leaves);
        }
    }

