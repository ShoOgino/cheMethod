    public static <T> int binarySearch(List<T> list, OneWayComparator<T> comparator) {
        int lower = 0;
        int upper = list.size() - 1;

        while (lower <= upper) {
            int middle = lower + (upper - lower) / 2;
            int c = comparator.compareTo(list.get(middle));
            if (c < 0) {
                upper = middle - 1;
            } else if (c > 0) {
                lower = middle + 1;
            } else {
        /*
         * We have an exact match at middle, but there may be more exact matches
         * before us, so we want to find the first exact match.
         */

                // Move backward to the first non-equal value
                int i = middle;
                while (i >= 0 && comparator.compareTo(list.get(i)) == 0) {
                    i--;
                }

                // Forward one to the first equal value
                return i + 1;
            }
        }
        return -lower - 1;
    }

