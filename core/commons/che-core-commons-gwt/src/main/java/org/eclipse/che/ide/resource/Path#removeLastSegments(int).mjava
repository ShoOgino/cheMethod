    /**
     * Returns a copy of this path with the given number of segments
     * removed from the end. The device id is preserved.
     * The number must be greater or equal zero.
     * If the count is zero, this path is returned.
     * <p>
     * If this path has a trailing separator, it will still
     * have a trailing separator after the last segments are removed
     * (assuming there are some segments left).  If there is no
     * trailing separator, the result will not have a trailing
     * separator.
     * If the number equals or exceeds the number
     * of segments in this path, a path with no segments is returned.
     * </p>
     *
     * @param count
     *         the number of segments to remove
     * @return the new path
     * @since 4.0.0-RC5
     */
    public Path removeLastSegments(int count) {
        if (count == 0)
            return this;
        if (count >= segments.length) {
            //result will have no trailing separator
            return new Path(device, NO_SEGMENTS, separators & (HAS_LEADING | IS_UNC));
        }
        checkArgument(count > 0);
        int newSize = segments.length - count;
        String[] newSegments = new String[newSize];
        System.arraycopy(this.segments, 0, newSegments, 0, newSize);
        return new Path(device, newSegments, separators);
    }

