    public static <V> Promise<V> createFromAsyncRequest(final RequestCall<V> call) {
        final Executor.ExecutorBody<V> body = new Executor.ExecutorBody<V>() {
            @Override
            public void apply(final ResolveFunction<V> resolve, final RejectFunction reject) {
                call.makeCall(new AsyncCallback<V>() {
                    @Override
                    public void onSuccess(final V result) {
                        resolve.apply(result);
                    }

                    @Override
                    public void onFailure(final Throwable exception) {
                        reject.apply(JsPromiseError.create(exception));
                    }
                });
            }
        };
        final Executor<V> executor = Executor.create(body);
        return Promises.create(executor);
    }

