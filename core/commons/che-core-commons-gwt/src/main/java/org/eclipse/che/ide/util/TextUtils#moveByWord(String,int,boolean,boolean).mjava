    /**
     * Jumps to the previous or next best match given the parameters below. This
     * may be inside the current word. For example, if the cursor is at index 1 in
     * "hey bob", and moveByWord is called with returnCursorAtEnd=true, then the
     * returned value will be 2 (y). If returnCursorAtEnd is false, it would
     * return 4 (b).
     *
     * @param column
     *         the start column for the search
     * @param forward
     *         true for forward match, false for backwards match
     * @param returnCursorAtEnd
     *         if true, the cursor position returned will be for
     *         the last character of the next/previous word found
     * @return the calculated column, -1 for no valid match found
     */
  /*
   * TODO: Make sure we look at this, it is only used by the {@link
   * VimScheme} and I think it can be made significantly less complicated as
   * well as use the {@link #findNextWord(String, int, boolean)} and {@link
   * #findPreviousWord(String, int, boolean)} API.
   */
    public static int moveByWord(
            String text, int column, boolean forward, boolean returnCursorAtEnd) {
        int curColumn = column;
        int length = text.length();
        int direction = forward ? 1 : -1;
        boolean farWordEnd =
                ((direction == 1 && returnCursorAtEnd) || (direction == -1 && !returnCursorAtEnd));
        boolean foundEarlyMatch = false;

        if (!UnicodeUtils.isWhitespace(text.charAt(curColumn))) {
            // land on the first whitespace character after the last letter
            curColumn = skipNonwhitespaceSimilar(text, curColumn, forward);
            if (farWordEnd && curColumn - direction != column) {
                // found a match within the same word
                curColumn -= direction; // go back to last non-whitespace character
                foundEarlyMatch = true;
            }
        }

        if (!foundEarlyMatch && curColumn >= 0 && curColumn < length) {
            // land on the first non-whitespace character of the next word
            curColumn = skipWhitespace(text, curColumn, forward);
            if (farWordEnd && curColumn >= 0 && curColumn < length) {
                // land on the last non-whitespace character of the next word
                curColumn = skipNonwhitespaceSimilar(text, curColumn, forward) - direction;
            }
        }

        if (curColumn < 0 || curColumn >= length) {
            return -1;
        }
        return curColumn;
    }

