    /**
     * Updates the element's position. If this controller is aligning next to an anchor then x and y
     * will be offsets, otherwise they will be treated as the absolute x and y position to align to.
     * <p/>
     * <p>
     * Note: If used as offsets x and y are relative to the aligned edge i.e. if you are aligned to
     * the right then x moves you left vs aligning to the left where x moves you to the right.
     * </p>
     */
    public void updateElementPosition(int x, int y) {
        place(x, y);
        // check if we're at a valid place, if not temporarily flip the positioner
        // and place again.
        VerticalAlign originalVertical = elementPositioner.getVerticalAlignment();
        HorizontalAlign originalHorizontal = elementPositioner.getHorizontalAlignment();

        if (!checkPositionValidAndMaybeUpdatePositioner()) {
            place(x, y);

            boolean wasVerticalFlipped = originalVertical != elementPositioner.getVerticalAlignment();
            boolean wasHorizontalFlipped = originalHorizontal != elementPositioner.getHorizontalAlignment();

            // Check if the new position is valid,
            if (!checkPositionValidAndMaybeUpdatePositioner()) {
            /*
             * We try to make our best move here, if the element is off the screen in both dimensions
             * then the window is tiny and we try to move it to 0,0. if it's only one dimensions we move
             * it to either the top or left of the screen.
             */
                if (wasVerticalFlipped) {
                    setElementLeftAndTop(IGNORE, 0);
                }
                if (wasHorizontalFlipped) {
                    setElementLeftAndTop(0, IGNORE);
                }
            }
        }

        // revert any temporary changes made to our positioner
        elementPositioner.revert();
    }

