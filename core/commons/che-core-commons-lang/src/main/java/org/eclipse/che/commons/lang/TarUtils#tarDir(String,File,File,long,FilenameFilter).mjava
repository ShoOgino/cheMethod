  /**
   * Add content of directory {@code dir} to tar archive {@code tar}.
   *
   * @param parentPath parent path of tar archive. Typically if need add only content of {@code dir}
   *     this path should be absolute path to {@code dir} but if need to have in archive some
   *     parents this parameter may be used. For example if need add to archive content of directory
   *     '/a/b/c' but need to save directory 'c' in path:
   *     <pre>
   *                         {@code File dir = new File("a/b/c");
   *                      File tar = new File("archive.tar");
   *                      TarUtils.tarDir(dir.getParentFile().getAbsolutePath(), dir, tar, -1, IoUtil.ANY_FILTER);
   *                         }
   *                         </pre>
   *     In this case directory 'c' is added in tar archive.
   * @param dir dir to add
   * @param tar tar archive
   * @param modTime modification time that applied to all entries in archive instead modification
   *     time provided by method {@link File#lastModified()}. This parameter should be {@code -1} if
   *     don't need to set any specified time
   * @param filter optional filter for files to add in archive
   * @throws IOException if i/o error occurs
   * @throws IllegalArgumentException if {@code dir} is not directory or if {@code parentPath} is
   *     invalid, e.g. is neither parent nor equals to path of {@code dir}
   */
  public static void tarDir(
      String parentPath, File dir, File tar, long modTime, FilenameFilter filter)
      throws IOException {
    if (!dir.isDirectory()) {
      throw new IllegalArgumentException("Not a directory.");
    }
    if (!dir.getAbsolutePath().startsWith(parentPath)) {
      throw new IllegalArgumentException("Invalid parent directory path " + parentPath);
    }
    if (filter == null) {
      filter = IoUtil.ANY_FILTER;
    }
    try (TarArchiveOutputStream tarOut =
        new TarArchiveOutputStream(new BufferedOutputStream(new FileOutputStream(tar)))) {
      tarOut.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);
      addDirectoryRecursively(tarOut, parentPath, dir, modTime, filter);
    }
  }

