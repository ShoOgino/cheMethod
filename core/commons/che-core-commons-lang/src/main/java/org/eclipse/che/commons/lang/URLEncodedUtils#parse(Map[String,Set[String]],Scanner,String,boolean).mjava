    /**
     * Adds all parameters within the Scanner to the list of
     * <code>parameters</code>, as encoded by <code>encoding</code>.
     * If <code>encoding</code> is null encoding does not performed.
     * For example, a scanner containing the string <code>a=1&b=2&c=3</code> would
     * add the Map<String, Set<String>>  a=1, b=2, and c=3 to the
     * list of parameters.
     *
     * @param parameters
     *         List to add parameters to.
     * @param scanner
     *         Input that contains the parameters to parse.
     * @param encoding
     *         Encoding to use when decoding the parameters. If encoding is null encoding does not performed.
     */
    private static void parse(final Map<String, Set<String>> parameters, final Scanner scanner, final String encoding,
                              boolean decodeQueryParam) {
        scanner.useDelimiter(PARAMETER_SEPARATOR);
        while (scanner.hasNext()) {
            final String[] nameValue = scanner.next().split(NAME_VALUE_SEPARATOR);
            if (nameValue.length == 0 || nameValue.length > 2)
                throw new IllegalArgumentException("bad parameter");

            final String name = decodeQueryParam ? decode(nameValue[0], encoding) : nameValue[0];
            String value = null;
            if (nameValue.length == 2)
                value = decodeQueryParam ? decode(nameValue[1], encoding) : nameValue[1];

            Set<String> values = parameters.get(name);
            if (values == null) {
                values = new LinkedHashSet<>();
                parameters.put(name, values);
            }
            if (value != null) {
                values.add(value);
            }
        }
    }

