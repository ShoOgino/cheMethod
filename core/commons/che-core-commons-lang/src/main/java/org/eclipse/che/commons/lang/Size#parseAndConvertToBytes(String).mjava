  private static long parseAndConvertToBytes(String sizeString) {
    final Matcher matcher;
    if ((matcher = HUMAN_SIZE_PATTERN.matcher(sizeString)).matches()) {
      final float size = Float.parseFloat(matcher.group(1));
      final String suffix = matcher.group(3);
      if (suffix == null) {
        return (long) size;
      }
      final String suffixL = suffix.toLowerCase(Locale.ENGLISH);
      switch (suffixL) {
        case "b":
          return (long) (size);
        case "k":
        case "kb":
        case "kib":
          return (long) (size * K);
        case "m":
        case "mb":
        case "mib":
          return (long) (size * M);
        case "g":
        case "gb":
        case "gib":
          return (long) (size * G);
        case "t":
        case "tb":
        case "tib":
          return (long) (size * T);
        case "p":
        case "pb":
        case "pib":
          return (long) (size * P);
      }
    }
    throw new IllegalArgumentException("Invalid size: " + sizeString);
  }

