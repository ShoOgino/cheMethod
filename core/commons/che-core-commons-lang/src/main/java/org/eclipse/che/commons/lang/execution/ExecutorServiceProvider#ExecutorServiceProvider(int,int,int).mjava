  /**
   * @param corePoolSize - corePoolSize of ThreadPoolExecutor
   * @param maxPoolSize - maximumPoolSize of ThreadPoolExecutor
   * @param queueCapacity - queue capacity. if > 0 then this is capacity of {@link
   *     LinkedBlockingQueue} if <=0 then {@link SynchronousQueue} are used.
   */
  public ExecutorServiceProvider(int corePoolSize, int maxPoolSize, int queueCapacity) {

    ThreadFactory factory =
        new ThreadFactoryBuilder()
            .setUncaughtExceptionHandler(LoggingUncaughtExceptionHandler.getInstance())
            .setNameFormat(this.getClass().getSimpleName() + "-%d")
            .setDaemon(true)
            .build();

    executor =
        new ThreadPoolExecutor(
            corePoolSize,
            maxPoolSize,
            60L,
            SECONDS,
            queueCapacity > 0 ? new LinkedBlockingQueue<>(queueCapacity) : new SynchronousQueue<>(),
            factory);
    executor.setRejectedExecutionHandler(
        (r, __) -> LOG.warn("Executor rejected to handle the payload {}", r));
    executor.prestartCoreThread();
  }

