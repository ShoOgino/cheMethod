  @DataProvider
  public static Object[][] sortingCases() {
    return new Object[][] {
      // keep order if no dependencies
      new Object[] {
        vars(var('b', "."), var('a', "."), var('c', ".")),
        vars(var('b', "."), var('a', "."), var('c', "."))
      },

      // sort dependents after dependencies
      new Object[] {
        vars(var('a', "b"), var('b', "."), var('c', ".")),
        vars(var('b', "."), var('a', "b"), var('c', "."))
      },

      // sort dependents after dependencies, multiple dependencies
      new Object[] {
        vars(var('a', "bc"), var('b', "."), var('c', ".")),
        vars(var('b', "."), var('c', "."), var('a', "bc"))
      },

      // sort dependents after dependencies, check dependee moved after dependencies
      new Object[] {
        vars(var('d', "."), var('a', "c"), var('b', "."), var('c', ".")),
        vars(var('d', "."), var('b', "."), var('c', "."), var('a', "c"))
      },

      // test the robustness against cycles

      // dependent directly on itself
      new Object[] {vars(var('a', "a")), vars(var('a', "a"))},

      // two mutually dependent nodes
      new Object[] {vars(var('a', "b"), var('b', "a")), vars(var('a', "b"), var('b', "a"))},

      // independent node mixed inside a cycle
      new Object[] {
        vars(var('b', "c"), var('d', "."), var('a', "b"), var('c', "a")),
        vars(var('d', "."), var('b', "c"), var('a', "b"), var('c', "a"))
      },

      // cycle (a-b-c) with one of the nodes also depending on another node (a-d),
      // mixed with a "chain" (f-e-b)
      new Object[] {
        vars(
            var('f', "e"),
            var('a', "bd"),
            var('b', "c"),
            var('e', "b"),
            var('c', "a"),
            var('d', ".")),
        vars(
            var('d', "."),
            var('a', "bd"),
            var('b', "c"),
            var('c', "a"),
            var('e', "b"),
            var('f', "e"))
      },

      // removes duplicates
      new Object[] {
        vars(var('a', "."), var('a', "."), var('b', ".")), vars(var('a', "."), var('b', "."))
      }
    };
  }

