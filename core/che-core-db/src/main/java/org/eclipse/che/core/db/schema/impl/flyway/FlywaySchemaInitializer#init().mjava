  @Override
  public Map<String, String> init() throws SchemaInitializationException {
    final Map<String, String> initResult = new HashMap<>();
    try (final Connection conn = dataSource.getConnection()) {
      final Flyway flyway = new Flyway();
      flyway.setDataSource(dataSource);
      flyway.setLocations(locations);
      flyway.setClassLoader(Thread.currentThread().getContextClassLoader());
      final DbSupport dbSupport = DbSupportFactory.createDbSupport(conn, true);
      final MetaDataTable mt =
          new MetaDataTableImpl(
              dbSupport, dbSupport.getOriginalSchema().getTable(flyway.getTable()));
      initResult.put(BARE_DB_INIT_PROPERTY_NAME, String.valueOf(!mt.hasAppliedMigrations()));
      final String productName = conn.getMetaData().getDatabaseProductName().toLowerCase();
      flyway.setResolvers(
          new CustomSqlMigrationResolver(productName, dbSupport, placeholderReplacer));
      flyway.setSkipDefaultResolvers(true);
      flyway.setBaselineOnMigrate(baselineOnMigrate);
      if (baselineOnMigrate) {
        flyway.setBaselineVersionAsString(baselineVersion);
      }
      flyway.setSqlMigrationSeparator(versionSeparator);
      flyway.setSqlMigrationSuffix(scriptsSuffix);
      flyway.setSqlMigrationPrefix(scriptsPrefix);
      flyway.migrate();
    } catch (SQLException | RuntimeException x) {
      throw new SchemaInitializationException(x.getLocalizedMessage(), x);
    }
    return initResult;
  }

