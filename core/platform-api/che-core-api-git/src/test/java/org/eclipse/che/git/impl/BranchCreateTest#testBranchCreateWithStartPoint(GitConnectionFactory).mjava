    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
    public void testBranchCreateWithStartPoint(GitConnectionFactory connectionFactory) throws GitException, IOException {
        //given
        GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
        addFile(connection, "newfile1", "file 1 content");
        connection.add(newDto(AddRequest.class).withFilepattern(Arrays.asList(".")));
        connection.commit(newDto(CommitRequest.class).withMessage("Commit message"));

        //change content
        addFile(connection, "newfile1", "new file 1 content");
        connection.commit(newDto(CommitRequest.class).withMessage("Commit message").withAll(true));

        //get list of master branch commits
        List<Revision> revCommitList = connection.log(newDto(LogRequest.class)).getCommits();
        int beforeCheckoutCommitsCount = revCommitList.size();

        //when
        //create new branch to 2nd commit
        Branch branch = connection.branchCreate(newDto(BranchCreateRequest.class)
                                                        .withName("new-branch")
                                                        .withStartPoint(revCommitList.get(1).getId()));
        //then
        connection.checkout(newDto(CheckoutRequest.class).withName(branch.getDisplayName()));

        int afterCheckoutCommitsCount = connection.log(newDto(LogRequest.class)).getCommits().size();
        assertEquals(afterCheckoutCommitsCount, beforeCheckoutCommitsCount - 1);
    }

