    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = GitConnectionFactoryProvider.class)
    public void testRemoteList(GitConnectionFactory connectionFactory)
            throws ServerException, URISyntaxException, UnauthorizedException, IOException {
        //given
        GitConnection connection = connectToGitRepositoryWithContent(connectionFactory, repository);
        GitConnection connection2 = connectionFactory.getConnection(remoteRepo.getAbsolutePath());
        connection2.clone(newDto(CloneRequest.class).withRemoteUri(connection.getWorkingDir().getAbsolutePath())
                                                    .withWorkingDir(connection2.getWorkingDir().getAbsolutePath()));
        assertEquals(connection2.remoteList(newDto(RemoteListRequest.class)).size(), 1);
        //create new remote
        connection2.remoteAdd(newDto(RemoteAddRequest.class)
                                      .withName("newremote")
                                      .withUrl("newremote.url"));
        assertEquals(connection2.remoteList(newDto(RemoteListRequest.class)).size(), 2);
        //when
        RemoteListRequest request = newDto(RemoteListRequest.class);
        request.setRemote("newremote");
        List<Remote> one = connection2.remoteList(request);
        //then
        assertEquals(one.get(0).getUrl(), "newremote.url");
        assertEquals(one.size(), 1);
    }

