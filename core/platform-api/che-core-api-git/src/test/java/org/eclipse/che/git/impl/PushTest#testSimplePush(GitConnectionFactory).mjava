    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = org.eclipse.che.git.impl.GitConnectionFactoryProvider.class)
    public void testSimplePush(GitConnectionFactory connectionFactory)
            throws IOException, ServerException, URISyntaxException, UnauthorizedException {
        //given
        GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
        GitConnection remoteConnection = connectionFactory.getConnection(remoteRepo.getAbsolutePath());
        remoteConnection.clone(newDto(CloneRequest.class).withRemoteUri(connection.getWorkingDir().getAbsolutePath())
                                                         .withWorkingDir(remoteConnection.getWorkingDir().getAbsolutePath()));
        addFile(remoteConnection, "newfile", "content");
        remoteConnection.add(newDto(AddRequest.class).withFilepattern(Arrays.asList(".")));
        remoteConnection.commit(newDto(CommitRequest.class).withMessage("Fake commit"));
        //when
        remoteConnection.push(newDto(PushRequest.class)
                                      .withRefSpec(Arrays.asList("refs/heads/master:refs/heads/test"))
                                      .withRemote("origin")
                                      .withTimeout(-1));
        //then
        //check branches in origin repository
        assertEquals(connection.branchList(newDto(BranchListRequest.class)).size(), 1);
        //checkout test branch
        connection.checkout(newDto(CheckoutRequest.class).withName("test"));
        assertTrue(new File(connection.getWorkingDir(), "newfile").exists());
    }

