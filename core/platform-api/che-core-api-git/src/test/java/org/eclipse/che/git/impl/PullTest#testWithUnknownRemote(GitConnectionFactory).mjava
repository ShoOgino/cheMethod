    @Test(dataProvider = "GitConnectionFactory", dataProviderClass = GitConnectionFactoryProvider.class,
            expectedExceptions = UnauthorizedException.class, expectedExceptionsMessageRegExp = "fatal: '" + UNKNOWN + "' does not appear to be a git repository\n" +
            "fatal: Could not read from remote repository.\n" +
            "\n" +
            "Please make sure you have the correct access rights\n" +
            "and the repository exists.\n")
    public void testWithUnknownRemote(GitConnectionFactory connectionFactory) throws Exception {
        //given
        //create new repository clone of default
        GitConnection connection = connectToInitializedGitRepository(connectionFactory, repository);
        GitConnection connection2 = connectionFactory.getConnection(remoteRepo.getAbsolutePath());
        connection2.clone(newDto(CloneRequest.class)
                .withRemoteUri(connection.getWorkingDir().getAbsolutePath()));
        addFile(connection, "newfile1", "new file1 content");
        connection.add(newDto(AddRequest.class).withFilepattern(Arrays.asList(".")));
        connection.commit(newDto(CommitRequest.class).withMessage("Test commit"));
        //when
        connection2.pull(newDto(PullRequest.class).withRemote(UNKNOWN).withTimeout(-1));
    }

