    @DELETE
    @Path("/{id}")
    @GenerateLink(rel = LINK_REL_REMOVE_STACK)
    @RolesAllowed({"user", "system/admin", "system/manager"})
    @ApiOperation(value = "Removes the stack",
                  notes = "But user with roles \"system/admin\" or \"system/manager\" " + "can delete predefined stack.")
    @ApiResponses({@ApiResponse(code = 204, message = "The stack successfully removed"),
                   @ApiResponse(code = 403, message = "The user does not have access to remove the stack"),
                   @ApiResponse(code = 404, message = "The stack doesn't exist"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public void removeStack(@ApiParam("The stack id") @PathParam("id") final String id) throws ApiException {
        final StackImpl stack = stackDao.getById(id);

        final User user = EnvironmentContext.getCurrent().getUser();

        if (!user.getId().equals(stack.getCreator()) &&
            !user.isMemberOf("system/admin")
            && !permissionChecker.hasAccess(stack, user.getId(), "write")) {
            throw new ForbiddenException(format("User '%s' doesn't has access to stack with id '%s'", user.getId(), id));
        }

        stackDao.remove(id);
    }

