    /**
     * Asynchronously starts permanent(non-temporary) workspace.
     */
    @VisibleForTesting
    UsersWorkspaceImpl performAsyncStart(UsersWorkspaceImpl workspace,
                                         String envName,
                                         boolean recover,
                                         @Nullable String accountId) throws ConflictException {
        // Runtime workspace registry performs this check as well
        // but this check needed here because permanent workspace start performed asynchronously
        // which means that even if registry won't start workspace client receives workspace object
        // with starting status, this check prevents it and throws appropriate exception
        try {
            final RuntimeWorkspaceImpl runtime = workspaceRegistry.get(workspace.getId());
            throw new ConflictException(format("Could not start workspace '%s' because its status is '%s'",
                                               runtime.getConfig().getName(),
                                               runtime.getStatus()));
        } catch (NotFoundException ignored) {
            // it is okay if workspace does not exist
        }
        workspace.setTemporary(false);
        workspace.setStatus(WorkspaceStatus.STARTING);
        executor.execute(ThreadLocalPropagateContext.wrap(() -> {
            try {
                performSyncStart(workspace, firstNonNull(envName, workspace.getConfig().getDefaultEnv()), recover, accountId);
            } catch (BadRequestException | ServerException | NotFoundException | ConflictException | ForbiddenException ex) {
                LOG.error(ex.getLocalizedMessage(), ex);
            }
        }));
        return workspace;
    }

