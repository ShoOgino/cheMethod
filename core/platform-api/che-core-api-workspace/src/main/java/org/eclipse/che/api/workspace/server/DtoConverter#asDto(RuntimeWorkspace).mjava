    /**
     * Converts {@link RuntimeWorkspace} to {@link RuntimeWorkspaceDto}.
     */
    public static RuntimeWorkspaceDto asDto(RuntimeWorkspace workspace) {
        final RuntimeWorkspaceDto runtimeWorkspaceDto = newDto(RuntimeWorkspaceDto.class).withId(workspace.getId())
                                                                                         .withStatus(workspace.getStatus())
                                                                                         .withOwner(workspace.getOwner())
                                                                                         .withTemporary(workspace.isTemporary())
                                                                                         .withConfig(asDto(workspace.getConfig()))
                                                                                         .withActiveEnv(workspace.getActiveEnv())
                                                                                         .withRootFolder(workspace.getRootFolder());
        if (workspace.getMachines() != null) {
            runtimeWorkspaceDto.withMachines(workspace.getMachines()
                                                      .stream()
                                                      .map(org.eclipse.che.api.machine.server.DtoConverter::asDto)
                                                      .collect(toList()));
        }
        if (workspace.getDevMachine() != null) {
            runtimeWorkspaceDto.withDevMachine(org.eclipse.che.api.machine.server.DtoConverter.asDto(workspace.getDevMachine()));
        }
        return runtimeWorkspaceDto;
    }

