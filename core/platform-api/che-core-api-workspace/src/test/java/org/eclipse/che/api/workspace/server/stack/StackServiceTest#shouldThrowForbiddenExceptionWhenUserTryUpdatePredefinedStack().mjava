    @Test
    public void shouldThrowForbiddenExceptionWhenUserTryUpdatePredefinedStack()
            throws NotFoundException, ServerException, ConflictException {
        final String updateSuffix = " updated";
        final String newScope = "advanced";
        StackDto updatedStackDto = DtoFactory.getInstance().createDto(StackDto.class)
                                             .withId(STACK_ID)
                                             .withName(NAME + updateSuffix)
                                             .withDescription(DESCRIPTION + updateSuffix)
                                             .withScope(newScope)
                                             .withCreator(CREATOR + 1)
                                             .withTags(tags)
                                             .withSource(stackSourceDto)
                                             .withComponents(componentsDto);

        StackImpl updatedStack = StackImpl.builder().setId(STACK_ID)
                                          .setName(NAME + updateSuffix)
                                          .setDescription(DESCRIPTION + updateSuffix)
                                          .setScope(newScope)
                                          .setCreator(CREATOR + 1)
                                          .setTags(tags)
                                          .setSource(stackSourceImpl)
                                          .setComponents(componentsImpl)
                                          .setStackIcon(stackIcon)
                                          .build();

        when(stackDao.getById(STACK_ID)).thenReturn(updatedStack);
        when(checker.hasAccess(any(Permissible.class), eq(CREATOR), anyString())).thenReturn(false);

        Response response = given().auth()
                                   .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
                                   .contentType(APPLICATION_JSON)
                                   .content(updatedStackDto)
                                   .when()
                                   .put(SECURE_PATH + "/stack/" + STACK_ID);

        assertEquals(response.getStatusCode(), 403);
        String expectedMessage = format("User '%s' doesn't has access to update stack '%s'", USER_ID, stackImpl.getId());
        assertEquals(unwrapDto(response, ServiceError.class).getMessage(), expectedMessage);
        verify(stackDao).getById(STACK_ID);
        verify(stackDao, never()).update(any());
    }

