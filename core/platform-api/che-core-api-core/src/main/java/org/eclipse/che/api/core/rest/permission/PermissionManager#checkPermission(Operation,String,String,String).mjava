    /**
     * Checks that user with given id has access to perform the operation.
     *
     * <p>This method is the same to {@link #checkPermission(Operation, String, Map)},
     * the only difference is that it provides more convenient way to check permission
     * when single parameter appears.
     *
     * <p>For instance:
     * <pre>{@code
     *     manager.checkPermission(new Operation("start-workspace"), "user123", "workspaceId", workspaceId)
     * }</pre>
     *
     * @param operation
     *         operation for which access should be allowed or rejected
     * @param userId
     *         id of the user who requests access to the operation
     * @param paramKey
     *         single parameter key
     * @param paramValue
     *         single parameter value
     * @throws NullPointerException
     *         when either operation or user identifier is null
     * @throws ForbiddenException
     *         when user doesn't have access to operation
     * @throws ServerException
     *         when any other error occurs
     */
    default void checkPermission(@NotNull Operation operation,
                                 @NotNull String userId,
                                 @Nullable String paramKey,
                                 @Nullable String paramValue) throws ForbiddenException, ServerException {
        checkPermission(operation, userId, Collections.singletonMap(paramKey, paramValue));
    }

