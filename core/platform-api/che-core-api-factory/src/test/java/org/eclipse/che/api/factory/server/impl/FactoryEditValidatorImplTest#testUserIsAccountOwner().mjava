    /**
     * Check when user is not the same but is an account owner
     * @throws ApiException
     */
    @Test
    public void testUserIsAccountOwner() throws ApiException {
        String currentUserId = "florent";
        setCurrentUser(currentUserId);
        String userIdFactory = "johndoe";
        String accountId = "myAccount";
        Author author = mock(Author.class);
        doReturn("123").when(factory).getId();
        doReturn(author).when(factory).getCreator();
        doReturn(userIdFactory).when(author).getUserId();
        doReturn(accountId).when(author).getAccountId();

        Member member = mock(Member.class);
        doReturn(currentUserId).when(member).getUserId();
        List<String> roles = Arrays.asList("account/owner");
        doReturn(roles).when(member).getRoles();
        List<Member> members = new ArrayList<>();
        members.add(member);
        doReturn(members).when(accountDao).getMembers(eq(accountId));

        factoryEditValidator.validate(factory);
    }

