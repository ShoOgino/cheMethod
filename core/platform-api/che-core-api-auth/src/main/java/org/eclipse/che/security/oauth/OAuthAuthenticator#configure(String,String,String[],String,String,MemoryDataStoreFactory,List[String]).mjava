    /**
     * This method should be invoked by child class for initialization default instance of {@link AuthorizationCodeFlow}
     * that will be used for authorization
     */
    protected void configure(String clientId, String clientSecret, String[] redirectUris, String authUri, String tokenUri,
                             MemoryDataStoreFactory dataStoreFactory, List<String> scopes) throws IOException {
        final AuthorizationCodeFlow authorizationFlow = new AuthorizationCodeFlow.Builder(BearerToken.authorizationHeaderAccessMethod(),
                                                                                          new NetHttpTransport(),
                                                                                          new JacksonFactory(),
                                                                                          new GenericUrl(tokenUri),
                                                                                          new ClientParametersAuthentication(
                                                                                                  clientId,
                                                                                                  clientSecret),
                                                                                          clientId,
                                                                                          authUri).setDataStoreFactory(dataStoreFactory)
                                                                                                  .setScopes(scopes)
                                                                                                  .build();

        LOG.debug("clientId={}, clientSecret={}, redirectUris={} , authUri={}, tokenUri={}, dataStoreFactory={}",
                  clientId,
                  clientSecret,
                  redirectUris,
                  authUri,
                  tokenUri,
                  dataStoreFactory);

        configure(authorizationFlow, Arrays.asList(redirectUris));
    }

