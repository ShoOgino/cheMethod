    @DELETE
    @Path("token")
    @RolesAllowed({"user", "temp_user"})
    public void invalidate(@Required @QueryParam("oauth_provider") String oauthProvider)
            throws BadRequestException, NotFoundException, ServerException, ForbiddenException {

        OAuthAuthenticator oauth = getAuthenticator(oauthProvider);
        final User user = EnvironmentContext.getCurrent().getUser();
        try {
            if (!oauth.invalidateToken(user.getId())) {
                throw new NotFoundException("OAuth token for user " + user.getId() + " was not found");
            }
        } catch (IOException e) {
            throw new ServerException(e.getMessage());
        }
    }

