    private String getExtensionApiUrl(HttpServletRequest req) throws NotFoundException, ServerException {
        String workspaceId;
        final Matcher matcher = EXTENSION_API_URI.matcher(req.getRequestURI());
        if (matcher.matches()) {
            workspaceId = matcher.group(2) != null ? matcher.group(2) : matcher.group(3);
        } else {
            throw new NotFoundException("No workspace id is found in request.");
        }

        final Machine machine = machineManager.getDevMachine(workspaceId);
        final Server server = machine.getRuntime().getServers().get(Integer.toString(extServicesPort));
        if (server == null) {
            throw new ServerException("No extension server found in machine.");
        }

        final UriBuilder uriBuilder = UriBuilder.fromUri(server.getUrl())
                                                .replaceQuery(req.getQueryString());

        //check contain original url path to service before wsId
        //if yes we just change host and port and forward to the ws-agent
        //if not we need to cut wsId from URL
        if (matcher.group(2) == null) {
            // here we cut workspaceId from extension API Url for getting access to org.eclipse.che.api.core.rest.ApiInfoService
            // e.g localhost:8080/ide/ext/{wsid} -> localhost:{extServicesPort}/ide/ext/
            String originUri = req.getRequestURI();
            final int indexOf = originUri.lastIndexOf('/', originUri.length() - 2);
            uriBuilder.replacePath(originUri.substring(0, indexOf + 1));
        } else {
            uriBuilder.replacePath(req.getRequestURI());
        }

        return uriBuilder.build().toString();
    }

