    @GET
    @Path("/state")
    @Produces(MediaType.APPLICATION_JSON)
    @RolesAllowed("user")
    @ApiOperation(value = "Get all states of all machines of workspace with specified ID",
                  response = MachineStateDto.class,
                  responseContainer = "List")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains requested list of machine state entities"),
                   @ApiResponse(code = 400, message = "Workspace ID is not specified"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public List<MachineStateDto> getMachinesStates(@ApiParam(value = "Workspace ID", required = true)
                                                   @QueryParam("workspace")
                                                   String workspaceId)
            throws ServerException,
                   BadRequestException {

        requiredNotNull(workspaceId, "Parameter workspace");

        final String userId = EnvironmentContext.getCurrent().getUser().getId();
        final List<MachineStateImpl> machines = machineManager.getMachinesStates(userId, workspaceId);

        return machines.stream()
                       .map(DtoConverter::asDto)
                       .map(this::injectLinks)
                       .collect(Collectors.toList());
    }

