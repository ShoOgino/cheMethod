    private void createInstance(InstanceProvider instanceProvider,
                                Recipe recipe,
                                InstanceKey instanceKey,
                                MachineState machineState,
                                LineConsumer machineLogger) throws MachineException, NotFoundException {
        Instance instance = null;
        try {
            eventService.publish(DtoFactory.newDto(MachineStatusEvent.class)
                                           .withEventType(MachineStatusEvent.EventType.CREATING)
                                           .withMachineId(machineState.getId())
                                           .withDev(machineState.isDev())
                                           .withWorkspaceId(machineState.getWorkspaceId())
                                           .withMachineName(machineState.getName()));

            if (instanceKey == null) {
                instance = instanceProvider.createInstance(recipe, machineState, machineLogger);
            } else {
                instance = instanceProvider.createInstance(instanceKey, machineState, machineLogger);
            }

            instance.setStatus(MachineStatus.RUNNING);

            machineRegistry.update(instance);

            if (machineState.isDev()) {
                wsAgentLauncher.startWsAgent(machineState.getWorkspaceId());
            }

            eventService.publish(DtoFactory.newDto(MachineStatusEvent.class)
                                           .withEventType(MachineStatusEvent.EventType.RUNNING)
                                           .withDev(machineState.isDev())
                                           .withMachineId(machineState.getId())
                                           .withWorkspaceId(machineState.getWorkspaceId())
                                           .withMachineName(machineState.getName()));

        } catch (ServerException | ConflictException | InterruptedException e) {
            if (instance != null) {
                instance.destroy();
            }

            eventService.publish(DtoFactory.newDto(MachineStatusEvent.class)
                                           .withEventType(MachineStatusEvent.EventType.ERROR)
                                           .withMachineId(machineState.getId())
                                           .withDev(machineState.isDev())
                                           .withWorkspaceId(machineState.getWorkspaceId())
                                           .withMachineName(machineState.getName())
                                           .withError(e.getLocalizedMessage()));

            try {
                machineLogger.writeLine(String.format("[ERROR] %s", e.getLocalizedMessage()));
                machineLogger.close();
                machineRegistry.remove(machineState.getId());
            } catch (IOException | NotFoundException e1) {
                LOG.error(e1.getLocalizedMessage());
            }
            throw new MachineException(e.getLocalizedMessage(), e);
        }
    }

