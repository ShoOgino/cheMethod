    @GET
    @Path("/list")
    @Produces(APPLICATION_JSON)
    @GenerateLink(rel = LINK_REL_SEARCH_RECIPES)
    @RolesAllowed({"user", "system/admin", "system/manager"})
    public List<RecipeDescriptor> searchRecipes(@QueryParam("tags") List<String> tags,
                                                @QueryParam("type") String type,
                                                @DefaultValue("0") @QueryParam("skipCount") Integer skipCount,
                                                @DefaultValue("30") @QueryParam("maxItems") Integer maxItems) throws ApiException {
        final List<ManagedRecipe> recipes = recipeDao.search(tags, type, skipCount, maxItems);
        return FluentIterable.from(recipes)
                             .transform(new Function<ManagedRecipe, RecipeDescriptor>() {
                                 @Nullable
                                 @Override
                                 public RecipeDescriptor apply(@Nullable ManagedRecipe recipe) {
                                     return asRecipeDescriptor(recipe);
                                 }
                             })
                             .toList();
    }

