    private SshPairDto injectLinks(SshPairDto sshPairDto) {
        final UriBuilder uriBuilder = getServiceContext().getServiceUriBuilder();
        final Link getPairsLink = LinksHelper.createLink("GET",
                                                         uriBuilder.clone()
                                                                   .path(getClass(), "getPairs")
                                                                   .build(sshPairDto.getService())
                                                                   .toString(),
                                                         APPLICATION_JSON,
                                                         LINK_REL_GET_PAIR);

        final Link removePairLink = LinksHelper.createLink("DELETE",
                                                           uriBuilder.clone()
                                                                     .path(getClass(), "removePair")
                                                                     .build(sshPairDto.getService(), sshPairDto.getName())
                                                                     .toString(),
                                                           APPLICATION_JSON,
                                                           LINK_REL_REMOVE_PAIR);

        final Link getPairLink = LinksHelper.createLink("GET",
                                                        uriBuilder.clone()
                                                                  .path(getClass(), "getPair")
                                                                  .build(sshPairDto.getService(), sshPairDto.getName())
                                                                  .toString(),
                                                        APPLICATION_JSON,
                                                        LINK_REL_GET_PAIR);

        return sshPairDto.withLinks(Arrays.asList(getPairsLink, removePairLink, getPairLink));
    }

