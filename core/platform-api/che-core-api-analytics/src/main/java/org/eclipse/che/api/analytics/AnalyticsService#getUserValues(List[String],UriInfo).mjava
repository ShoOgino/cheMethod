    @ApiOperation(value = "Get metric value for current user",
                  notes = "Get metric value for current user",
                  response = MetricValueListDTO.class,
                  position = 5)
    @ApiResponses(value = {
                  @ApiResponse(code = 200, message = "OK"),
                  @ApiResponse(code = 404, message  ="Not Found"),
                  @ApiResponse(code = 500, message = "Unexpected error occurred. Can't get value for metric")})
    @GenerateLink(rel = "list of metric values")
    @POST
    @Path("/metric/user")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    @RolesAllowed({"user", "system/admin", "system/manager"})
    public Response getUserValues(@ApiParam(value = "Metric names", required = true)
                                      List<String> metricNames, @Context UriInfo uriInfo) throws ServerException {
        try {
            Map<String, String> metricContext = extractContext(uriInfo);
            MetricValueListDTO list = metricHandler.getUserValues(new JsonArrayImpl<>(metricNames),
                                                                  metricContext,
                                                                  uriInfo);
            return Response.status(Response.Status.OK).entity(list).build();
        } catch (Exception e) {
            LOG.error(e.getMessage(), e);
            throw new ServerException("Unexpected error occurred. Can't get values of metrics");
        }
    }

