    private void emitPreamble(Class<?> dtoInterface, StringBuilder builder) {
        builder.append(CLIENT_DTO_MARKER);
        builder.append("  public static class ");
        builder.append(getImplClassName());

        Class<?> superType = getSuperDtoInterface(getDtoInterface());
        if (superType != null && superType != JsonSerializable.class) {
            // We need to extend something.
            builder.append(" extends ");
            final Class<?> superTypeImpl = getEnclosingTemplate().getDtoImplementation(superType);
            if (superTypeImpl == null) {
                builder.append(superType.getSimpleName()).append("Impl");
            } else {
                builder.append(superTypeImpl.getCanonicalName());
            }
        }
        builder.append(" implements ");
        builder.append(dtoInterface.getCanonicalName());
        builder.append(", JsonSerializable ");
        builder.append(" {\n\n");
        emitFactoryMethod(builder);
        emitDefaultConstructor(builder);
    }

