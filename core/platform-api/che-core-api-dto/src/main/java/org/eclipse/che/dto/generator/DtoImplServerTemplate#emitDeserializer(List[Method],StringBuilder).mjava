    /** Generates a static factory method that creates a new instance based on a JsonElement. */
    private void emitDeserializer(List<Method> getters, StringBuilder builder) {
        // The default fromJsonElement(json) works in unsafe mode and clones the JSON's for 'any' properties
        builder.append("    public static ").append(getImplClassName()).append(" fromJsonElement(JsonElement jsonElem) {\n");
        builder.append("      return fromJsonElement(jsonElem, true);\n");
        builder.append("    }\n");
        builder.append("    public static ").append(getImplClassName()).append(" fromJsonElement(JsonElement jsonElem, boolean ").append(COPY_JSONS_PARAM).append(") {\n");
        builder.append("      if (jsonElem == null || jsonElem.isJsonNull()) {\n");
        builder.append("        return null;\n");
        builder.append("      }\n\n");
        builder.append("      ").append(getImplClassName()).append(" dto = new ").append(getImplClassName()).append("();\n");
        if (isCompactJson()) {
            builder.append("      JsonArray json = jsonElem.getAsJsonArray();\n");
            for (Method method : getters) {
                emitDeserializeFieldForMethodCompact(method, builder);
            }
        } else {
            builder.append("      JsonObject json = jsonElem.getAsJsonObject();\n");
            for (Method getter : getters) {
                emitDeserializeFieldForMethod(getter, builder);
            }
        }
        builder.append("\n      return dto;\n");
        builder.append("    }\n\n");
    }

