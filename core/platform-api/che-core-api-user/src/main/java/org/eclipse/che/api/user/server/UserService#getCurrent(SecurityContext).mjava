    /**
     * Returns {@link UserDescriptor} of current user
     *
     * @return entity of current user.
     * @throws ServerException
     *         when some error occurred while retrieving current user
     */
    @ApiOperation(value = "Get current user",
                  notes = "Get user currently logged in the system",
                  response = UserDescriptor.class,
                  position = 2)
    @ApiResponses({@ApiResponse(code = 200, message = "OK"),
                   @ApiResponse(code = 404, message = "Not Found"),
                   @ApiResponse(code = 500, message = "Internal Server Error")})
    @GET
    @GenerateLink(rel = LINK_REL_GET_CURRENT_USER)
    @RolesAllowed({"user", "temp_user"})
    @Produces(APPLICATION_JSON)
    public UserDescriptor getCurrent(@Context SecurityContext context) throws NotFoundException, ServerException {
        final User user = userDao.getById(currentUser().getId());
        return injectLinks(toDescriptor(user), getServiceContext());
    }

