    private User fromEntity(UserDescriptor userDescriptor) throws BadRequestException {
        if (userDescriptor == null) {
            throw new BadRequestException("User Descriptor required");
        }
        if (isNullOrEmpty(userDescriptor.getName())) {
            throw new BadRequestException("User name required");
        }
        if (isNullOrEmpty(userDescriptor.getEmail())) {
            throw new BadRequestException("User email required");
        }
        final User user = new User().withName(userDescriptor.getName());
        if (userDescriptor.getPassword() != null) {
            checkPassword(userDescriptor.getPassword());
            user.setPassword(userDescriptor.getPassword());
        }
        return user;
    }

