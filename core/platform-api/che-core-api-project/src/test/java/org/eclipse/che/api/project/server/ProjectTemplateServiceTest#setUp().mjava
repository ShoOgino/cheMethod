    @BeforeTest
    public void setUp() {
        ProjectTemplateRegistry templateRegistry = new ProjectTemplateRegistry();

        templateRegistry.register(asList("test"), descriptor1);
        templateRegistry.register(asList("test2"), descriptor2);

        DependencySupplierImpl dependencies = new DependencySupplierImpl();
        dependencies.addComponent(ProjectTemplateRegistry.class, templateRegistry);

        ResourceBinder resources = new ResourceBinderImpl();
        ProviderBinder providers = new ApplicationProviderBinder();
        EverrestProcessor processor = new EverrestProcessor(resources, providers, dependencies, new EverrestConfiguration(), null);
        launcher = new ResourceLauncher(processor);

        processor.addApplication(new Application() {
            @Override
            public Set<Class<?>> getClasses() {
                return java.util.Collections.<Class<?>>singleton(ProjectTemplateService.class);
            }

            @Override
            public Set<Object> getSingletons() {
                return new HashSet<>(asList(new CodenvyJsonProvider(new HashSet<>(asList(ContentStream.class))),
                                            new ContentStreamWriter(),
                                            new ApiExceptionMapper()));
            }
        });

        ApplicationContextImpl.setCurrent(new ApplicationContextImpl(null, null, ProviderBinder.getInstance()));
    }

