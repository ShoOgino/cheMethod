    @Override
    public List<ManagedRecipe> search(final List<String> tags, final String type, int skipCount, int maxItems) {
        lock.readLock().lock();
        try {
            return FluentIterable.from(recipes.values())
                                 .skip(skipCount)
                                 .filter(new Predicate<ManagedRecipe>() {
                                     @Override
                                     public boolean apply(ManagedRecipe recipe) {
                                         return (tags == null || recipe.getTags().containsAll(tags))
                                                && (type == null || type.equals(recipe.getType()));
                                     }
                                 })
                                 .limit(maxItems)
                                 .toList();
        } finally {
            lock.readLock().unlock();
        }
    }

