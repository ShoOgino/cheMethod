    @SuppressWarnings("rawtypes")
    public void testGetFilePropertyFilter() throws Exception {
        ByteArrayContainerResponseWriter writer = new ByteArrayContainerResponseWriter();
        // No filter - all properties
        String path = SERVICE_URI + "item/" + fileId;

        ContainerResponse response = launcher.service(HttpMethod.GET, path, BASE_URI, null, null, writer, null);
        //log.info(new String(writer.getBody()));
        assertEquals(200, response.getStatus());
        List<Property> properties = ((Item)response.getEntity()).getProperties();
        Map<String, List> m = new HashMap<>(properties.size());
        for (Property p : properties) {
            m.put(p.getName(), p.getValue());
        }
        assertTrue(m.size() >= 5);
        assertTrue(m.containsKey("MyProperty01"));
        assertTrue(m.containsKey("MyProperty02"));
        assertTrue(m.containsKey("MyProperty03"));
        assertTrue(m.containsKey("MyProperty04"));
        assertTrue(m.containsKey("MyProperty05"));

        // With filter
        path = SERVICE_URI + "item/" + fileId + '?' + "propertyFilter=" + "MyProperty02";

        response = launcher.service(HttpMethod.GET, path, BASE_URI, null, null, null);
        assertEquals(200, response.getStatus());
        m.clear();
        properties = ((Item)response.getEntity()).getProperties();
        for (Property p : properties) {
            m.put(p.getName(), p.getValue());
        }
        assertEquals(1, m.size());
        assertEquals("to be or not to be", m.get("MyProperty02").get(0));
    }

