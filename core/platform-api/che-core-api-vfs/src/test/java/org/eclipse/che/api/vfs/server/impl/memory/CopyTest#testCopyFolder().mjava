    public void testCopyFolder() throws Exception {
        String path = SERVICE_URI + "copy/" + folderForCopy.getId() + '?' + "parentId=" + copyTestDestinationFolder.getId();
        ContainerResponse response = launcher.service(HttpMethod.POST, path, BASE_URI, null, null, null);
        assertEquals(200, response.getStatus());
        String expectedPath = copyTestDestinationFolder.getPath() + "/" + folderForCopy.getName();
        final String originPath = folderForCopy.getPath();
        try {
            mountPoint.getVirtualFile(originPath);
        } catch (NotFoundException e) {
            fail("Source folder not found. ");
        }
        try {
            mountPoint.getVirtualFile(expectedPath);
        } catch (NotFoundException e) {
            fail("Not found folder in destination location. ");
        }
        try {
            mountPoint.getVirtualFileById(((Item)response.getEntity()).getId());
        } catch (NotFoundException e) {
            fail("Copied folder not accessible by id. ");
        }
        try {
            mountPoint.getVirtualFile(expectedPath + "/CopyTest_FILE");
        } catch (NotFoundException e) {
            fail("Child of folder missing after coping. ");
        }
        String childCopyId = mountPoint.getVirtualFile(expectedPath + "/CopyTest_FILE").getId();
        try {
            mountPoint.getVirtualFileById(childCopyId);
        } catch (NotFoundException e) {
            fail("Child of copied folder not accessible by id. ");
        }
    }

