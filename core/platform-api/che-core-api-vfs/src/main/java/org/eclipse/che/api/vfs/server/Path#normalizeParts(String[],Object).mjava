    private Path normalizeParts(String[] parsed, Object raw) {
        if (parsed.length == 0) {
            return this;
        }
        List<String> newTokens = new ArrayList<>(this.elements.length + parsed.length);
        newTokens.addAll(Arrays.asList(this.elements));
        for (String token : parsed) {
            if ("..".equals(token)) {
                int size = newTokens.size();
                if (size == 0) {
                    throw new IllegalArgumentException(String.format("Invalid path '%s', '..' on root. ", raw));
                }
                newTokens.remove(size - 1);
            } else if (!".".equals(token)) {
                newTokens.add(token);
            }
        }
        if (newTokens.isEmpty()) {
            return ROOT;
        }
        String[] normalizedElements = newTokens.toArray(new String[newTokens.size()]);
        return new Path(normalizedElements);
    }

