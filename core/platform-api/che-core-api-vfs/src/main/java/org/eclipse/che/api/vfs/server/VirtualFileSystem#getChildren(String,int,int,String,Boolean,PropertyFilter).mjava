    /**
     * Get children of specified folder. Example of JSON response:
     * <p/>
     * <pre>
     * {
     *   "hasMoreItems":false,
     *   "items":[
     *       {
     *          "id":"/folder01/DOCUMENT01.txt",
     *          "type":"FILE",
     *          "path":"/folder01/DOCUMENT01.txt",
     *          "versionId":"current",
     *          "creationDate":1292574268440,
     *          "contentType":MediaType.TEXT_PLAIN,
     *          "length":100,
     *          "lastModificationDate":1292574268440
     *          "locked":false,
     *          "properties":[],
     *       }
     *   ],
     *   "numItems":1
     * }
     * </pre>
     *
     * @param folderId
     *         folder's id
     * @param maxItems
     *         max number of items in response. If {@code -1} then no limit of max items in result set
     * @param skipCount
     *         skip items. Must be equals or greater then {@code 0}
     * @param itemType
     *         item type filter. If not null then only item of specified type returned in result list. Expected one of type (case
     *         insensitive):
     *         <ul>
     *         <li>file</li>
     *         <li>folder</li>
     *         </ul>
     * @param includePermissions
     *         if {@code true} add permissions for current user for each item. See {@link org.eclipse.che.api.vfs.shared.dto.Item#getPermissions()}.
     *         If parameter isn't set then result is implementation specific.
     * @param propertyFilter
     *         only properties which are accepted by filter should be included in response. See {@link PropertyFilter#accept(String)}
     * @return list of children of specified folder
     * @throws NotFoundException
     *         if {@code folderId} doesn't exist
     * @throws ForbiddenException
     *         if any of following conditions are met:
     *         <ul>
     *         <li>{@code folderId} isn't a folder</li>
     *         <li>{@code itemType} is set but not one of the known item types (neither 'file' nor 'folder')</li>
     *         <li>user which perform operation has no permissions</li>
     *         </ul>
     * @throws ConflictException
     *         {@code skipCount} is negative or greater then total number of items
     * @throws ServerException
     *         if any other errors occur
     * @see org.eclipse.che.api.vfs.shared.ItemType
     */
    @GET
    @Path("children")
    @Produces({MediaType.APPLICATION_JSON})
    ItemList getChildren(String folderId, int maxItems, int skipCount, String itemType, Boolean includePermissions,
                         PropertyFilter propertyFilter) throws NotFoundException, ForbiddenException, ConflictException, ServerException;

