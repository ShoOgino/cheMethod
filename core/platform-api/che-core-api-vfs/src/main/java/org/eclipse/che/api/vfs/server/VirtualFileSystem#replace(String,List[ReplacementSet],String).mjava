    /**
     * Performs in-depth replacing of variables or text entries in the Items.
     *
     * @param path
     *         folder root to perform replace in depth
     * @param replacements
     *         list of replacements. each replacement contains filename (or regex pattern) and list of changes
     * @param lockToken
     *         lock token. This lock token will be used if {@code path} is locked. Pass {@code null} if there is no lock token, e.g. item is
     *         not locked
     * @throws NotFoundException
     *         if {@code path} doesn't exist
     * @throws ConflictException
     *         if {@code path} is not a folder
     * @throws ForbiddenException
     *         if any of following conditions are met:
     *         <ul>
     *         <li>item {@code path} is locked and {@code lockToken} is {@code null} or doesn't match</li>
     *         <li>user which perform operation has no permissions</li>
     *         </ul>
     * @throws ServerException
     *         if any other errors occur
     */

    @POST
    @Path("replace/{path:.*}")
    public void replace(String path, List<ReplacementSet> replacements, String lockToken)
            throws NotFoundException, ConflictException, ForbiddenException, ServerException;

