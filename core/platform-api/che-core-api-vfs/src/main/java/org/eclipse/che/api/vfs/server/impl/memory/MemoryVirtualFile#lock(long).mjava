    @Override
    public String lock(long timeout) throws ForbiddenException, ConflictException {
        checkExist();
        if (!isFile()) {
            throw new ForbiddenException(String.format("Unable lock '%s'. Locking allowed for files only. ", getPath()));
        }

        if (!hasPermission(BasicPermissions.WRITE.value(), true)) {
            throw new ForbiddenException(String.format("Unable lock '%s'. Operation not permitted. ", getPath()));
        }
        final String lockToken = NameGenerator.generate(null, 32);
        final LockHolder lock = new LockHolder(lockToken, timeout);
        if (this.lock != null) {
            throw new ConflictException("File already locked. ");
        }
        this.lock = lock;
        lastModificationDate = System.currentTimeMillis();
        return lockToken;
    }

