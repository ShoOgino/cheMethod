    /**
     * Export content of {@code folderId} to ZIP archive. Unlike to the method {@link #exportZip(String)} this method includes in the zip
     * response only updated files. Caller must send list of files with their md5sums in next format:
     * <pre>
     * &lt;md5sum&gt;&lt;space&gt;&lt;file path relative to requested folder&gt;
     * ...
     * </pre>
     * For example:
     * <pre>
     * ae3ddf74ea668c7fcee0e3865173e10b  my_project/pom.xml
     * 3ad8580e46189873b48c27983d965df8  my_project/src/main/java/org/test/Main.java
     * ...
     * </pre>
     * Example of typical usage of such method.
     * <ol>
     * <li>Imagine caller has content of this folder stored remotely</li>
     * <li>In some point of time caller likes to get updates</li>
     * <li>Caller traverses local tree and count md5sum for each file, folders must be omitted</li>
     * <li>Caller sends request. See about format of request body above</li>
     * <li>Response contains only files for which the md5sum doesn't match. Comma-separated list of names of removed files is added in
     * response header: <i>x-removed-paths</i></li>
     * <li>If there is no any updates this method return response with status: 204 No Content</li>
     * <li>Depending to the response caller updates his local copy of this folder</li>
     * </ol>
     *
     * @param folderId
     *         folder for ZIP
     * @param in
     *         stream, see above about its format
     * @return ZIP as stream
     * @throws NotFoundException
     *         if {@code folderId} doesn't exist
     * @throws ForbiddenException
     *         if any of following conditions are met:
     *         <ul>
     *         <li>{@code folderId} item isn't a folder</li>
     *         <li>user which perform operation has no permissions</li>
     *         </ul>
     * @throws ServerException
     *         if any other errors occur
     */
    @POST
    @Path("export")
    @Produces({ExtMediaType.APPLICATION_ZIP})
    @Consumes({MediaType.TEXT_PLAIN})
    Response exportZip(String folderId, InputStream in) throws NotFoundException, ForbiddenException, ServerException;

