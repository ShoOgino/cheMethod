  private void emitSerializer(List<Method> getters, StringBuilder builder) {
    builder.append("    public JSONObject toJsonObject() {\n");
    // The default toJsonElement() returns JSONs for unsafe use thus 'any' properties should be
    // copied
    builder.append("      return toJsonObjectInt(true);\n");
    builder.append("    }\n");
    builder
        .append("    public JSONObject toJsonObjectInt(boolean ")
        .append(COPY_JSONS_PARAM)
        .append(") {\n");
    if (isCompactJson()) {
      builder.append("      JSONArray result = new JSONArray();\n");
      for (Method method : getters) {
        emitSerializeFieldForMethodCompact(method, builder);
      }
    } else {
      builder.append("      JSONObject result = new JSONObject();\n");
      for (Method getter : getters) {
        emitSerializeFieldForMethod(getter, builder);
      }
    }
    builder.append("      return result;\n");
    builder.append("    }\n");
    builder.append("\n");
    builder.append("    @Override\n");
    builder.append("    public String toJson() {\n");
    builder.append("      return toJsonObjectInt(false).toString();\n");
    builder.append("    }\n");
    builder.append("\n");
    builder.append("    @Override\n");
    builder.append("    public String toString() {\n");
    builder.append("      return toJson();\n");
    builder.append("    }\n\n");
  }

