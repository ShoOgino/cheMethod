  /** Generates a static factory method that creates a new instance based on a JsonElement. */
  private void emitDeserializer(List<Method> getters, StringBuilder builder) {
    // The default fromJsonObject(json) works in unsafe mode and clones the JSON's for 'any' properties
    builder
        .append("    public static ")
        .append(getImplClassName())
        .append(" fromJsonObject(JSONValue jsonValue) {\n");
    builder.append("      return fromJsonObjectInt(jsonValue, true);\n");
    builder.append("    }\n");
    builder
        .append("    public static ")
        .append(getImplClassName())
        .append(" fromJsonObjectInt(JSONValue jsonValue, boolean ")
        .append(COPY_JSONS_PARAM)
        .append(") {\n");
    builder.append("      if (jsonValue == null || jsonValue.isNull() != null) {\n");
    builder.append("        return null;\n");
    builder.append("      }\n\n");
    builder
        .append("      ")
        .append(getImplClassName())
        .append(" dto = new ")
        .append(getImplClassName())
        .append("();\n");
    if (isCompactJson()) {
      for (Method method : getters) {
        emitDeserializeFieldForMethodCompact(method, builder);
      }
    } else {
      builder.append("      JSONObject json = jsonValue.isObject();\n");
      for (Method getter : getters) {
        emitDeserializeFieldForMethod(getter, builder);
      }
    }
    builder.append("\n      return dto;\n");
    builder.append("    }\n\n");
  }

