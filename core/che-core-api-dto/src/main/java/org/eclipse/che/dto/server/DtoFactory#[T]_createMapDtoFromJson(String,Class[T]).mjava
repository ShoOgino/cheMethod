    /**
     * Parses the JSON data from the specified sting into map of objects of the specified type.
     *
     * @param json
     *         JSON data
     * @param dtoInterface
     *         DTO interface
     * @return map of DTO
     * @throws IllegalArgumentException
     *         if can't provide any implementation for specified interface
     */
    public <T> JsonStringMap<T> createMapDtoFromJson(String json, Class<T> dtoInterface) {
        final DtoProvider<T> dtoProvider = getDtoProvider(dtoInterface);
        final Map<String, JsonElement> map = gson.fromJson(json, mapTypeCache.getUnchecked(JsonElement.class));
        final Map<String, T> result = new LinkedHashMap<>(map.size());
        for (Map.Entry<String, JsonElement> e : map.entrySet()) {
            result.put(e.getKey(), dtoProvider.fromJson(e.getValue()));
        }
        return new JsonStringMapImpl<>(result);
    }

