    /** Emits a method to get a field. Getting a collection ensures that the collection is created. */
    private void emitGetter(Method getter, String fieldName, String returnType, StringBuilder builder) {
        if (getter.isAnnotationPresent(javax.validation.constraints.NotNull.class)) {
            builder.append("    @javax.validation.constraints.NotNull\n");
        } else if (getter.isAnnotationPresent(org.eclipse.che.commons.annotation.Nullable.class)) {
            builder.append("    @org.eclipse.che.commons.annotation.Nullable\n");
        }
        builder.append("    @Override\n    public ");
        builder.append(returnType);
        builder.append(" ");
        builder.append(getter.getName());
        builder.append("() {\n");
        // Initialize the collection.
        Class<?> returnTypeClass = getter.getReturnType();
        if (isList(returnTypeClass) || isMap(returnTypeClass)) {
            builder.append("      ");
            builder.append(getEnsureName(fieldName));
            builder.append("();\n");
        }
        builder.append("      return ");
        emitReturn(getter, fieldName, builder);
        builder.append(";\n    }\n\n");
    }

