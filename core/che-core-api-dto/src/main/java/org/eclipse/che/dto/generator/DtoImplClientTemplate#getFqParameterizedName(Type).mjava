    /** Returns the fully-qualified type name including parameters. */
    private String getFqParameterizedName(Type type) {
        if (type instanceof Class<?>) {
            return ((Class<?>)type).getCanonicalName();
        } else if (type instanceof ParameterizedType) {
            ParameterizedType pType = (ParameterizedType)type;
            StringBuilder sb = new StringBuilder(getRawClass(pType).getCanonicalName());
            sb.append('<');
            final Type[] actualTypeArguments = pType.getActualTypeArguments();
            for (int i = 0; i < actualTypeArguments.length; i++) {
                if (i > 0) {
                    sb.append(", ");
                }
                sb.append(getFqParameterizedName(actualTypeArguments[i]));
            }
            sb.append('>');
            return sb.toString();
        } else {
            throw new IllegalArgumentException("We do not handle the type '" + type == null ? null : type.getTypeName() + "'.");
        }
    }

