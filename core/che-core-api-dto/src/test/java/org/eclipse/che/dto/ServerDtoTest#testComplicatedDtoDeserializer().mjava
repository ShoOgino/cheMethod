  @Test
  public void testComplicatedDtoDeserializer() throws Exception {
    final String fooString = "Something";
    final int fooId = 1;
    final String _default = "test_default_keyword";

    JsonArray jsonArray = new JsonArray();
    jsonArray.add(new JsonPrimitive(fooString));

    JsonObject simpleDtoJsonObject = new JsonObject();
    simpleDtoJsonObject.add("name", new JsonPrimitive(fooString));
    simpleDtoJsonObject.add("id", new JsonPrimitive(fooId));
    simpleDtoJsonObject.add("default", new JsonPrimitive(_default));

    JsonObject jsonMap = new JsonObject();
    jsonMap.add(fooString, simpleDtoJsonObject);

    JsonArray simpleDtosArray = new JsonArray();
    simpleDtosArray.add(simpleDtoJsonObject);

    JsonArray arrayOfEnum = new JsonArray();
    arrayOfEnum.add(new JsonPrimitive(ComplicatedDto.SimpleEnum.ONE.name()));
    arrayOfEnum.add(new JsonPrimitive(ComplicatedDto.SimpleEnum.TWO.name()));
    arrayOfEnum.add(new JsonPrimitive(ComplicatedDto.SimpleEnum.THREE.name()));
    JsonArray arrayOfArrayEnum = new JsonArray();
    arrayOfArrayEnum.add(arrayOfEnum);

    JsonObject complicatedDtoJsonObject = new JsonObject();
    complicatedDtoJsonObject.add("strings", jsonArray);
    complicatedDtoJsonObject.add(
        "simpleEnum", new JsonPrimitive(ComplicatedDto.SimpleEnum.ONE.name()));
    complicatedDtoJsonObject.add("map", jsonMap);
    complicatedDtoJsonObject.add("simpleDtos", simpleDtosArray);
    complicatedDtoJsonObject.add("arrayOfArrayOfEnum", arrayOfArrayEnum);

    ComplicatedDto complicatedDto =
        dtoFactory.createDtoFromJson(complicatedDtoJsonObject.toString(), ComplicatedDto.class);

    assertEquals(complicatedDto.getStrings().get(0), fooString);
    assertEquals(complicatedDto.getSimpleEnum(), ComplicatedDto.SimpleEnum.ONE);
    checkSimpleDto(complicatedDto.getMap().get(fooString), fooString, fooId, _default);
    checkSimpleDto(complicatedDto.getSimpleDtos().get(0), fooString, fooId, _default);
    assertEquals(
        complicatedDto.getArrayOfArrayOfEnum().get(0).get(0), ComplicatedDto.SimpleEnum.ONE);
    assertEquals(
        complicatedDto.getArrayOfArrayOfEnum().get(0).get(1), ComplicatedDto.SimpleEnum.TWO);
    assertEquals(
        complicatedDto.getArrayOfArrayOfEnum().get(0).get(2), ComplicatedDto.SimpleEnum.THREE);
  }

