    /** @see GitCommand#execute() */
    @Override
    public List<Remote> execute() throws GitException {
        reset();
        commandLine.add("remote", "-v");
        start();
        //get all remotes with urls
        Map<String, String> remotes = new HashMap<>();
        for (String outLine : lines) {
            String[] outArr = outLine.split("\t");
            remotes.put(outArr[0], outArr[1].split(" ")[0]);
        }
        //parse remotes
        List<Remote> remoteList = new LinkedList<>();
        if (remoteName != null) {
            if (remotes.get(remoteName) == null) {
                throw new GitException("No remote with name " + remoteName);
            }
            Remote remote = DtoFactory.getInstance().createDto(Remote.class).withName(remoteName).withUrl(remotes.get(remoteName));
            remoteList.add(remote);
        } else {
            for (Map.Entry<String, String> entry : remotes.entrySet()) {
                Remote remote = DtoFactory.getInstance().createDto(Remote.class).withName(entry.getKey()).withUrl(entry.getValue());
                remoteList.add(remote);
            }
        }
        return remoteList;
    }

