    /**
     * Searches "GIT_ASKPASS" script.
     *
     * @param credentials
     *         user credentials
     * @return stored script
     */
    public File build(UserCredential credentials) throws GitException {
        File askScriptDirectory = new File(System.getProperty("java.io.tmpdir")
                                           + "/" + EnvironmentContext.getCurrent().getUser().getName());
        if (!askScriptDirectory.exists()) {
            askScriptDirectory.mkdirs();
        }
        File gitAskPassScript = new File(askScriptDirectory, GIT_ASK_PASS_SCRIPT);
        try (FileOutputStream fos = new FileOutputStream(gitAskPassScript)) {
            String actualGitAskPassTemplate = gitAskPassTemplate.replace("$self", gitAskPassScript.getAbsolutePath())
                                                                .replace("$password", credentials.getPassword())
                                                                .replace("$username", credentials.getUserName());
            fos.write(actualGitAskPassTemplate.getBytes());
        } catch (IOException e) {
            LOG.error("It is not possible to store " + gitAskPassScript + " credentials", e);
            throw new GitException("Can't store credentials");
        }
        if (!gitAskPassScript.setExecutable(true)) {
            LOG.error("Can't make " + gitAskPassScript + " executable");
            throw new GitException("Can't set permissions to credentials");
        }
        return gitAskPassScript;
    }

