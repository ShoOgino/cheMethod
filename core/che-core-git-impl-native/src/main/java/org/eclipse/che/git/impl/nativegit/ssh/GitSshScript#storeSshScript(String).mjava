    /**
     * Stores ssh script that will be executed with all commands that need ssh.
     *
     * @param keyPath
     *         path to ssh key
     * @return file that contains script for ssh commands
     * @throws GitException
     *         when any error with ssh script storing occurs
     */
    private File storeSshScript(String keyPath) throws GitException {
        File sshScriptFile = new File(rootFolder, getSshKeyFileName());
        try (FileOutputStream fos = new FileOutputStream(sshScriptFile)) {
            fos.write(getSshScriptTemplate().replace("$ssh_key", keyPath).getBytes());
        } catch (IOException e) {
            LOG.error("It is not possible to store {} ssh key", keyPath);
            throw new GitException("Can't store SSH key");
        }
        if (!sshScriptFile.setExecutable(true)) {
            LOG.error("Can't make {} executable", sshScriptFile);
            throw new GitException("Can't set permissions to SSH key");
        }
        return sshScriptFile;
    }

