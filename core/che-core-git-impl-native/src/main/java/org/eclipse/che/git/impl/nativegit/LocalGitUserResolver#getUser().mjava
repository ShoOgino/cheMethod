    @Override
    public GitUser getUser() {
        final User user = EnvironmentContext.getCurrent().getUser();
        GitUser gitUser = newDto(GitUser.class).withName("Anonymous").withEmail("anonymous@noemail.com");
        if (!user.isTemporary()) {
            String name = null;
            String email = null;
            try {
                Map<String, String> preferences = preferenceDao.getPreferences(user.getId(), "git.committer.\\w+");
                name = preferences.get("git.committer.name");
                email = preferences.get("git.committer.email");
            } catch (ServerException e) {
                LOG.error(e.getLocalizedMessage(), e);
            }

            if (!isNullOrEmpty(name)) {
                gitUser.setName(name);
            }
            if (!isNullOrEmpty(email)) {
                gitUser.setEmail(email);
            }
        }
        return gitUser;
    }

