    /**
     * If selection chang in non-active part, no events should be fired by
     * Selection Agent
     */
    @Test
    public void shouldNOTFireEventWhenSelectionInNONActivePartChanged() {

        AbstractPartPresenter firstPart = new AbstractPartPresenter() {
            @Override
            public void go(AcceptsOneWidget container) {
            }

            @Override
            public String getTitleToolTip() {
                return null;
            }

            @Override
            public SVGResource getTitleImage() {
                return null;
            }

            @Override
            public String getTitle() {
                return null;
            }

            @Override
            public void setVisible(boolean visible) {
                //to do nothing
            }

            @Override
            public IsWidget getView() {
                return null;
            }
        };

        // fire event, for agent to get information about active part
        eventBus.fireEvent(new ActivePartChangedEvent(firstPart));
        // change part
        eventBus.fireEvent(new ActivePartChangedEvent(mock(PartPresenter.class)));

        SelectionChangedHandler handler = mock(SelectionChangedHandler.class);
        eventBus.addHandler(SelectionChangedEvent.TYPE, handler);

        // call setSelection on the first Part.
        firstPart.setSelection(mock(Selection.class));

        verifyZeroInteractions(handler);
    }

