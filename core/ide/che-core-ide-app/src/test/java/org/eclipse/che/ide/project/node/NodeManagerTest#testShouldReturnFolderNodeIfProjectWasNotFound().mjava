    @Test
    public void testShouldReturnFolderNodeIfProjectWasNotFound() throws Exception {
        final ItemReference itemReferenceMock = mock(ItemReference.class);
        final NodeSettings nodeSettingsMock = mock(NodeSettings.class);
        final ProjectConfigDto projectConfigMock = mock(ProjectConfigDto.class);
        final WorkspaceConfigDto workspaceConfigDtoMock = mock(WorkspaceConfigDto.class);
        final WorkspaceDto workspaceMock = mock(WorkspaceDto.class);

        when(itemReferenceMock.getType()).thenReturn("project");
        when(appContextMock.getWorkspace()).thenReturn(workspaceMock);
        when(workspaceMock.getConfig()).thenReturn(workspaceConfigDtoMock);
        when(workspaceConfigDtoMock.getProjects()).thenReturn(Collections.singletonList(projectConfigMock));
        when(projectConfigMock.getPath()).thenReturn("/path1");
        when(itemReferenceMock.getPath()).thenReturn("/path2");

        nodeManager.createNodeByType(itemReferenceMock, null, nodeSettingsMock);

        verify(nodeFactoryMock, never()).newProjectNode(any(ProjectConfigDto.class), any(NodeSettings.class));
        verify(nodeFactoryMock).newFolderReferenceNode(eq(itemReferenceMock), isNull(ProjectConfigDto.class), eq(nodeSettingsMock));
    }

