    @Test
    public void testShouldReturnProjectNode() throws Exception {
        final ItemReference itemReferenceMock = mock(ItemReference.class);
        final NodeSettings nodeSettingsMock = mock(NodeSettings.class);
        final ProjectConfigDto projectConfigMock = mock(ProjectConfigDto.class);
        final WorkspaceConfigDto workspaceConfigDtoMock = mock(WorkspaceConfigDto.class);
        final UsersWorkspaceDto usersWorkspaceDtoMock = mock(UsersWorkspaceDto.class);

        when(itemReferenceMock.getType()).thenReturn("project");
        when(appContextMock.getWorkspace()).thenReturn(usersWorkspaceDtoMock);
        when(usersWorkspaceDtoMock.getConfig()).thenReturn(workspaceConfigDtoMock);
        when(workspaceConfigDtoMock.getProjects()).thenReturn(Collections.singletonList(projectConfigMock));
        when(projectConfigMock.getPath()).thenReturn("/path");
        when(itemReferenceMock.getPath()).thenReturn("/path");

        nodeManager.createNodeByType(itemReferenceMock, null, nodeSettingsMock);

        verify(nodeFactoryMock, never()).newProjectNode(eq(projectConfigMock), eq(nodeSettingsMock));
        verify(nodeFactoryMock).newFolderReferenceNode(any(ItemReference.class), any(ProjectConfigDto.class), any(NodeSettings.class));
    }

