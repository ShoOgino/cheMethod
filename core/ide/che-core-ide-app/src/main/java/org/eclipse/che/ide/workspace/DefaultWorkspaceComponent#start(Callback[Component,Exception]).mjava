    /** {@inheritDoc} */
    @Override
    public void start(final Callback<Component, Exception> callback) {
        this.callback = callback;

        workspaceServiceClient.getWorkspaces(SKIP_COUNT, MAX_COUNT).then(new Operation<List<WorkspaceDto>>() {
            @Override
            public void apply(List<WorkspaceDto> workspaces) throws OperationException {
                if (workspaces.isEmpty()) {
                    createWorkspacePresenter.show(workspaces, callback);
                } else {
                    String wsNameFromBrowser = browserQueryFieldRenderer.getWorkspaceName();
                    if (wsNameFromBrowser.isEmpty()) {
                        tryStartRecentWorkspaceIfExist(workspaces);
                    } else {
                        for (WorkspaceDto workspace : workspaces) {
                            if (wsNameFromBrowser.equals(workspace.getConfig().getName())) {
                                Log.info(getClass(), "Starting workspace " + workspace.getConfig().getName());
                                startWorkspaceById(workspace, callback);
                                return;
                            }
                        }
                    }
                    createWorkspacePresenter.show(workspaces, callback);
                }
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError error) throws OperationException {
                needToReloadComponents = true;

                dialogFactory.createMessageDialog(locale.getWsErrorDialogTitle(),
                                                  locale.getWsErrorDialogContent(error.getMessage()),
                                                  null).show();
            }
        });
    }

