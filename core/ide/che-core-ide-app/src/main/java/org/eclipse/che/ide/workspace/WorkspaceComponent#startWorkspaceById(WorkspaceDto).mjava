    /**
     * Starts workspace by id when web socket connected.
     *
     * @param workspace
     *         workspace which will be started
     */
    public void startWorkspaceById(final WorkspaceDto workspace) {
        loader.show(initialLoadingInfo);
        initialLoadingInfo.setOperationStatus(WORKSPACE_BOOTING.getValue(), IN_PROGRESS);

        if (messageBus != null) {
            messageBus.cancelReconnection();
        }
        messageBus = messageBusProvider.createMessageBus(workspace.getId());

        messageBus.addOnOpenHandler(new ConnectionOpenedHandler() {
            @Override
            public void onOpen() {
                messageBus.removeOnOpenHandler(this);
                subscribeToWorkspaceStatusWebSocket(workspace);

                if (!RUNNING.equals(workspace.getStatus())) {
                    workspaceServiceClient.getSnapshot(workspace.getId()).then(new Operation<List<SnapshotDto>>() {
                        @Override
                        public void apply(List<SnapshotDto> snapshots) throws OperationException {
                            if (snapshots.isEmpty()) {
                                handleWsStart(workspaceServiceClient.startById(workspace.getId(),
                                                                               workspace.getConfig().getDefaultEnv()));
                            } else {
                                showRecoverWorkspaceConfirmDialog(workspace);
                            }
                        }
                    });
                } else {
                    initialLoadingInfo.setOperationStatus(WORKSPACE_BOOTING.getValue(), SUCCESS);
                    setCurrentWorkspace(workspace);
                    eventBus.fireEvent(new WorkspaceStartedEvent(workspace));
                }
            }
        });
    }

