    private void tryAuthenticateRepeatImport(@NotNull final String providerName,
                                             @NotNull final String authenticateUrl,
                                             @NotNull final String pathToProject,
                                             @NotNull final String projectName,
                                             @NotNull final SourceStorageDto sourceStorage,
                                             @NotNull final ProjectNotificationSubscriber subscriber) {
            OAuth2Authenticator authenticator = oAuth2AuthenticatorRegistry.getAuthenticator(providerName);
            if(authenticator == null) {
                authenticator = oAuth2AuthenticatorRegistry.getAuthenticator("default");
            }
            authenticator.authorize(OAuth2AuthenticatorUrlProvider.get(restContext, authenticateUrl),
                                    new AsyncCallback<OAuthStatus>() {
                                        @Override
                                        public void onFailure(Throwable caught) {
                                            callback.onFailure(new Exception(caught.getMessage()));
                                        }

                                        @Override
                                        public void onSuccess(OAuthStatus result) {
                                            if (!result.equals(OAuthStatus.NOT_PERFORMED)) {
                                                doImport(pathToProject, projectName, sourceStorage);
                                            } else  {
                                                subscriber.onFailure("Authentication cancelled");
                                                callback.onCompleted();
                                            }
                                        }
                                    });

    }

