    /**
     * Asks the user for new item name and retries copying.
     */
    private void copyWithNewName() {
        /** Get item to copy */
        final ResourceBasedNode<?> item = items.get(itemIndex);

        /** Ask user for new resource name. */
        renameItemAction.askForNewName(item, new InputCallback() {
            @Override
            public void accepted(String value) {
                try {
                    /** Copy the item, giving new name */
                    projectServiceClient
                            .copy(workspaceId, ((HasStorablePath)item).getStorablePath(), ((HasStorablePath)destination).getStorablePath(), value,
                                  copyCallback);
                } catch (Exception error) {
                    /** Handle error and stop copying */
                    notificationManager.notify(localization.failedToCopyItems(), error.getMessage(), FAIL, true, item.getProjectConfig());
                    dialogFactory.createMessageDialog("ERROR", error.getMessage(), null).show();
                }
            }
        }, new CancelCallback() {
            @Override
            public void cancelled() {
                /** Stop copying and do nothing */
            }
        });
    }

