    @NotNull
    private String generateWarningMessage(@NotNull List<ResourceBasedNode<?>> nodes) {
        if (nodes.size() == 1) {
            String name = nodes.get(0).getName();
            String type = getDisplayType(nodes.get(0));

            return "Delete " + type + " \"" + name + "\"?";
        }

        Map<String, Integer> pluralToSingular = new HashMap<>();
        for (ResourceBasedNode<?> node : nodes) {
            final String type = getDisplayType(node);

            if (!pluralToSingular.containsKey(type)) {
                pluralToSingular.put(type, 1);
            } else {
                Integer count = pluralToSingular.get(type);
                count++;
                pluralToSingular.put(type, count);
            }
        }

        StringBuilder buffer = new StringBuilder("Delete ");


        Iterator<Map.Entry<String, Integer>> iterator = pluralToSingular.entrySet().iterator();
        if (iterator.hasNext()) {
            Map.Entry<String, Integer> entry = iterator.next();
            buffer.append(entry.getValue())
                  .append(" ")
                  .append(entry.getKey());

            if (entry.getValue() > 1) {
                buffer.append("s");
            }

            while (iterator.hasNext()) {
                Map.Entry<String, Integer> e = iterator.next();

                buffer.append(" and ")
                      .append(e.getValue())
                      .append(" ")
                      .append(e.getKey());

                if (e.getValue() > 1) {
                    buffer.append("s");
                }
            }
        }

        buffer.append("?");

        return buffer.toString();
    }

