    @Override
    public void search(final String text) {
        QueryExpression queryExpression = new QueryExpression();
        queryExpression.setText(text + '*');
        if (!view.getFileMask().isEmpty()) {
            queryExpression.setName(view.getFileMask());
        }
        if (!view.getPathToSearch().isEmpty()) {
            queryExpression.setPath(view.getPathToSearch());
        }

        projectServiceClient.search(appContext.getDevMachine(), queryExpression).then(new Operation<List<ItemReference>>() {
            @Override
            public void apply(List<ItemReference> result) throws OperationException {
                view.close();
                findResultPresenter.handleResponse(result, text);
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                view.showErrorMessage(dtoFactory.createDtoFromJson(arg.getMessage(), ServiceError.class).getMessage());
            }
        });
    }

