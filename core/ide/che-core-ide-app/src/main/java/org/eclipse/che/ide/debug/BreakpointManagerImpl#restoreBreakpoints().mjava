    private void restoreBreakpoints() {
        Storage localStorage = Storage.getLocalStorageIfSupported();
        if (localStorage == null) {
            return;
        }

        String data = localStorage.getItem(LOCAL_STORAGE_BREAKPOINTS_KEY);
        if (data == null || data.isEmpty()) {
            return;
        }

        List<BreakpointDto> allDtoBreakpoints = dtoFactory.createListDtoFromJson(data, BreakpointDto.class);

        for (final BreakpointDto dto : allDtoBreakpoints) {
            VirtualFileInfo virtualFileInfo = VirtualFileInfo.newBuilder()
                                                             .setPath(dto.getPath())
                                                             .setProject(new ProjectConfig(dto.getFileProjectConfig()))
                                                             .build();

            VirtualFile file = new VirtualFileImpl(virtualFileInfo);
            if (dto.getType() == Type.CURRENT) {
                doSetCurrentBreakpoint(file, dto.getLineNumber());
            } else {
                addBreakpoint(new Breakpoint(dto.getType(),
                                             dto.getLineNumber(),
                                             dto.getPath(),
                                             file,
                                             dto.isActive()));
            }
        }
    }

