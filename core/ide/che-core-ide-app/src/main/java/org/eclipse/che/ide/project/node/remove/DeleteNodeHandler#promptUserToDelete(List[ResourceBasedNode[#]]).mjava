    @NotNull
    private Promise<Void> promptUserToDelete(@NotNull final List<ResourceBasedNode<?>> nodes) {
        return createFromAsyncRequest(new RequestCall<Void>() {
            @Override
            public void makeCall(AsyncCallback<Void> callback) {
                String warningMessage = generateWarningMessage(nodes);

                boolean anyDirectories = false;

                String directoryName = null;
                for (ResourceBasedNode<?> node : nodes) {
                    if (node instanceof FolderReferenceNode) {
                        anyDirectories = true;
                        directoryName = node.getName();
                        break;
                    }
                }

                if (anyDirectories) {
                    warningMessage += nodes.size() == 1 ? localization.deleteAllFilesAndSubdirectories(directoryName)
                                                        : localization.deleteFilesAndSubdirectoriesInTheSelectedDirectory();
                }

                dialogFactory.createConfirmDialog(localization.deleteDialogTitle(),
                                                  warningMessage,
                                                  onConfirm(nodes, callback),
                                                  onCancel(callback)).show();
            }
        });
    }

