    /**
     * Sets new active debugger.
     * Resubscribe all {@link DebuggerObserver} to listen to events from new {@link Debugger}
     *
     * @param debugger
     *         debugger is being used
     */
    public void setActiveDebugger(@Nullable Debugger debugger) {
        if (activeDebugger != null) {
            for (DebuggerManagerObserver observer : observers) {
                activeDebugger.removeObserver(observer);
            }
        }

        activeDebugger = debugger;

        for (DebuggerManagerObserver observer : observers) {
            if (activeDebugger != null) {
                activeDebugger.addObserver(observer);
            }
            observer.onActiveDebuggerChanged(activeDebugger);
        }
    }

