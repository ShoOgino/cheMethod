    private Promise<ProjectConfigDto> updateProject(final ProjectConfigDto project) {
        return newPromise(new AsyncPromiseHelper.RequestCall<ProjectConfigDto>() {
            @Override
            public void makeCall(AsyncCallback<ProjectConfigDto> callback) {
                projectService.updateProject(appContext.getWorkspace().getId(),
                                             project.getName(),
                                             project,
                                             newCallback(callback, dtoUnmarshaller.newUnmarshaller(ProjectConfigDto.class)));
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                Log.warn(getClass(), arg.getMessage());
                notificationManager.notify(locale.failedToUpdateProject(project.getName()), FAIL, false, project);
            }
        });
    }

