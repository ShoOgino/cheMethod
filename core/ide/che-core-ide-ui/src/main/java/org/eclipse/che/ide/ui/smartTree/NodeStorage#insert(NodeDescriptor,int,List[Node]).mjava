    /**
     * Inserts the child models at the given position in the parent's list of
     * visible children.
     *
     * @param parent
     * @param index
     * @param children
     */
    public void insert(NodeDescriptor parent, int index, List<Node> children) {
        int initialCount = parent.getChildren().size();
        parent.addChildren(index, wrap(children));

        if (initialCount != parent.getChildren().size()) {
            List<Node> addedChildren = new ArrayList<>();
            List<NodeDescriptor> currentChildren = parent.getChildren();
            if (isSorted()) {
                int currentChildrenSize = currentChildren.size();
                for (int i = 0; i < currentChildrenSize; i++) {
                    int childrenSize = children.size();
                    for (int j = 0; j < childrenSize; j++) {
                        Node currentData = currentChildren.get(i).getNode();
                        Node child = children.get(j);
                        if (child == currentData) {
                            addedChildren.add(child);
                            break;
                        }
                    }
                }
            } else {
                int i = index;
                int childrenSize = children.size();
                for (int j = 0; j < childrenSize; j++) {
                    if (currentChildren.get(i) == children.get(j)) {
                        addedChildren.add(children.get(j));
                        i++;
                    }
                }
            }
            if (addedChildren.size() != 0) {
                fireEvent(new StoreAddEvent(index, addedChildren));
            }
        }
    }

