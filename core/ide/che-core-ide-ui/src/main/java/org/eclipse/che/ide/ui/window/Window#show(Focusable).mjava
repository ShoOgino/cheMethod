    /**
     * Displays the {@link Window} popup. The popup will animate into view.
     *
     * @param selectAndFocusElement
     *         an {@link Focusable} to select and focus on when the panel is
     *         shown. If null, no element will be given focus
     */
    public void show(@Nullable final Focusable selectAndFocusElement) {
        setBlocked(false);

        if (isShowing) {
            return;
        }

        isShowing = true;

        // Attach the popup to the body.
        final JsElement popup = view.popup.getElement().cast();
        if (popup.getParentElement() == null) {
            // Hide the popup so it can enter its initial state without flickering.

            popup.getStyle().setVisibility("hidden");
            RootLayoutPanel.get().add(view);
        }

        // Start the animation after the element is attached.
        Scheduler.get().scheduleDeferred(new ScheduledCommand() {
            @Override
            public void execute() {
                // The popup may have been hidden before this timer executes.
                if (isShowing) {
                    popup.getStyle().removeProperty("visibility");
                    view.setShowing(true);
                    if (selectAndFocusElement != null) {
                        selectAndFocusElement.setFocus(true);
                    }
                }
            }
        });
    }

