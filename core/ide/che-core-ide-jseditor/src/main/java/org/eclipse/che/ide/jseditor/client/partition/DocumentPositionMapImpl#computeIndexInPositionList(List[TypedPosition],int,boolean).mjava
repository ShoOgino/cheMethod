    protected int computeIndexInPositionList(final List<TypedPosition> positions, final int offset,
                                             final boolean orderedByOffset) {
        if (positions.size() == 0) {
            return 0;
        }

        int left = 0;
        int right = positions.size() - 1;
        int mid = 0;
        Position p = null;

        while (left < right) {

            mid = (left + right) / 2;

            p = positions.get(mid);
            final int pOffset = getOffset(orderedByOffset, p);
            if (offset < pOffset) {
                if (left == mid) {
                    right = left;
                } else {
                    right = mid - 1;
                }
            } else if (offset > pOffset) {
                if (right == mid) {
                    left = right;
                } else {
                    left = mid + 1;
                }
            } else if (offset == pOffset) {
                left = right = mid;
            }

        }

        int pos = left;
        p = positions.get(pos);
        int pPosition = getOffset(orderedByOffset, p);
        if (offset > pPosition) {
            // append to the end
            pos++;
        } else {
            // entry will become the first of all entries with the same offset
            do {
                --pos;
                if (pos < 0) {
                    break;
                }
                p = positions.get(pos);
                pPosition = getOffset(orderedByOffset, p);
            } while (offset == pPosition);
            ++pos;
        }

        Assert.isTrue(0 <= pos && pos <= positions.size());

        return pos;
    }

