    @Override
    public List<TypedPosition> getPositions(String category, int offset, int length, boolean canStartBefore,
                                            boolean canEndAfter) throws BadPositionCategoryException {
        if (canStartBefore && canEndAfter || (!canStartBefore && !canEndAfter)) {
            List<TypedPosition> documentPositions;
            if (canStartBefore && canEndAfter) {
                if (offset < this.contentLength / 2) {
                    documentPositions = getStartingPositions(category, 0, offset + length);
                } else {
                    documentPositions = getEndingPositions(category, offset, this.contentLength - offset + 1);
                }
            } else {
                documentPositions = getStartingPositions(category, offset, length);
            }

            final List<TypedPosition> list = new ArrayList<TypedPosition>(documentPositions.size());

            final Position region = new Position(offset, length);

            for (final TypedPosition position: documentPositions) {
                if (isWithinRegion(region, position, canStartBefore, canEndAfter)) {
                    list.add(position);
                }
            }

            return list;
        } else if (canStartBefore) {
            final List<TypedPosition> list = getEndingPositions(category, offset, length);
            return list;
        } else {
            Assert.isLegal(canEndAfter && !canStartBefore);

            final List<TypedPosition> list = getStartingPositions(category, offset, length);
            return list;
        }
    }

