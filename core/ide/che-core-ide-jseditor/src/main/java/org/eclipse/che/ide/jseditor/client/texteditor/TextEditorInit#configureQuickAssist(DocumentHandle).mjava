    /**
     * Sets up the quick assist assistant.
     * @param documentHandle the handle to the document
     */
    private void configureQuickAssist(final DocumentHandle documentHandle) {
        final QuickAssistProcessor processor = configuration.getQuickAssistProcessor();
        if (this.quickAssistantFactory != null && processor != null) {
            this.quickAssist = quickAssistantFactory.createQuickAssistant(this.textEditor);
            this.quickAssist.setQuickAssistProcessor(processor);
//            documentHandle.getDocEventBus().addHandler(GutterClickEvent.TYPE, new GutterClickHandler() {
//                @Override
//                public void onGutterClick(final GutterClickEvent event) {
//                    if (Gutters.ANNOTATION_GUTTER.equals(event.getGutterId())) {
//                        final MouseEvent originalEvent = event.getEvent();
//                        showQuickAssistant(event.getLineNumber(),
//                                           originalEvent.getClientX(),
//                                           originalEvent.getClientY());
//                    }
//                }
//            });

            //add a key binding
            final KeyBindingAction action = new KeyBindingAction() {
                @Override
                public void action() {
                    final PositionConverter positionConverter = textEditor.getPositionConverter();
                    if (positionConverter != null) {
                        final TextPosition cursor = textEditor.getCursorPosition();
                        final int offset = textEditor.getCursorModel().getCursorPosition().getOffset();
                        final PositionConverter.PixelCoordinates pixelPos = positionConverter.textToPixel(cursor);
                        //TODO add to pixelPos.getY()  line height to assist widget doesn't cover current line
                        showQuickAssistant(offset, pixelPos.getX(), pixelPos.getY());
                    }
                }
            };
            final HasKeybindings hasKeybindings = this.textEditor.getHasKeybindings();
            hasKeybindings.addKeybinding(new Keybinding(false, false, true, false, KeyCode.ENTER, action), QUICK_FIX);
//            hasKeybindings.addKeybinding(new Keybinding(true, false, false, false, KeyCode.ONE, action));
        }
    }

