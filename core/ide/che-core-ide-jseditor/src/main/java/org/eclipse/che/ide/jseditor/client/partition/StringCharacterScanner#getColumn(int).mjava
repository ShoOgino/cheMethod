    private int getColumn(int offset) {
        // Bad and slow implementation
        if (offset < 0 || offset > this.content.length()) {
            return -1;
        }
        if (this.delimiters == null || this.delimiters.isEmpty()) {
            return offset;
        }

        final StringBuilder sb = new StringBuilder("[");
        for (final String delimiter: this.delimiters) {
            sb.append("(?:")
              .append(delimiter)
              .append(")");
        }
        sb.append("]");
        final RegExp regexp = RegExp.compile(sb.toString());

        final String split = this.content;
        int currentIndex = 0;
        while (currentIndex < offset) {
            final MatchResult matchResult = regexp.exec(split);
            final int found = matchResult.getIndex();
            if (found < 0) {
                throw new RuntimeException("Invalid index for regexp match");
            }
            if (currentIndex + found > offset) {
                // we're on the same line as offset
                return offset - currentIndex;
            }
            currentIndex = currentIndex + found + 1;
        }
        return -1;
    }

