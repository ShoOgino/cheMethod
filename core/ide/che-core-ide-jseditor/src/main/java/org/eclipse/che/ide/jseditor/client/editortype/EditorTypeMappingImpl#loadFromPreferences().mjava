    @Override
    public void loadFromPreferences() {
        final String pref = this.preferencesManager.getValue(PREFERENCE_PROPERTY_NAME);
        if (pref != null && !pref.isEmpty()) {
            final JSONObject keyMapping = JSONParser.parseStrict(pref).isObject();
            this.contentTypeMapping.clear();
            for (final String key : keyMapping.keySet()) {
                // the mime-type is stored in preferences
                final String contentType = key;
                final JSONValue value = keyMapping.get(key);
                if (value == null) {
                    Log.warn(EditorTypeMappingImpl.class,
                             "Error in preferences: filetype " + contentType + " has null editor type set.");
                    continue;
                }
                final String stringValue = value.isString().stringValue();
                final EditorType editorType = EditorType.getInstance(stringValue);
                if (editorType != null) {
                    // special case for text/plain <-> defaultPlainTextFileType
                    if (CONTENT_TYPE_TEXT_PLAIN.equals(contentType)) {
                        this.contentTypeMapping.put(plainTextFileType, editorType);
                    } else {
                        final FileType fileType = fileTypeRegistry.getFileTypeByMimeType(contentType);
                        // any unknown mime type returns the default filetype ; ignore them
                        if (!unknownFileType.equals(fileType)) {
                            this.contentTypeMapping.put(fileType, editorType);
                        }
                    }
                } else {
                    Log.warn(EditorTypeMappingImpl.class,
                             "Unknown editor type key found for filetype " + contentType + ": " + stringValue);
                }
            }
        } else {
            Log.debug(EditorTypeMappingImpl.class, "No editor type mappings found in preferences.");
        }
    }

