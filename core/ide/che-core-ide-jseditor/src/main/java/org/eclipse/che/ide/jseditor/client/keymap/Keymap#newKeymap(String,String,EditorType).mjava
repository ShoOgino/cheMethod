    /**
     * Creates a new keymap instance.
     *
     * @param key
     *         the key (must not already exist)
     * @param displayString
     *         the name displayed to a user
     * @param editorType
     *         the editor type this keymap is linked to
     * @return a new keymap instance
     */
    public static Keymap newKeymap(final String key, final String displayString, final EditorType editorType) {
        if (key == null) {
            throw new IllegalArgumentException("Keymap key can't be null");
        }
        if (displayString == null) {
            throw new IllegalArgumentException("Keymap display string can't be null");
        }
        if (editorType == null) {
            throw new IllegalArgumentException("Keymap editor can't be null");
        }
        if (fromKey(key) != null) {
            throw new RuntimeException("Keymap with key " + key + " already exists");
        }

        Log.debug(Keymap.class, "Creation of new keymap " + key + " for editor type " + editorType);
        Keymap keymap = new Keymap(key, displayString, editorType);
        instances.put(key, keymap);
        return keymap;
    }

