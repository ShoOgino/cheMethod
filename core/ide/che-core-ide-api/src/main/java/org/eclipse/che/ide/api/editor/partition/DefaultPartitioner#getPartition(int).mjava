    @Override
    public TypedRegion getPartition(final int offset) {
        final int contentLength = getContentLength();

        List<TypedPosition> category = null;
        try {
            category = getPositions();
        } catch (final BadPositionCategoryException e) {
            Log.warn(DefaultPartitioner.class, "Invalid position cateory... with default category! ", e);
            return defaultRegion();
        }

        if (category == null || category.size() == 0) {
            return defaultRegion();
        }

        Integer index = null;
        try {
            index = this.documentPositionMap.computeIndexInCategory(positionCategory, offset);
        } catch (final BadLocationException e) {
            Log.warn(DefaultPartitioner.class, "Invalid location " + offset + " (max=" + contentLength + ").");
            return defaultRegion();
        } catch (final BadPositionCategoryException e) {
            Log.warn(DefaultPartitioner.class, "Invalid position cateory... with default category " + positionCategory + "!", e);
            return defaultRegion();
        }
        if (index == null) {
            return defaultRegion();
        }

        if (index < category.size()) {

            final TypedPosition next = category.get(index);

            if (offset == next.offset) {
                return new TypedRegionImpl(next.getOffset(),
                                           next.getLength(),
                                           next.getType());
            }

            if (index == 0) {
                return new TypedRegionImpl(0, next.offset, DEFAULT_CONTENT_TYPE);
            }

            final TypedPosition previous = category.get(index - 1);
            if (previous.includes(offset)) {
                return new TypedRegionImpl(previous.getOffset(),
                                           previous.getLength(),
                                           previous.getType());
            }

            final int endOffset = previous.getOffset() + previous.getLength();
            return new TypedRegionImpl(endOffset,
                                       next.getOffset() - endOffset,
                                       DEFAULT_CONTENT_TYPE);
        }

        final TypedPosition previous = category.get(category.size() - 1);
        if (previous.includes(offset)) {
            return new TypedRegionImpl(previous.getOffset(),
                                       previous.getLength(),
                                       previous.getType());
        }

        final int endOffset = previous.getOffset() + previous.getLength();
        return new TypedRegionImpl(endOffset,
                                   contentLength - endOffset,
                                   DEFAULT_CONTENT_TYPE);

    }

