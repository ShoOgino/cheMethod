    @Override
    public void getNodeByPath(@NotNull final String path, @NotNull final AsyncCallback<TreeNode<?>> callback) {
        getRootNodes(new AsyncCallback<List<TreeNode<?>>>() {
            @Override
            public void onSuccess(List<TreeNode<?>> result) {
                ProjectNode project = null;
                for (TreeNode<?> node : result) {
                    if (node instanceof ProjectNode) {
                        project = (ProjectNode)node;
                        break;
                    }
                }

                if (project == null) {
                    callback.onFailure(new IllegalStateException("ProjectNode not found"));
                    return;
                }

                String p = path;
                if (path.startsWith("/")) {
                    p = path.substring(1);
                }
                getNodeByPathRecursively(project, p, project.getId().length() + 1, callback);
            }

            @Override
            public void onFailure(Throwable caught) {
                callback.onFailure(caught);
            }
        });
    }

