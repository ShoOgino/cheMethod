    /** {@inheritDoc} */
    @Override
    public Promise<List<RecipeDescriptor>> searchRecipes(@NotNull final List<String> tags,
                                                         @Nullable final String type,
                                                         final int skipCount,
                                                         final int maxItems) {
        return newPromise(new RequestCall<List<RecipeDescriptor>>() {
            @Override
            public void makeCall(AsyncCallback<List<RecipeDescriptor>> callback) {
                searchRecipes(tags, type, skipCount, maxItems, callback);
            }
        }).then(new Function<List<RecipeDescriptor>, List<RecipeDescriptor>>() {
            @Override
            public List<RecipeDescriptor> apply(List<RecipeDescriptor> arg) throws FunctionException {
                final ArrayList<RecipeDescriptor> descriptors = new ArrayList<>();
                for (RecipeDescriptor descriptor : arg) {
                    descriptors.add(descriptor);
                }
                return descriptors;
            }
        });
    }

