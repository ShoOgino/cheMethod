    @Override
    public void saveDocument(final EditorInput editorInput, @NotNull final Document document,
                             final boolean overwrite, @NotNull final AsyncCallback<EditorInput> callback) {
        final VirtualFile file = editorInput.getFile();

        file.updateContent(document.getContents()).then(new Operation<Void>() {
            @Override
            public void apply(Void arg) throws OperationException {
                Log.debug(DocumentStorageImpl.class, "Document saved (" + file.getPath() + ").");
                DocumentStorageImpl.this.eventBus.fireEvent(new FileEvent(file, FileEvent.FileOperation.SAVE));
                try {
                    callback.onSuccess(editorInput);
                } catch (final Exception e) {
                    Log.warn(DocumentStorageImpl.class, "Exception during save success callback: ", e);
                }
            }
        }).catchError(new Operation<PromiseError>() {
            @Override
            public void apply(PromiseError arg) throws OperationException {
                Log.error(DocumentStorageImpl.class, "Document save failed (" + file.getPath() + ").", arg.getCause());
                try {
                    callback.onFailure(arg.getCause());
                } catch (final Exception e) {
                    Log.warn(DocumentStorageImpl.class, "Exception during save failure callback: ", e);
                }
            }
        });
    }

