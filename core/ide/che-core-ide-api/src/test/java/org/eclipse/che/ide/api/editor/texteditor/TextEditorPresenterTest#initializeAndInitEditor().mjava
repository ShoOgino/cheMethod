    /**
     * This method initialize TextEditorPresenter for testing
     * @throws EditorInitException
     */
    public void initializeAndInitEditor() throws EditorInitException {
        reset(Scheduler.get());
        ArgumentCaptor<EditorInitCallback> callBackCaptor = ArgumentCaptor.forClass(EditorInitCallback.class);
        ArgumentCaptor<WidgetInitializedCallback> widgetInitializedCallbackCaptor =
                ArgumentCaptor.forClass(WidgetInitializedCallback.class);
        final EditorAgent.OpenEditorCallback editorCallback = mock(EditorAgent.OpenEditorCallback.class);

        doReturn(loader).when(loaderFactory).newLoader();
        doReturn(editorWidget).when(editorWidgetFactory).createEditorWidget(Matchers.<List<String>>anyObject(),
                                                                            Matchers.<WidgetInitializedCallback>anyObject());
        doReturn(document).when(editorWidget).getDocument();

        textEditorPresenter.injectAsyncLoader(loaderFactory);
        textEditorPresenter.initialize(configuration);
        textEditorPresenter.init(editorInput, editorCallback);

        verify(documentStorage).getDocument(any(VirtualFile.class), callBackCaptor.capture());

        EditorInitCallback editorInitCallBack = callBackCaptor.getValue();
        editorInitCallBack.onReady("test");

        verify(editorWidgetFactory).createEditorWidget(anyListOf(String.class), widgetInitializedCallbackCaptor.capture());
        WidgetInitializedCallback callback = widgetInitializedCallbackCaptor.getValue();
        callback.initialized(editorWidget);
    }

