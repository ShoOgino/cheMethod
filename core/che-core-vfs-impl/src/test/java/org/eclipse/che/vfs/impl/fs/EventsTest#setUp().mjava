    @Override
    public void setUp() throws Exception {
        super.setUp();
        folderPath = createDirectory(testRootPath, folderName);
        filePath = createFile(testRootPath, fileName, DEFAULT_CONTENT_BYTES);
        Map<String, String[]> fileProperties = new HashMap<>(1);
        fileProperties.put("vfs:mimeType", new String[]{MediaType.TEXT_PLAIN});
        writeProperties(filePath, fileProperties);
        destinationFolderPath = createDirectory(testRootPath, "EventsTest_DestinationFolder");
        folderId = pathToId(folderPath);
        fileId = pathToId(filePath);
        destinationFolderId = pathToId(destinationFolderPath);
        events = new ArrayList<>();
        mountPoint.getEventService().subscribe(new EventSubscriber<CreateEvent>() {
            @Override
            public void onEvent(CreateEvent event) {
                events.add(event);
            }
        });
        mountPoint.getEventService().subscribe(new EventSubscriber<MoveEvent>() {
            @Override
            public void onEvent(MoveEvent event) {
                events.add(event);
            }
        });
        mountPoint.getEventService().subscribe(new EventSubscriber<RenameEvent>() {
            @Override
            public void onEvent(RenameEvent event) {
                events.add(event);
            }
        });
        mountPoint.getEventService().subscribe(new EventSubscriber<DeleteEvent>() {
            @Override
            public void onEvent(DeleteEvent event) {
                events.add(event);
            }
        });
        mountPoint.getEventService().subscribe(new EventSubscriber<UpdateContentEvent>() {
            @Override
            public void onEvent(UpdateContentEvent event) {
                events.add(event);
            }
        });
        mountPoint.getEventService().subscribe(new EventSubscriber<UpdatePropertiesEvent>() {
            @Override
            public void onEvent(UpdatePropertiesEvent event) {
                events.add(event);
            }
        });
        mountPoint.getEventService().subscribe(new EventSubscriber<UpdateACLEvent>() {
            @Override
            public void onEvent(UpdateACLEvent event) {
                events.add(event);
            }
        });
    }

