        @Override
        protected Map<String, String[]> loadValue(Path key) {
            DataInputStream dis = null;
            try {
                final Path metadataFilePath = getMetadataFilePath(key);
                java.io.File metadataIoFile = new java.io.File(ioRoot, toIoPath(metadataFilePath));
                if (metadataIoFile.exists()) {
                    final PathLockFactory.PathLock metadataFilePathLock =
                            pathLockFactory.getLock(metadataFilePath, false).acquire(LOCK_FILE_TIMEOUT);
                    try {
                        dis = new DataInputStream(new BufferedInputStream(new FileInputStream(metadataIoFile)));
                        return metadataSerializer.read(dis);
                    } finally {
                        metadataFilePathLock.release();
                    }
                }
                return Collections.emptyMap();
            } catch (IOException e) {
                String msg = String.format("Unable read properties for '%s'. ", key);
                LOG.error(msg + e.getMessage(), e); // More details in log but do not show internal error to caller.
                throw new RuntimeException(msg);
            } finally {
                closeQuietly(dis);
            }
        }

