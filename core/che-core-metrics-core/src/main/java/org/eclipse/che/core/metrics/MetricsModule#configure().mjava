  @Override
  protected void configure() {
    bind(MetricsServer.class).asEagerSingleton();
    bind(MetricsBinder.class).asEagerSingleton();
    bind(CollectorRegistry.class).toInstance(CollectorRegistry.defaultRegistry);
    bind(PrometheusMeterRegistry.class)
        .toProvider(PrometheusMeterRegistryProvider.class)
        .asEagerSingleton();
    bind(MeterRegistry.class).to(PrometheusMeterRegistry.class);

    Multibinder<MeterBinder> meterMultibinder =
        Multibinder.newSetBinder(binder(), MeterBinder.class);
    meterMultibinder.addBinding().to(ClassLoaderMetrics.class);
    meterMultibinder.addBinding().to(JvmMemoryMetrics.class);
    meterMultibinder.addBinding().to(JvmGcMetrics.class);
    meterMultibinder.addBinding().to(JvmThreadMetrics.class);
    meterMultibinder.addBinding().to(LogbackMetrics.class);
    meterMultibinder.addBinding().to(FileDescriptorMetrics.class);
    meterMultibinder.addBinding().to(ProcessorMetrics.class);
    meterMultibinder.addBinding().to(UptimeMetrics.class);
    meterMultibinder.addBinding().to(FileStoresMeterBinder.class);
    meterMultibinder.addBinding().to(ApiResponseCounter.class);
    meterMultibinder.addBinding().to(ProcessMemoryMetrics.class);
    meterMultibinder.addBinding().to(ProcessThreadMetrics.class);

    bind(EventListener.class).toProvider(OkHttpMetricsEventListenerProvider.class);
  }

