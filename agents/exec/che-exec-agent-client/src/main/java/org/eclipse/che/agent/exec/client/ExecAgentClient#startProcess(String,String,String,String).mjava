  /**
   * Starts a process within a given command.
   *
   * @param workspaceId workspace to run command
   * @param command command to execute
   * @param name command name
   * @param type command type
   * @return start process response DTO
   * @throws ServerException when submit of the process is failed
   */
  public ProcessStartResponseDto startProcess(
      String workspaceId, String command, String name, String type) throws ServerException {
    ProcessStartRequestDto commandDto =
        newDto(ProcessStartRequestDto.class).withCommandLine(command).withName(name).withType(type);
    try {
      return requestFactory
          .fromUrl(serverEndpoint)
          .addQueryParam("token", machineTokenProvider.getToken(workspaceId))
          .setAuthorizationHeader("none") // to prevent sending KC token
          .usePostMethod()
          .setBody(commandDto)
          .request()
          .asDto(ProcessStartResponseDto.class);
    } catch (IOException | ApiException | MachineTokenException e) {
      throw new ServerException(e);
    }
  }

