  /**
   * Gets information about started process.
   *
   * @param workspaceId workspace to get process
   * @param pid pid of started process
   * @return process response DTO
   * @throws ServerException when get of the process is failed
   */
  public GetProcessResponseDto getProcess(String workspaceId, int pid) throws ServerException {
    try {
      return requestFactory
          .fromUrl(serverEndpoint + "/" + pid)
          .addQueryParam("token", machineTokenProvider.getToken(workspaceId))
          .setAuthorizationHeader("none") // to prevent sending KC token
          .useGetMethod()
          .request()
          .asDto(GetProcessResponseDto.class);
    } catch (IOException | ApiException | MachineTokenException e) {
      throw new ServerException(e);
    }
  }

