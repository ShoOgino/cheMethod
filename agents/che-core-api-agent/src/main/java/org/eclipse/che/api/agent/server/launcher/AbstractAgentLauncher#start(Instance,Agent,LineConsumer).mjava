    protected InstanceProcess start(Instance machine, Agent agent, LineConsumer lineConsumer) throws ServerException {
        Command command = new CommandImpl(agent.getId(), agent.getScript(), "agent");
        InstanceProcess process = machine.createProcess(command, null);

        CountDownLatch countDownLatch = new CountDownLatch(1);
        executor.execute(ThreadLocalPropagateContext.wrap(() -> {
            try {
                countDownLatch.countDown();
                process.start(lineConsumer);
            } catch (ConflictException | MachineException e) {
                try {
                    machine.getLogger().writeLine(format("[ERROR] %s", e.getMessage()));
                } catch (IOException ignored) {
                }
            }
        }));
        try {
            // ensure that code inside of task submitted to executor is called before end of this method
            countDownLatch.await();
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }

        return process;
    }

