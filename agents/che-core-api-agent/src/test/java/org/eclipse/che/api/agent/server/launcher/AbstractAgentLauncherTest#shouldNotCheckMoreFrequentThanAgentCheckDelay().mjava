    @Test
    public void shouldNotCheckMoreFrequentThanAgentCheckDelay() throws Exception {
        // given
        launcher = spy(new TestAgentLauncher(200, 10, agentChecker));
        doReturn(process).when(launcher).start(any(Instance.class), any(Agent.class), any(LineConsumer.class));
        // record time of each check of agent state
        ArrayList<Long> checkTimestamps = new ArrayList<>(5);
        Answer<Boolean> recordTimestampAndReturnFalse = invocationOnMock -> {
            checkTimestamps.add(System.currentTimeMillis());
            return false;
        };
        Answer<Boolean> recordTimestampAndReturnTrue = invocationOnMock -> {
            checkTimestamps.add(System.currentTimeMillis());
            return true;
        };
        when(agentChecker.isLaunched(any(Agent.class),
                                     any(InstanceProcess.class),
                                     any(Instance.class))).thenAnswer(recordTimestampAndReturnFalse)
                                                          .thenAnswer(recordTimestampAndReturnFalse)
                                                          .thenAnswer(recordTimestampAndReturnFalse)
                                                          .thenAnswer(recordTimestampAndReturnFalse)
                                                          .thenAnswer(recordTimestampAndReturnTrue);

        // when
        launcher.launch(machine, agent);

        // then
        // ensure that each check was done after required timeout
        for (int i = 1; i < checkTimestamps.size(); i++) {
            assertTrue(checkTimestamps.get(i) - checkTimestamps.get(i - 1) >= 10);
        }
    }

