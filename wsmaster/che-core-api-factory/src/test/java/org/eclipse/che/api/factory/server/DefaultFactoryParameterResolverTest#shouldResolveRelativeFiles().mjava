  @Test
  public void shouldResolveRelativeFiles() throws Exception {
    // given

    // we need to set up an "almost real" devfile converter which is a little bit involved
    DevfileSchemaValidator validator = new DevfileSchemaValidator(new DevfileSchemaProvider());
    DevfileIntegrityValidator integrityValidator =
        new DevfileIntegrityValidator(kubernetesRecipeParser);
    Set<ComponentProvisioner> componentProvisioners = new HashSet<>();
    Map<String, ComponentToWorkspaceApplier> appliers = new HashMap<>();
    ComponentToWorkspaceApplier applier = mock(ComponentToWorkspaceApplier.class);
    appliers.put("kubernetes", applier);

    doAnswer(
            i -> {
              // in here we mock that the component applier requests the contents of the referenced
              // local file. That's all we need to happen
              FileContentProvider p = i.getArgument(2);
              Component component = i.getArgument(1);
              p.fetchContent(component.getLocal());
              return null;
            })
        .when(applier)
        .apply(any(), any(), any());

    DevfileConverter devfileConverter =
        new DevfileConverter(
            new ProjectConverter(),
            new CommandConverter(),
            componentProvisioners,
            appliers,
            new DefaultEditorProvisioner(null, new String[] {}));

    WorkspaceManager workspaceManager = mock(WorkspaceManager.class);

    DevfileManager devfileManager =
        new DevfileManager(validator, integrityValidator, devfileConverter, workspaceManager);

    URLFactoryBuilder factoryBuilder =
        new URLFactoryBuilder("editor", "plugin", urlFetcher, devfileManager);

    DefaultFactoryParameterResolver res =
        new DefaultFactoryParameterResolver(factoryBuilder, urlFetcher);

    // set up our factory with the location of our devfile that is referencing our localfile
    Map<String, String> factoryParameters = new HashMap<>();
    factoryParameters.put(URL_PARAMETER_NAME, "scheme:/myloc/devfile");
    doReturn(DEVFILE).when(urlFetcher).fetchSafely(eq("scheme:/myloc/devfile"));
    doReturn("localfile").when(urlFetcher).fetch("scheme:/localfile");
    doReturn(
            singletonList(
                new PodBuilder()
                    .withNewMetadata()
                    .withName("pod")
                    .endMetadata()
                    .withNewSpec()
                    .addNewContainer()
                    .withImage("image")
                    .endContainer()
                    .endSpec()
                    .build()))
        .when(kubernetesRecipeParser)
        .parse("localfile");

    // when
    res.createFactory(factoryParameters);

    // then
    verify(urlFetcher).fetch(eq("scheme:/localfile"));
  }

