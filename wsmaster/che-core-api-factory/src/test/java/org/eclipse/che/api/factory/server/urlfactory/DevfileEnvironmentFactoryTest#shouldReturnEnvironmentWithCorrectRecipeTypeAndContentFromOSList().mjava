  @Test
  public void shouldReturnEnvironmentWithCorrectRecipeTypeAndContentFromOSList() throws Exception {
    final String content = "apiVersion: v1\n kind: List";
    Tool tool =
        new Tool().withType(OPENSHIFT_TOOL_TYPE).withLocal(LOCAL_FILENAME).withName(TOOL_NAME);
    Devfile devfile = new Devfile();
    devfile.setTools(singletonList(tool));
    when(urlFetcher.fetch(anyString())).thenReturn(content);

    Optional<Pair<String, EnvironmentImpl>> result =
        provisioner.create(devfile, s -> "http://foo.bar/local.yaml");

    assertTrue(result.isPresent());
    assertEquals(result.get().first, TOOL_NAME);
    RecipeImpl recipe = result.get().second.getRecipe();
    assertNotNull(recipe);
    assertEquals(recipe.getType(), OPENSHIFT_TOOL_TYPE);
    assertEquals(recipe.getContentType(), DEFAULT_RECIPE_CONTENT_TYPE);
    assertEquals(recipe.getContent(), content);
  }

