  @Test
  public void checkWithCustomDevfileAndRecipe() throws Exception {

    Devfile devfile = new Devfile();
    WorkspaceConfigImpl workspaceConfigImpl = new WorkspaceConfigImpl();
    String myLocation = "http://foo-location/";
    RecipeImpl expectedRecipe =
        new RecipeImpl(KUBERNETES_TOOL_TYPE, "application/x-yaml", "content", "");
    EnvironmentImpl expectedEnv = new EnvironmentImpl(expectedRecipe, emptyMap());

    when(urlFetcher.fetch(anyString())).thenReturn("random_content");
    when(devfileManager.parse(anyString(), anyBoolean())).thenReturn(devfile);
    when(devfileManager.createWorkspaceConfig(any(Devfile.class))).thenReturn(workspaceConfigImpl);

    when(environmentFactory.create(any(Devfile.class), any()))
        .thenReturn(Optional.of(new Pair<>("name", expectedEnv)));

    FactoryDto factory =
        urlFactoryBuilder.createFactoryFromDevfile(myLocation, s -> myLocation + ".list").get();

    WorkspaceConfigDto expectedWorkspaceConfig = asDto(workspaceConfigImpl);
    expectedWorkspaceConfig.setDefaultEnv("name");
    expectedWorkspaceConfig.setEnvironments(singletonMap("name", asDto(expectedEnv)));
    assertEquals(factory.getWorkspace(), expectedWorkspaceConfig);
  }

