    @Override
    @Transactional
    public List<FactoryImpl> getByAttribute(int maxItems,
                                            int skipCount,
                                            List<Pair<String, String>> attributes) throws ServerException {
        try {
            LOG.info("FactoryDao#getByAttributes #maxItems: {} #skipCount: {}, #attributes: {}", maxItems, skipCount, attributes);
            final Map<String, String> params = new HashMap<>();
            String query = "SELECT factory FROM Factory factory";
            if (!attributes.isEmpty()) {
                final StringJoiner matcher = new StringJoiner(" AND ", " WHERE ", " ");
                int i = 0;
                for (Pair<String, String> attribute : attributes) {
                    final String parameterName = "parameterName" + i++;
                    params.put(parameterName, attribute.second);
                    matcher.add("factory." + attribute.first + " = :" + parameterName);
                }
                query = query + matcher;
            }
            final TypedQuery<FactoryImpl> typedQuery = managerProvider.get()
                                                                      .createQuery(query, FactoryImpl.class)
                                                                      .setFirstResult(skipCount)
                                                                      .setMaxResults(maxItems);
            for (Map.Entry<String, String> entry : params.entrySet()) {
                typedQuery.setParameter(entry.getKey(), entry.getValue());
            }
            return typedQuery.getResultList()
                             .stream()
                             .map(FactoryImpl::new)
                             .collect(Collectors.toList());
        } catch (RuntimeException ex) {
            throw new ServerException(ex.getLocalizedMessage(), ex);
        }
    }

