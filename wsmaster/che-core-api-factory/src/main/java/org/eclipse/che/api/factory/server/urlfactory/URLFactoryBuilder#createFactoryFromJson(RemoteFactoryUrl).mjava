  /**
   * Build a factory using the provided json file or create default one
   *
   * @param remoteFactoryUrl parsed factory URL object
   * @return a factory or null if factory json in not found
   */
  public Optional<FactoryDto> createFactoryFromJson(RemoteFactoryUrl remoteFactoryUrl) {
    // Check if there is factory json file inside the repository
    if (remoteFactoryUrl.factoryFileLocation() != null) {
      final String factoryJsonContent =
          urlFetcher.fetchSafely(remoteFactoryUrl.factoryFileLocation());
      if (!isNullOrEmpty(factoryJsonContent)) {
        FactoryDto factoryDto =
            DtoFactory.getInstance()
                .createDtoFromJson(factoryJsonContent, FactoryDto.class)
                .withSource(remoteFactoryUrl.getFactoryFilename());
        return Optional.of(factoryDto);
      }
    }
    return Optional.empty();
  }

