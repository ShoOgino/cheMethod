    /**
     * Validates source parameter of factory.
     *
     * @param factory
     *         factory to validate
     * @throws BadRequestException
     *         when source projects in the factory is invalid
     */
    protected void validateProjects(FactoryDto factory) throws BadRequestException {
        for (ProjectConfigDto project : factory.getWorkspace().getProjects()) {
            final String projectName = project.getName();
            if (null != projectName && !PROJECT_NAME_VALIDATOR.matcher(projectName)
                                                              .matches()) {
                throw new BadRequestException("Project name must contain only Latin letters, " +
                                              "digits or these following special characters -._.");
            }

            if (project.getPath().indexOf('/', 1) == -1) {

                final String location = project.getSource().getLocation();
                final String parameterLocationName = "project.source.location";

                if (isNullOrEmpty(location)) {
                    throw new BadRequestException(format(FactoryConstants.PARAMETRIZED_ILLEGAL_PARAMETER_VALUE_MESSAGE,
                                                         parameterLocationName,
                                                         location));
                }

                try {
                    URLDecoder.decode(location, "UTF-8");
                } catch (IllegalArgumentException | UnsupportedEncodingException e) {
                    throw new BadRequestException(format(FactoryConstants.PARAMETRIZED_ILLEGAL_PARAMETER_VALUE_MESSAGE,
                                                         parameterLocationName,
                                                         location));
                }
            }
        }
    }

