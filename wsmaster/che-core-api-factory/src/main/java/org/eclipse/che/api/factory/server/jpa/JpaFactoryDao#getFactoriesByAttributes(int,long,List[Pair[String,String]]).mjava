  private List<FactoryImpl> getFactoriesByAttributes(
      int maxItems, long skipCount, List<Pair<String, String>> attributes) {
    final Map<String, String> params = new HashMap<>();
    StringBuilder query = new StringBuilder("SELECT factory FROM Factory factory");
    if (!attributes.isEmpty()) {
      final StringJoiner matcher = new StringJoiner(" AND ", " WHERE ", " ");
      int i = 0;
      for (Pair<String, String> attribute : attributes) {
        final String parameterName = "parameterName" + i++;
        params.put(parameterName, attribute.second);
        matcher.add("factory." + attribute.first + " = :" + parameterName);
      }
      query.append(matcher);
    }
    TypedQuery<FactoryImpl> typedQuery =
        managerProvider
            .get()
            .createQuery(query.toString(), FactoryImpl.class)
            .setFirstResult((int) skipCount)
            .setMaxResults(maxItems);
    for (Map.Entry<String, String> entry : params.entrySet()) {
      typedQuery.setParameter(entry.getKey(), entry.getValue());
    }
    return typedQuery.getResultList().stream().map(FactoryImpl::new).collect(toList());
  }

