    /**
     * Validates IDE actions
     *
     * @param factory
     *         factory to validate
     * @throws BadRequestException
     *         when factory actions is invalid
     */
    protected void validateProjectActions(Factory factory) throws BadRequestException {
        final Ide ide = factory.getIde();
        if (ide == null) {
            return;
        }

        final List<Action> applicationActions = new ArrayList<>();
        if (ide.getOnAppClosed() != null) {
            applicationActions.addAll(ide.getOnAppClosed().getActions());
        }
        if (ide.getOnAppLoaded() != null) {
            applicationActions.addAll(ide.getOnAppLoaded().getActions());
        }

        for (Action applicationAction : applicationActions) {
            String id = applicationAction.getId();
            if ("openFile".equals(id) || "findReplace".equals(id) || "runCommand".equals(id)) {
                throw new BadRequestException(format(FactoryConstants.INVALID_ACTION_SECTION, id));
            }
        }

        final OnAppLoaded onAppLoaded = ide.getOnAppLoaded();
        if (onAppLoaded != null) {
            for (Action action : onAppLoaded.getActions()) {
                final Map<String, String> properties = action.getProperties();
                if ("openWelcomePage".equals(action.getId()) && isNullOrEmpty(properties.get("greetingContentUrl"))) {
                    throw new BadRequestException(FactoryConstants.INVALID_WELCOME_PAGE_ACTION);
                }
            }
        }

        final OnProjectsLoaded onLoaded = ide.getOnProjectsLoaded();
        if (onLoaded != null) {
            final List<Action> onProjectOpenedActions = onLoaded.getActions();
            for (Action applicationAction : onProjectOpenedActions) {
                final String id = applicationAction.getId();
                final Map<String, String> properties = applicationAction.getProperties();

                switch (id) {
                    case "openFile":
                        if (isNullOrEmpty(properties.get("file"))) {
                            throw new BadRequestException(FactoryConstants.INVALID_OPENFILE_ACTION);
                        }
                        break;
                        
                    case "runCommand":
                        if (isNullOrEmpty(properties.get("name"))) {
                            throw new BadRequestException(FactoryConstants.INVALID_RUNCOMMAND_ACTION);
                        }
                        break;

                    case "findReplace":
                        if (isNullOrEmpty(properties.get("in")) ||
                            isNullOrEmpty(properties.get("find")) ||
                            isNullOrEmpty(properties.get("replace"))) {
                            throw new BadRequestException(FactoryConstants.INVALID_FIND_REPLACE_ACTION);
                        }
                        break;
                }
            }
        }
    }

