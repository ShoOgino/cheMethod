    @POST
    @Consumes(APPLICATION_JSON)
    @Produces(APPLICATION_JSON)
    @ApiOperation(value = "Create a new factory based on configuration")
    @ApiResponses({@ApiResponse(code = 200, message = "Factory successfully created"),
                   @ApiResponse(code = 400, message = "Missed required parameters, parameters are not valid"),
                   @ApiResponse(code = 403, message = "User does not have rights to create factory"),
                   @ApiResponse(code = 409, message = "When factory with given name and creator already exists"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public FactoryDto saveFactory(FactoryDto factory) throws BadRequestException,
                                                             ServerException,
                                                             ForbiddenException,
                                                             ConflictException,
                                                             NotFoundException {
        requiredNotNull(factory, "Factory configuration");
        factoryBuilder.checkValid(factory);
        processDefaults(factory);
        AddExecAgentInEnvironmentUtil.addExecAgent(factory.getWorkspace());
        createValidator.validateOnCreate(factory);
        return injectLinks(asDto(factoryManager.saveFactory(factory)));
    }

