    /**
     * Gets factory snippet by factory id and snippet type.
     * If snippet type is not set, "url" type will be used as default.
     *
     * @param factoryId
     *         id of factory
     * @param snippetType
     *         type of snippet
     * @param baseUri
     *         URI from which will be created snippet
     * @return snippet content or null when snippet type not found.
     * @throws NotFoundException
     *         when factory with specified id doesn't not found
     * @throws ServerException
     *         when any server error occurs during snippet creation
     */
    public String getFactorySnippet(String factoryId,
                                    String snippetType,
                                    URI baseUri) throws NotFoundException,
                                                        ServerException {
        requireNonNull(factoryId);
        final String baseUrl = UriBuilder.fromUri(baseUri)
                                         .replacePath("")
                                         .build()
                                         .toString();
        switch (firstNonNull(snippetType, URL_SNIPPET_TYPE)) {
            case URL_SNIPPET_TYPE:
                return UriBuilder.fromUri(baseUri)
                                 .replacePath("factory")
                                 .queryParam("id", factoryId)
                                 .build()
                                 .toString();
            case HTML_SNIPPET_TYPE:
                return SnippetGenerator.generateHtmlSnippet(baseUrl, factoryId);
            case IFRAME_SNIPPET_TYPE:
                return SnippetGenerator.generateiFrameSnippet(baseUrl, factoryId);
            case MARKDOWN_SNIPPET_TYPE:
                final Set<FactoryImage> images = getFactoryImages(factoryId);
                final String imageId = (images.size() > 0) ? images.iterator().next().getName()
                                                           : null;
                try {
                    return SnippetGenerator.generateMarkdownSnippet(baseUrl, getById(factoryId), imageId);
                } catch (IllegalArgumentException e) {
                    throw new ServerException(e.getLocalizedMessage());
                }
            default:
                // when the specified type is not supported
                return null;
        }
    }

