  @GET
  @Path("/{id}")
  @Produces(APPLICATION_JSON)
  @ApiOperation(
      value = "Get factory by its identifier",
      notes = "If validate parameter is not specified, retrieved factory wont be validated")
  @ApiResponses({
    @ApiResponse(code = 200, message = "Response contains requested factory entry"),
    @ApiResponse(code = 400, message = "Missed required parameters, failed to validate factory"),
    @ApiResponse(code = 404, message = "Factory with specified identifier does not exist"),
    @ApiResponse(code = 500, message = "Internal server error occurred")
  })
  public FactoryDto getFactory(
      @ApiParam(value = "Factory identifier") @PathParam("id") String factoryId,
      @ApiParam(
              value =
                  "Whether or not to validate values like it is done when accepting the factory",
              allowableValues = "true, false",
              defaultValue = "false")
          @DefaultValue("false")
          @QueryParam("validate")
          Boolean validate)
      throws BadRequestException, NotFoundException, ServerException {
    final FactoryDto factoryDto = asDto(factoryManager.getById(factoryId));
    if (validate) {
      acceptValidator.validateOnAccept(factoryDto);
    }
    return injectLinks(factoryDto);
  }

