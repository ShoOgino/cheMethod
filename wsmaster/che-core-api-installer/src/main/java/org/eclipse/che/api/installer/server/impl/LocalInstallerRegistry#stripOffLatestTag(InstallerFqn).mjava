  private InstallerFqn stripOffLatestTag(InstallerFqn installerFqn) throws InstallerException {
    if (!installerFqn.hasLatestTag()) {
      return installerFqn;
    }

    Optional<ComparableVersion> latestVersion =
        getVersions(installerFqn.getId())
            .stream()
            .map(
                v -> {
                  try {
                    return new ComparableVersion(v);
                  } catch (Exception e) {
                    LOG.error(
                        format(
                            "Invalid version '%s' for installer '%s'. Skipped.",
                            installerFqn.getId(), v));
                    return null;
                  }
                })
            .filter(Objects::nonNull)
            .max(ComparableVersion::compareTo);

    if (!latestVersion.isPresent()) {
      throw new InstallerNotFoundException(
          format("No installer '%s' found of the latest version", installerFqn.getId()));
    }

    return new InstallerFqn(installerFqn.getId(), latestVersion.get().toString());
  }

