    @POST
    @Produces(APPLICATION_JSON)
    @ApiOperation(value = "Order the specified installers", response = Installer.class, responseContainer = "list")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains the list of ordered installers"),
                   @ApiResponse(code = 400, message = "Specified list contains invalid installer key"),
                   @ApiResponse(code = 404, message = "Specified list contains unavailable installer"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public List<InstallerDto> getOrderedInstallers(List<String> keys) throws BadRequestException,
                                                                             NotFoundException,
                                                                             ServerException {
        try {
            return installerRegistry.getOrderedInstallers(keys)
                                    .stream()
                                    .map(DtoConverter::asDto)
                                    .collect(Collectors.toList());
        } catch (IllegalInstallerKey e) {
            throw new BadRequestException(e.getMessage());
        } catch (InstallerNotFoundException e) {
            throw new NotFoundException(e.getMessage());
        } catch (InstallerException e) {
            throw new ServerException(e.getMessage(), e);
        }
    }

