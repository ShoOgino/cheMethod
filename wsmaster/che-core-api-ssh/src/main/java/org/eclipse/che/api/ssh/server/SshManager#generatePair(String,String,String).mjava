    /**
     * Generates and stores ssh pair for specified user.
     *
     * @param owner
     *         the id of the user who will be the owner of the ssh pair
     * @param service
     *         service name pf ssh pair
     * @param name
     *         name of pair
     * @return instance of generated ssh pair
     * @throws ConflictException
     *         when given ssh pair cannot be generated or created
     * @throws ServerException
     *         when any other error occurs during ssh pair generating or creating
     */
    public SshPairImpl generatePair(String owner, String service, String name) throws ServerException, ConflictException {
        KeyPair keyPair;
        try {
            keyPair = KeyPair.genKeyPair(genJSch, 2, 2048);
        } catch (JSchException e) {
            throw new ServerException("Failed to generate ssh pair.", e);
        }

        ByteArrayOutputStream privateBuff = new ByteArrayOutputStream();
        keyPair.writePrivateKey(privateBuff);

        ByteArrayOutputStream publicBuff = new ByteArrayOutputStream();
        keyPair.writePublicKey(publicBuff, null);

        final SshPairImpl generatedSshPair = new SshPairImpl(service,
                                                             name,
                                                             publicBuff.toString(),
                                                             privateBuff.toString());
        sshDao.create(owner, generatedSshPair);
        return generatedSshPair;
    }

