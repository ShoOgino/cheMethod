    private void doSort(List<String> agentKeys, AgentKey agentKey, List<AgentKey> sorted, Set<String> pending) throws AgentException {
        String agentName = agentKey.getName();

        Optional<AgentKey> alreadySorted = sorted.stream().filter(k -> k.getName().equals(agentName)).findFirst();
        if (alreadySorted.isPresent()) {
            return;
        }

        if (!pending.add(agentName)) {
            throw new AgentException("Agents circular dependency found.");
        }

        Agent agent = agentRegistry.getAgent(agentKey);

        for (String dependency : agent.getDependencies()) {
            if (agentKeys.contains(dependency)) {
                doSort(agentKeys, AgentKeyImpl.parse(dependency), sorted, pending);
            }
        }

        sorted.add(agentKey);
        pending.remove(agentName);
    }

