    @BeforeMethod
    public void setUp(ITestContext context) throws Exception {
        agentRegistry = new AgentRegistryImpl(urlProvider, new DefaultHttpJsonRequestFactory());

        final Object port = context.getAttribute(EverrestJetty.JETTY_PORT);
        when(urlProvider.getAgentUrl(any(AgentKey.class))).thenAnswer(new Answer<URL>() {
            @Override
            public URL answer(InvocationOnMock invocation) throws Throwable {
                AgentKey agentKey = (AgentKey)invocation.getArguments()[0];
                if (agentKey.getVersion() == null) {
                    return new URL("http://localhost:" + port + "/rest/registry/agent/" + agentKey.getName());
                } else {
                    return new URL("http://localhost:" + port + "/rest/registry/agent/" + agentKey.getName() + "/" + agentKey.getVersion());
                }
            }
        });
        when(urlProvider.getAgentVersionsUrl(anyString())).thenAnswer(new Answer<URL>() {
            @Override
            public URL answer(InvocationOnMock invocation) throws Throwable {
                String name = (String)invocation.getArguments()[0];
                return new URL("http://localhost:" + port + "/rest/registry/updates/" + name);
            }
        });

        service = new RegistryService();
    }

