    @Test(dependsOnMethods = "shouldThrowNotFoundExceptionWhenGettingNonExistingUserById",
          expectedExceptions = NotFoundException.class)
    public void shouldNotCreateUserWhenSubscriberThrowsExceptionOnUserStoring() throws Exception {
        final UserImpl newUser = new UserImpl("user123",
                                              "user123@eclipse.org",
                                              "user_name",
                                              "password",
                                              asList("google:user123", "github:user123"));
        CascadeEventSubscriber<PostUserPersistedEvent> subscriber = mockCascadeEventSubscriber();
        doThrow(new ConflictException("error")).when(subscriber).onCascadeEvent(any());
        eventService.subscribe(subscriber, PostUserPersistedEvent.class);

        try {
            userDao.create(newUser);
            fail("UserDao#create had to throw conflict exception");
        } catch (ConflictException ignored) {
        }

        eventService.unsubscribe(subscriber, PostUserPersistedEvent.class);
        userDao.getById(newUser.getId());
    }

