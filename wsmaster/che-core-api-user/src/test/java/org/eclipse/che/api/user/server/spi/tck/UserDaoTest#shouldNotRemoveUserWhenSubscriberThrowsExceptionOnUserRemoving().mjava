    @Test(dependsOnMethods = "shouldGetUserById")
    public void shouldNotRemoveUserWhenSubscriberThrowsExceptionOnUserRemoving() throws Exception {
        final UserImpl user = users[0];
        CascadeEventSubscriber<BeforeUserRemovedEvent> subscriber = mockCascadeEventSubscriber();
        doThrow(new ServerException("error")).when(subscriber).onCascadeEvent(any());
        eventService.subscribe(subscriber, BeforeUserRemovedEvent.class);

        try {
            userDao.remove(user.getId());
            fail("UserDao#remove had to throw server exception");
        } catch (ServerException ignored) {
        }

        assertEqualsNoPassword(userDao.getById(user.getId()), user);
        eventService.unsubscribe(subscriber, BeforeUserRemovedEvent.class);
    }

