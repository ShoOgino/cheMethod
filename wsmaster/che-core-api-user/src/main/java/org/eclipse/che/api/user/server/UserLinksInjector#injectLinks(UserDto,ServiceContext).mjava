    public UserDto injectLinks(UserDto userDto, ServiceContext serviceContext) {
        final UriBuilder uriBuilder = serviceContext.getBaseUriBuilder();
        final List<Link> links = new ArrayList<>(6);
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone()
                                                   .path(UserService.class)
                                                   .path(UserService.class, "getById")
                                                   .build(userDto.getId())
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_SELF));
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone()
                                                   .path(UserService.class)
                                                   .path(UserService.class, "getCurrent")
                                                   .build()
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_CURRENT_USER));
        links.add(LinksHelper.createLink(HttpMethod.POST,
                                         uriBuilder.clone()
                                                   .path(UserService.class)
                                                   .path(UserService.class, "updatePassword")
                                                   .build()
                                                   .toString(),
                                         APPLICATION_FORM_URLENCODED,
                                         null,
                                         LINK_REL_CURRENT_USER_PASSWORD));
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone()
                                                   .path(ProfileService.class)
                                                   .path(ProfileService.class, "getById")
                                                   .build(userDto.getId())
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_PROFILE));
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone()
                                                   .path(UserService.class)
                                                   .path(UserService.class, "getSettings")
                                                   .build()
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_CURRENT_USER_SETTINGS));
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone().path(PreferencesService.class)
                                                   .path(PreferencesService.class, "find")
                                                   .build()
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_PREFERENCES));
        return userDto.withLinks(links);
    }

