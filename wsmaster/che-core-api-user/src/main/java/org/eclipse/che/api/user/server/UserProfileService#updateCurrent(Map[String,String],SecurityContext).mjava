    /**
     * Updates attributes of current user profile.
     *
     * @param updates
     *         attributes to update
     * @return descriptor of updated profile
     * @throws ServerException
     *         when some error occurred while retrieving/persisting profile
     * @see ProfileDescriptor
     */

    @POST
    @RolesAllowed("user")
    @GenerateLink(rel = LINK_REL_UPDATE_CURRENT_USER_PROFILE)
    @Consumes(APPLICATION_JSON)
    @Produces(APPLICATION_JSON)
    public ProfileDescriptor updateCurrent(@Description("attributes to update") Map<String, String> updates,
                                           @Context SecurityContext context) throws NotFoundException, ServerException, ConflictException {
        if (updates == null || updates.isEmpty()) {
            throw new ConflictException("Attributes to update required");
        }
        final User user = userDao.getById(currentUser().getUserId());
        final Profile profile = profileDao.getById(user.getId());
        profile.getAttributes().putAll(updates);
        profileDao.update(profile);
        logEventUserUpdateProfile(user, profile.getAttributes());
        return toDescriptor(profile, context);
    }

