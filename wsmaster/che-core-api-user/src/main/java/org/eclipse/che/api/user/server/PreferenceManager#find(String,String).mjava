  /**
   * Finds user's preferences.
   *
   * @param userId user id to find preferences
   * @param keyFilter regex which is used to filter preferences by keys, so result contains only the
   *     user's preferences that match {@code keyFilter} regex
   * @return found preferences filtered by {@code keyFilter} or an empty map if there are no
   *     preferences related to user
   * @throws NullPointerException when {@code userId} is null
   * @throws ServerException when any error occurs
   */
  public Map<String, String> find(String userId, String keyFilter) throws ServerException {
    requireNonNull(userId, "Required non-null user id");
    return preferenceDao.getPreferences(userId, keyFilter);
  }

