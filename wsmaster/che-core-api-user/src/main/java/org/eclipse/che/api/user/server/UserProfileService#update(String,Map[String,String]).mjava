    /**
     * Updates attributes of certain profile.
     *
     * @param profileId
     *         profile identifier
     * @param updates
     *         attributes to update
     * @return descriptor of updated profile
     * @throws NotFoundException
     *         when profile with given identifier doesn't exist
     * @throws ServerException
     *         when some error occurred while retrieving/updating profile
     * @see ProfileDescriptor
     * @see #getById(String)
     */

    @POST
    @Path("/{id}")
    @Consumes(APPLICATION_JSON)
    @Produces(APPLICATION_JSON)
    public ProfileDescriptor update(@PathParam("id") String profileId,
                                    Map<String, String> updates) throws NotFoundException, ServerException, ConflictException {
        if (updates == null || updates.isEmpty()) {
            throw new ConflictException("Attributes to update required");
        }
        final Profile profile = profileDao.getById(profileId);
        profile.getAttributes().putAll(updates);
        profileDao.update(profile);
        final User user = userDao.getById(profile.getUserId());
        logEventUserUpdateProfile(user, profile.getAttributes());
        return toDescriptor(profile);
    }

