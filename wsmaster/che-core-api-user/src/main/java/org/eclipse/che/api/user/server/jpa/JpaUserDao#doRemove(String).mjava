    @Transactional(rollbackOn = {RuntimeException.class, ServerException.class})
    protected Optional<UserImpl> doRemove(String id) throws ServerException {
        final EntityManager manager = managerProvider.get();
        final UserImpl user = manager.find(UserImpl.class, id);
        if (user == null) {
            return Optional.empty();
        }
        eventService.publish(new BeforeUserRemovedEvent(user)).propagateException();
        manager.remove(user);
        manager.flush();
        return Optional.of(user);
    }

