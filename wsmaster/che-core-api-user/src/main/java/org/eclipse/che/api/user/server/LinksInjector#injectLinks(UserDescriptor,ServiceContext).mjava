    public static UserDescriptor injectLinks(UserDescriptor userDescriptor, ServiceContext serviceContext) {
        final UriBuilder uriBuilder = serviceContext.getBaseUriBuilder();
        final List<Link> links = new LinkedList<>();
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone().path(UserProfileService.class)
                                                   .path(UserProfileService.class, "getCurrent")
                                                   .build()
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_GET_CURRENT_USER_PROFILE));
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone().path(UserService.class)
                                                   .path(UserService.class, "getCurrent")
                                                   .build()
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_GET_CURRENT_USER));
        links.add(LinksHelper.createLink(HttpMethod.POST,
                                         uriBuilder.clone().path(UserService.class)
                                                   .path(UserService.class, "updatePassword")
                                                   .build()
                                                   .toString(),
                                         APPLICATION_FORM_URLENCODED,
                                         null,
                                         LINK_REL_UPDATE_PASSWORD));

        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone().path(UserService.class)
                                                   .path(UserService.class, "getById")
                                                   .build(userDescriptor.getId())
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_GET_USER_BY_ID));
        links.add(LinksHelper.createLink(HttpMethod.GET,
                                         uriBuilder.clone().path(UserProfileService.class)
                                                   .path(UserProfileService.class, "getById")
                                                   .build(userDescriptor.getId())
                                                   .toString(),
                                         null,
                                         APPLICATION_JSON,
                                         LINK_REL_GET_USER_PROFILE_BY_ID));
        if (userDescriptor.getEmail() != null) {
            links.add(LinksHelper.createLink(HttpMethod.GET,
                                             uriBuilder.clone().path(UserService.class)
                                                       .path(UserService.class, "getByAlias")
                                                       .queryParam("email", userDescriptor.getEmail())
                                                       .build()
                                                       .toString(),
                                             null,
                                             APPLICATION_JSON,
                                             LINK_REL_GET_USER_BY_EMAIL));
        }
        links.add(LinksHelper.createLink(HttpMethod.DELETE,
                                         uriBuilder.clone().path(UserService.class)
                                                   .path(UserService.class, "remove")
                                                   .build(userDescriptor.getId())
                                                   .toString(),
                                         null,
                                         null,
                                         LINK_REL_REMOVE_USER_BY_ID));

        return userDescriptor.withLinks(links);
    }

