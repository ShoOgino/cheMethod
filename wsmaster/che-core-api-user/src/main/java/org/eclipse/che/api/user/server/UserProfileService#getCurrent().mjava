    /**
     * <p>Returns {@link ProfileDescriptor} for current user profile.</p>
     * <p>By default user email will be added to attributes with key <i>'email'</i>.</p>
     *
     * @return descriptor of profile
     * @throws ServerException
     *         when some error occurred while retrieving/updating profile
     * @see ProfileDescriptor
     * @see #updateCurrent(Map)
     */
    @ApiOperation(value = "Get user profile",
                  notes = "Get user profile details.",
                  response = ProfileDescriptor.class)
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK"),
            @ApiResponse(code = 404, message = "Not Found"),
            @ApiResponse(code = 500, message = "Internal Server Error")})
    @GET
    @GenerateLink(rel = LINK_REL_GET_CURRENT_USER_PROFILE)
    @Produces(APPLICATION_JSON)
    public ProfileDescriptor getCurrent() throws NotFoundException, ServerException {
        final User user = userDao.getById(currentUser().getUserId());
        final Profile profile = profileDao.getById(user.getId());
        profile.getAttributes().put("email", user.getEmail());
        return toDescriptor(profile);
    }

