    /**
     * Updates user by replacing an existing user entity with a new one.
     *
     * @param user
     *         user update
     * @throws NullPointerException
     *         when {@code user} is null
     * @throws NotFoundException
     *         when user with id {@code user.getId()} is not found
     * @throws ConflictException
     *         when user's new alias/email/name is not unique
     * @throws ServerException
     *         when any other error occurs
     */
    public void update(User user) throws NotFoundException, ServerException, ConflictException {
        requireNonNull(user, "Required non-null user");
        userDao.update(new UserImpl(user));
    }

