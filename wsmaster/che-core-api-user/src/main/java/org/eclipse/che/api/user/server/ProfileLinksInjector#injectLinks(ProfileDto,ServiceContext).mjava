  public ProfileDto injectLinks(ProfileDto profileDto, ServiceContext serviceContext) {
    final UriBuilder uriBuilder = serviceContext.getServiceUriBuilder();
    final List<Link> links = new ArrayList<>(5);
    links.add(
        createLink(
            HttpMethod.GET,
            uriBuilder.clone().path(ProfileService.class, "getCurrent").build().toString(),
            null,
            APPLICATION_JSON,
            LINK_REL_CURRENT_PROFILE));
    links.add(
        createLink(
            HttpMethod.GET,
            uriBuilder
                .clone()
                .path(ProfileService.class, "getById")
                .build(profileDto.getUserId())
                .toString(),
            null,
            APPLICATION_JSON,
            LINK_REL_SELF));
    links.add(
        createLink(
            HttpMethod.PUT,
            uriBuilder.clone().path(ProfileService.class, "updateAttributes").build().toString(),
            APPLICATION_JSON,
            APPLICATION_JSON,
            LINK_REL_CURRENT_PROFILE_ATTRIBUTES));
    links.add(
        createLink(
            HttpMethod.DELETE,
            uriBuilder
                .clone()
                .path(ProfileService.class, "removeAttributes")
                .build(profileDto.getUserId())
                .toString(),
            APPLICATION_JSON,
            APPLICATION_JSON,
            LINK_REL_CURRENT_PROFILE_ATTRIBUTES));
    links.add(
        createLink(
            HttpMethod.PUT,
            uriBuilder
                .clone()
                .path(ProfileService.class, "updateAttributesById")
                .build(profileDto.getUserId())
                .toString(),
            APPLICATION_JSON,
            APPLICATION_JSON,
            LINK_REL_PROFILE_ATTRIBUTES));
    return profileDto.withLinks(links);
  }

