    @Override
    @Transactional
    public Page<UserImpl> getByEmailPart(String emailPart, int maxItems, long skipCount) throws ServerException {
        requireNonNull(emailPart, "Required non-null email part");
        checkArgument(maxItems >= 0, "The number of items to return can't be negative");
        checkArgument(skipCount >= 0 && skipCount <= Integer.MAX_VALUE,
                      "The number of items to skip can't be negative or greater than " + Integer.MAX_VALUE);
        try {
            final List<UserImpl> list = managerProvider.get()
                                                       .createNamedQuery("User.getByEmailPart", UserImpl.class)
                                                       .setParameter("email", emailPart.toLowerCase())
                                                       .setMaxResults(maxItems)
                                                       .setFirstResult((int)skipCount)
                                                       .getResultList()
                                                       .stream()
                                                       .map(JpaUserDao::erasePassword)
                                                       .collect(toList());
            final long count = managerProvider.get()
                                              .createNamedQuery("User.getByEmailPartCount", Long.class)
                                              .setParameter("email", emailPart.toLowerCase())
                                              .getSingleResult();
            return new Page<>(list, skipCount, maxItems, count);
        } catch (RuntimeException x) {
            throw new ServerException(x.getLocalizedMessage(), x);
        }
    }

