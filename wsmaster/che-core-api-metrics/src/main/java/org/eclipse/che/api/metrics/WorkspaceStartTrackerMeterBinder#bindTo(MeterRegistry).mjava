  @Override
  public void bindTo(MeterRegistry registry) {

    successTimer =
        Timer.builder(workspaceMetric("start.time"))
            .description("The time of workspace start")
            .tags(withStandardTags("result", "success"))
            .publishPercentileHistogram()
            .sla(Duration.ofSeconds(10))
            .minimumExpectedValue(Duration.ofSeconds(10))
            .maximumExpectedValue(Duration.ofMinutes(15))
            .register(registry);

    failTimer =
        Timer.builder(workspaceMetric("start.time"))
            .description("The time of workspace start")
            .tags(withStandardTags("result", "fail"))
            .publishPercentileHistogram()
            .sla(Duration.ofSeconds(10))
            .minimumExpectedValue(Duration.ofSeconds(10))
            .maximumExpectedValue(Duration.ofMinutes(15))
            .register(registry);

    // only subscribe to the event once we have the counters ready
    eventService.subscribe(this::handleWorkspaceStatusChange, WorkspaceStatusEvent.class);
  }

