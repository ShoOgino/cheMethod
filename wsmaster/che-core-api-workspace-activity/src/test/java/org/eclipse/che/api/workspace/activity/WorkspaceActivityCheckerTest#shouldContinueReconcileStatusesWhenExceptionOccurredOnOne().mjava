  @Test
  public void shouldContinueReconcileStatusesWhenExceptionOccurredOnOne() throws Exception {
    // given
    String wsId1 = "1";
    WorkspaceActivity activity1 = new WorkspaceActivity();
    activity1.setCreated(clock.millis());
    activity1.setWorkspaceId(wsId1);
    activity1.setStatus(WorkspaceStatus.STARTING);
    activity1.setLastStarting(clock.millis());

    String wsId2 = "2";
    WorkspaceActivity activity2 = new WorkspaceActivity();
    activity2.setCreated(clock.millis());
    activity2.setWorkspaceId(wsId2);
    activity2.setStatus(WorkspaceStatus.STARTING);
    activity2.setLastStarting(clock.millis());
    doAnswer(
            inv -> {
              int maxItems = inv.getArgument(0);
              long skipCount = inv.getArgument(1);

              switch ((int) skipCount) {
                case 0:
                  return new Page<>(singleton(activity1), 0, 1, 2);
                case 1:
                  return new Page<>(singleton(activity2), 1, 1, 2);
                default:
                  return new Page<>(emptyList(), skipCount, maxItems, 2);
              }
            })
        .when(workspaceActivityDao)
        .getAll(anyInt(), anyLong());

    doReturn(WorkspaceStatus.STOPPED).when(workspaceRuntimes).getStatus(any());
    doThrow(new ServerException("Error"))
        .when(workspaceActivityDao)
        .setStatusChangeTime(eq(wsId1), any(WorkspaceStatus.class), anyLong());

    // when
    checker.cleanup();

    // then
    verify(workspaceActivityDao)
        .setStatusChangeTime(eq(wsId2), eq(WorkspaceStatus.STOPPED), eq(clock.millis()));
  }

