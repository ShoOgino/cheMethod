  /**
   * Makes sure the activity of a running workspace has a last running time. The activity won't have
   * a last running time very shortly after it was found running by the runtime before our event
   * handler updated the activity record. If the schedule of the {@link #cleanup()} method precedes
   * or coincides with the event handler we might not see the value. Otherwise this can
   * theoretically also happen when the server is stopped at an unfortunate point in time while the
   * workspace is starting and/or running and before the event handler had a chance of updating the
   * activity record.
   *
   * <p>This method will update the supplied activity record with the new running time if necessary
   *
   * @param activity the activity record
   * @param now the current time we're working with
   * @param latestActivityTime the time of the last known activity on the workspace, if any
   * @return true if the last running time was null before and was rectified, false if the last
   *     running time was not null.
   * @throws ServerException
   */
  private boolean rectifyLastRunningTime(
      WorkspaceActivity activity, long now, Long latestActivityTime) throws ServerException {
    String wsId = activity.getWorkspaceId();
    if (activity.getLastRunning() == null) {
      rectifyNoLastRunningTime(wsId, activity, now, latestActivityTime);
      return true;
    } else if (latestActivityTime != null && latestActivityTime > activity.getLastRunning()) {
      LOG.warn(
          "Workspace '{}' has been found running yet there is an activity on it newer than the"
              + " last running time. This should not happen. Resetting the last running time to"
              + " the newest activity time. The activity record is this: {}",
          wsId,
          activity.toString());
      activityDao.setStatusChangeTime(wsId, WorkspaceStatus.RUNNING, latestActivityTime);
      activity.setLastRunning(latestActivityTime);
    }

    // there was a running time before
    return false;
  }

