  @Override
  @Transactional(rollbackOn = ServerException.class)
  public List<String> findExpired(long timestamp) throws ServerException {
    try {
      return managerProvider
          .get()
          .createNamedQuery("WorkspaceActivity.getExpired", WorkspaceActivity.class)
          .setParameter("expiration", timestamp)
          .getResultList()
          .stream()
          .map(WorkspaceActivity::getWorkspaceId)
          .collect(Collectors.toList());
    } catch (RuntimeException x) {
      throw new ServerException(x.getLocalizedMessage(), x);
    }
  }

