  @Test
  public void publishesStoppedWorkspaceStoppedEventsAsServiceItemStoppedEvents() throws Exception {
    when(workspaceManager.getRunningWorkspacesIds())
        .thenReturn(ImmutableSet.of("id1", "id2", "id3"));
    doAnswer(
            inv -> {
              @SuppressWarnings("unchecked")
              EventSubscriber<WorkspaceStatusEvent> subscriber =
                  (EventSubscriber<WorkspaceStatusEvent>) inv.getArguments()[0];

              // id1
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.STARTING, "id1"));
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.RUNNING, "id1"));
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.STOPPING, "id1"));
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.STOPPED, "id1"));

              // id2
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.RUNNING, "id2"));
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.STOPPING, "id2"));
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.STOPPED, "id2"));

              // id3
              subscriber.onEvent(newWorkspaceStatusEvent(WorkspaceStatus.STOPPED, "id3"));

              return null;
            })
        .when(eventService)
        .subscribe(any());

    termination.terminate();

    verify(eventService).publish(new SystemServiceItemStoppedEvent("workspace", "id1", 1, 3));
    verify(eventService).publish(new SystemServiceItemStoppedEvent("workspace", "id2", 2, 3));
    verify(eventService).publish(new SystemServiceItemStoppedEvent("workspace", "id3", 3, 3));
  }

