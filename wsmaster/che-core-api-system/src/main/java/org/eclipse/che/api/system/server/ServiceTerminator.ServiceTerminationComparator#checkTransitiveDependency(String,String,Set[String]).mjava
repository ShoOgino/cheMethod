    // Recursively dig into dependencies and sort them out
    private int checkTransitiveDependency(String o1, String o2, Set<String> loopList) {
      if (loopList.contains(o1)) {
        throw new RuntimeException("Circular dependency found between terminations " + loopList);
      }
      Set<String> directDependencies = dependencies.get(o1);
      if (directDependencies.isEmpty()) {
        return -1;
      } else {
        if (directDependencies.contains(o2)) {
          return 1;
        } else {
          loopList.add(o1);
          for (String dependency : directDependencies) {
            if (checkTransitiveDependency(dependency, o2, loopList) > 0) {
              return 1;
            }
          }
          return -1;
        }
      }
    }

