  /**
   * Get token to be able to call secure api methods.
   *
   * @param tokenAccessCookie - old session-based cookie with token
   * @param credentials - username and password
   * @return - auth token in JSON, session-based and persistent cookies
   * @throws AuthenticationException
   */
  @ApiOperation(
    value = "Login",
    notes = "Login to a Codenvy account. Either auth token or cookie are used",
    response = Token.class,
    position = 2
  )
  @ApiResponses(
    value = {
      @ApiResponse(code = 200, message = "OK"),
      @ApiResponse(code = 400, message = "Authentication error")
    }
  )
  @POST
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  @Path("/login")
  public Response authenticate(
      Credentials credentials,
      @ApiParam(value = "Existing auth cookie. It is used to get deleted to a obtain new cookie")
          @CookieParam("session-access-key")
          Cookie tokenAccessCookie,
      @Context UriInfo uriInfo)
      throws AuthenticationException {

    return dao.login(credentials, tokenAccessCookie, uriInfo);
  }

