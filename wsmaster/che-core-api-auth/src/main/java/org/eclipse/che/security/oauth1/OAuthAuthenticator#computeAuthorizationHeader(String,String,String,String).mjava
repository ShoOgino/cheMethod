  /**
   * Compute the Authorization header to sign the OAuth 1 request.
   *
   * @param requestMethod the HTTP request method.
   * @param requestUrl the HTTP request url with encoded query parameters.
   * @param token the token.
   * @param tokenSecret the secret token.
   * @return the authorization header value, or {@code null}.
   */
  private String computeAuthorizationHeader(
      final String requestMethod,
      final String requestUrl,
      final String token,
      final String tokenSecret)
      throws OAuthAuthenticationException {
    OAuthParameters oauthParameters;
    try {
      oauthParameters = new OAuthParameters();
      oauthParameters.consumerKey = clientId;
      oauthParameters.signer =
          clientSecret == null
              ? getOAuthRsaSigner()
              : getOAuthHmacSigner(clientSecret, tokenSecret);
      oauthParameters.token = token;
      oauthParameters.version = "1.0";

      oauthParameters.computeNonce();
      oauthParameters.computeTimestamp();

      oauthParameters.computeSignature(requestMethod, new GenericUrl(requestUrl));
    } catch (GeneralSecurityException e) {
      throw new OAuthAuthenticationException(e);
    }

    return oauthParameters.getAuthorizationHeader();
  }

