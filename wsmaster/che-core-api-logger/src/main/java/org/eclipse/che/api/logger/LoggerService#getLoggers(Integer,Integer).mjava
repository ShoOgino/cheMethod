  @GET
  @Produces(APPLICATION_JSON)
  @ApiOperation(
      value = "Get loggers which are configured",
      notes = "This operation can be performed only by authorized user",
      response = LoggerDto.class,
      responseContainer = "List")
  @ApiResponses({
    @ApiResponse(code = 200, message = "The loggers successfully fetched"),
  })
  public List<LoggerDto> getLoggers(
      @ApiParam("The number of the items to skip") @DefaultValue("0") @QueryParam("skipCount")
          Integer skipCount,
      @ApiParam("The limit of the items in the response, default is 30")
          @DefaultValue("30")
          @QueryParam("maxItems")
          Integer maxItems) {
    LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();

    return loggerContext
        .getLoggerList()
        .stream()
        .filter(log -> log.getLevel() != null || log.iteratorForAppenders().hasNext())
        .skip(skipCount)
        .limit(maxItems)
        .map(this::asDto)
        .collect(Collectors.toList());
  }

