    /**
     * Finds a user by his machine token.
     *
     * @param token
     *        token to find user by
     * @return user entity
     * @throws ApiException
     *         when token is not found, or there is problem retrieving user via api.
     * @throws IOException
     */
    @GET
    @Path("/user/{token}")
    @Produces(MediaType.APPLICATION_JSON)
    public UserDto getUser(@PathParam("token") String token) throws ApiException, IOException {
        final String userId = registry.getUserId(token);
        return requestFactory.fromUrl(apiEndpoint + "/user/" + userId)
                             .useGetMethod()
                             .request()
                             .asDto(UserDto.class);
    }

