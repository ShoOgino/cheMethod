    @GET
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "Get all machines of workspace with specified ID",
                  response = MachineDto.class,
                  responseContainer = "List")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains requested list of machine entities"),
                   @ApiResponse(code = 400, message = "Workspace ID is not specified"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public List<MachineDto> getMachines(@ApiParam(value = "Workspace ID", required = true)
                                        @QueryParam("workspace")
                                        String workspaceId)
            throws ServerException,
                   BadRequestException {

        requiredNotNull(workspaceId, "Parameter workspace");

        return machineManager.getMachines(workspaceId)
                             .stream()
                             .map(DtoConverter::asDto)
                             .map(machineDto -> linksInjector.injectLinks(machineDto, getServiceContext()))
                             .collect(Collectors.toList());
    }

