    /**
     * Loads recipes by specified path.
     *
     * @param recipesPath
     *         path to recipe file
     * @return list of predefined recipes
     * @throws ServerException
     *         when problems occurs with getting or parsing recipe file
     */
    private List<RecipeImpl> loadRecipes(String recipesPath) throws ServerException {
        try (InputStream is = getResource(recipesPath)) {
            return firstNonNull(GSON.fromJson(new InputStreamReader(is), new TypeToken<List<RecipeImpl>>() {}.getType()), emptyList());
        } catch (IOException | JsonIOException | JsonSyntaxException e) {
            throw new ServerException("Failed to get recipes from specified path " + recipesPath, e);
        }
    }

