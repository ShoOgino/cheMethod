    @Test
    public void shouldBeAbleToSearchRecipes() throws Exception {
        final RecipeImpl recipe1 = new RecipeImpl().withId("id1")
                                                   .withCreator(USER_ID)
                                                   .withType("docker")
                                                   .withScript("script1 content")
                                                   .withTags(asList("java"));
        final RecipeImpl recipe2 = new RecipeImpl().withId("id2")
                                                   .withCreator(USER_ID)
                                                   .withType("docker")
                                                   .withScript("script2 content")
                                                   .withTags(asList("java", "mongodb"));
        when(recipeDao.search(eq("user123"),
                              eq(asList("java", "mongodb")),
                              eq("docker"),
                              any(int.class),
                              any(int.class))).thenReturn(asList(recipe1, recipe2));

        final Response response = given().auth()
                                         .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
                                         .when()
                                         .queryParameter("tags", asList("java", "mongodb"))
                                         .queryParameter("type", "docker")
                                         .get(SECURE_PATH + "/recipe");

        assertEquals(response.getStatusCode(), 200);
        assertEquals(unwrapDtoList(response, RecipeDescriptor.class).size(), 2);
    }

