    @Test(dependsOnMethods = "shouldGetRecipeById")
    public void shouldNotRemoveRecipeWhenSubscriberThrowsExceptionOnRecipeRemoving() throws Exception {
        final OldRecipeImpl recipe = recipes.get(0);
        CascadeEventSubscriber<BeforeRecipeRemovedEvent> subscriber = mockCascadeEventSubscriber();
        doThrow(new ServerException("error")).when(subscriber).onCascadeEvent(any());
        eventService.subscribe(subscriber, BeforeRecipeRemovedEvent.class);

        try {
            recipeDao.remove(recipe.getId());
            fail("RecipeDao#remove had to throw server exception");
        } catch (ServerException ignored) {
        }

        assertEquals(recipeDao.getById(recipe.getId()), recipe);
        eventService.unsubscribe(subscriber, BeforeRecipeRemovedEvent.class);
    }

