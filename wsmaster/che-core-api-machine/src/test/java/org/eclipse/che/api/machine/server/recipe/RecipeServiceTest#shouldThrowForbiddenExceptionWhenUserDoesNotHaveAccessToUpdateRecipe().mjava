    @Test
    public void shouldThrowForbiddenExceptionWhenUserDoesNotHaveAccessToUpdateRecipe() throws Exception {
        final ManagedRecipe recipe = new RecipeImpl().withId("id")
                                                     .withCreator("some_foreign_user")
                                                     .withType("docker")
                                                     .withScript("script1 content")
                                                     .withTags(asList("java"));
        when(recipeDao.getById(recipe.getId())).thenReturn(recipe);
        when(permissionsChecker.hasAccess(recipe, USER_ID, "write")).thenReturn(false);

        final Response response = given().auth()
                                         .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
                                         .contentType("application/json")
                                         .body(newDto(RecipeUpdate.class).withId("id"))
                                         .when()
                                         .put(SECURE_PATH + "/recipe");

        assertEquals(response.getStatusCode(), 403);
        final String expMessage = format("User %s doesn't have access to update recipe %s", USER_ID, recipe.getId());
        assertEquals(unwrapDto(response, ServiceError.class).getMessage(), expMessage);
        verify(recipeDao).getById(recipe.getId());
    }

