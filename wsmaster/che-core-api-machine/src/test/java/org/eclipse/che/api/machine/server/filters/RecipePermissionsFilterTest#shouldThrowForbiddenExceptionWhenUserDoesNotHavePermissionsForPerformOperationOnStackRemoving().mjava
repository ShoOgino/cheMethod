  @Test
  public void
      shouldThrowForbiddenExceptionWhenUserDoesNotHavePermissionsForPerformOperationOnStackRemoving()
          throws Exception {
    when(subject.hasPermission("recipe", "recipe123", DELETE)).thenReturn(false);

    final Response response =
        given()
            .auth()
            .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
            .contentType("application/json")
            .when()
            .delete(SECURE_PATH + "/recipe/recipe123");

    assertEquals(response.getStatusCode(), 403);
    Assert.assertEquals(
        unwrapError(response),
        "The user does not have permission to " + DELETE + " recipe with id 'recipe123'");
    verifyZeroInteractions(service);
  }

