    @Test
    public void shouldInjectLinksIntoMachineDto() {
        when(serverDtoMock.getRef()).thenReturn(TERMINAL_REFERENCE);
        when(serverDtoMock.getUrl()).thenReturn(URI_BASE + "/pty");
        when(machineRuntimeInfoDtoMock.getServers()).thenReturn(ImmutableMap.of("", serverDtoMock));
        final MachineDto machineDto = DtoFactory.newDto(MachineDto.class)
                                                .withId("id")
                                                .withWorkspaceId("wsId")
                                                .withConfig(machineConfigDtoMock)
                                                .withRuntime(machineRuntimeInfoDtoMock);
        machineLinksInjector.injectLinks(machineDto, serviceContextMock);
        final Set<Pair<String, String>> links = machineDto.getLinks()
                                                          .stream()
                                                          .map(link -> Pair.of(link.getMethod(), link.getRel()))
                                                          .collect(Collectors.toSet());
        final Set<Pair<String, String>> expectedLinks = new HashSet<>(asList(Pair.of("GET", TERMINAL_REFERENCE),
                                                                             Pair.of("GET", LINK_REL_SELF),
                                                                             Pair.of("GET", LINK_REL_GET_MACHINES),
                                                                             Pair.of("POST", LINK_REL_EXECUTE_COMMAND),
                                                                             Pair.of("DELETE", LINK_REL_DESTROY_MACHINE),
                                                                             Pair.of("GET", LINK_REL_GET_SNAPSHOTS),
                                                                             Pair.of("GET", LINK_REL_GET_PROCESSES),
                                                                             Pair.of("POST", LINK_REL_SAVE_SNAPSHOT),
                                                                             Pair.of("GET", LINK_REL_GET_MACHINE_LOGS),
                                                                             Pair.of("GET", LINK_REL_ENVIRONMENT_OUTPUT_CHANNEL),
                                                                             Pair.of("GET", ENVIRONMENT_STATUS_CHANNEL_TEMPLATE)));

        assertEquals(links, expectedLinks, "Difference " + Sets.symmetricDifference(links, expectedLinks) + "\n");
    }

