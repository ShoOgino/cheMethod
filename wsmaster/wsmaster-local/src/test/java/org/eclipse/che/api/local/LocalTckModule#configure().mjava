    @Override
    public void configure() {
        // configuring local storage to deal with mocks
        final LocalStorage storage = mock(LocalStorage.class);
        when(storage.loadMap(any())).thenReturn(Collections.emptyMap());
        final LocalStorageFactory factory = mock(LocalStorageFactory.class);
        try {
            when(factory.create(any())).thenReturn(storage);
        } catch (IOException x) {
            throw new RuntimeException(x.getMessage(), x);
        }
        bind(LocalStorageFactory.class).toInstance(factory);

        bind(new TypeLiteral<Set<UserImpl>>() {}).annotatedWith(Names.named("codenvy.local.infrastructure.users")).toInstance(emptySet());

        bind(new TypeLiteral<TckRepository<UserImpl>>() {}).to(LocalUserTckRepository.class).in(Singleton.class);
        bind(new TypeLiteral<TckRepository<ProfileImpl>>() {}).to(LocalProfileTckRepository.class).in(Singleton.class);

        bind(UserDao.class).to(LocalUserDaoImpl.class).in(Singleton.class);
        bind(ProfileDao.class).to(LocalProfileDaoImpl.class).in(Singleton.class);
    }

