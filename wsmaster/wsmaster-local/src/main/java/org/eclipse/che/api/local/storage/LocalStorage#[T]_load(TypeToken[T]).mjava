    /**
     * @param <T>
     *         the type of the desired object.
     * @param token
     *         type holder.
     * @return an object of type T from the json file or null if json invalid or file not found.
     */
    public <T> T load(TypeToken<T> token) {
        T result = null;
        try (Reader reader = Files.newReader(storedFile, Charset.forName("UTF-8"))) {
            result = gson.fromJson(reader, token.getType());
        } catch (JsonSyntaxException e) {
            LOG.warn(storedFile.getName() + " contains invalid JSON content");
        } catch (IOException ioEx) {
            LOG.debug("Impossible to read from " + storedFile.getName());
        }
        return result;
    }

