    private static JsonObject asWorkspaceConfigSource(JsonObject stackSource) {
        final JsonObject newWsSource = new JsonObject();
        if (stackSource.has("type") && !stackSource.get("type").isJsonNull()) {
            final String type = stackSource.get("type").getAsString();
            switch (type) {
                case "image":
                    newWsSource.addProperty("type", "image");
                    if (stackSource.has("origin")) {
                        newWsSource.addProperty("location", stackSource.get("origin").getAsString());
                    }
                    break;
                case "location":
                    newWsSource.addProperty("type", "dockerfile");
                    if (stackSource.has("origin")) {
                        newWsSource.addProperty("location", stackSource.get("origin").getAsString());
                    }
                    break;
                case "dockerfile":
                case "recipe":
                    newWsSource.addProperty("type", "dockerfile");
                    if (stackSource.has("origin")) {
                        newWsSource.addProperty("content", stackSource.get("origin").getAsString());
                    }
                    break;
            }
        }
        return newWsSource;
    }

