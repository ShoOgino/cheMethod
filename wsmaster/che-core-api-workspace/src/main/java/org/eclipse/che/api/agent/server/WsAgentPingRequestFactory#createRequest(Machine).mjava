    /**
     * Creates request which can check if workspace agent is pinging.
     *
     * @param machine
     *         machine instance
     * @return instance of {@link HttpJsonRequest}
     * @throws ServerException
     *         if internal server error occurred
     */
    public HttpJsonRequest createRequest(Machine machine) throws ServerException {
        Map<String, ? extends Server> servers = machine.getRuntime().getServers();
        Server wsAgentServer = servers.get(Constants.WS_AGENT_PORT);
        if (wsAgentServer == null) {
            LOG.error("{} WorkspaceId: {}, DevMachine Id: {}, found servers: {}",
                      WS_AGENT_SERVER_NOT_FOUND_ERROR, machine.getWorkspaceId(), machine.getId(), servers);
            throw new ServerException(WS_AGENT_SERVER_NOT_FOUND_ERROR);
        }
        String wsAgentPingUrl = wsAgentServer.getProperties().getInternalUrl();
        if (isNullOrEmpty(wsAgentPingUrl)) {
            LOG.error(WS_AGENT_URL_IS_NULL_OR_EMPTY_ERROR);
            throw new ServerException(WS_AGENT_URL_IS_NULL_OR_EMPTY_ERROR);
        }
        // since everrest mapped on the slash in case of it absence
        // we will always obtain not found response
        if (!wsAgentPingUrl.endsWith("/")) {
            wsAgentPingUrl = wsAgentPingUrl.concat("/");
        }
        return httpJsonRequestFactory.fromUrl(wsAgentPingUrl)
                                     .setMethod(HttpMethod.GET)
                                     .setTimeout(wsAgentPingConnectionTimeoutMs);
    }

