  @Override
  public WsAgentHealthStateDto check(Machine machine) throws ServerException {
    Server wsAgent = getWsAgent(machine);
    final WsAgentHealthStateDto agentHealthStateDto = newDto(WsAgentHealthStateDto.class);
    if (wsAgent == null) {
      return agentHealthStateDto
          .withCode(NOT_FOUND.getStatusCode())
          .withReason("Workspace Agent not available");
    }
    try {
      final HttpJsonRequest pingRequest = createPingRequest(machine);
      final HttpJsonResponse response = pingRequest.request();
      return agentHealthStateDto.withCode(response.getResponseCode());
    } catch (ApiException | IOException e) {
      return agentHealthStateDto
          .withCode(SERVICE_UNAVAILABLE.getStatusCode())
          .withReason(e.getMessage());
    }
  }

