    /** Starts the machine instances. */
    private void doStart(EnvironmentImpl environment,
                         String workspaceId,
                         String envName,
                         boolean recover) throws ServerException {
        eventsService.publish(DtoFactory.newDto(WorkspaceStatusEvent.class)
                                        .withWorkspaceId(workspaceId)
                                        .withStatus(WorkspaceStatus.STARTING)
                                        .withEventType(EventType.STARTING)
                                        .withPrevStatus(WorkspaceStatus.STOPPED));

        try {
            List<Instance> machines = envEngine.start(workspaceId,
                                                      envName,
                                                      environment,
                                                      recover,
                                                      getEnvironmentLogger(workspaceId));
            launchAgents(environment, machines);

            try (@SuppressWarnings("unused") CloseableLock lock = locks.acquireWriteLock(workspaceId)) {
                ensurePreDestroyIsNotExecuted();
                WorkspaceState workspaceState = workspaces.get(workspaceId);
                workspaceState.status = WorkspaceStatus.RUNNING;
            }

            eventsService.publish(DtoFactory.newDto(WorkspaceStatusEvent.class)
                                            .withWorkspaceId(workspaceId)
                                            .withStatus(WorkspaceStatus.RUNNING)
                                            .withEventType(EventType.RUNNING)
                                            .withPrevStatus(WorkspaceStatus.STARTING));
        } catch (ApiException | EnvironmentException | RuntimeException e) {
            try {
                envEngine.stop(workspaceId);
            } catch (EnvironmentNotRunningException ignore) {
            } catch (Exception ex) {
                LOG.error(ex.getLocalizedMessage(), ex);
            }
            String environmentStartError = "Start of environment " + envName +
                                           " failed. Error: " + e.getLocalizedMessage();
            try (@SuppressWarnings("unused") CloseableLock lock = locks.acquireWriteLock(workspaceId)) {
                workspaces.remove(workspaceId);
            }
            eventsService.publish(DtoFactory.newDto(WorkspaceStatusEvent.class)
                                            .withWorkspaceId(workspaceId)
                                            .withEventType(EventType.ERROR)
                                            .withPrevStatus(WorkspaceStatus.STARTING)
                                            .withError(environmentStartError));

            throw new ServerException(environmentStartError, e);
        }
    }

