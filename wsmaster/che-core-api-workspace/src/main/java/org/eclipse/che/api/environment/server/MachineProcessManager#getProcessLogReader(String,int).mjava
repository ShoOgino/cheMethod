  /**
   * Gets process reader from machine by specified id.
   *
   * @param machineId machine id whose process reader will be returned
   * @param pid process id
   * @return reader for specified process on machine
   * @throws NotFoundException if machine with specified id not found
   * @throws MachineException if other error occur
   */
  public Reader getProcessLogReader(String machineId, int pid)
      throws NotFoundException, MachineException {
    final File processLogsFile = getProcessLogsFile(machineId, pid);
    if (processLogsFile.isFile()) {
      try {
        return Files.newBufferedReader(processLogsFile.toPath(), Charset.defaultCharset());
      } catch (IOException e) {
        throw new MachineException(
            String.format(
                "Unable read log file for process '%s' of machine '%s'. %s",
                pid, machineId, e.getMessage()));
      }
    }
    throw new NotFoundException(
        String.format("Logs for process '%s' of machine '%s' are not available", pid, machineId));
  }

