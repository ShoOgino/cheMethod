  /** Converts {@link Runtime} to {@link RuntimeDto}. */
  public static RuntimeDto asDto(Runtime runtime) {
    if (runtime == null) {
      return null;
    }
    final RuntimeDto runtimeDto = newDto(RuntimeDto.class).withActiveEnv(runtime.getActiveEnv());

    Map<String, ? extends Machine> machines = runtime.getMachines();
    Map<String, MachineDto> machineDtos = new HashMap<>();
    for (Map.Entry<String, ? extends Machine> m : machines.entrySet()) {

      Map<String, ServerDto> serverDtos = new HashMap<>();
      for (Map.Entry<String, ? extends Server> s : m.getValue().getServers().entrySet()) {
        ServerDto sDto =
            newDto(ServerDto.class)
                .withUrl(s.getValue().getUrl())
                .withStatus(s.getValue().getStatus());
        serverDtos.put(s.getKey(), sDto);
      }

      MachineDto mDto =
          newDto(MachineDto.class)
              .withProperties(m.getValue().getProperties())
              .withServers(serverDtos);
      machineDtos.put(m.getKey(), mDto);
    }

    runtimeDto.setMachines(machineDtos);
    runtimeDto.setWarnings(
        runtime.getWarnings().stream().map(DtoConverter::asDto).collect(Collectors.toList()));
    return runtimeDto;
  }

