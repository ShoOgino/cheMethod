  /**
   * Creates instance of this class.
   *
   * @param machineName name of machine whose servers will be checked by this method
   * @param servers map of servers in a machine
   */
  @Inject
  public ServersChecker(
      @Assisted RuntimeIdentity runtimeIdentity,
      @Assisted String machineName,
      @Assisted Map<String, ? extends Server> servers,
      MachineTokenProvider machineTokenProvider,
      @Named("che.workspace.server.ping_success_threshold") int serverPingSuccessThreshold,
      @Named("che.workspace.server.ping_interval_milliseconds") long serverPingInterval,
      @Named("che.workspace.server.liveness_probes") String[] livenessProbes) {
    this.runtimeIdentity = runtimeIdentity;
    this.machineName = machineName;
    this.servers = servers;
    this.timer = new Timer("ServersChecker", true);
    this.machineTokenProvider = machineTokenProvider;
    this.serverPingSuccessThreshold = serverPingSuccessThreshold;
    this.serverPingIntervalMillis = serverPingInterval;
    this.livenessProbes =
        Arrays.stream(livenessProbes).map(String::trim).collect(Collectors.toSet());
  }

