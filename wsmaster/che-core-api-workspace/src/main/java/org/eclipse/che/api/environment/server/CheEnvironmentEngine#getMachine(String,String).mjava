    /**
     * Returns specific machine from environment of specific workspace.
     *
     * @param workspaceId
     *         ID of workspace that owns environment machines
     * @param machineId
     *         ID of requested machine
     * @return requested machine
     * @throws EnvironmentNotRunningException
     *         if environment is not running
     * @throws NotFoundException
     *         if machine is not found in the environment
     */
    public Instance getMachine(String workspaceId, String machineId) throws NotFoundException {
        EnvironmentHolder environment;
        try (@SuppressWarnings("unused") Unlocker u = stripedLocks.readLock(workspaceId)) {
            environment = environments.get(workspaceId);
        }
        if (environment == null) {
            throw new EnvironmentNotRunningException("Environment with ID '" + workspaceId + "' is not found");
        }
        return environment.machines.stream()
                                   .filter(instance -> instance.getId().equals(machineId))
                                   .findAny()
                                   .orElseThrow(() -> new NotFoundException(
                                           format("Machine with ID '%s' is not found in the environment of workspace '%s'",
                                                  machineId, workspaceId)));
    }

