  private Collection<Pair<String, String>> parseFeatures(String[] features)
      throws InfrastructureException {
    Map<String, Pair<String, String>> featuresNameVersion = new HashMap<>();
    for (String feature : features) {
      String[] featureAndVersion = feature.split("/");
      if (featureAndVersion.length != 2
          || featureAndVersion[0].isEmpty()
          || featureAndVersion[1].isEmpty()) {
        throw new InfrastructureException(
            "Features format is illegal. Problematic feature entry:" + feature);
      }
      String key = featureAndVersion[0] + '/' + featureAndVersion[1];
      if (featuresNameVersion.containsKey(key)) {
        throw new InfrastructureException(
            format("Invalid Workspace.Next configuration: feature %s is duplicated", key));
      }
      featuresNameVersion.put(key, Pair.of(featureAndVersion[0], featureAndVersion[1]));
    }
    return featuresNameVersion.values();
  }

