  /** Asynchronously starts given workspace. */
  private void startAsync(
      WorkspaceImpl workspace, @Nullable String envName, Map<String, String> options)
      throws ConflictException, NotFoundException, ServerException {

    Optional<Pair<String, Environment>> validEnvOpt = getValidatedEnvironment(workspace, envName);

    // Sidecar-based workspaces are allowed not to have environments
    Pair<String, Environment> environment = null;
    if (validEnvOpt.isPresent()) {
      environment = validEnvOpt.get();
    }

    workspace.getAttributes().put(UPDATED_ATTRIBUTE_NAME, Long.toString(currentTimeMillis()));
    workspaceDao.update(workspace);

    runtimes
        .startAsync(
            workspace,
            environment,
            getCommands(workspace),
            getAttributes(workspace),
            firstNonNull(options, Collections.emptyMap()))
        .thenAccept(aVoid -> handleStartupSuccess(workspace))
        .exceptionally(
            ex -> {
              if (workspace.isTemporary()) {
                removeWorkspaceQuietly(workspace);
              } else {
                handleStartupError(workspace, ex.getCause());
              }
              return null;
            });
  }

