  /**
   * Configures memory attributes, if they are missing in {@link MachineConfig}
   *
   * <p>Note: Default memory request and memory will only be used if BOTH memoryLimit and
   * memoryRequest are null or 0, otherwise the provided value will be used for both parameters.
   *
   * @param machineConfig - given machine configuration
   * @param memoryLimit - memory limit parameter configured by user in specific infra recipe. Can be
   *     null or 0 if defaults should be used
   * @param memoryRequest - memory request parameter configured by user in specific infra recipe.
   *     Can be null or 0 if defaults should be used
   */
  public void provision(
      InternalMachineConfig machineConfig,
      @Nullable Long memoryLimit,
      @Nullable Long memoryRequest) {
    // if both properties are not defined
    if ((memoryLimit == null || memoryLimit <= 0)
        && (memoryRequest == null || memoryRequest <= 0)) {
      memoryLimit = Long.valueOf(defaultMachineMaxMemorySizeAttribute);
      memoryRequest = Long.valueOf(defaultMachineRequestMemorySizeAttribute);
    } else if ((memoryLimit == null || memoryLimit <= 0)) { // if memoryLimit only is undefined
      memoryLimit = memoryRequest;
    } else if ((memoryRequest == null
        || memoryRequest <= 0)) { // if memoryRequest only is undefined
      memoryRequest = memoryLimit;
    } else if (memoryRequest > memoryLimit) { // if both properties are defined, but not consistent
      memoryRequest = memoryLimit;
    }

    final Map<String, String> attributes = machineConfig.getAttributes();
    String configuredLimit = attributes.get(MEMORY_LIMIT_ATTRIBUTE);
    String configuredRequest = attributes.get(MEMORY_REQUEST_ATTRIBUTE);
    if (isNullOrEmpty(configuredLimit) && isNullOrEmpty(configuredRequest)) {
      attributes.put(MEMORY_LIMIT_ATTRIBUTE, String.valueOf(memoryLimit));
      attributes.put(MEMORY_REQUEST_ATTRIBUTE, String.valueOf(memoryRequest));
    } else if (isNullOrEmpty(configuredLimit)) {
      attributes.put(MEMORY_LIMIT_ATTRIBUTE, configuredRequest);
    } else if (isNullOrEmpty(configuredRequest)) {
      attributes.put(MEMORY_REQUEST_ATTRIBUTE, configuredLimit);
    }
  }

