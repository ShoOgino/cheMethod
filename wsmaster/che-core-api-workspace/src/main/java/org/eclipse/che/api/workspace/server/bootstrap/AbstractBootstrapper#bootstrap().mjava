    /**
     * Bootstraps installers and wait while they finished.
     *
     * @throws InfrastructureException
     *         when bootstrapping timeout reached
     * @throws InfrastructureException
     *         when bootstrapping failed
     * @throws InfrastructureException
     *         when any other error occurs while bootstrapping
     */
    public void bootstrap() throws InfrastructureException {
        if (finishEventFuture != null) {
            throw new IllegalStateException("Bootstrap method must be called only once.");
        }
        finishEventFuture = new CompletableFuture<>();

        eventService.subscribe(bootstrapperStatusListener, BootstrapperStatusEvent.class);
        try {
            doBootstrapAsync(installerEndpoint + ENDPOINT_IDS.getAndIncrement(),
                             outputEndpoint + ENDPOINT_IDS.getAndIncrement());

            //waiting for DONE or FAILED bootstrapper status event
            BootstrapperStatusEvent resultEvent = finishEventFuture.get(bootstrappingTimeoutMinutes, TimeUnit.MINUTES);
            if (resultEvent.getStatus().equals(BootstrapperStatus.FAILED)) {
                throw new InfrastructureException(resultEvent.getError());
            }
        } catch (ExecutionException e) {
            throw new InfrastructureException(e.getCause().getMessage(), e);
        } catch (TimeoutException e) {
            throw new InfrastructureException("Bootstrapping of machine " + machineName + " reached timeout");
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            throw new InfrastructureException("Bootstrapping of machine " + machineName + " was interrupted");
        } finally {
            eventService.unsubscribe(bootstrapperStatusListener, BootstrapperStatusEvent.class);
        }
    }

