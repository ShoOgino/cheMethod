  /**
   * Creates server checker instance.
   *
   * @param machineName name of machine to whom the server belongs
   * @param serverRef reference of the server
   * @param period period between unsuccessful availability checks, measured in {@code timeUnit}
   * @param successThreshold number of sequential successful pings to server after which it is
   *     treated as available
   * @param timeout max time allowed for the server availability checks to last before server is
   *     treated unavailable, measured in {@code timeUnit}
   * @param timeUnit measurement unit for {@code period} and {@code timeout} parameters
   */
  protected ServerChecker(
      String machineName,
      String serverRef,
      long period,
      long timeout,
      int successThreshold,
      TimeUnit timeUnit,
      Timer timer) {
    this.machineName = machineName;
    this.serverRef = serverRef;
    this.successThreshold = successThreshold;
    this.timer = timer;
    this.period = TimeUnit.MILLISECONDS.convert(period, timeUnit);
    this.reportFuture = new CompletableFuture<>();
    this.deadLine = System.currentTimeMillis() + TimeUnit.MILLISECONDS.convert(timeout, timeUnit);
  }

