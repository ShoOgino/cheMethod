  /** Stops the workspace publishing all the necessary events. */
  private void stopEnvironmentAndPublishEvents(String workspaceId, WorkspaceStatus prevStatus)
      throws ServerException, EnvironmentException {
    eventsService.publish(
        DtoFactory.newDto(WorkspaceStatusEvent.class)
            .withWorkspaceId(workspaceId)
            .withPrevStatus(prevStatus)
            .withStatus(WorkspaceStatus.STOPPING)
            .withEventType(EventType.STOPPING));
    removeState(workspaceId);
    try {
      envEngine.stop(workspaceId);
    } catch (Exception x) {
      eventsService.publish(
          DtoFactory.newDto(WorkspaceStatusEvent.class)
              .withWorkspaceId(workspaceId)
              .withPrevStatus(WorkspaceStatus.STOPPING)
              .withEventType(EventType.ERROR)
              .withError(x.getMessage())
              .withStatus(WorkspaceStatus.STOPPED));
      try {
        throw x;
      } catch (ServerException rethrow) {
        throw rethrow;
      } catch (Exception wrap) {
        throw new ServerException(wrap.getMessage(), wrap);
      }
    }
    eventsService.publish(
        DtoFactory.newDto(WorkspaceStatusEvent.class)
            .withWorkspaceId(workspaceId)
            .withPrevStatus(WorkspaceStatus.STOPPING)
            .withEventType(EventType.STOPPED)
            .withStatus(WorkspaceStatus.STOPPED));
  }

