    private void initAgents(List<String> agentIds) throws InfrastructureException {

        try {
            // TODO ensure already contains dependencies
            List<AgentKey> sortedAgents = agentSorter.sort(agentIds);
            List<Agent> agentsConf = new ArrayList<>();
            for (AgentKey agentKey : sortedAgents) {
                agentsConf.add(agentRegistry.getAgent(agentKey));
            }
            for (Agent agent : agentsConf) {
                this.agents.add(new ResolvedAgent(agent.getId(),
                                                  agent.getScript(),
                                                  agent.getServers().keySet(),
                                                  agent.getProperties()));
                for (Map.Entry<String, ? extends ServerConfig> serverEntry : agent.getServers().entrySet()) {
                    if (servers.putIfAbsent(serverEntry.getKey(), serverEntry.getValue()) != null &&
                        servers.get(serverEntry.getKey()).equals(serverEntry.getValue())) {
                        throw new InfrastructureException(
                                format("Agent '%s' contains server '%s' conflicting with machine configuration",
                                       agent.getId(), serverEntry.getKey()));
                    }
                }
            }
        } catch (AgentException e) {
            // TODO agents has circular dependency or missing, what should we throw in that case?
            throw new InfrastructureException(e.getLocalizedMessage(), e);
        }
    }

