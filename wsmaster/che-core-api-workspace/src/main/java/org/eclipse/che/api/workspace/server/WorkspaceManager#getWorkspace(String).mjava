    /**
     * Gets workspace by composite key.
     *
     * <p> Key rules:
     * <ul>
     * <li>@Deprecated : If it contains <b>:</b> character then that key is combination of namespace and workspace name
     * <li>@Deprecated : <b></>:workspace_name</b> is valid abstract key and current user name will be used as namespace
     * <li>If it doesn't contain <b>/</b> character then that key is id(e.g. workspace123456)
     * <li>If it contains <b>/</b> character then that key is combination of namespace and workspace name
     * </ul>
     *
     * Note that namespace can contain <b>/</b> character.
     *
     * @param key
     *         composite key(e.g. workspace 'id' or 'namespace/name')
     * @return the workspace instance
     * @throws NullPointerException
     *         when {@code key} is null
     * @throws NotFoundException
     *         when workspace doesn't exist
     * @throws ServerException
     *         when any server error occurs
     */
    public WorkspaceImpl getWorkspace(String key) throws NotFoundException, ServerException {
        requireNonNull(key, "Required non-null workspace key");
        WorkspaceImpl workspace = getByKey(key);
        runtimes.injectRuntime(workspace);
        addExtraAttributes(workspace);
        return workspace;
    }

