  private Collection<ChePlugin> toPlugins(Collection<CheFeature> features)
      throws InfrastructureException {
    Collection<ChePlugin> plugins = getPlugins(features);
    Map<String, List<String>> parameters = getPluginsParameters(features);

    for (ChePlugin plugin : plugins) {
      String pluginName = plugin.getName();
      String pluginVersion = plugin.getVersion();
      String pluginKey = pluginName + '/' + pluginVersion;

      // for now we match whole env variable value against '${<parameter name>}'
      plugin
          .getContainers()
          .stream()
          .flatMap(container -> container.getEnv().stream())
          .filter(this::isParameter)
          .forEach(
              envVar -> {
                String parameterKey = pluginKey + '/' + envVar.getValue();
                List<String> remove = parameters.remove(parameterKey);
                String envVarValue;
                if (remove != null) {
                  envVarValue = String.join(",", remove);
                } else {
                  envVarValue = "";
                }
                envVar.setValue(envVarValue);
              });
    }

    if (!parameters.isEmpty()) {
      throw new InfrastructureException(
          "Parameters not supported by che plugins found: " + parameters.keySet());
    }

    return plugins;
  }

