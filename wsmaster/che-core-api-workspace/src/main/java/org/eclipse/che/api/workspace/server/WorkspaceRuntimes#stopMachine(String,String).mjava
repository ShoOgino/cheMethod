    /**
     * Stops machine in a running environment.
     *
     * @param workspaceId
     *         ID of workspace that owns environment
     * @param machineId
     *         ID of machine that should be stopped
     * @throws NotFoundException
     *         if machine is not found in the environment
     * @throws ConflictException
     *         if environment is not running
     * @throws ConflictException
     *         if machine is dev and its stop is forbidden
     * @throws ServerException
     *         if any other error occurs
     */
    public void stopMachine(String workspaceId, String machineId) throws NotFoundException,
                                                                         ServerException,
                                                                         ConflictException {
        try (StripedLocks.ReadLock lock = stripedLocks.acquireReadLock(workspaceId)) {
            WorkspaceState workspaceState = workspaces.get(workspaceId);
            if (workspaceState == null || workspaceState.status != WorkspaceStatus.RUNNING) {
                throw new ConflictException(format("Environment of workspace '%s' is not running", workspaceId));
            }
        }
        environmentEngine.stopMachine(workspaceId, machineId);
    }

