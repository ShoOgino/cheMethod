    /**
     * TODO move to InternalRuntime
     * Stops Runtime
     * Presumably can take some time so considered to launch in separate thread
     *
     * @param stopOptions
     * @throws StateException
     *         when the context can't be stopped because otherwise it would be in inconsistent status
     *         (e.g. stop(interrupt) might not be allowed during start)
     * @throws InfrastructureException
     *         when any other error occurs
     */
    public final void stop(Map<String, String> stopOptions) throws InfrastructureException {
        if (this.status != WorkspaceStatus.RUNNING) {
            throw new StateException("The environment must be running");
        }
        status = WorkspaceStatus.STOPPING;

        // TODO spi what to do in exception appears here?
        try {
            internalStop(stopOptions);
        } catch (InternalInfrastructureException e) {
            LOG.error(format("Error occurs on stop of workspace %s. Error: " + e.getLocalizedMessage(),
                             identity.getWorkspaceId()), e);
        } catch (InfrastructureException e) {
            LOG.debug(e.getLocalizedMessage(), e);
        }
        status = WorkspaceStatus.STOPPED;
    }

