    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "Create a new machine based on the configuration",
                  notes = "This operation can be performed only by authorized user")
    @ApiResponses({@ApiResponse(code = 204, message = "The machine successfully created"),
                   @ApiResponse(code = 400, message = "Missed required parameters, parameters are not valid"),
                   @ApiResponse(code = 403, message = "The user does not have access to create the new machine"),
                   @ApiResponse(code = 409, message = "Conflict error occurred during the machine creation" +
                                                      "(e.g. The machine with such name already exists)." +
                                                      "Workspace is not in RUNNING state"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public void startMachine(@ApiParam("The workspace id")
                             @PathParam("workspaceId")
                             String workspaceId,
                             @ApiParam(value = "The new machine configuration", required = true)
                             MachineConfigDto machineConfig) throws ForbiddenException,
                                                                    NotFoundException,
                                                                    ServerException,
                                                                    ConflictException,
                                                                    BadRequestException {
        requiredNotNull(machineConfig, "Machine configuration");
        requiredNotNull(machineConfig.getType(), "Machine type");
        requiredNotNull(machineConfig.getSource(), "Machine source");
        requiredNotNull(machineConfig.getSource().getType(), "Machine source type");
        // definition of source should come either with a content or with location
        requiredOnlyOneNotNull(machineConfig.getSource().getLocation(), machineConfig.getSource().getContent(),
                               "Machine source should provide either location or content");

        workspaceManager.startMachine(machineConfig, workspaceId);
    }

