    @GET
    @GenerateLink(rel = LINK_REL_GET_STACKS_BY_CREATOR)
    @Produces(APPLICATION_JSON)
    @RolesAllowed({"user", "system/admin", "system/manager"})
    @ApiOperation(value = "Get the list stacks owned by current user",
                  notes = "This operation can be performed only by authorized user",
                  response = StackDto.class,
                  responseContainer = "List")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains requested list stack entity"),
                   @ApiResponse(code = 403, message = "The user does not have access to get stack entity list"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    public List<StackDto> getCreatedStacks(@ApiParam("The number of the items to skip")
                                           @DefaultValue("0")
                                           @QueryParam("skipCount")
                                           final Integer skipCount,
                                           @ApiParam("The limit of the items in the response, default is 30")
                                           @DefaultValue("30")
                                           @QueryParam("maxItems")
                                           final Integer maxItems) throws ServerException {
        String creator = EnvironmentContext.getCurrent().getUser().getId();
        List<StackImpl> stacks = stackDao.getByCreator(creator, skipCount, maxItems);

        return stacks.stream()
                     .map(this::asStackDto)
                     .collect(Collectors.toList());
    }

