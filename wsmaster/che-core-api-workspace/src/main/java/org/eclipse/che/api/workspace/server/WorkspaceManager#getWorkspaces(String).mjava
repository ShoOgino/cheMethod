    /**
     * Gets all user's workspaces(workspaces where user is owner).
     *
     * <p>Returned workspaces have either {@link WorkspaceStatus#STOPPED} status
     * or status defined by their runtime instances(if those exist).
     *
     * @param namespace
     *         the id of the user whose workspaces should be fetched
     * @return the list of workspaces or empty list if user doesn't own any workspace
     * @throws NullPointerException
     *         when {@code owner} is null
     * @throws ServerException
     *         when any server error occurs while getting workspaces with {@link WorkspaceDao#getByNamespace(String)}
     */
    public List<WorkspaceImpl> getWorkspaces(String namespace) throws ServerException {
        requireNonNull(namespace, "Required non-null workspace namespace");
        final List<WorkspaceImpl> workspaces = workspaceDao.getByNamespace(namespace);
        workspaces.forEach(this::normalizeState);
        return workspaces;
    }

