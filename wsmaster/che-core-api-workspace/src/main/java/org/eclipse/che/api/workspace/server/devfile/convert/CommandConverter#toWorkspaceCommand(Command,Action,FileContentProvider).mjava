  private org.eclipse.che.api.workspace.server.model.impl.CommandImpl toWorkspaceCommand(
      Command devCommand, Action commandAction, FileContentProvider contentProvider)
      throws DevfileException {
    org.eclipse.che.api.workspace.server.model.impl.CommandImpl command =
        new org.eclipse.che.api.workspace.server.model.impl.CommandImpl();
    command.setName(devCommand.getName());
    command.setType(commandAction.getType());
    command.setCommandLine(commandAction.getCommand());

    if (commandAction.getWorkdir() != null) {
      command.getAttributes().put(WORKING_DIRECTORY_ATTRIBUTE, commandAction.getWorkdir());
    }

    if (commandAction.getComponent() != null) {
      command
          .getAttributes()
          .put(Constants.COMPONENT_ALIAS_COMMAND_ATTRIBUTE, commandAction.getComponent());
    }

    if (commandAction.getReference() != null) {
      command.getAttributes().put(COMMAND_ACTION_REFERENCE_ATTRIBUTE, commandAction.getReference());
    }

    if (commandAction.getReferenceContent() != null) {
      command
          .getAttributes()
          .put(COMMAND_ACTION_REFERENCE_CONTENT_ATTRIBUTE, commandAction.getReferenceContent());
    } else if (commandAction.getReference() != null) {
      try {
        String referenceContent = contentProvider.fetchContent(commandAction.getReference());
        command.getAttributes().put(COMMAND_ACTION_REFERENCE_CONTENT_ATTRIBUTE, referenceContent);
      } catch (IOException e) {
        throw new DevfileException(
            format(
                "Failed to fetch content of action from reference %s: %s",
                commandAction.getReference(), e.getMessage()),
            e);
      }
    }

    command.getAttributes().putAll(devCommand.getAttributes());

    return command;
  }

