  public AbstractBootstrapper(
      String machineName,
      RuntimeIdentity runtimeIdentity,
      String outputEndpoint,
      String installerEndpoint,
      EventService eventService) {
    this.machineName = machineName;
    this.eventService = eventService;
    this.installerEndpoint = installerEndpoint;
    this.outputEndpoint = outputEndpoint;
    this.bootstrapperStatusListener =
        event -> {
          BootstrapperStatus status = event.getStatus();
          // skip starting status event
          if (status.equals(BootstrapperStatus.DONE) || status.equals(BootstrapperStatus.FAILED)) {
            // check bootstrapper belongs to current runtime and machine
            RuntimeIdentityDto runtimeId = event.getRuntimeId();
            if (event.getMachineName().equals(machineName)
                && runtimeIdentity.getEnvName().equals(runtimeId.getEnvName())
                && runtimeIdentity.getWorkspaceId().equals(runtimeId.getWorkspaceId())) {

              finishEventFuture.complete(event);
            }
          }
        };
  }

