  @POST
  @Consumes(APPLICATION_JSON)
  @Produces(APPLICATION_JSON)
  @GenerateLink(rel = LINK_REL_CREATE_RECIPE)
  public Response createRecipe(NewOldRecipe newRecipe) throws ApiException {
    if (newRecipe == null) {
      throw new BadRequestException("OldRecipe required");
    }
    if (isNullOrEmpty(newRecipe.getType())) {
      throw new BadRequestException("OldRecipe type required");
    }
    if (isNullOrEmpty(newRecipe.getScript())) {
      throw new BadRequestException("OldRecipe script required");
    }
    if (isNullOrEmpty(newRecipe.getName())) {
      throw new BadRequestException("OldRecipe name required");
    }
    String userId = EnvironmentContext.getCurrent().getSubject().getUserId();

    final OldRecipeImpl recipe =
        new OldRecipeImpl()
            .withId(NameGenerator.generate("recipe", 16))
            .withName(newRecipe.getName())
            .withCreator(userId)
            .withType(newRecipe.getType())
            .withScript(newRecipe.getScript())
            .withTags(newRecipe.getTags());
    recipeDao.create(recipe);

    return Response.status(CREATED).entity(asRecipeDescriptor(recipe)).build();
  }

