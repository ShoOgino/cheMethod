  /**
   * Validates the specified machine configs.
   *
   * @param machines machines configs to validate
   * @throws ValidationException when the specified environment is not valid
   */
  public void validate(Map<String, InternalMachineConfig> machines) throws ValidationException {
    checkArgument(
        machines != null && !machines.isEmpty(), "Environment should contain at least 1 machine");

    for (Entry<String, InternalMachineConfig> machineConfigEntry : machines.entrySet()) {
      validateMachine(machineConfigEntry.getKey(), machineConfigEntry.getValue());
    }

    List<String> machinesWithWsagentServer =
        machines
            .entrySet()
            .stream()
            .filter(
                entry ->
                    WsAgentMachineFinderUtil.containsWsAgentServerOrInstaller(entry.getValue()))
            .map(Map.Entry::getKey)
            .collect(toList());

    checkArgument(
        machinesWithWsagentServer.size() == 1,
        "Environment should contain exactly 1 machine with wsagent, but contains '%s'. "
            + "All machines with this agent: %s",
        machinesWithWsagentServer.size(),
        Joiner.on(", ").join(machinesWithWsagentServer));
  }

