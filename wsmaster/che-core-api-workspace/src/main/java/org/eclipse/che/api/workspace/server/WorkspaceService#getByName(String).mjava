    @GET
    @Path("/name/{name}")
    @RolesAllowed("user")
    @Produces(APPLICATION_JSON)
    @ApiOperation(value = "Get the workspace by the name from the workspaces owned by the current user",
                  notes = "This operation can be performed only by the authorized user")
    @ApiResponses({@ApiResponse(code = 200, message = "The response contains requested workspace entity"),
                   @ApiResponse(code = 404, message = "The workspace with specified name does not exist for current user "),
                   @ApiResponse(code = 403, message = "The user is not the workspace owner"),
                   @ApiResponse(code = 500, message = "Internal server error occurred")})
    @Deprecated
    public UsersWorkspaceDto getByName(@ApiParam("The workspace name") @PathParam("name") String name) throws ServerException,
                                                                                                              BadRequestException,
                                                                                                              NotFoundException,
                                                                                                              ForbiddenException {
        return injectLinks(asDto(workspaceManager.getWorkspace(name, getCurrentUserId())));
    }

