  /**
   * validates internals of Environment and creates instance of InternalEnvironment
   * ideally it should be final but needed to be owerriden for Dockerimage type workaround
   *
   * @param environment the environment
   * @return InternalEnvironment
   * @throws InfrastructureException if infrastructure specific error occures
   * @throws ValidationException if validation fails
   */
  public InternalEnvironment create(final Environment environment)
      throws InfrastructureException, ValidationException {

    Map<String, InternalMachineConfig> machines = new HashMap<>();
    List<Warning> warnings = new ArrayList<>();

    InternalRecipe recipe = recipeRetriever.getRecipe(environment.getRecipe());

    if(environment.getMachines().isEmpty())
      throw new ValidationException("No machines defined");

    for (Map.Entry<String, ? extends MachineConfig> machineEntry :
        environment.getMachines().entrySet()) {
      MachineConfig machineConfig = machineEntry.getValue();

      List<Installer> installers = null;
      try {
        installers = installerRegistry.getOrderedInstallers(machineConfig.getInstallers());
      } catch (InstallerException e) {
        throw new InfrastructureException(e);
      }

      machines.put(
          machineEntry.getKey(),
          new InternalMachineConfig(
              installers,
              normalizeServers(machineConfig.getServers()),
              machineConfig.getEnv(),
              machineConfig.getAttributes()));
    }

    return create(machines, recipe, warnings);
  }

