    /**
     * Asynchronously recovers the workspace from the snapshot.
     *
     * @param workspaceId
     *         workspace id
     * @param envName
     *         environment name or null if default one should be used
     * @param accountId
     *         account which should be used for this runtime workspace or null when
     *         it should be automatically detected
     * @return starting workspace instance
     * @throws NullPointerException
     *         when {@code workspaceId} is null
     * @throws NotFoundException
     *         when workspace with such id doesn't exist
     * @throws ServerException
     *         when any server error occurs
     * @throws ConflictException
     *         when workspace with such id is not stopped
     * @throws ForbiddenException
     *         when user doesn't have access to start the new workspace
     */
    public WorkspaceImpl recoverWorkspace(String workspaceId,
                                          @Nullable String envName,
                                          @Nullable String accountId) throws NotFoundException,
                                                                             ServerException,
                                                                             ConflictException,
                                                                             ForbiddenException {
        requireNonNull(workspaceId, "Required non-null workspace id");
        return performAsyncStart(workspaceDao.get(workspaceId), envName, true, accountId);
    }

