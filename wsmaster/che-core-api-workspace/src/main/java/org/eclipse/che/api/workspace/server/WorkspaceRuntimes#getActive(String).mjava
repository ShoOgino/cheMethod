  /**
   * Gets the workspaces identifiers owned by given user. If an identifier is present in set then
   * that workspace wasn't stopped at the moment of method execution.
   *
   * @param owner
   * @return workspaces identifiers for those workspaces that are active(not stopped), or an empty
   *     set if there is no a single active workspace
   * @throws ServerException
   * @throws InfrastructureException
   */
  public Set<String> getActive(String owner) throws ServerException, InfrastructureException {
    Set<String> activeForOwner = new HashSet<>();
    Set<String> active = getActive();
    for (String workspaceId : active) {
      InternalRuntime<?> internalRuntime = getInternalRuntime(workspaceId);
      if (owner.equals(internalRuntime.getOwner())) {
        activeForOwner.add(workspaceId);
      }
    }
    return ImmutableSet.copyOf(activeForOwner);
  }

