    @Override
    public void run() {
      WorkspaceStatus status;

      try {
        status = statusSupplier.get();
      } catch (RuntimeException e) {
        // delay
        return;
      }

      switch (status) {
        case STARTING:
          // delay
          return;
        case RUNNING:
          ProbeScheduler.this.cancel(workspaceId);
          schedule(probes, probeResultConsumer);
          return;
        case STOPPED:
        case STOPPING:
        default:
          ProbeScheduler.this.cancel(workspaceId);
      }
    }

