  @POST
  @Path("/{id}/runtime")
  @Produces(APPLICATION_JSON)
  @ApiOperation(
    value = "Start the workspace by the id",
    notes =
        "This operation can be performed only by the workspace owner."
            + "The workspace starts asynchronously"
  )
  @ApiResponses({
    @ApiResponse(code = 200, message = "The workspace is starting"),
    @ApiResponse(code = 404, message = "The workspace with specified id doesn't exist"),
    @ApiResponse(
      code = 403,
      message = "The user is not workspace owner." + "The operation is not allowed for the user"
    ),
    @ApiResponse(code = 409, message = "Any conflict occurs during the workspace start"),
    @ApiResponse(code = 500, message = "Internal server error occurred")
  })
  public WorkspaceDto startById(
      @ApiParam("The workspace id") @PathParam("id") String workspaceId,
      @ApiParam("The name of the workspace environment that should be used for start")
          @QueryParam("environment")
          String envName,
      @ApiParam("Restore workspace from snapshot") @QueryParam("restore") Boolean restore)
      throws ServerException, BadRequestException, NotFoundException, ForbiddenException,
          ConflictException {

    Map<String, String> options = new HashMap<>();
    if (restore != null) options.put("restore", restore.toString());
    return asDtoWithLinks(workspaceManager.startWorkspace(workspaceId, envName, options));
  }

