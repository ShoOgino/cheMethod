    /**
     * Synchronously creates a snapshot of a given workspace,
     * the workspace must be {@link WorkspaceStatus#RUNNING}.
     *
     * <p>Publishes {@link EventType#SNAPSHOT_CREATING}, {@link EventType#SNAPSHOT_CREATED},
     * {@link EventType#SNAPSHOT_CREATION_ERROR} like defined by {@link EventType}.
     *
     * @param workspaceId
     *         the id of workspace to create snapshot
     * @throws NotFoundException
     *         when workspace doesn't have a runtime
     * @throws ConflictException
     *         when workspace status is different from {@link WorkspaceStatus#RUNNING}
     * @throws ServerException
     *         when any other error occurs
     */
    public void snapshot(String workspaceId) throws NotFoundException,
                                                    ConflictException,
                                                    ServerException {
        try (@SuppressWarnings("unused") Unlocker u = locks.writeLock(workspaceId)) {
            getRunningState(workspaceId).status = SNAPSHOTTING;
        }
        snapshotAndUpdateStatus(workspaceId);
    }

