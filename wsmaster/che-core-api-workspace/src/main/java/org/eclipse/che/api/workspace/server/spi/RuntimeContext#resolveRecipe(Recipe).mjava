  private InternalRecipe resolveRecipe(Recipe recipe) throws InfrastructureException {
    if (recipe.getContent() != null && !recipe.getContent().isEmpty()) {
      return new InternalRecipe(recipe, recipe.getContent());
    } else if (recipe.getLocation() != null && !recipe.getLocation().isEmpty()) {

      try {
        URL recipeUrl = new URL(recipe.getLocation());
        if (recipeUrl.getProtocol().startsWith("http")) {
          String script =
              HttpRequestHelper.requestString(recipe.getLocation(), HttpMethod.GET, null, null);
          return new InternalRecipe(recipe, script);
        } else {
          return new InternalRecipe(recipe, recipe.getLocation());
        }
      } catch (MalformedURLException e) {
        return new InternalRecipe(recipe, recipe.getLocation());
      } catch (Exception x) {
        throw new InfrastructureException(x);
      }

    } else {
      return new InternalRecipe(recipe, "");
    }
  }

