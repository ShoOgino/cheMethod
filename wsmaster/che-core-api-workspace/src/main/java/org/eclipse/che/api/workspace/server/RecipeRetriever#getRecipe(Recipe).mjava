  /**
   * Returns content of recipe either by getting it from provided {@link Recipe} object or by
   * retrieving it from location set in provided recipe.
   *
   * @param recipe recipe of {@link org.eclipse.che.api.core.model.workspace.config.Environment}
   * @return recipe content
   * @throws NullPointerException when recipe is null
   * @throws IllegalArgumentException when both recipe content and location are null or empty
   */
  public String getRecipe(Recipe recipe) throws InfrastructureException {
    Objects.requireNonNull(recipe, "Recipe should not be null");
    if (recipe.getContent() != null && !recipe.getContent().isEmpty()) {
      // no downloading is needed
      return recipe.getContent();
    }
    if (recipe.getLocation() == null || recipe.getLocation().isEmpty()) {
      throw new IllegalArgumentException("Neither content nor location are present in recipe");
    }
    URL url = prepareURL(recipe.getLocation());
    return downloadContent(url);
  }

