  public SnapshotDto injectLinks(SnapshotDto snapshotDto, ServiceContext serviceContext) {
    final UriBuilder uriBuilder = serviceContext.getServiceUriBuilder();
    final Link machineLink =
        createLink(
            "GET",
            serviceContext
                .getBaseUriBuilder()
                .path("/machine/{id}")
                .build(snapshotDto.getId())
                .toString(),
            APPLICATION_JSON,
            "get machine");
    final Link workspaceLink =
        createLink(
            "GET",
            uriBuilder
                .clone()
                .path(WorkspaceService.class, "getByKey")
                .build(snapshotDto.getWorkspaceId())
                .toString(),
            APPLICATION_JSON,
            LIN_REL_GET_WORKSPACE);
    final Link workspaceSnapshotLink =
        createLink(
            "GET",
            uriBuilder
                .clone()
                .path(WorkspaceService.class, "getSnapshot")
                .build(snapshotDto.getWorkspaceId())
                .toString(),
            APPLICATION_JSON,
            LINK_REL_SELF);
    return snapshotDto.withLinks(asList(machineLink, workspaceLink, workspaceSnapshotLink));
  }

