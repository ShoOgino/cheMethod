    /**
     * Stops running environment of specified workspace.
     *
     * @param workspaceId
     *         ID of workspace that owns environment
     * @throws EnvironmentNotRunningException
     *         when environment is not running
     * @throws ServerException
     *         if other error occurs
     */
    public void stop(String workspaceId) throws EnvironmentNotRunningException,
                                                ServerException {
        List<Instance> machinesCopy = null;
        EnvironmentHolder environmentHolder;
        try (CloseableLock lock = stripedLocks.acquireReadLock(workspaceId)) {
            environmentHolder = environments.get(workspaceId);
            if (environmentHolder == null || environmentHolder.status != EnvStatus.RUNNING) {
                throw new EnvironmentNotRunningException(
                        format("Stop of not running environment of workspace with ID '%s' is not allowed.",
                               workspaceId));
            }
            List<Instance> machines = environmentHolder.machines;
            if (machines != null && !machines.isEmpty()) {
                machinesCopy = new ArrayList<>(machines);
            }
        }

        // long operation - perform out of lock
        if (machinesCopy != null) {
            destroyEnvironment(environmentHolder.networkId, machinesCopy);
        }

        try (CloseableLock lock = stripedLocks.acquireWriteLock(workspaceId)) {
            environments.remove(workspaceId);
        }
    }

