  @Test
  public void shouldUseConfiguredInServiceRamInsteadOfSetDefaultOnEnvironmentStart()
      throws Exception {
    // given
    EnvironmentImpl env = createEnv();
    String machineName = "machineWithoutRam";
    // prepare CheServicesEnvironmentImpl which should return compose parser
    CheServicesEnvironmentImpl cheServicesEnvironment = createCheServicesEnvByName(machineName);
    cheServicesEnvironment.getServices().get(machineName).withMemLimit(42943433L);

    // when
    startEnv(env, cheServicesEnvironment);

    // then
    ArgumentCaptor<CheServiceImpl> captor = ArgumentCaptor.forClass(CheServiceImpl.class);
    verify(machineProvider)
        .startService(
            anyString(),
            anyString(),
            anyString(),
            eq(machineName),
            eq(false),
            anyString(),
            captor.capture(),
            any(LineConsumer.class));
    CheServiceImpl actualService = captor.getValue();
    assertEquals((long) actualService.getMemLimit(), 42943433L);
  }

