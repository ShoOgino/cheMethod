    @Test(dependsOnMethods = "shouldGetWorkspaceById")
    public void shouldUpdateWorkspace() throws Exception {
//        final WorkspaceImpl workspace = new WorkspaceImpl(workspaces[0], workspaces[0].getAccount());
//
//        // Remove an existing project configuration from workspace
//        workspace.getConfig().getProjects().remove(1);
//
//        // Add new project to the workspace configuration
//        final SourceStorageImpl source3 = new SourceStorageImpl();
//        source3.setType("type3");
//        source3.setLocation("location3");
//        source3.setParameters(new HashMap<>(ImmutableMap.of("param1", "value1",
//                                                            "param2", "value2",
//                                                            "param3", "value3")));
//        final ProjectConfigImpl newProjectCfg = new ProjectConfigImpl();
//        newProjectCfg.setPath("/path3");
//        newProjectCfg.setType("type3");
//        newProjectCfg.setName("project3");
//        newProjectCfg.setDescription("description3");
//        newProjectCfg.getMixins().addAll(asList("mixin3", "mixin4"));
//        newProjectCfg.setSource(source3);
//        newProjectCfg.getAttributes().put("new-key", asList("1", "2"));
//        workspace.getConfig().getProjects().add(newProjectCfg);
//
//        // Update an existing project configuration
//        final ProjectConfigImpl projectCfg = workspace.getConfig().getProjects().get(0);
//        projectCfg.getAttributes().clear();
//        projectCfg.getSource().setLocation("new-location");
//        projectCfg.getSource().setType("new-type");
//        projectCfg.getSource().getParameters().put("new-param", "new-param-value");
//        projectCfg.getMixins().add("new-mixin");
//        projectCfg.setPath("/new-path");
//        projectCfg.setDescription("new project description");
//
//        // Remove an existing command
//        workspace.getConfig().getCommands().remove(1);
//
//        // Add a new command
//        final CommandImpl newCmd = new CommandImpl();
//        newCmd.setName("name3");
//        newCmd.setType("type3");
//        newCmd.setCommandLine("cmd3");
//        newCmd.getAttributes().putAll(ImmutableMap.of("attr1", "value1",
//                                                      "attr2", "value2",
//                                                      "attr3", "value3"));
//        workspace.getConfig().getCommands().add(newCmd);
//
//        // Update an existing command
//        final CommandImpl command = workspace.getConfig().getCommands().get(0);
//        command.setName("new-name");
//        command.setType("new-type");
//        command.setCommandLine("new-command-line");
//        command.getAttributes().clear();
//
//        // Remove an existing machine config
//        workspace.getConfig().getEnvironments().get(0).getMachineConfigs().remove(1);
//
//        // Add a new machine config
//        final MachineConfigImpl newMachineCfg = new MachineConfigImpl();
//        newMachineCfg.setName("name3");
//        newMachineCfg.setDev(false);
//        newMachineCfg.setType("type3");
//        newMachineCfg.setLimits(new MachineLimitsImpl(2048));
//        newMachineCfg.getEnvVariables().putAll(ImmutableMap.of("env4", "value4",
//                                                               "env5", "value5",
//                                                               "env6", "value6"));
//        newMachineCfg.setServers(new ArrayList<>(singleton(new ServerConfImpl("ref", "port", "protocol", "path"))));
//        newMachineCfg.setSource(new MachineSourceImpl("type", "location", "content"));
//        workspace.getConfig().getEnvironments().get(0).getMachineConfigs().add(newMachineCfg);
//
//        // Update an existing machine configuration
//        final MachineConfigImpl machineCfg = workspace.getConfig().getEnvironments().get(0).getMachineConfigs().get(0);
//        machineCfg.getEnvVariables().clear();
//        machineCfg.setType("new-type");
//        machineCfg.setName("new-name");
//        machineCfg.getLimits().setRam(512);
//        machineCfg.getServers().clear();
//        machineCfg.getServers().add(new ServerConfImpl("new-ref", "new-port", "new-protocol", "new-path"));
//        machineCfg.getSource().setType("new-type");
//        machineCfg.getSource().setLocation("new-location");
//        machineCfg.getSource().setContent("new-content");
//
//        // Remove an existing environment
//        workspace.getConfig().getEnvironments().remove(1);
//
//        // Add a new environment
//        final EnvironmentImpl newEnv = new EnvironmentImpl();
//        newEnv.setName("new-env");
//        final MachineConfigImpl newEnvMachineCfg = new MachineConfigImpl(newMachineCfg);
//        newEnvMachineCfg.setDev(true);
//        newEnv.getMachineConfigs().add(newEnvMachineCfg);
//        workspace.getConfig().getEnvironments().add(newEnv);
//
//        // Update an existing environment
//        final EnvironmentImpl environment = workspace.getConfig().getEnvironments().get(0);
//        environment.setName("new-name");
//
//        // Update workspace configuration
//        final WorkspaceConfigImpl wCfg = workspace.getConfig();
//        wCfg.setDefaultEnv(newEnv.getName());
//        wCfg.setName("new-name");
//        wCfg.setDescription("This is a new description");
//
//        // Update workspace object
//        workspace.setName("new-name");
//        workspace.setAccount(new AccountImpl("accId", "new-namespace", "test"));
//        workspace.getAttributes().clear();
//
//        workspaceDao.update(workspace);
//
//        assertEquals(workspaceDao.get(workspace.getId()), new WorkspaceImpl(workspace, workspace.getAccount()));
    }

