  private static MachineImpl createMachine(
      String workspaceId,
      String envName,
      CheServiceImpl service,
      String serviceName,
      boolean isDev) {
    MachineSourceImpl machineSource;
    if (service.getBuild() != null && service.getBuild().getContext() != null) {
      machineSource =
          new MachineSourceImpl("dockerfile").setLocation(service.getBuild().getContext());
    } else if (service.getImage() != null) {
      machineSource = new MachineSourceImpl("image").setLocation(service.getImage());
    } else if (service.getBuild() != null
        && service.getBuild().getContext() == null
        && service.getBuild().getDockerfileContent() != null) {

      machineSource =
          new MachineSourceImpl("dockerfile").setContent(service.getBuild().getDockerfileContent());
    } else {
      throw new IllegalArgumentException("Build context or image should contain non empty value");
    }
    MachineLimitsImpl limits =
        new MachineLimitsImpl((int) Size.parseSizeToMegabytes(service.getMemLimit() + "b"));

    return MachineImpl.builder()
        .setConfig(
            MachineConfigImpl.builder()
                .setDev(isDev)
                .setName(serviceName)
                .setSource(machineSource)
                .setLimits(limits)
                .setType("docker")
                .build())
        .setId(service.getId())
        .setOwner("userName")
        .setStatus(MachineStatus.RUNNING)
        .setWorkspaceId(workspaceId)
        .setEnvName(envName)
        .setRuntime(new MachineRuntimeInfoImpl(emptyMap(), emptyMap(), emptyMap()))
        .build();
  }

