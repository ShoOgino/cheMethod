    @Test
    public void stopsTheEnvironmentWhileStartOfMachineIsInterrupted() throws Exception {
        // given
        EnvironmentImpl env = createEnv();
        String envName = "env-1";
        String workspaceId = "wsId";

        int[] counter = new int[] {env.getMachines().size()};
        ArrayList<Instance> created = new ArrayList<>();
        when(machineProvider.startService(anyString(),
                                          eq(workspaceId),
                                          eq(envName),
                                          anyString(),
                                          anyBoolean(),
                                          anyString(),
                                          any(CheServiceImpl.class),
                                          any(LineConsumer.class)))
                .thenAnswer(invocationOnMock -> {
                    // interrupt when the last machine from environment is started
                    if (--counter[0] == 0) {
                        Thread.currentThread().interrupt();
                        throw new ServerException("interrupted!");
                    }
                    Object[] arguments = invocationOnMock.getArguments();
                    NoOpMachineInstance instance = spy(new NoOpMachineInstance(createMachine(workspaceId,
                                                                                             envName,
                                                                                             (CheServiceImpl)arguments[6],
                                                                                             (String)arguments[3],
                                                                                             (boolean)arguments[4])));
                    created.add(instance);
                    return instance;
                });
        when(environmentParser.parse(env)).thenReturn(createCheServicesEnv());

        // when, then
        try {
            engine.start(workspaceId,
                         envName,
                         env,
                         false,
                         messageConsumer,
                         startedHandler);
            fail("environment must not be running");
        } catch (EnvironmentStartInterruptedException x) {
            assertEquals(x.getMessage(), format("Start of environment '%s' in workspace '%s' is interrupted",
                                                envName, workspaceId));
        }

        // environment must not be running
        try {
            engine.getMachines(workspaceId);
            fail("environment must not be running");
        } catch (EnvironmentNotRunningException x) {
            assertEquals(x.getMessage(), format("Environment with ID '%s' is not found", workspaceId));
        }

        // all the machines expect of the last one must be destroyed
        for (Instance instance : created) {
            verify(instance).destroy();
        }
    }

