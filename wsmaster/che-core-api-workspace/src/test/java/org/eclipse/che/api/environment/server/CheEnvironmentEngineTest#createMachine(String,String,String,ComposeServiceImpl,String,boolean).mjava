    private static MachineImpl createMachine(String id,
                                             String workspaceId,
                                             String envName,
                                             ComposeServiceImpl service,
                                             String serviceName,
                                             boolean isDev) {
        MachineSourceImpl machineSource;
        if (service.getBuild() != null && service.getBuild().getContext() != null) {
            machineSource = new MachineSourceImpl("dockerfile").setLocation(service.getBuild().getContext());
        } else if (service.getImage() != null) {
            machineSource = new MachineSourceImpl("image").setLocation(service.getImage());
        } else {
            throw new IllegalArgumentException("Build context or image should contain non empty value");
        }
        LimitsImpl limits = new LimitsImpl((int)Size.parseSizeToMegabytes(service.getMemLimit() + "b"));

        return MachineImpl.builder()
                          .setConfig(MachineConfigImpl.builder()
                                                      .setDev(isDev)
                                                      .setName(serviceName)
                                                      .setSource(machineSource)
                                                      .setLimits(limits)
                                                      .setType("docker")
                                                      .build())
                          .setId(id)
                          .setOwner("userName")
                          .setStatus(MachineStatus.RUNNING)
                          .setWorkspaceId(workspaceId)
                          .setEnvName(envName)
                          .setRuntime(new MachineRuntimeInfoImpl(new HashMap<>(),
                                                                 new HashMap<>(),
                                                                 new HashMap<>()))
                          .build();
    }

