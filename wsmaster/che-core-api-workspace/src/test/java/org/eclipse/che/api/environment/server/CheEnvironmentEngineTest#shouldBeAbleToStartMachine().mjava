  @Test
  public void shouldBeAbleToStartMachine() throws Exception {
    // given
    List<Instance> instances = startEnv();
    verify(machineProvider, times(2))
        .startService(
            anyString(),
            anyString(),
            anyString(),
            anyString(),
            anyBoolean(),
            anyString(),
            any(CheServiceImpl.class),
            any(LineConsumer.class));
    String workspaceId = instances.get(0).getWorkspaceId();

    when(engine.generateMachineId()).thenReturn("newMachineId");
    Instance newMachine = mock(Instance.class);
    when(newMachine.getId()).thenReturn("newMachineId");
    when(newMachine.getWorkspaceId()).thenReturn(workspaceId);
    when(machineProvider.startService(
            anyString(),
            anyString(),
            anyString(),
            anyString(),
            anyBoolean(),
            anyString(),
            any(CheServiceImpl.class),
            any(LineConsumer.class)))
        .thenReturn(newMachine);

    MachineConfigImpl config = createConfig(false);

    // when
    Instance actualInstance = engine.startMachine(workspaceId, config, emptyList());

    // then
    assertEquals(actualInstance, newMachine);
    verify(instanceProvider, never()).createInstance(any(Machine.class), any(LineConsumer.class));
    verify(machineProvider, times(3))
        .startService(
            anyString(),
            anyString(),
            anyString(),
            anyString(),
            anyBoolean(),
            anyString(),
            any(CheServiceImpl.class),
            any(LineConsumer.class));
  }

