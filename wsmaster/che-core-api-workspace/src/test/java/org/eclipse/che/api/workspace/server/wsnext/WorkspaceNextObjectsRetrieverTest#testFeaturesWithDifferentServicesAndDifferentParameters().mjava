  @Test
  public void testFeaturesWithDifferentServicesAndDifferentParameters() throws Exception {
    Map<String, String> featuresAttributes =
        featuresAttribute(
            TEST_FEATURE_NAME, TEST_FEATURE_VERSION, TEST_FEATURE_2_NAME, TEST_FEATURE_2_VERSION);
    CheFeature feature1 =
        testFeature(
            TEST_SERVICE, TEST_SERVICE_VERSION, TEST_SERVICE_PARAM_NAME, TEST_SERVICE_PARAM_VALUE);
    CheFeature feature2 =
        testFeature(
            TEST_SERVICE_2,
            TEST_SERVICE_VERSION_2,
            TEST_SERVICE_PARAM_2_NAME,
            TEST_SERVICE_PARAM_VALUE_2);
    CheService service1 =
        testServiceWithSpecifiedServiceAndEnv(
            TEST_SERVICE,
            TEST_SERVICE_VERSION,
            TEST_SERVICE_ENV_NAME_2,
            TEST_SERVICE_PARAM_PLACEHOLDER);
    CheService service2 =
        testServiceWithSpecifiedServiceAndEnv(
            TEST_SERVICE_2,
            TEST_SERVICE_VERSION_2,
            TEST_SERVICE_ENV_NAME_3,
            TEST_SERVICE_PARAM_2_PLACEHOLDER);
    doReturn(feature1)
        .when(retriever)
        .getBody(eq(getFeatureURI(TEST_FEATURE_NAME, TEST_FEATURE_VERSION)), eq(CheFeature.class));
    doReturn(feature2)
        .when(retriever)
        .getBody(
            eq(getFeatureURI(TEST_FEATURE_2_NAME, TEST_FEATURE_2_VERSION)), eq(CheFeature.class));
    doReturn(service1)
        .when(retriever)
        .getBody(eq(getServiceURI(TEST_SERVICE, TEST_SERVICE_VERSION)), eq(CheService.class));
    doReturn(service2)
        .when(retriever)
        .getBody(eq(getServiceURI(TEST_SERVICE_2, TEST_SERVICE_VERSION_2)), eq(CheService.class));
    CheService expectedService1 =
        expectedServiceWithSpecifiedServiceAndEnv(
            TEST_SERVICE, TEST_SERVICE_VERSION, TEST_SERVICE_ENV_NAME_2, TEST_SERVICE_PARAM_VALUE);
    CheService expectedService2 =
        expectedServiceWithSpecifiedServiceAndEnv(
            TEST_SERVICE_2,
            TEST_SERVICE_VERSION_2,
            TEST_SERVICE_ENV_NAME_3,
            TEST_SERVICE_PARAM_VALUE_2);

    Collection<CheService> services = retriever.get(featuresAttributes);

    assertEquals(services, Arrays.asList(expectedService1, expectedService2));
  }

