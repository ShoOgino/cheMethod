    @Test
    public void performAsyncStartShouldUseProvidedEnvInsteadOfDefault() throws Exception {
        final WorkspaceConfigImpl config = createConfig();
        final EnvironmentImpl nonDefaultEnv = new EnvironmentImpl("non-default-env",
                                                                  null,
                                                                  config.getEnvironments().get(0).getMachineConfigs());
        config.getEnvironments().add(nonDefaultEnv);
        final WorkspaceImpl workspace = workspaceManager.createWorkspace(config, "user123", "account");
        when(workspaceDao.get(workspace.getId())).thenReturn(workspace);
        when(runtimes.get(workspace.getId())).thenThrow(new NotFoundException(""));
        final RuntimeDescriptor descriptor = createDescriptor(workspace, STARTING);
        when(runtimes.start(any(), anyString(), anyBoolean())).thenReturn(descriptor);

        workspaceManager.startWorkspace(workspace.getId(), nonDefaultEnv.getName(), "account", null);

        // timeout is needed because this invocation will run in separate thread asynchronously
        verify(runtimes, timeout(2000)).start(workspace, nonDefaultEnv.getName(), false);
    }

