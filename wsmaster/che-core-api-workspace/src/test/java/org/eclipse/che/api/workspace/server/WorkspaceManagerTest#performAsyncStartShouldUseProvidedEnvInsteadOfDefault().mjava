    @Test
    public void performAsyncStartShouldUseProvidedEnvInsteadOfDefault() throws Exception {
        final WorkspaceConfigImpl config = createConfig();
        final EnvironmentImpl nonDefaultEnv = new EnvironmentImpl(null, null);
        config.getEnvironments().put("non-default-env", nonDefaultEnv);
        final WorkspaceImpl workspace = workspaceManager.createWorkspace(config, NAMESPACE);
        when(workspaceDao.get(workspace.getId())).thenReturn(workspace);
        when(runtimes.get(workspace.getId())).thenThrow(new NotFoundException(""));
        final RuntimeDescriptor descriptor = createDescriptor(workspace, STARTING);
        when(runtimes.startAsync(any(), anyString(), anyBoolean())).thenReturn(immediateFuture(descriptor));
        workspaceManager.startWorkspace(workspace.getId(), "non-default-env", false);

        // timeout is needed because this invocation will run in separate thread asynchronously
        verify(runtimes).startAsync(workspace, "non-default-env", false);
    }

