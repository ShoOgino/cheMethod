    @Test
    public void workspaceShouldBeInStartingStatusUntilDevMachineIsNotStarted() throws Exception {
        final MachineManager machineManagerMock = mock(MachineManager.class);
        final WorkspaceRuntimes runtimes = new WorkspaceRuntimes(machineManagerMock, eventService);
        final WorkspaceImpl workspace = createWorkspace();

        // check if workspace in starting status before dev machine is started
        when(machineManagerMock.createMachineSync(anyObject(), anyString(), anyString())).thenAnswer(invocationOnMock -> {
            final RuntimeDescriptor descriptor = runtimes.get(workspace.getId());
            final MachineConfig cfg = (MachineConfig)invocationOnMock.getArguments()[0];
            if (cfg.isDev()) {
                assertEquals(descriptor.getRuntimeStatus(), STARTING, "Workspace status is not 'STARTING'");
            }
            return createMachine((MachineConfig)invocationOnMock.getArguments()[0]);
        });

        runtimes.start(workspace, workspace.getConfig().getDefaultEnv(), false);

        verify(machineManagerMock, times(2)).createMachineSync(anyObject(), anyString(), anyString());
    }

