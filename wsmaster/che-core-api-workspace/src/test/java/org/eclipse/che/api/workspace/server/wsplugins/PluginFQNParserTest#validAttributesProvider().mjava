  // Objects are
  //   (String description, List<PluginFQN> expectedPlugins, Map<String, String> attributes)
  @DataProvider(name = "validAttributesProvider")
  public static Object[][] validAttributesProvider() {
    PluginFQN basicEditor = new PluginFQN(URI.create("http://registry:8080"), "editor", "ver");
    PluginFQN withRegistry = new PluginFQN(URI.create("http://registry:8080"), "plugin", "1.0");
    PluginFQN noRegistry = new PluginFQN(null, "pluginNoRegistry", "2.0");
    PluginFQN pathRegistry =
        new PluginFQN(URI.create("http://registry/multiple/path/"), "pluginPathRegistry", "3.0");
    return new Object[][] {
      {
        "Test plugin with registry",
        ImmutableList.of(basicEditor, withRegistry),
        createAttributes(formatPlugin(basicEditor), formatPlugins(withRegistry))
      },
      {
        "Test plugin without registry",
        ImmutableList.of(basicEditor, noRegistry),
        createAttributes(formatPlugin(basicEditor), formatPlugins(noRegistry))
      },
      {
        "Test plugin with multi-level path in registry",
        ImmutableList.of(basicEditor, pathRegistry),
        createAttributes(formatPlugin(basicEditor), formatPlugins(pathRegistry))
      },
      {
        "Test attributes with no editor field",
        ImmutableList.of(withRegistry),
        createAttributes(null, formatPlugins(withRegistry))
      },
      {
        "Test attributes with empty editor field",
        ImmutableList.of(withRegistry),
        createAttributes("", formatPlugins(withRegistry))
      },
      {
        "Test attributes with no plugin field",
        ImmutableList.of(basicEditor),
        createAttributes(formatPlugin(basicEditor), (String[]) null)
      },
      {
        "Test attributes with empty plugin field",
        ImmutableList.of(basicEditor),
        createAttributes(formatPlugin(basicEditor), "")
      },
      {
        "Test attributes with no plugin or editor field",
        Collections.emptyList(),
        createAttributes(null, (String[]) null)
      },
      {
        "Test attributes with empty plugin and editor field",
        Collections.emptyList(),
        createAttributes("", "")
      },
      {
        "Test multiple plugins and an editor",
        ImmutableList.of(basicEditor, withRegistry, noRegistry, pathRegistry),
        createAttributes(
            formatPlugin(basicEditor), formatPlugins(withRegistry, noRegistry, pathRegistry))
      },
    };
  }

