  @Test
  public void throwsStartInterruptedExceptionWhenStartIsInterruptedAndEnvironmentStopIsFailed()
      throws Exception {
    WorkspaceImpl workspace = newWorkspace("workspace", "env-name");
    // let's say status is changed to STOPPING by stop method,
    // but starting thread hasn't been interrupted yet
    allowEnvironmentStart(workspace, "env-name", () -> Thread.currentThread().interrupt());
    rejectEnvironmentStop(workspace, new ServerException("no!"));

    CompletableFuture<WorkspaceRuntimeImpl> cmpFuture =
        runtimes.startAsync(workspace, "env-name", false);

    captureAndVerifyRuntimeStateAfterInterruption(workspace, cmpFuture);
    verifyEventsSequence(
        event(
            "workspace",
            WorkspaceStatus.STOPPED,
            WorkspaceStatus.STARTING,
            EventType.STARTING,
            null),
        event(
            "workspace",
            WorkspaceStatus.STARTING,
            WorkspaceStatus.STOPPING,
            EventType.STOPPING,
            null),
        event(
            "workspace",
            WorkspaceStatus.STOPPING,
            WorkspaceStatus.STOPPED,
            EventType.ERROR,
            "no!"));
    verify(envEngine).stop(workspace.getId());
  }

