    @Test
    public void shouldBeAbleToRestartEnvironmentAfterServerException() throws Exception {
        // given
        EnvironmentImpl env = createEnv();
        String envName = "env-1";
        String workspaceId = "wsId";
        String testServerExcMessage = "test exception";
        when(machineProvider.startService(anyString(),
                                          eq(workspaceId),
                                          eq(envName),
                                          anyString(),
                                          anyBoolean(),
                                          anyString(),
                                          any(CheServiceImpl.class),
                                          any(LineConsumer.class)))
                .thenThrow(new ServerException(testServerExcMessage));
        when(environmentParser.parse(env)).thenReturn(createCheServicesEnv());

        // when
        // env start must fails because of server exception
        try {
            engine.start(workspaceId,
                         envName,
                         env,
                         false,
                         messageConsumer,
                         startedHandler);
            fail("Server exception should be thrown");
        } catch (ServerException e) {
            assertEquals(e.getMessage(), testServerExcMessage);
        }

        when(machineProvider.startService(anyString(),
                                          eq(workspaceId),
                                          eq(envName),
                                          anyString(),
                                          anyBoolean(),
                                          anyString(),
                                          any(CheServiceImpl.class),
                                          any(LineConsumer.class)))
                .thenAnswer(invocationOnMock -> {
                    Object[] arguments = invocationOnMock.getArguments();
                    String machineName = (String)arguments[3];
                    boolean isDev = (boolean)arguments[4];
                    CheServiceImpl service = (CheServiceImpl)arguments[6];
                    Machine machine = createMachine(workspaceId,
                                                    envName,
                                                    service,
                                                    machineName,
                                                    isDev);
                    return new NoOpMachineInstance(machine);
                });

        // then
        // env start succeeds
        engine.start(workspaceId,
                     envName,
                     env,
                     false,
                     messageConsumer,
                     startedHandler);
    }

