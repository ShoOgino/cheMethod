  @Test(timeOut = TEST_TIMEOUT_MS)
  public void successfulCheckTest() throws Exception {
    checker =
        spy(
            new TestServerChecker(
                MACHINE_NAME,
                SERVER_REF,
                PERIOD_MS,
                CHECKER_TIMEOUT_MS,
                SUCCESS_THRESHOLD,
                TimeUnit.MILLISECONDS,
                timer));
    CompletableFuture<String> reportCompFuture = checker.getReportCompFuture();
    // not considered as available before start
    assertFalse(reportCompFuture.isDone());
    // ensure server not available before start
    when(checker.isAvailable()).thenReturn(false);

    checker.start();

    verify(checker, timeout((int) (PERIOD_MS * 2)).atLeastOnce()).isAvailable();
    // not considered as available after check
    assertFalse(reportCompFuture.isDone());

    // make server available
    when(checker.isAvailable()).thenReturn(true);

    assertEquals(reportCompFuture.get(), SERVER_REF);
    verify(checker, atLeast(2)).isAvailable();
  }

