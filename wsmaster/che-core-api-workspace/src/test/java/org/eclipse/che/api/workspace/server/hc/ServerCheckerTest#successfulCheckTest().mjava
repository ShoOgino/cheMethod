  @Test(timeOut = TEST_TIMEOUT_MS)
  public void successfulCheckTest() throws Exception {
    checker =
        new TestServerChecker(
            MACHINE_NAME,
            SERVER_REF,
            PERIOD_MS,
            CHECKER_TIMEOUT_MS,
            SUCCESS_THRESHOLD,
            TimeUnit.MILLISECONDS,
            timer);
    CompletableFuture<String> reportCompFuture = checker.getReportCompFuture();
    // not considered as available before start
    assertFalse(reportCompFuture.isDone());
    // ensure server not available before start
    CountDownLatch isAvailableCountDownLatch = checker.setAvailable(false);

    checker.start();

    isAvailableCountDownLatch.await(PERIOD_MS * 2, TimeUnit.MILLISECONDS);
    // not considered as available after check
    assertFalse(reportCompFuture.isDone());

    // make server available
    isAvailableCountDownLatch = checker.setAvailable(true);

    assertEquals(reportCompFuture.get(), SERVER_REF);
    isAvailableCountDownLatch.await(PERIOD_MS * 2, TimeUnit.MILLISECONDS);
  }

