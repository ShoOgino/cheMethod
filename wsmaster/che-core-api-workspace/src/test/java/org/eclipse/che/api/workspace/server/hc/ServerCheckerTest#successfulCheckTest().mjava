    @Test(timeOut = TIMEOUT_MS)
    public void successfulCheckTest() throws Exception {
        CompletableFuture<String> reportCompFuture = checker.getReportCompFuture();
        // not considered as available before start
        assertFalse(reportCompFuture.isDone());
        // ensure server not available before start
        when(checker.isAvailable()).thenReturn(false);

        checker.start();

        verify(checker, timeout((int)(PERIOD_MS * 2)).atLeastOnce()).isAvailable();
        // not considered as available after check
        assertFalse(reportCompFuture.isDone());

        // make server available
        when(checker.isAvailable()).thenReturn(true);

        assertEquals(reportCompFuture.get(), SERVER_REF);
        verify(checker, atLeast(2)).isAvailable();
    }

