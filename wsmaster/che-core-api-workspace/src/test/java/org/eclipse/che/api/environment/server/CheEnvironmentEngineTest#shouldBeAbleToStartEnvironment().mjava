    @Test
    public void shouldBeAbleToStartEnvironment() throws Exception {
        // given
        EnvironmentImpl env = createEnv();
        String envName = "env-1";
        String workspaceId = "wsId";
        List<Instance> expectedMachines = new ArrayList<>();
        when(machineProvider.startService(anyString(),
                                          eq(workspaceId),
                                          eq(envName),
                                          anyString(),
                                          anyBoolean(),
                                          anyString(),
                                          any(CheServiceImpl.class),
                                          any(LineConsumer.class)))
                .thenAnswer(invocationOnMock -> {
                    Object[] arguments = invocationOnMock.getArguments();
                    String machineName = (String)arguments[3];
                    boolean isDev = (boolean)arguments[4];
                    CheServiceImpl service = (CheServiceImpl)arguments[6];
                    Machine machine = createMachine(workspaceId,
                                                    envName,
                                                    service,
                                                    machineName,
                                                    isDev);
                    NoOpMachineInstance instance = spy(new NoOpMachineInstance(machine));
                    expectedMachines.add(instance);
                    return instance;
                });
        when(environmentParser.parse(env)).thenReturn(createCheServicesEnv());

        // when
        List<Instance> machines = engine.start(workspaceId,
                                               envName,
                                               env,
                                               false,
                                               messageConsumer);

        // then
        assertEquals(machines, expectedMachines);
    }

