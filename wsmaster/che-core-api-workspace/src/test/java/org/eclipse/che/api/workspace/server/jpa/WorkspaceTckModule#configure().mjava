    @Override
    protected void configure() {
        H2DBTestServer server = H2DBTestServer.startDefault();
        install(new PersistTestModuleBuilder().setDriver(Driver.class)
                                              .runningOn(server)
                                              .addEntityClasses(AccountImpl.class,
                                                                WorkspaceImpl.class,
                                                                WorkspaceConfigImpl.class,
                                                                ProjectConfigImpl.class,
                                                                EnvironmentImpl.class,
                                                                RecipeImpl.class,
                                                                MachineConfigImpl.class,
                                                                SourceStorageImpl.class,
                                                                ServerConfigImpl.class,
                                                                StackImpl.class,
                                                                CommandImpl.class,
                                                                OldRecipeImpl.class,
                                                                RecipeImpl.class)
                                              .addEntityClass("org.eclipse.che.api.workspace.server.model.impl.ProjectConfigImpl$Attribute")
                                              .setExceptionHandler(H2ExceptionHandler.class)
                                              .build());
        bind(DBInitializer.class).asEagerSingleton();
        bind(SchemaInitializer.class).toInstance(new FlywaySchemaInitializer(server.getDataSource(), "che-schema"));
        bind(TckResourcesCleaner.class).toInstance(new H2JpaCleaner(server));

        bind(new TypeLiteral<TckRepository<AccountImpl>>() {}).toInstance(new JpaTckRepository<>(AccountImpl.class));
        bind(new TypeLiteral<TckRepository<WorkspaceImpl>>() {}).toInstance(new WorkspaceRepository());
        bind(new TypeLiteral<TckRepository<StackImpl>>() {}).toInstance(new StackRepository());
        bind(new TypeLiteral<TckRepository<OldRecipeImpl>>() {}).toInstance(new OldRecipeRepository());

        bind(WorkspaceDao.class).to(JpaWorkspaceDao.class);
        bind(StackDao.class).to(JpaStackDao.class);
        bind(RecipeDao.class).to(JpaRecipeDao.class);
    }

