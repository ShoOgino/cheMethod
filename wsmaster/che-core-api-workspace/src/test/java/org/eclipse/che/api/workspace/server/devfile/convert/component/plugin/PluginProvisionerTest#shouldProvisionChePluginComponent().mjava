  @Test
  public void shouldProvisionChePluginComponent() throws WorkspaceExportException {
    // given
    WorkspaceConfigImpl workspaceConfig = new WorkspaceConfigImpl();
    workspaceConfig
        .getAttributes()
        .put(
            WORKSPACE_TOOLING_PLUGINS_ATTRIBUTE,
            "eclipse/super-plugin/0.0.1,https://localhost:8080#publisher1/custom-plugin/v1");
    workspaceConfig
        .getAttributes()
        .put(
            PLUGINS_COMPONENTS_ALIASES_WORKSPACE_ATTRIBUTE,
            "eclipse/super-plugin/0.0.1=super-plugin,publisher1/custom-plugin/v1=custom");
    workspaceConfig
        .getAttributes()
        .put(format(SIDECAR_MEMORY_LIMIT_ATTR_TEMPLATE, "publisher1/custom-plugin"), "1024M");
    DevfileImpl devfile = new DevfileImpl();

    // when
    pluginComponentProvisioner.provision(devfile, workspaceConfig);

    // then
    assertEquals(devfile.getComponents().size(), 2);
    ComponentImpl superPluginComponent = devfile.getComponents().get(0);
    assertEquals(superPluginComponent.getAlias(), "super-plugin");
    assertEquals(superPluginComponent.getId(), "eclipse/super-plugin/0.0.1");
    assertEquals(superPluginComponent.getType(), PLUGIN_COMPONENT_TYPE);

    ComponentImpl customPluginComponent = devfile.getComponents().get(1);
    assertEquals(customPluginComponent.getAlias(), "custom");
    assertEquals(customPluginComponent.getId(), "publisher1/custom-plugin/v1");
    assertEquals(customPluginComponent.getType(), PLUGIN_COMPONENT_TYPE);
    assertEquals(customPluginComponent.getMemoryLimit(), "1024M");
  }

