  @Test
  public void provisionWithServersThatAreDeclaredByInstallers() throws Exception {
    // given
    ServerConfig installer1server = mock(ServerConfig.class);
    ServerConfig commonInstallerServer = mock(ServerConfig.class);
    ServerConfig installer2Server = mock(ServerConfig.class);
    ServerConfig machine2Server = mock(ServerConfig.class);

    doReturn(
            ImmutableMap.of(
                "installer1server",
                installer1server,
                "commonInstallerServer",
                commonInstallerServer))
        .when(installer1)
        .getServers();
    doReturn(
            ImmutableMap.of(
                "commonInstallerServer",
                commonInstallerServer,
                "installer2Server",
                installer2Server))
        .when(installer2)
        .getServers();

    Map<String, ServerConfig> machine1Servers = new HashMap<>();
    when(machine1.getServers()).thenReturn(machine1Servers);

    Map<String, ServerConfig> machine2Servers = new HashMap<>();
    when(this.machine2.getServers()).thenReturn(machine2Servers);
    machine2Servers.put("machine2Server", machine2Server);

    // when
    installerConfigProvisioner.provision(runtimeIdentity, internalEnvironment);

    // then
    assertEquals(
        machine1Servers,
        ImmutableMap.of(
            "installer1server", installer1server, "commonInstallerServer", commonInstallerServer));
    assertEquals(
        machine2Servers,
        ImmutableMap.of(
            "machine2Server",
            machine2Server,
            "commonInstallerServer",
            commonInstallerServer,
            "installer2Server",
            installer2Server));
  }

