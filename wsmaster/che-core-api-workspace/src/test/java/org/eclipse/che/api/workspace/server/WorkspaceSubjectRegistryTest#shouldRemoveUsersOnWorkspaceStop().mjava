  @Test
  public void shouldRemoveUsersOnWorkspaceStop() throws Exception {
    final String workspaceId1 = "myWorkspaceId";
    final String workspaceId2 = "myWorkspaceId2";
    Subject workspaceStarter = new SubjectImpl("user", "userId", "userToken", false);
    EnvironmentContext.getCurrent().setSubject(workspaceStarter);
    when(event.getEventType()).thenReturn(WorkspaceStatusEvent.EventType.STARTING);
    when(event.getWorkspaceId()).thenReturn(workspaceId1);
    workspaceSubjectRegistry.onEvent(event);

    when(event.getEventType()).thenReturn(WorkspaceStatusEvent.EventType.STARTING);
    when(event.getWorkspaceId()).thenReturn(workspaceId2);
    workspaceSubjectRegistry.onEvent(event);

    assertTrue(workspaceSubjectRegistry.getWorkspaceStarter(workspaceId1) == workspaceStarter);
    assertTrue(workspaceSubjectRegistry.getWorkspaceStarter(workspaceId2) == workspaceStarter);

    when(event.getEventType()).thenReturn(WorkspaceStatusEvent.EventType.STOPPED);
    when(event.getWorkspaceId()).thenReturn(workspaceId2);
    workspaceSubjectRegistry.onEvent(event);

    assertTrue(workspaceSubjectRegistry.isUserKnown(workspaceStarter.getUserId()));

    when(event.getEventType()).thenReturn(WorkspaceStatusEvent.EventType.STOPPED);
    when(event.getWorkspaceId()).thenReturn(workspaceId1);
    workspaceSubjectRegistry.onEvent(event);

    assertFalse(workspaceSubjectRegistry.isUserKnown(workspaceStarter.getUserId()));

    assertNull(workspaceSubjectRegistry.getWorkspaceStarter(workspaceId1));
    assertNull(workspaceSubjectRegistry.getWorkspaceStarter(workspaceId2));
  }

