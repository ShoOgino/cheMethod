    @Test
    public void shouldUseConfiguredInMachineRamInsteadOfSetDefaultOnMachineStart() throws Exception {
        // given
        List<Instance> instances = startEnv();
        String workspaceId = instances.get(0).getWorkspaceId();

        when(engine.generateMachineId()).thenReturn("newMachineId");
        Instance newMachine = mock(Instance.class);
        when(newMachine.getId()).thenReturn("newMachineId");
        when(newMachine.getWorkspaceId()).thenReturn(workspaceId);
        when(machineProvider.startService(anyString(),
                                          anyString(),
                                          anyString(),
                                          anyString(),
                                          anyBoolean(),
                                          anyString(),
                                          any(CheServiceImpl.class),
                                          any(LineConsumer.class)))
                .thenReturn(newMachine);

        MachineConfigImpl config = createConfig(false);
        String machineName = "extraMachine";
        config.setName(machineName);
        config.setLimits(new MachineLimitsImpl(4096));

        // when
        engine.startMachine(workspaceId, config, emptyList());

        // then
        ArgumentCaptor<CheServiceImpl> captor = ArgumentCaptor.forClass(CheServiceImpl.class);
        verify(machineProvider).startService(anyString(),
                                             anyString(),
                                             anyString(),
                                             eq(machineName),
                                             eq(false),
                                             anyString(),
                                             captor.capture(),
                                             any(LineConsumer.class));
        CheServiceImpl actualService = captor.getValue();
        assertEquals((long)actualService.getMemLimit(), 4096L * 1024L * 1024L);
    }

