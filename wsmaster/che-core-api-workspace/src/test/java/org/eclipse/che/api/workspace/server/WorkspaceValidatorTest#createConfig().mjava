  private static WorkspaceConfigDto createConfig() {
    final WorkspaceConfigDto workspaceConfigDto =
        newDto(WorkspaceConfigDto.class).withName("ws-name").withDefaultEnv("dev-env");

    MachineConfigDto machineConfig =
        newDto(MachineConfigDto.class)
            .withInstallers(singletonList("org.eclipse.che.ws-agent"))
            .withServers(
                singletonMap(
                    "ref1",
                    newDto(ServerConfigDto.class)
                        .withPort("8080/tcp")
                        .withProtocol("https")
                        .withAttributes(singletonMap("key", "value"))))
            .withAttributes(new HashMap<>(singletonMap(MEMORY_LIMIT_ATTRIBUTE, "1000000")));
    EnvironmentDto env =
        newDto(EnvironmentDto.class)
            .withMachines(singletonMap("devmachine1", machineConfig))
            .withRecipe(
                newDto(RecipeDto.class)
                    .withType("type")
                    .withContent("content")
                    .withContentType("content type"));
    workspaceConfigDto.setEnvironments(singletonMap("dev-env", env));

    List<CommandDto> commandDtos = new ArrayList<>();
    commandDtos.add(
        newDto(CommandDto.class)
            .withName("command_name")
            .withType("maven")
            .withCommandLine("mvn clean install")
            .withAttributes(
                new HashMap<>(singletonMap("cmd-attribute-name", "cmd-attribute-value"))));
    workspaceConfigDto.setCommands(commandDtos);

    return workspaceConfigDto;
  }

