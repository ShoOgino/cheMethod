  @Test
  public void shouldProvisionPluginWorkspaceAttributeDuringCheEditorComponentApplying()
      throws Exception {
    // given
    ComponentImpl superPluginComponent = new ComponentImpl();
    superPluginComponent.setName("super-plugin");
    superPluginComponent.setId("org.eclipse.che.super-plugin:0.0.1");
    superPluginComponent.setType(PLUGIN_COMPONENT_TYPE);

    ComponentImpl customPluginComponent = new ComponentImpl();
    customPluginComponent.setName("custom");
    customPluginComponent.setId("custom-plugin:v1");
    customPluginComponent.setType(PLUGIN_COMPONENT_TYPE);

    WorkspaceConfigImpl workspaceConfig = new WorkspaceConfigImpl();

    // when
    pluginComponentApplier.apply(workspaceConfig, superPluginComponent, null);
    pluginComponentApplier.apply(workspaceConfig, customPluginComponent, null);

    // then
    String workspaceTooling =
        workspaceConfig.getAttributes().get(WORKSPACE_TOOLING_PLUGINS_ATTRIBUTE);
    assertTrue(workspaceTooling.matches("(.+:.+),(.+:.+)"));
    assertTrue(workspaceTooling.contains("org.eclipse.che.super-plugin:0.0.1"));
    assertTrue(workspaceTooling.contains("custom-plugin:v1"));
    String toolingAliases =
        workspaceConfig.getAttributes().get(PLUGINS_COMPONENTS_ALIASES_WORKSPACE_ATTRIBUTE);
    assertTrue(toolingAliases.matches("(.+:.+=.+),(.+:.+=.+)"));
    assertTrue(toolingAliases.contains("org.eclipse.che.super-plugin:0.0.1=super-plugin"));
    assertTrue(toolingAliases.contains("custom-plugin:v1=custom"));
  }

