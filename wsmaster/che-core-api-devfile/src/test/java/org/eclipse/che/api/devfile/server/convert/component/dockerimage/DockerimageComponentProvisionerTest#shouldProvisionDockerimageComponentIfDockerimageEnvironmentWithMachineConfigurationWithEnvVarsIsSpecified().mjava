  @Test
  public void
      shouldProvisionDockerimageComponentIfDockerimageEnvironmentWithMachineConfigurationWithEnvVarsIsSpecified()
          throws Exception {
    // given
    EnvironmentImpl dockerEnv = new EnvironmentImpl();
    dockerEnv.setRecipe(new RecipeImpl("dockerimage", null, "eclipse/ubuntu_jdk8:latest", null));
    Map<String, String> env = ImmutableMap.of("key1", "value1", "key2", "value2");
    dockerEnv
        .getMachines()
        .put(
            "myMachine",
            new MachineConfigImpl(emptyList(), emptyMap(), env, emptyMap(), emptyMap()));
    WorkspaceConfigImpl workspaceConfig = new WorkspaceConfigImpl();
    workspaceConfig.getEnvironments().put("dockerEnv", dockerEnv);

    Devfile devfile = new Devfile();

    // when
    dockerimageComponentProvisioner.provision(devfile, workspaceConfig);

    // then
    assertEquals(devfile.getComponents().size(), 1);
    Component dockerimageComponent = devfile.getComponents().get(0);
    List<Env> ComponentEnv = dockerimageComponent.getEnv();
    assertEquals(ComponentEnv.size(), 2);
    Optional<Env> env1Opt = ComponentEnv.stream().filter(e -> e.getName().equals("key1")).findAny();
    assertTrue(env1Opt.isPresent());
    assertEquals(env1Opt.get().getValue(), "value1");

    Optional<Env> env2Opt = ComponentEnv.stream().filter(e -> e.getName().equals("key2")).findAny();
    assertTrue(env2Opt.isPresent());
    assertEquals(env2Opt.get().getValue(), "value2");
  }

