  @Test
  public void shouldFindAvailableNameAndCreateWorkspace() throws Exception {
    ArgumentCaptor<WorkspaceConfigImpl> captor = ArgumentCaptor.forClass(WorkspaceConfigImpl.class);
    EnvironmentContext current = new EnvironmentContext();
    current.setSubject(TEST_SUBJECT);
    EnvironmentContext.setCurrent(current);
    WorkspaceImpl ws = mock(WorkspaceImpl.class);
    when(workspaceManager.createWorkspace(any(), anyString(), anyMap()))
        .thenReturn(createWorkspace(WorkspaceStatus.STOPPED));
    when(workspaceManager.getWorkspace(anyString(), anyString()))
        .thenAnswer(
            invocation -> {
              String wsname = invocation.getArgument(0);
              if ("petclinic-dev-environment".equals(wsname)
                  || "petclinic-dev-environment_1".equals(wsname)) {
                return ws;
              }
              throw new NotFoundException("ws not found");
            });
    String yamlContent =
        Files.readFile(getClass().getClassLoader().getResourceAsStream("devfile.yaml"));
    Devfile devfile = devfileManager.parse(yamlContent, true);
    // when
    devfileManager.createWorkspace(devfile, null);
    // then
    verify(workspaceManager).createWorkspace(captor.capture(), anyString(), anyMap());
    assertEquals("petclinic-dev-environment_2", captor.getValue().getName());
  }

