  @DataProvider
  public Object[][] invalidDevfiles() {
    return new Object[][] {
      // Devfile model testing
      {
        "devfile/devfile_missing_name.yaml",
        "The object must have a property whose name is \"name\"."
      },
      {
        "devfile/devfile_missing_spec_version.yaml",
        "The object must have a property whose name is \"specVersion\"."
      },
      {
        "devfile/devfile_with_undeclared_field.yaml",
        "(/unknown):The object must not have a property whose name is \"unknown\"."
      },
      // component model testing
      {
        "component/devfile_missing_component_type.yaml",
        "(/components/0):The object must have a property whose name is \"type\"."
      },
      {
        "component/devfile_unknown_component_type.yaml",
        "(/components/0/type):The value must be one of [\"cheEditor\", \"chePlugin\", \"kubernetes\", \"openshift\", \"dockerimage\"]."
      },
      {
        "component/devfile_component_with_undeclared_field.yaml",
        "(/components/0/unknown):The object must not have a property whose name is \"unknown\"."
      },
      // Command model testing
      {
        "command/devfile_missing_command_name.yaml",
        "(/commands/0):The object must have a property whose name is \"name\"."
      },
      {
        "command/devfile_missing_command_actions.yaml",
        "(/commands/0):The object must have a property whose name is \"actions\"."
      },
      {
        "command/devfile_multiple_commands_actions.yaml",
        "(/commands/0/actions):The array must have at most 1 element(s), but actual number is 2."
      },
      // cheEditor/chePlugin component model testing
      {
        "editor_plugin_component/devfile_editor_component_with_missing_id.yaml",
        "(/components/0):The object must have a property whose name is \"id\"."
      },
      {
        "editor_plugin_component/devfile_editor_component_with_indistinctive_field_reference.yaml",
        "(/components/0/reference):The object must not have a property whose name is \"reference\"."
      },
      {
        "editor_plugin_component/devfile_editor_component_without_version.yaml",
        "(/components/0/id):The string value must match the pattern \"^((https?://)[a-zA-Z0-9_\\-./]+/)?[a-z0-9_\\-.]+/[a-z0-9_\\-.]+/[a-z0-9_\\-.]+$\"."
      },
      {
        "editor_plugin_component/devfile_editor_plugins_components_with_invalid_memory_limit.yaml",
        "(/components/0/memoryLimit):The value must be of string type, but actual type is integer."
      },
      {
        "editor_plugin_component/devfile_editor_component_with_multiple_colons_in_id.yaml",
        "(/components/0/id):The string value must match the pattern \"^((https?://)[a-zA-Z0-9_\\-./]+/)?[a-z0-9_\\-.]+/[a-z0-9_\\-.]+/[a-z0-9_\\-.]+$\"."
      },
      // kubernetes/openshift component model testing
      {
        "kubernetes_openshift_component/devfile_openshift_component_with_missing_reference_and_referenceContent.yaml",
        "At least one of the following sets of problems must be resolved.: [(/components/0):The object must have a property whose name is \"reference\".(/components/0):The object must have a property whose name is \"referenceContent\".]"
      },
      {
        "kubernetes_openshift_component/devfile_openshift_component_with_indistinctive_field_id.yaml",
        "(/components/0/id):The object must not have a property whose name is \"id\"."
      },
      // Dockerimage component model testing
      {
        "dockerimage_component/devfile_dockerimage_component_with_missing_image.yaml",
        "(/components/0):The object must have a property whose name is \"image\"."
      },
      {
        "dockerimage_component/devfile_dockerimage_component_with_missing_memory_limit.yaml",
        "(/components/0):The object must have a property whose name is \"memoryLimit\"."
      },
      {
        "dockerimage_component/devfile_dockerimage_component_with_indistinctive_field_selector.yaml",
        "(/components/0/selector):The object must not have a property whose name is \"selector\"."
      },
    };
  }

