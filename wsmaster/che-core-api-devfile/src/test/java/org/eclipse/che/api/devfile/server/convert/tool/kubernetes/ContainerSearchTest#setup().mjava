  @BeforeMethod
  public void setup() {
    // These are all the object types that can be contained in a KubernetesList which can contain a
    // container:
    // Pod, PodTemplate, DaemonSet, Deployment, Job, ReplicaSet, ReplicationController, StatefulSet,
    // CronJob, DeploymentConfig, Template

    Container container1 = new ContainerBuilder().withName("container1").build();
    Container container2 = new ContainerBuilder().withName("container2").build();
    Container container3 = new ContainerBuilder().withName("container3").build();
    Container container4 = new ContainerBuilder().withName("container4").build();
    Container container5 = new ContainerBuilder().withName("container5").build();
    Container container6 = new ContainerBuilder().withName("container6").build();
    Container container7 = new ContainerBuilder().withName("container7").build();
    Container container8 = new ContainerBuilder().withName("container8").build();
    Container container9 = new ContainerBuilder().withName("container9").build();
    Container container10 = new ContainerBuilder().withName("container10").build();
    Container container11 = new ContainerBuilder().withName("container11").build();
    Container container12 = new ContainerBuilder().withName("container12").build();

    Pod podWithName =
        new PodBuilder()
            .withNewMetadata()
            .withName("podWithName")
            .addToLabels("app", "che")
            .endMetadata()
            .withNewSpec()
            .withContainers(container1)
            .endSpec()
            .build();

    Pod podWithGenerateName =
        new PodBuilder()
            .withNewMetadata()
            .withGenerateName("podWithGenerateName")
            .endMetadata()
            .withNewSpec()
            .withContainers(container2)
            .endSpec()
            .build();

    PodTemplate podTemplate =
        new PodTemplateBuilder()
            .withNewMetadata()
            .withName("podTemplate")
            .addToLabels("app", "che")
            .endMetadata()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container3)
            .endSpec()
            .endTemplate()
            .build();

    DaemonSet daemonSet =
        new DaemonSetBuilder()
            .withNewMetadata()
            .withName("daemonSet")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container4)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    Deployment deployment =
        new DeploymentBuilder()
            .withNewMetadata()
            .withName("deployment")
            .addToLabels("app", "che")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewMetadata()
            .withName("podWithName")
            .endMetadata()
            .withNewSpec()
            .withContainers(container5)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    Job job =
        new JobBuilder()
            .withNewMetadata()
            .withName("job")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container6)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    ReplicaSet replicaSet =
        new ReplicaSetBuilder()
            .withNewMetadata()
            .withName("replicaSet")
            .addToLabels("app", "che")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container7)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    ReplicationController replicationController =
        new ReplicationControllerBuilder()
            .withNewMetadata()
            .withName("replicationController")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container8)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    StatefulSet statefulSet =
        new StatefulSetBuilder()
            .withNewMetadata()
            .withName("statefulSet")
            .addToLabels("app", "che")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container9)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    CronJob cronJob =
        new CronJobBuilder()
            .withNewMetadata()
            .withName("cronJob")
            .endMetadata()
            .withNewSpec()
            .withNewJobTemplate()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container10)
            .endSpec()
            .endTemplate()
            .endSpec()
            .endJobTemplate()
            .endSpec()
            .build();

    DeploymentConfig deploymentConfig =
        new DeploymentConfigBuilder()
            .withNewMetadata()
            .withName("deploymentConfig")
            .addToLabels("app", "che")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewSpec()
            .withContainers(container11)
            .endSpec()
            .endTemplate()
            .endSpec()
            .build();

    Template template =
        new TemplateBuilder()
            .addNewDeploymentObject()
            .withNewMetadata()
            .withName("deploymentWithName")
            .endMetadata()
            .withNewSpec()
            .withNewTemplate()
            .withNewMetadata()
            .withName("podWithName")
            .endMetadata()
            .withNewSpec()
            .withContainers(container12)
            .endSpec()
            .endTemplate()
            .endSpec()
            .endDeploymentObject()
            .build();

    // Pod, PodTemplate, DaemonSet, Deployment, Job, ReplicaSet, ReplicationController, StatefulSet,
    // CronJob, DeploymentConfig, Template
    testList =
        asList(
            podWithName,
            podWithGenerateName,
            podTemplate,
            daemonSet,
            deployment,
            job,
            replicaSet,
            replicationController,
            statefulSet,
            cronJob,
            deploymentConfig,
            template);
  }

