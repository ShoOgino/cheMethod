  @Test
  public void shouldProvisionMachineConfigWithConfiguredServers() throws Exception {
    // given
    Endpoint endpoint =
        new Endpoint()
            .withName("jdk-ls")
            .withPort(4923)
            .withAttributes(
                ImmutableMap.of(
                    "protocol",
                    "http",
                    "path",
                    "/ls",
                    "public",
                    "false",
                    "secure",
                    "false",
                    "discoverable",
                    "true"));
    Tool dockerimageTool =
        new Tool()
            .withName("jdk")
            .withType(DOCKERIMAGE_TOOL_TYPE)
            .withImage("eclipse/ubuntu_jdk8:latest")
            .withMemoryLimit("1G")
            .withEndpoints(singletonList(endpoint));

    // when
    dockerimageToolApplier.apply(workspaceConfig, dockerimageTool, null);

    // then
    MachineConfigImpl machineConfig = getMachineConfig(workspaceConfig, "jdk");
    assertEquals(machineConfig.getServers().size(), 1);
    ServerConfigImpl serverConfig = machineConfig.getServers().get("jdk-ls");
    assertEquals(serverConfig.getProtocol(), "http");
    assertEquals(serverConfig.getPath(), "/ls");
    assertEquals(serverConfig.getPort(), "4923");
    Map<String, String> attributes = serverConfig.getAttributes();
    assertEquals(attributes.size(), 3);
    assertEquals(attributes.get("public"), "false");
    assertEquals(attributes.get("secure"), "false");
    assertEquals(attributes.get("discoverable"), "true");
  }

