  @Test
  public void
      shouldProvisionDockerimageComponentIfDockerimageEnvironmentWithMachineConfigurationWithProjectVolumeIfSpecified()
          throws Exception {
    // given
    EnvironmentImpl dockerEnv = new EnvironmentImpl();
    dockerEnv.setRecipe(new RecipeImpl("dockerimage", null, "eclipse/ubuntu_jdk8:latest", null));
    Map<String, org.eclipse.che.api.workspace.server.model.impl.VolumeImpl> volumes =
        ImmutableMap.of(
            PROJECTS_VOLUME_NAME,
            new org.eclipse.che.api.workspace.server.model.impl.VolumeImpl().withPath("/projects"));
    dockerEnv
        .getMachines()
        .put(
            "myMachine",
            new MachineConfigImpl(emptyList(), emptyMap(), emptyMap(), emptyMap(), volumes));
    WorkspaceConfigImpl workspaceConfig = new WorkspaceConfigImpl();
    workspaceConfig.getEnvironments().put("dockerEnv", dockerEnv);

    DevfileImpl devfile = new DevfileImpl();

    // when
    dockerimageComponentProvisioner.provision(devfile, workspaceConfig);

    // then
    assertEquals(devfile.getComponents().size(), 1);
    ComponentImpl dockerimageComponent = devfile.getComponents().get(0);
    assertTrue(dockerimageComponent.getVolumes().isEmpty());
    assertTrue(dockerimageComponent.getMountSources());
  }

