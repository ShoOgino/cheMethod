  @Test(dataProvider = "invalidUserDevfiles")
  public void shouldFailToUpdateWithInvalidUserDevfile(
      UserDevfileDto userDevfileDto, String expectedErrorMessage) throws Exception {
    // given
    userDevfileDto = userDevfileDto.withId("id-123");
    // when
    final Response response =
        given()
            .auth()
            .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
            .contentType(APPLICATION_JSON)
            .body(DtoFactory.getInstance().toJson(userDevfileDto))
            .when()
            .put(SECURE_PATH + "/devfile/" + userDevfileDto.getId());
    // then
    assertEquals(response.getStatusCode(), 400);
    ServiceError error = unwrapDto(response, ServiceError.class);
    assertNotNull(error);
    assertEquals(error.getMessage(), expectedErrorMessage);
    verifyZeroInteractions(userDevfileManager);
    verifyZeroInteractions(linksInjector);
  }

