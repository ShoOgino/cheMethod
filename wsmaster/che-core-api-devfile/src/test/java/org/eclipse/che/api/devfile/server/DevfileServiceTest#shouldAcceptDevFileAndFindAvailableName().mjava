  @Test
  public void shouldAcceptDevFileAndFindAvailableName() throws Exception {
    ArgumentCaptor<WorkspaceConfigImpl> captor = ArgumentCaptor.forClass(WorkspaceConfigImpl.class);
    EnvironmentContext.setCurrent(environmentContext);
    WorkspaceImpl ws = mock(WorkspaceImpl.class);
    when(workspaceManager.createWorkspace(any(), eq(SUBJECT.getUserName()), anyMap()))
        .thenReturn(createWorkspace(WorkspaceStatus.STOPPED));
    String yamlContent =
        Files.readFile(getClass().getClassLoader().getResourceAsStream("devfile.yaml"));
    when(workspaceManager.getWorkspace(anyString(), anyString()))
        .thenAnswer(
            invocation -> {
              String wsname = invocation.getArgument(0);
              if (wsname.equals("petclinic-dev-environment")
                  || wsname.equals("petclinic-dev-environment_1")) {
                return ws;
              }
              throw new NotFoundException("ws not found");
            });

    final Response response =
        given()
            .auth()
            .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
            .contentType(ContentType.JSON)
            .body(yamlContent)
            .when()
            .post(SECURE_PATH + "/devfile");

    assertEquals(response.getStatusCode(), 201);
    verify(validator).validateBySchema(eq(yamlContent), eq(false));
    verify(workspaceManager).createWorkspace(captor.capture(), eq(SUBJECT.getUserName()), anyMap());
    assertEquals("petclinic-dev-environment_2", captor.getValue().getName());
  }

