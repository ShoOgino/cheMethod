  @POST
  @Consumes({APPLICATION_JSON})
  @Produces(APPLICATION_JSON)
  @ApiOperation(
      value = "Creates a new persistent Devfile",
      consumes = "application/json",
      produces = APPLICATION_JSON,
      nickname = "create",
      response = UserDevfileDto.class)
  @ApiResponses({
    @ApiResponse(code = 201, message = "The devfile successfully created"),
    @ApiResponse(code = 400, message = "Missed required parameters, parameters are not valid"),
    @ApiResponse(code = 403, message = "The user does not have access to create a new devfile"),
    @ApiResponse(
        code = 409,
        message =
            "Conflict error occurred during the devfile creation"
                + "(e.g. The devfile with such name already exists)"),
    @ApiResponse(code = 500, message = "Internal server error occurred")
  })
  public Response createFromUserDevfile(
      @ApiParam(value = "The devfile to create", required = true) UserDevfileDto userDevfileDto)
      throws ConflictException, BadRequestException, ForbiddenException, NotFoundException,
          ServerException {
    requiredNotNull(userDevfileDto, "Devfile");
    return Response.status(201)
        .entity(
            linksInjector.injectLinks(
                asDto(userDevfileManager.createDevfile(userDevfileDto)), getServiceContext()))
        .build();
  }

