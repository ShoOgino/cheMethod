  /**
   * Converts given {@link Devfile} into {@link WorkspaceConfigImpl workspace config}.
   *
   * @param devfile initial devfile
   * @param contentProvider content provider for recipe-type tool
   * @return constructed workspace config
   * @throws DevfileException when general devfile error occurs
   * @throws DevfileFormatException when devfile format is invalid
   * @throws DevfileRecipeFormatException when content of the file specified in recipe type tool is
   *     empty or its format is invalid
   */
  public WorkspaceConfigImpl devFileToWorkspaceConfig(
      Devfile devfile, FileContentProvider contentProvider) throws DevfileException {
    validateCurrentVersion(devfile);
    WorkspaceConfigImpl config = new WorkspaceConfigImpl();

    config.setName(devfile.getName());

    // fill in WorkspaceConfig with configured projects
    List<ProjectConfigImpl> projects = new ArrayList<>();
    devfile.getProjects().forEach(project -> projects.add(devProjectToProjectConfig(project)));
    config.setProjects(projects);

    // fill in Workspace Config with configured tools
    fillInTools(config, devfile, contentProvider);

    // fill in Workspace Config with configured commands
    fillInCommands(config, devfile);

    return config;
  }

