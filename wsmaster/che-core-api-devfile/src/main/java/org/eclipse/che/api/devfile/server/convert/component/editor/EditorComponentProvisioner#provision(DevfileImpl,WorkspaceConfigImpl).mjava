  /**
   * Converts workspace editor attribute to cheEditor component and injects it into the specified
   * {@link DevfileImpl devfile}.
   *
   * @param devfile devfile to which create component should be injected
   * @param workspaceConfig workspace config that may contain environments to convert
   */
  @Override
  public void provision(DevfileImpl devfile, WorkspaceConfigImpl workspaceConfig) {
    String editorAttribute =
        workspaceConfig.getAttributes().get(WORKSPACE_TOOLING_EDITOR_ATTRIBUTE);
    if (editorAttribute == null) {
      return;
    }

    ComponentImpl editorComponent = new ComponentImpl(EDITOR_COMPONENT_TYPE, editorAttribute);

    editorComponent.setAlias(
        workspaceConfig
            .getAttributes()
            .getOrDefault(EDITOR_COMPONENT_ALIAS_WORKSPACE_ATTRIBUTE, editorAttribute));
    editorComponent.setMemoryLimit(
        workspaceConfig
            .getAttributes()
            .get(format(SIDECAR_MEMORY_LIMIT_ATTR_TEMPLATE, editorAttribute.split(":")[0])));
    devfile.getComponents().add(editorComponent);
  }

