  /**
   * Creates {@link Devfile} from given devfile content. Performs schema and integrity validation of
   * input data.
   *
   * @param devfileContent raw content of devfile
   * @param verbose when true, method returns more explained validation error messages if any
   * @return Devfile object created from the source content
   * @throws DevfileFormatException when any of schema or integrity validations fail
   * @throws DevfileFormatException when any yaml parsing error occurs
   */
  public Devfile parse(String devfileContent, boolean verbose) throws DevfileFormatException {
    JsonNode parsed = schemaValidator.validateBySchema(devfileContent, verbose);

    Devfile devfile;
    try {
      devfile = objectMapper.treeToValue(parsed, Devfile.class);
    } catch (JsonProcessingException e) {
      throw new DevfileFormatException(e.getMessage());
    }
    initializeMaps(devfile);

    integrityValidator.validateDevfile(devfile);
    return devfile;
  }

