  private Command commandImplToDevCommand(
      CommandImpl command, Map<String, String> toolsIdToName, String recipeToolName)
      throws WorkspaceExportException {
    Command devCommand = new Command().withName(command.getName());
    Action action = new Action().withCommand(command.getCommandLine()).withType(command.getType());
    String workingDir = command.getAttributes().get(WORKING_DIRECTORY_ATTRIBUTE);
    if (!isNullOrEmpty(workingDir)) {
      action.setWorkdir(workingDir);
    }
    String pluginAttribute = command.getAttributes().get(PLUGIN_ATTRIBUTE);
    if (!isNullOrEmpty(pluginAttribute)) {
      String toolName = toolsIdToName.get(pluginAttribute);
      if (toolName == null) {
        throw new WorkspaceExportException(
            format(
                "Can not evaluate tool name for command '%s' which are configured to be run in plugin '%s'",
                command.getName(), pluginAttribute));
      }
      action.setTool(toolName);
    } else {
      if (isNullOrEmpty(recipeToolName)) {
        throw new WorkspaceExportException(
            format("Can not evaluate tool name for command '%s'", command.getName()));
      }
      action.setTool(recipeToolName);
    }

    devCommand.getActions().add(action);
    devCommand.setAttributes(command.getAttributes());
    // Remove internal attributes
    devCommand.getAttributes().remove(WORKING_DIRECTORY_ATTRIBUTE);
    devCommand.getAttributes().remove(PLUGIN_ATTRIBUTE);
    return devCommand;
  }

