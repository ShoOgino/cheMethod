  /**
   * Makes sure that all items of the specified list have unique names per kind.
   *
   * @param list the list to check
   * @throws DevfileFormatException if objects list contains item with no unique combination of kind
   *     and name
   */
  private void checkItemsHasUniqueKindToName(List<HasMetadata> list) throws DevfileFormatException {
    Set<Pair<String, String>> uniqueKindToName = new HashSet<>();
    for (HasMetadata hasMeta : list) {
      if (!uniqueKindToName.add(new Pair<>(hasMeta.getKind(), hasMeta.getMetadata().getName()))) {
        throw new DevfileFormatException(
            format(
                "Components can not have objects with the same name and kind but there are multiple objects with kind '%s' and name '%s'",
                hasMeta.getKind(), hasMeta.getMetadata().getName()));
      }
    }
  }

