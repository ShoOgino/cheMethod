  /**
   * POJOs are more convenient to use if their collections (including maps) are initialized by
   * default. It allows to adding additional check on null, and initialization before putting first
   * element. Our DTOs and POJOs in other APIs are implemented in this way. But, unfortunately
   * Devfile uses POJOs generator that can't initialize maps by default, see
   * https://github.com/joelittlejohn/jsonschema2pojo/issues/955. It's why we need to do it
   * manually.
   *
   * @param devfile devfile where all maps (including nested objects) should be initialized
   */
  public static void initializeMaps(Devfile devfile) {
    if (devfile.getAttributes() == null) {
      devfile.setAttributes(new HashMap<>());
    }
    devfile
        .getCommands()
        .stream()
        .filter(command -> command.getAttributes() == null)
        .forEach(command -> command.setAttributes(new HashMap<>()));
    devfile
        .getComponents()
        .stream()
        .filter(component -> component.getSelector() == null)
        .forEach(command -> command.setSelector(new HashMap<>()));
    devfile
        .getComponents()
        .stream()
        .flatMap(component -> component.getEndpoints().stream())
        .filter(endpoint -> endpoint.getAttributes() == null)
        .forEach(endpoint -> endpoint.setAttributes(new HashMap<>()));
  }

