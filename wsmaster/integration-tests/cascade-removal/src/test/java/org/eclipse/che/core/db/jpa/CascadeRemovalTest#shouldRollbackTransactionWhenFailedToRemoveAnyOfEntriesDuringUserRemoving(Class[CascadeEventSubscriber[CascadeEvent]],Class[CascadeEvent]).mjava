    @Test(dataProvider = "beforeUserRemoveRollbackActions")
    public void shouldRollbackTransactionWhenFailedToRemoveAnyOfEntriesDuringUserRemoving(
            Class<CascadeEventSubscriber<CascadeEvent>> subscriberClass,
            Class<CascadeEvent> eventClass) throws Exception {
        createTestData();
        eventService.unsubscribe(injector.getInstance(subscriberClass), eventClass);

        // Remove the user, all entries must be rolled back after fail
        try {
            userDao.remove(user.getId());
            fail("UserDao#remove had to throw exception");
        } catch (Exception ignored) {
        }

        // Check all the data rolled back
        assertNotNull(userDao.getById(user.getId()));
        assertNotNull(profileDao.getById(user.getId()));
        assertFalse(preferenceDao.getPreferences(user.getId()).isEmpty());
        assertFalse(sshDao.get(user.getId()).isEmpty());
        wipeTestData();
    }

