  @Override
  protected AsyncRequest doCreateRequest(
      RequestBuilder.Method method, String url, Object dtoBody, boolean async) {
    AsyncRequest request = super.doCreateRequest(method, url, dtoBody, async);
    if (!isWsAgentRequest(url)) {
      AsyncRequest asyncRequest = new KeycloakAsyncRequest(keycloakProvider, method, url, async);
      if (dtoBody != null) {
        if (dtoBody instanceof List<?>) {
          asyncRequest.data(dtoFactory.toJson((List<?>) dtoBody));
        } else if (dtoBody instanceof String) {
          asyncRequest.data((String) dtoBody);
        } else {
          asyncRequest.data(dtoFactory.toJson(dtoBody));
        }
        asyncRequest.header(HTTPHeader.CONTENT_TYPE, MimeType.APPLICATION_JSON);
      } else if (method.equals(RequestBuilder.POST) || method.equals(RequestBuilder.PUT)) {

        /*
          Here we need to setup wildcard mime type in content-type header, because CORS filter
          responses with 403 error in case if user makes POST/PUT request with null body and without
          content-type header. Setting content-type header with wildcard mime type solves this problem.
          Note, this issue need to be investigated, because the problem may be occurred as a bug in
          CORS filter.
        */

        asyncRequest.header(HTTPHeader.CONTENT_TYPE, MimeType.WILDCARD);
      }
      return asyncRequest;
    }
    return request;
  }

