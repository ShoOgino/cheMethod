  public Promise<String> getUpdatedToken(int minValidity) {
    return keycloak.thenPromise(
        new Function<Keycloak, Promise<String>>() {
          @Override
          public Promise<String> apply(Keycloak keycloak) {
            Log.debug(getClass(), "Keycloak initialized with token: ", keycloak.getToken());
            try {
              return keycloak
                  .updateToken(minValidity)
                  .then(
                      new Function<Boolean, String>() {
                        @Override
                        public String apply(Boolean refreshed) {
                          if (refreshed) {
                            Log.debug(
                                getClass(),
                                "Keycloak updated token. New token is : ",
                                keycloak.getToken());
                          } else {
                            Log.debug(getClass(), "Keycloak didn't need to update token.");
                          }
                          return keycloak.getToken();
                        }
                      });
            } catch (Throwable t) {
              Log.error(getClass(), t);
              throw t;
            }
          }
        });
  }

