  /**
   * Performs local and Keycloak accounts linking
   *
   * @return typically Response that redirect user for OAuth provider site
   */
  @GET
  @Path("authenticate")
  public Response authenticate(
      @Required @QueryParam("oauth_provider") String oauthProvider,
      @Required @QueryParam("redirect_after_login") String redirectAfterLogin,
      @Context HttpServletRequest request)
      throws ForbiddenException, BadRequestException {

    Jwt jwtToken = (Jwt) request.getAttribute("token");
    if (jwtToken == null) {
      throw new BadRequestException("No token provided.");
    }
    String accountLinkUrl =
        keycloakServiceClient.getAccountLinkingURL(jwtToken, oauthProvider, redirectAfterLogin);
    return Response.temporaryRedirect(URI.create(accountLinkUrl)).build();
  }

