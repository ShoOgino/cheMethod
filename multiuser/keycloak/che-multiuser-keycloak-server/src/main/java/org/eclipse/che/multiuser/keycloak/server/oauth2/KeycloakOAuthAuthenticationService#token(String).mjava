  /**
   * Gets OAuth token for user from Keycloak.
   *
   * @param oauthProvider OAuth provider name
   * @return OAuthToken
   * @throws ServerException
   */
  @GET
  @Path("token")
  @Produces(MediaType.APPLICATION_JSON)
  public OAuthToken token(@Required @QueryParam("oauth_provider") String oauthProvider)
      throws ForbiddenException, BadRequestException, ConflictException, NotFoundException,
          ServerException, UnauthorizedException {
    try {
      KeycloakTokenResponse response =
          keycloakServiceClient.getIdentityProviderToken(oauthProvider);
      return DtoFactory.newDto(OAuthToken.class)
          .withToken(response.getAccessToken())
          .withScope(response.getScope());
    } catch (IOException e) {
      throw new ServerException(e.getMessage());
    }
  }

