  @POST
  @Path("/github")
  @Consumes(MediaType.APPLICATION_JSON)
  public void setGitHubToken(OAuthToken token) throws ServerException {

    if (token == null) {
      throw new ServerException("No token provided");
    }

    OAuthAuthenticator provider = providers.getAuthenticator(GIT_HUB_OAUTH_PROVIDER);

    if (provider == null) {
      throw new ServerException("\"" + GIT_HUB_OAUTH_PROVIDER + "\" oauth provider not registered");
    } else if (!(provider instanceof OpenShiftGitHubOAuthAuthenticator)) {
      throw new ServerException(
          "'setToken' API is not supported by the original 'GitHubOAuthAuthenticator', 'OpenShiftGitHubOAuthAuthenticator' should be configured instead");
    }

    String userId = EnvironmentContext.getCurrent().getSubject().getUserId();

    try {
      ((OpenShiftGitHubOAuthAuthenticator) provider).setToken(userId, token);
    } catch (IOException e) {
      throw new ServerException(e.getMessage());
    }
  }

