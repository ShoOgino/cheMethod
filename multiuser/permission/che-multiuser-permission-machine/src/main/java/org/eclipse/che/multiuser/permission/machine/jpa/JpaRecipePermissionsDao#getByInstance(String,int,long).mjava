  @Override
  @Transactional
  public Page<RecipePermissionsImpl> getByInstance(String instanceId, int maxItems, long skipCount)
      throws ServerException {
    requireNonNull(instanceId, "Recipe identifier required");
    checkArgument(
        skipCount <= Integer.MAX_VALUE,
        "The number of items to skip can't be greater than " + Integer.MAX_VALUE);
    try {
      final EntityManager entityManager = managerProvider.get();
      final List<RecipePermissionsImpl> recipePermissionsList =
          entityManager
              .createNamedQuery("RecipePermissions.getByRecipeId", RecipePermissionsImpl.class)
              .setParameter("recipeId", instanceId)
              .setMaxResults(maxItems)
              .setFirstResult((int) skipCount)
              .getResultList()
              .stream()
              .map(RecipePermissionsImpl::new)
              .collect(toList());
      final Long permissionsCount =
          entityManager
              .createNamedQuery("RecipePermissions.getCountByRecipeId", Long.class)
              .setParameter("recipeId", instanceId)
              .getSingleResult();

      return new Page<>(recipePermissionsList, skipCount, maxItems, permissionsCount);
    } catch (RuntimeException e) {
      throw new ServerException(e.getLocalizedMessage(), e);
    }
  }

