  @Override
  protected void configure() {
    H2DBTestServer server = H2DBTestServer.startDefault();
    install(
        new PersistTestModuleBuilder()
            .setDriver(Driver.class)
            .runningOn(server)
            .addEntityClasses(
                UserImpl.class,
                OldRecipeImpl.class,
                SnapshotImpl.class,
                AccountImpl.class,
                AbstractPermissions.class,
                RecipePermissionsImpl.class,
                TestWorkspaceEntity.class)
            .setExceptionHandler(H2ExceptionHandler.class)
            .build());
    bind(DBInitializer.class).asEagerSingleton();
    bind(SchemaInitializer.class)
        .toInstance(new FlywaySchemaInitializer(server.getDataSource(), "che-schema"));
    bind(TckResourcesCleaner.class).toInstance(new H2JpaCleaner(server));

    bind(new TypeLiteral<TckRepository<UserImpl>>() {})
        .toInstance(new JpaTckRepository<>(UserImpl.class));
    bind(new TypeLiteral<TckRepository<OldRecipeImpl>>() {})
        .toInstance(new JpaTckRepository<>(OldRecipeImpl.class));
    bind(new TypeLiteral<TckRepository<SnapshotImpl>>() {})
        .toInstance(new JpaTckRepository<>(SnapshotImpl.class));
    bind(new TypeLiteral<TckRepository<Workspace>>() {})
        .toInstance(new TestWorkspacesTckRepository());
    bind(new TypeLiteral<TckRepository<AccountImpl>>() {})
        .toInstance(new JpaTckRepository<>(AccountImpl.class));

    bind(new TypeLiteral<AbstractPermissionsDomain<RecipePermissionsImpl>>() {})
        .to(RecipePermissionsDaoTest.TestDomain.class);
    bind(new TypeLiteral<PermissionsDao<RecipePermissionsImpl>>() {})
        .to(JpaRecipePermissionsDao.class);
    bind(new TypeLiteral<TckRepository<RecipePermissionsImpl>>() {})
        .toInstance(new JpaTckRepository<>(RecipePermissionsImpl.class));

    bind(RecipeDao.class).to(MultiuserJpaRecipeDao.class);
    bind(SnapshotDao.class).to(JpaSnapshotDao.class);
  }

