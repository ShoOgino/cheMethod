  @Override
  @Transactional
  public Page<WorkspaceImpl> getWorkspaces(boolean isTemporary, int maxItems, long skipCount)
      throws ServerException {
    checkArgument(maxItems >= 0, "The number of items to return can't be negative.");
    checkArgument(
        skipCount >= 0,
        "The number of items to skip can't be negative or greater than " + Integer.MAX_VALUE);
    try {
      final List<WorkspaceImpl> list =
          managerProvider
              .get()
              .createNamedQuery("Workspace.getByTemporary", WorkspaceImpl.class)
              .setParameter("temporary", isTemporary)
              .setMaxResults(maxItems)
              .setFirstResult((int) skipCount)
              .getResultList()
              .stream()
              .map(WorkspaceImpl::new)
              .collect(toList());
      final long count =
          managerProvider
              .get()
              .createNamedQuery("Workspace.getByTemporaryCount", Long.class)
              .setParameter("temporary", isTemporary)
              .getSingleResult();
      return new Page<>(list, skipCount, maxItems, count);
    } catch (RuntimeException x) {
      throw new ServerException(x.getLocalizedMessage(), x);
    }
  }

