  /**
   * Gets list of members by specified organization id.
   *
   * @param organizationId organization identifier
   * @param maxItems the maximum number of members to return
   * @param skipCount the number of members to skip
   * @return list of members
   * @throws NullPointerException when {@code organizationId} is null
   * @throws ServerException when any other error occurs during organizations fetching
   */
  public Page<? extends Member> getMembers(String organizationId, int maxItems, long skipCount)
      throws ServerException {
    requireNonNull(organizationId, "Required non-null organization id");
    return memberDao.getMembers(organizationId, maxItems, skipCount);
  }

