  @Override
  @Transactional
  protected void doRemove(String organizationId, String userId) {
    final EntityManager manager = managerProvider.get();
    List<MemberImpl> members =
        manager
            .createNamedQuery("Member.getMember", MemberImpl.class)
            .setParameter("userId", userId)
            .setParameter("organizationId", organizationId)
            .getResultList();
    if (!members.isEmpty()) {
      manager.remove(members.get(0));
      manager.flush();
    }
  }

