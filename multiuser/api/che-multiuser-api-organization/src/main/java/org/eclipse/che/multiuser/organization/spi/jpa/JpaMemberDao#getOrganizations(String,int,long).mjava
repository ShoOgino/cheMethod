  @Override
  @Transactional
  public Page<OrganizationImpl> getOrganizations(String userId, int maxItems, long skipCount)
      throws ServerException {
    requireNonNull(userId, "Required non-null user id");
    checkArgument(
        skipCount <= Integer.MAX_VALUE,
        "The number of items to skip can't be greater than " + Integer.MAX_VALUE);
    try {
      final EntityManager manager = managerProvider.get();
      final List<OrganizationImpl> result =
          manager
              .createNamedQuery("Member.getOrganizations", OrganizationImpl.class)
              .setParameter("userId", userId)
              .setMaxResults(maxItems)
              .setFirstResult((int) skipCount)
              .getResultList();
      final Long organizationsCount =
          manager
              .createNamedQuery("Member.getOrganizationsCount", Long.class)
              .setParameter("userId", userId)
              .getSingleResult();

      return new Page<>(result, skipCount, maxItems, organizationsCount);
    } catch (RuntimeException e) {
      throw new ServerException(e.getLocalizedMessage(), e);
    }
  }

