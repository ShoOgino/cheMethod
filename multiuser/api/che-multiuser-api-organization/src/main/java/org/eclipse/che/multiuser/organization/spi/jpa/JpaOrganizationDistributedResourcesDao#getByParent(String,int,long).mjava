  @Override
  @Transactional
  public Page<OrganizationDistributedResourcesImpl> getByParent(
      String organizationId, int maxItems, long skipCount) throws ServerException {
    requireNonNull(organizationId, "Required non-null organization id");
    checkArgument(
        skipCount <= Integer.MAX_VALUE,
        "The number of items to skip can't be greater than " + Integer.MAX_VALUE);
    try {
      final EntityManager manager = managerProvider.get();
      final List<OrganizationDistributedResourcesImpl> distributedResources =
          manager
              .createNamedQuery(
                  "OrganizationDistributedResources.getByParent",
                  OrganizationDistributedResourcesImpl.class)
              .setParameter("parent", organizationId)
              .setMaxResults(maxItems)
              .setFirstResult((int) skipCount)
              .getResultList();
      final Long distributedResourcesCount =
          manager
              .createNamedQuery("OrganizationDistributedResources.getCountByParent", Long.class)
              .setParameter("parent", organizationId)
              .getSingleResult();
      return new Page<>(
          distributedResources
              .stream()
              .map(OrganizationDistributedResourcesImpl::new)
              .collect(Collectors.toList()),
          skipCount,
          maxItems,
          distributedResourcesCount);
    } catch (RuntimeException e) {
      throw new ServerException(e.getMessage(), e);
    }
  }

