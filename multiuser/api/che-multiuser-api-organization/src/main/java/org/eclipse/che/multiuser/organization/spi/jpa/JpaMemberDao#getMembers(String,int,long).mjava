  @Override
  @Transactional
  public Page<MemberImpl> getMembers(String organizationId, int maxItems, long skipCount)
      throws ServerException {
    requireNonNull(organizationId, "Required non-null organization id");
    checkArgument(
        skipCount <= Integer.MAX_VALUE,
        "The number of items to skip can't be greater than " + Integer.MAX_VALUE);
    try {
      final EntityManager manager = managerProvider.get();
      final List<MemberImpl> members =
          manager
              .createNamedQuery("Member.getByOrganization", MemberImpl.class)
              .setParameter("organizationId", organizationId)
              .setMaxResults(maxItems)
              .setFirstResult((int) skipCount)
              .getResultList()
              .stream()
              .map(MemberImpl::new)
              .collect(toList());
      final Long membersCount =
          manager
              .createNamedQuery("Member.getCountByOrganizationId", Long.class)
              .setParameter("organizationId", organizationId)
              .getSingleResult();
      return new Page<>(members, skipCount, maxItems, membersCount);
    } catch (RuntimeException e) {
      throw new ServerException(e.getLocalizedMessage(), e);
    }
  }

