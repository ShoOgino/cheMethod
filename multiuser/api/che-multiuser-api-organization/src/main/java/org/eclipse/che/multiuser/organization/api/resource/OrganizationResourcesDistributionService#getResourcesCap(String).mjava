  @GET
  @Path("/{suborganizationId}/cap")
  @Produces(APPLICATION_JSON)
  @ApiOperation(
      value = "Get resources cap of specified suborganization.",
      response = OrganizationDistributedResourcesDto.class,
      responseContainer = "list")
  @ApiResponses({
    @ApiResponse(code = 200, message = "Resources caps successfully fetched"),
    @ApiResponse(code = 404, message = "Specified organization was not found"),
    @ApiResponse(code = 409, message = "Specified organization is root organization"),
    @ApiResponse(code = 500, message = "Internal server error occurred")
  })
  public List<ResourceDto> getResourcesCap(
      @ApiParam("Suborganization id") @PathParam("suborganizationId") String suborganization)
      throws NotFoundException, ConflictException, ServerException {
    return resourcesDistributor
        .getResourcesCaps(suborganization)
        .stream()
        .map(org.eclipse.che.multiuser.resource.api.DtoConverter::asDto)
        .collect(toList());
  }

