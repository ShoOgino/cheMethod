  /**
   * Gets list organizations where user is member.
   *
   * @param userId user id
   * @param maxItems the maximum number of organizations to return
   * @param skipCount the number of organizations to skip
   * @return list of organizations where user is member
   * @throws NullPointerException when {@code userId} is null
   * @throws ServerException when any other error occurs during organizations fetching
   */
  public Page<? extends Organization> getByMember(String userId, int maxItems, int skipCount)
      throws ServerException {
    requireNonNull(userId, "Required non-null user id");
    return memberDao.getOrganizations(userId, maxItems, skipCount);
  }

