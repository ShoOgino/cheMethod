  /**
   * Returns distributed resources for specified suborganization.
   *
   * @param suborganizationId organization id
   * @return distributed resources for suborganization with specified id
   * @throws NullPointerException when either {@code suborganizationId} is null
   * @throws NotFoundException when there is not distributed resources for specified suborganization
   * @throws ServerException when any other error occurs
   */
  public OrganizationDistributedResources get(String suborganizationId)
      throws NotFoundException, ServerException {
    requireNonNull(suborganizationId, "Required non-null organization id");

    return organizationDistributedResourcesDao.get(suborganizationId);
  }

