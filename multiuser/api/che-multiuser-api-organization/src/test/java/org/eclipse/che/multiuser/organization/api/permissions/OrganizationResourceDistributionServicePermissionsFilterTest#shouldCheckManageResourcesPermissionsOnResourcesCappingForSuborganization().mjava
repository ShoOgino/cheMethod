  @Test
  public void shouldCheckManageResourcesPermissionsOnResourcesCappingForSuborganization()
      throws Exception {
    List<ResourceDto> resources =
        Collections.singletonList(
            DtoFactory.newDto(ResourceDto.class).withType("test").withAmount(123).withUnit("unit"));
    given()
        .auth()
        .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
        .contentType(MediaType.APPLICATION_JSON)
        .body(resources)
        .expect()
        .statusCode(204)
        .when()
        .post(SECURE_PATH + "/organization/resource/" + SUBORGANIZATION + "/cap");

    verify(service).capResources(SUBORGANIZATION, resources);
    verify(subject)
        .hasPermission(
            OrganizationDomain.DOMAIN_ID, PARENT_ORGANIZATION, OrganizationDomain.MANAGE_RESOURCES);
  }

