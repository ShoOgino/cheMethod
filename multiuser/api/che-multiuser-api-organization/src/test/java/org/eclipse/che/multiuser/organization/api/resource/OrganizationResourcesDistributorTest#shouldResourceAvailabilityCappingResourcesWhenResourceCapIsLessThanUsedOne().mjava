  @Test
  public void shouldResourceAvailabilityCappingResourcesWhenResourceCapIsLessThanUsedOne()
      throws Exception {
    // given
    doCallRealMethod().when(manager).checkResourcesAvailability(anyString(), any());

    ResourceImpl used = createTestResource(500);
    doReturn(singletonList(used)).when(usageManager).getUsedResources(any());

    ResourceImpl toCap = createTestResource(700);
    doReturn(createTestResource(200)).when(resourceAggregator).deduct((Resource) any(), any());

    // when
    manager.checkResourcesAvailability(ORG_ID, singletonList(toCap));

    // then
    verify(usageManager).getUsedResources(ORG_ID);
    verify(resourceAggregator).deduct(toCap, used);
  }

