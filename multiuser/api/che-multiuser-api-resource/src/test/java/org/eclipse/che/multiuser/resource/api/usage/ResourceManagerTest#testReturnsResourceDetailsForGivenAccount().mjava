  @Test
  public void testReturnsResourceDetailsForGivenAccount() throws Exception {
    final ResourceImpl testResource = new ResourceImpl("RAM", 1000, "mb");
    final ResourceImpl reducedResource = new ResourceImpl("timeout", 2000, "m");
    final ProvidedResourcesImpl providedResource =
        new ProvidedResourcesImpl(
            "test", null, ACCOUNT_ID, 123L, 321L, singletonList(testResource));

    when(resourcesProvider.getResources(eq(ACCOUNT_ID)))
        .thenReturn(singletonList(providedResource));
    when(resourceAggregator.aggregateByType(any()))
        .thenReturn(ImmutableMap.of(reducedResource.getType(), reducedResource));

    final ResourcesDetails resourcesDetails = resourceManager.getResourceDetails(ACCOUNT_ID);

    verify(resourcesProvider).getResources(eq(ACCOUNT_ID));
    verify(resourceAggregator).aggregateByType(eq(singletonList(testResource)));

    assertEquals(resourcesDetails.getAccountId(), ACCOUNT_ID);
    assertEquals(resourcesDetails.getProvidedResources().size(), 1);
    assertEquals(resourcesDetails.getProvidedResources().get(0), providedResource);

    assertEquals(resourcesDetails.getTotalResources().size(), 1);
    assertEquals(resourcesDetails.getTotalResources().get(0), reducedResource);
  }

