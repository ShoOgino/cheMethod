  @BeforeMethod
  public void setup() throws Exception {
    resourceManager =
        new ResourceManager(
            resourceAggregator,
            Collections.singleton(resourcesProvider),
            Collections.singleton(usageTrackers),
            accountManager,
            Collections.singletonMap("organizational", accountTypeToAvailableResourcesProvider),
            defaultAvailableResourcesProvider);

    lenient()
        .when(resourcesProvider.getResources(ACCOUNT_ID))
        .thenReturn(singletonList(providedResources));
    lenient()
        .when(resourceAggregator.aggregateByType(anyList()))
        .then(
            (Answer<Map<String, Resource>>)
                invocationOnMock -> {
                  final List<Resource> argument = invocationOnMock.getArgument(0);
                  return argument.stream().collect(toMap(Resource::getType, identity()));
                });
    when(account.getId()).thenReturn(ACCOUNT_ID);
    when(account.getType()).thenReturn("organizational");
    when(accountManager.getById(ACCOUNT_ID)).thenReturn(account);
  }

