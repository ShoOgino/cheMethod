  /** Creates runtime workspace object based on the machines RAM. */
  public static WorkspaceImpl createRuntime(String devMachineRam, String... machineRams)
      throws Exception {
    final WorkspaceImpl workspace = createWorkspace(DEFAULT_USER_NAME, devMachineRam, machineRams);
    final String envName = workspace.getConfig().getDefaultEnv();
    EnvironmentImpl env = workspace.getConfig().getEnvironments().get(envName);
    String devMachineName = getDevMachineName(env);
    if (devMachineName == null) {
      throw new Exception("ws-machine is not found");
    }
    ExtendedMachineImpl devMachine = env.getMachines().get(devMachineName);
    final WorkspaceRuntimeImpl runtime =
        new WorkspaceRuntimeImpl(
            workspace.getConfig().getDefaultEnv(),
            null,
            env.getMachines()
                .entrySet()
                .stream()
                .map(
                    entry ->
                        createMachine(
                            workspace.getId(),
                            envName,
                            entry.getKey(),
                            devMachineName.equals(entry.getKey()),
                            entry.getValue().getAttributes().get("memoryLimitBytes")))
                .collect(toList()),
            createMachine(
                workspace.getId(),
                envName,
                devMachineName,
                true,
                devMachine.getAttributes().get("memoryLimitBytes")));
    workspace.setStatus(RUNNING);
    workspace.setRuntime(runtime);
    return workspace;
  }

