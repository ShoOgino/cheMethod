  @Test
  public void shouldTestResourcesDeduction() throws Exception {
    // given
    final ResourceImpl aResource = new ResourceImpl(A_RESOURCE_TYPE, 123, "unit");
    final ResourceImpl bResource = new ResourceImpl(B_RESOURCE_TYPE, 123, "unit");
    final ResourceImpl anotherBResource = new ResourceImpl(B_RESOURCE_TYPE, 321, "unit");
    final ResourceImpl aggregatedBResources = new ResourceImpl(A_RESOURCE_TYPE, 444, "unit");
    when(bResourceType.deduct(any(), any())).thenReturn(aggregatedBResources);

    // when
    final List<? extends Resource> deductedResources =
        resourceAggregator.deduct(asList(aResource, bResource), singletonList(anotherBResource));

    // then
    verify(bResourceType).deduct(eq(bResource), eq(anotherBResource));
    verify(aResourceType, never()).deduct(any(), any());

    assertEquals(deductedResources.size(), 2);
    assertTrue(deductedResources.contains(aResource));
    assertTrue(deductedResources.contains(aggregatedBResources));
  }

