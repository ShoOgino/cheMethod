  @Test
  public void shouldReturnResourcesLimitForGivenAccount() throws Exception {
    FreeResourcesLimit resourcesLimit =
        new FreeResourcesLimitImpl(
            "account123", singletonList(new ResourceImpl(TEST_RESOURCE_TYPE, 1000, "unit")));

    when(freeResourcesLimitManager.get("account123")).thenReturn(resourcesLimit);

    final Response response =
        given()
            .auth()
            .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
            .contentType("application/json")
            .when()
            .expect()
            .statusCode(200)
            .get(SECURE_PATH + "/resource/free/account123");

    final FreeResourcesLimitDto fetchedLimit = unwrapDto(response, FreeResourcesLimitDto.class);
    assertEquals(fetchedLimit, DtoConverter.asDto(resourcesLimit));
    verify(freeResourcesLimitManager).get("account123");
  }

