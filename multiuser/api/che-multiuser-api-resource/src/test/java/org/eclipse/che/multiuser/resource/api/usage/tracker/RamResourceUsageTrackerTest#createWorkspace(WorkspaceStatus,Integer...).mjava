  /** Creates users workspace object based on the status and machines RAM. */
  private static WorkspaceImpl createWorkspace(WorkspaceStatus status, Integer... machineRams) {
    final Map<String, MachineImpl> machines = new HashMap<>(machineRams.length - 1);
    final Map<String, MachineConfigImpl> machineConfigs = new HashMap<>(machineRams.length - 1);
    byte i = 1;
    for (Integer machineRam : machineRams) {
      final String machineName = "machine_" + i++;
      machines.put(machineName, createMachine(machineRam));
      machineConfigs.put(machineName, createMachineConfig(machineRam));
    }
    return WorkspaceImpl.builder()
        .setConfig(
            WorkspaceConfigImpl.builder()
                .setEnvironments(
                    ImmutableBiMap.of(ACTIVE_ENV_NAME, new EnvironmentImpl(null, machineConfigs)))
                .build())
        .setRuntime(new RuntimeImpl(ACTIVE_ENV_NAME, machines, null))
        .setStatus(status)
        .build();
  }

