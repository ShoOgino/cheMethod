  @Test
  public void shouldReturnResourceAsExcessiveWhenDeductedAmountGreaterThan0() throws Exception {
    //given
    final ResourceImpl sourceAResource = new ResourceImpl(A_RESOURCE_TYPE, 5, "unit");
    final ResourceImpl toCompareAResource = new ResourceImpl(A_RESOURCE_TYPE, 3, "unit");
    final ResourceImpl excessiveAResource = new ResourceImpl(A_RESOURCE_TYPE, 2, "unit");
    when(aResourceType.deduct(any(), any())).thenReturn(excessiveAResource);

    //when
    List<? extends Resource> excess =
        resourceAggregator.excess(
            singletonList(sourceAResource), singletonList(toCompareAResource));

    //then
    assertEquals(excess.size(), 1);
    assertTrue(excess.contains(excessiveAResource));
    verify(aResourceType).deduct(sourceAResource, toCompareAResource);
  }

