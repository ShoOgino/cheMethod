  @Test
  public void shouldReturnUsedRuntimesForGivenAccount() throws Exception {
    when(accountManager.getById(any())).thenReturn(account);
    when(account.getName()).thenReturn("testAccount");

    when(workspaceManager.getByNamespace(anyString(), anyBoolean()))
        .thenReturn(
            Stream.of(WorkspaceStatus.values())
                .map(RuntimeResourceUsageTrackerTest::createWorkspace)
                .collect(Collectors.toList()));

    Optional<Resource> usedRuntimesOpt = runtimeResourceUsageTracker.getUsedResource("account123");

    assertTrue(usedRuntimesOpt.isPresent());
    Resource usedRuntimes = usedRuntimesOpt.get();
    assertEquals(usedRuntimes.getType(), RuntimeResourceType.ID);
    assertEquals(
        usedRuntimes.getAmount(), WorkspaceStatus.values().length - 1); //except stopped workspaces
    assertEquals(usedRuntimes.getUnit(), RuntimeResourceType.UNIT);
    verify(accountManager).getById(eq("account123"));
    verify(workspaceManager).getByNamespace(eq("testAccount"), eq(false));
  }

