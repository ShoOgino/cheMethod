  @Test
  public void shouldProvideResourcesFromFreeResourcesLimitIfItExists() throws Exception {
    // given
    when(account.getType()).thenReturn("anotherTestType");
    when(accountManager.getById(any())).thenReturn(account);
    when(freeResourcesLimitManager.get(any()))
        .thenReturn(
            new FreeResourcesLimitImpl(
                "account123",
                singletonList(new ResourceImpl(TEST_RESOURCE_TYPE, 12345, TEST_RESOURCE_UNIT))));

    // when
    List<ProvidedResources> result = provider.getResources("account123");

    // then
    assertEquals(result.size(), 1);
    ProvidedResources providedResources = result.get(0);
    assertEquals(
        providedResources,
        new ProvidedResourcesImpl(
            FreeResourcesProvider.FREE_RESOURCES_PROVIDER,
            "account123",
            "account123",
            -1L,
            -1L,
            singletonList(new ResourceImpl(TEST_RESOURCE_TYPE, 12345, TEST_RESOURCE_UNIT))));
    verify(freeResourcesLimitManager).get("account123");
  }

