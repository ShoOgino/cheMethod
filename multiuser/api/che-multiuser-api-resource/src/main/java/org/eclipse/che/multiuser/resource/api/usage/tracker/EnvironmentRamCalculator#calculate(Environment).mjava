  /**
   * Parses (and fetches if needed) recipe of environment and sums RAM size of all machines in
   * environment in megabytes.
   */
  public long calculate(Environment environment) throws ServerException {
    CheServicesEnvironmentImpl composeEnv = environmentParser.parse(environment);

    long sumBytes =
        composeEnv
            .getServices()
            .values()
            .stream()
            .mapToLong(
                value -> {
                  if (value.getMemLimit() == null || value.getMemLimit() == 0) {
                    return defaultMachineMemorySizeBytes;
                  } else {
                    return value.getMemLimit();
                  }
                })
            .sum();
    return sumBytes / BYTES_TO_MEGABYTES_DIVIDER;
  }

