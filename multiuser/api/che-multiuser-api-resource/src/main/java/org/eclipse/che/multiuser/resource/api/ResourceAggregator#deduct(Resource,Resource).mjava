  /**
   * Deducts two resources which have the same type.
   *
   * @param totalResource total resource
   * @param deduction resources which should be deducted from {@code totalResource}
   * @return one resources with type {@code T} that is result of subtraction {@code totalResource}
   *     and {@code deduction}
   * @throws NoEnoughResourcesException when {@code totalResource}'s amount is less than {@code
   *     deduction}'s amount
   * @throws IllegalArgumentException when {@code T} is not supported type
   */
  public Resource deduct(Resource totalResource, Resource deduction)
      throws NoEnoughResourcesException {
    final String typeId = totalResource.getType();
    final ResourceType resourceType = getResourceType(typeId);
    return resourceType.deduct(totalResource, deduction);
  }

