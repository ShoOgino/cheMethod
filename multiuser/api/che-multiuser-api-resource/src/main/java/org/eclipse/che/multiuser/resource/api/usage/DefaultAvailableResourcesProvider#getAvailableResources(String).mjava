  @Override
  public List<? extends Resource> getAvailableResources(String accountId)
      throws NotFoundException, ServerException {
    ResourceUsageManager resourceUsageManager = resourceUsageManagerProvider.get();
    List<? extends Resource> totalResources = null;
    List<Resource> usedResources = null;
    try {
      totalResources = resourceUsageManager.getTotalResources(accountId);
      usedResources = new ArrayList<>(resourceUsageManager.getUsedResources(accountId));
      return resourceAggregator.deduct(totalResources, usedResources);
    } catch (NoEnoughResourcesException e) {
      LOG.warn(
          "Account with id {} uses more resources {} than he has {}.",
          accountId,
          format(usedResources),
          format(totalResources));
      return resourceAggregator.excess(totalResources, usedResources);
    }
  }

