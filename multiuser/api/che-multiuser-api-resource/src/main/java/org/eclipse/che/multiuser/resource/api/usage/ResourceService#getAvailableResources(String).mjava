  @GET
  @Path("/{accountId}/available")
  @Produces(APPLICATION_JSON)
  @ApiOperation(
    value = "Get list of resources which are available for usage by given account",
    response = ResourceDto.class,
    responseContainer = "List"
  )
  @ApiResponses({
    @ApiResponse(code = 200, message = "The available resources are successfully fetched"),
    @ApiResponse(code = 404, message = "Account with specified id was not found"),
    @ApiResponse(code = 500, message = "Internal server error occurred")
  })
  public List<ResourceDto> getAvailableResources(@PathParam("accountId") String accountId)
      throws NotFoundException, ServerException {
    return resourceManager
        .getAvailableResources(accountId)
        .stream()
        .map(DtoConverter::asDto)
        .collect(Collectors.toList());
  }

