  @Inject
  public LimitsCheckingWorkspaceManager(
      WorkspaceDao workspaceDao,
      WorkspaceRuntimes runtimes,
      EventService eventService,
      AccountManager accountManager,
      @Named("che.workspace.auto_snapshot") boolean defaultAutoSnapshot,
      @Named("che.workspace.auto_restore") boolean defaultAutoRestore,
      SnapshotDao snapshotDao,
      WorkspaceSharedPool sharedPool,
      //own injects
      @Named("che.limits.workspace.env.ram") String maxRamPerEnv,
      EnvironmentRamCalculator environmentRamCalculator,
      ResourceUsageManager resourceUsageManager,
      ResourcesLocks resourcesLocks) {
    super(
        workspaceDao,
        runtimes,
        eventService,
        accountManager,
        defaultAutoSnapshot,
        defaultAutoRestore,
        snapshotDao,
        sharedPool);
    this.environmentRamCalculator = environmentRamCalculator;
    this.maxRamPerEnvMB = "-1".equals(maxRamPerEnv) ? -1 : Size.parseSizeToMegabytes(maxRamPerEnv);
    this.resourceUsageManager = resourceUsageManager;
    this.resourcesLocks = resourcesLocks;
    this.accountManager = accountManager;
  }

