  @GET
  @Produces(APPLICATION_JSON)
  @ApiOperation(
      value = "Get free resources limits",
      response = FreeResourcesLimitDto.class,
      responseContainer = "List")
  @ApiResponses({
    @ApiResponse(code = 200, message = "The resources limits successfully fetched"),
    @ApiResponse(code = 500, message = "Internal server error occurred")
  })
  public Response getFreeResourcesLimits(
      @ApiParam(value = "Max items") @QueryParam("maxItems") @DefaultValue("30") int maxItems,
      @ApiParam(value = "Skip count") @QueryParam("skipCount") @DefaultValue("0") int skipCount)
      throws ServerException {

    final Page<? extends FreeResourcesLimit> limitsPage =
        freeResourcesLimitManager.getAll(maxItems, skipCount);

    return Response.ok()
        .entity(limitsPage.getItems(DtoConverter::asDto))
        .header("Link", createLinkHeader(limitsPage))
        .build();
  }

