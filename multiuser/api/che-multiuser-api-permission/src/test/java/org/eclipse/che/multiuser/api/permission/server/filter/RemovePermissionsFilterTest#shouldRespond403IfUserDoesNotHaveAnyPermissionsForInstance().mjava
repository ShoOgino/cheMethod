  @Test
  public void shouldRespond403IfUserDoesNotHaveAnyPermissionsForInstance() throws Exception {
    final RemovePermissionsChecker rmPermissionsChecker = mock(RemovePermissionsChecker.class);
    when(domainsPermissionsCheckers.getRemoveChecker("test")).thenReturn(rmPermissionsChecker);
    doThrow(new ForbiddenException("ex"))
        .when(rmPermissionsChecker)
        .check(anyString(), anyString(), anyString());

    final Response response =
        given()
            .auth()
            .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
            .contentType("application/json")
            .when()
            .delete(SECURE_PATH + "/permissions/test?instance=test123&user123");

    assertEquals(response.getStatusCode(), 403);
    verifyZeroInteractions(permissionsService);
    verify(instanceValidator).validate("test", "test123");
    verify(rmPermissionsChecker, times(1)).check(anyString(), anyString(), anyString());
  }

