  @Test
  public void shouldDoChainIfUserTriesToRemoveOwnPermissionsForInstance() throws Exception {
    when(subject.getUserId()).thenReturn("user123");

    final Response response =
        given()
            .auth()
            .basic(ADMIN_USER_NAME, ADMIN_USER_PASSWORD)
            .contentType("application/json")
            .when()
            .delete(SECURE_PATH + "/permissions/test?instance=test123&user=user123");

    assertEquals(response.getStatusCode(), 204);
    verify(permissionsService).removePermissions(eq("test"), eq("test123"), eq("user123"));
    verify(instanceValidator).validate("test", "test123");
    verify(subject, never()).checkPermission(anyString(), anyString(), anyString());
    verify(superPrivilegesChecker, never()).isPrivilegedToManagePermissions(anyString());
  }

