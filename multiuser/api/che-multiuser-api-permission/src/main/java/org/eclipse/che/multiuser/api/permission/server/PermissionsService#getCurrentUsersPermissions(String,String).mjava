  @GET
  @Path("/{domain}")
  @Produces(APPLICATION_JSON)
  @ApiOperation(
    value = "Get permissions of current user which are related to specified domain and instance",
    response = PermissionsDto.class
  )
  @ApiResponses({
    @ApiResponse(code = 200, message = "The permissions successfully fetched"),
    @ApiResponse(code = 400, message = "Missed required parameters, parameters are not valid"),
    @ApiResponse(code = 404, message = "Specified domain is unsupported"),
    @ApiResponse(
      code = 404,
      message = "Permissions for current user with specified domain and instance was not found"
    ),
    @ApiResponse(
      code = 409,
      message = "Given domain requires non nullable value for instance but it is null"
    ),
    @ApiResponse(code = 500, message = "Internal server error occurred during permissions fetching")
  })
  public PermissionsDto getCurrentUsersPermissions(
      @ApiParam(value = "Domain id to retrieve user's permissions") @PathParam("domain")
          String domain,
      @ApiParam(value = "Instance id to retrieve user's permissions") @QueryParam("instance")
          String instance)
      throws BadRequestException, NotFoundException, ConflictException, ServerException {
    instanceValidator.validate(domain, instance);
    return toDto(
        permissionsManager.get(
            EnvironmentContext.getCurrent().getSubject().getUserId(), domain, instance));
  }

