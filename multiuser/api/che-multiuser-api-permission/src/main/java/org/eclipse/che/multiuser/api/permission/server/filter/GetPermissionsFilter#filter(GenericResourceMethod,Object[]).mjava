  @Override
  public void filter(GenericResourceMethod genericResourceMethod, Object[] arguments)
      throws BadRequestException, NotFoundException, ConflictException, ForbiddenException,
          ServerException {

    final String methodName = genericResourceMethod.getMethod().getName();
    if (methodName.equals("getUsersPermissions")) {
      instanceValidator.validate(domain, instance);
      if (superPrivilegesChecker.isPrivilegedToManagePermissions(domain)) {
        return;
      }
      final String userId = EnvironmentContext.getCurrent().getSubject().getUserId();
      try {
        permissionsManager.get(userId, domain, instance);
        //user should have ability to see another users' permissions if he has any permission there
      } catch (NotFoundException e) {
        throw new ForbiddenException("User is not authorized to perform this operation");
      }
    }
  }

