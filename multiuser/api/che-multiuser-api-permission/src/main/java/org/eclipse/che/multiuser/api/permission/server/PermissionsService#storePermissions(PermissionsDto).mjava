  @POST
  @Consumes(APPLICATION_JSON)
  @ApiOperation("Store given permissions")
  @ApiResponses({
    @ApiResponse(code = 200, message = "The permissions successfully stored"),
    @ApiResponse(code = 400, message = "Missed required parameters, parameters are not valid"),
    @ApiResponse(code = 404, message = "Domain of permissions is not supported"),
    @ApiResponse(
        code = 409,
        message = "New permissions removes last 'setPermissions' of given instance"),
    @ApiResponse(
        code = 409,
        message = "Given domain requires non nullable value for instance but it is null"),
    @ApiResponse(code = 500, message = "Internal server error occurred during permissions storing")
  })
  public void storePermissions(
      @ApiParam(value = "The permissions to store", required = true) PermissionsDto permissionsDto)
      throws ServerException, BadRequestException, ConflictException, NotFoundException {
    checkArgument(permissionsDto != null, "Permissions descriptor required");
    checkArgument(!isNullOrEmpty(permissionsDto.getUserId()), "User required");
    checkArgument(!isNullOrEmpty(permissionsDto.getDomainId()), "Domain required");
    instanceValidator.validate(permissionsDto.getDomainId(), permissionsDto.getInstanceId());
    checkArgument(!permissionsDto.getActions().isEmpty(), "One or more actions required");

    permissionsManager.storePermission(permissionsDto);
  }

